["set test envs",["TA"]]
["test data","[\"start\",{\"total\":3,\"testAgentEnvId\":\"TA\"}]"]
start {u'total': 3, u'testAgentEnvId': u'TA'}
["test data","[\"suite\",{\"title\":\"\",\"fullTitle\":\"\",\"root\":true,\"indentation\":0,\"testAgentEnvId\":\"TA\"}]"]
suite {u'fullTitle': u'', u'root': True, u'testAgentEnvId': u'TA', u'indentation': 0, u'title': u''}
["test data","[\"suite\",{\"title\":\"test-agent/inspect\",\"fullTitle\":\"test-agent/inspect\",\"root\":false,\"indentation\":1,\"testAgentEnvId\":\"TA\"}]"]
suite {u'fullTitle': u'test-agent/inspect', u'root': False, u'testAgentEnvId': u'TA', u'indentation': 1, u'title': u'test-agent/inspect'}
["test data","[\"suite\",{\"title\":\".inspect\",\"fullTitle\":\"test-agent/inspect .inspect\",\"root\":false,\"indentation\":2,\"testAgentEnvId\":\"TA\"}]"]
suite {u'fullTitle': u'test-agent/inspect .inspect', u'root': False, u'testAgentEnvId': u'TA', u'indentation': 2, u'title': u'.inspect'}
["test data","[\"test\",{\"fn\":\"function () {\\n      expect(0).to.be(1);\\n    }\",\"title\":\"should fail\",\"fullTitle\":\"test-agent/inspect .inspect should fail\",\"type\":\"test\",\"testAgentEnvId\":\"TA\"}]"]
test {u'fullTitle': u'test-agent/inspect .inspect should fail', u'type': u'test', u'testAgentEnvId': u'TA', u'fn': u'function () {\n      expect(0).to.be(1);\n    }', u'title': u'should fail'}
["test data","[\"fail\",{\"fn\":\"function () {\\n      expect(0).to.be(1);\\n    }\",\"title\":\"should fail\",\"fullTitle\":\"test-agent/inspect .inspect should fail\",\"state\":\"failed\",\"type\":\"test\",\"err\":{\"stack\":\"Error: expected 0 to equal 1\\n    at assert (http://localhost:7771/vendor/expect.js:99)\\n    at equal (http://localhost:7771/vendor/expect.js:203)\\n    at (anonymous) (http://localhost:7771/vendor/expect.js:73)\\n    at (anonymous) (http://localhost:7771/test/test-agent/inspect-test.js:20)\\n    at run (http://localhost:7771/vendor/mocha/mocha.js:3001)\\n    at runTest (http://localhost:7771/vendor/mocha/mocha.js:3305)\\n    at (anonymous) (http://localhost:7771/vendor/mocha/mocha.js:3349)\\n    at next (http://localhost:7771/vendor/mocha/mocha.js:3233)\\n    at (anonymous) (http://localhost:7771/vendor/mocha/mocha.js:3242)\\n    at next (http://localhost:7771/vendor/mocha/mocha.js:3192)\\n    at (anonymous) (http://localhost:7771/vendor/mocha/mocha.js:3210)\\n    at (anonymous) (http://localhost:7771/vendor/mocha/mocha.js:4022)\\n\",\"message\":\"expected 0 to equal 1\",\"type\":\"Error\",\"constructorName\":\"Error\",\"expected\":null,\"actual\":null},\"testAgentEnvId\":\"TA\"}]"]
fail {u'err': {u'actual': None, u'constructorName': u'Error', u'expected': None, u'message': u'expected 0 to equal 1', u'type': u'Error', u'stack': u'Error: expected 0 to equal 1\n    at assert (http://localhost:7771/vendor/expect.js:99)\n    at equal (http://localhost:7771/vendor/expect.js:203)\n    at (anonymous) (http://localhost:7771/vendor/expect.js:73)\n    at (anonymous) (http://localhost:7771/test/test-agent/inspect-test.js:20)\n    at run (http://localhost:7771/vendor/mocha/mocha.js:3001)\n    at runTest (http://localhost:7771/vendor/mocha/mocha.js:3305)\n    at (anonymous) (http://localhost:7771/vendor/mocha/mocha.js:3349)\n    at next (http://localhost:7771/vendor/mocha/mocha.js:3233)\n    at (anonymous) (http://localhost:7771/vendor/mocha/mocha.js:3242)\n    at next (http://localhost:7771/vendor/mocha/mocha.js:3192)\n    at (anonymous) (http://localhost:7771/vendor/mocha/mocha.js:3210)\n    at (anonymous) (http://localhost:7771/vendor/mocha/mocha.js:4022)\n'}, u'title': u'should fail', u'state': u'failed', u'testAgentEnvId': u'TA', u'fullTitle': u'test-agent/inspect .inspect should fail', u'type': u'test', u'fn': u'function () {\n      expect(0).to.be(1);\n    }'}
["test data","[\"test end\",{\"fn\":\"function () {\\n      expect(0).to.be(1);\\n    }\",\"title\":\"should fail\",\"fullTitle\":\"test-agent/inspect .inspect should fail\",\"state\":\"failed\",\"type\":\"test\",\"testAgentEnvId\":\"TA\"}]"]
test end {u'title': u'should fail', u'state': u'failed', u'testAgentEnvId': u'TA', u'fullTitle': u'test-agent/inspect .inspect should fail', u'type': u'test', u'fn': u'function () {\n      expect(0).to.be(1);\n    }'}
["test data","[\"suite\",{\"title\":\"without color\",\"fullTitle\":\"test-agent/inspect .inspect without color\",\"root\":false,\"indentation\":3,\"testAgentEnvId\":\"TA\"}]"]
suite {u'fullTitle': u'test-agent/inspect .inspect without color', u'root': False, u'testAgentEnvId': u'TA', u'indentation': 3, u'title': u'without color'}
["test data","[\"test\",{\"fn\":\"function () {\\n        var result = TestAgent.inspect(object);\\n        expect(result).to.contain('error');\\n        expect(result).to.contain('details');\\n        expect(result).to.contain('three');\\n      }\",\"title\":\"should return formatted string\",\"fullTitle\":\"test-agent/inspect .inspect without color should return formatted string\",\"type\":\"test\",\"testAgentEnvId\":\"TA\"}]"]
test {u'fullTitle': u'test-agent/inspect .inspect without color should return formatted string', u'type': u'test', u'testAgentEnvId': u'TA', u'fn': u"function () {\n        var result = TestAgent.inspect(object);\n        expect(result).to.contain('error');\n        expect(result).to.contain('details');\n        expect(result).to.contain('three');\n      }", u'title': u'should return formatted string'}
["test data","[\"pass\",{\"fn\":\"function () {\\n        var result = TestAgent.inspect(object);\\n        expect(result).to.contain('error');\\n        expect(result).to.contain('details');\\n        expect(result).to.contain('three');\\n      }\",\"title\":\"should return formatted string\",\"fullTitle\":\"test-agent/inspect .inspect without color should return formatted string\",\"duration\":13,\"state\":\"passed\",\"type\":\"test\",\"testAgentEnvId\":\"TA\"}]"]
pass {u'title': u'should return formatted string', u'state': u'passed', u'testAgentEnvId': u'TA', u'duration': 13, u'fullTitle': u'test-agent/inspect .inspect without color should return formatted string', u'type': u'test', u'fn': u"function () {\n        var result = TestAgent.inspect(object);\n        expect(result).to.contain('error');\n        expect(result).to.contain('details');\n        expect(result).to.contain('three');\n      }"}
["test data","[\"test end\",{\"fn\":\"function () {\\n        var result = TestAgent.inspect(object);\\n        expect(result).to.contain('error');\\n        expect(result).to.contain('details');\\n        expect(result).to.contain('three');\\n      }\",\"title\":\"should return formatted string\",\"fullTitle\":\"test-agent/inspect .inspect without color should return formatted string\",\"duration\":13,\"state\":\"passed\",\"type\":\"test\",\"testAgentEnvId\":\"TA\"}]"]
test end {u'title': u'should return formatted string', u'state': u'passed', u'testAgentEnvId': u'TA', u'duration': 13, u'fullTitle': u'test-agent/inspect .inspect without color should return formatted string', u'type': u'test', u'fn': u"function () {\n        var result = TestAgent.inspect(object);\n        expect(result).to.contain('error');\n        expect(result).to.contain('details');\n        expect(result).to.contain('three');\n      }"}
["test data","[\"suite end\",{\"title\":\"without color\",\"fullTitle\":\"test-agent/inspect .inspect without color\",\"root\":false,\"indentation\":3,\"testAgentEnvId\":\"TA\"}]"]
suite end {u'fullTitle': u'test-agent/inspect .inspect without color', u'root': False, u'testAgentEnvId': u'TA', u'indentation': 3, u'title': u'without color'}
["test data","[\"suite\",{\"title\":\"with color\",\"fullTitle\":\"test-agent/inspect .inspect with color\",\"root\":false,\"indentation\":3,\"testAgentEnvId\":\"TA\"}]"]
suite {u'fullTitle': u'test-agent/inspect .inspect with color', u'root': False, u'testAgentEnvId': u'TA', u'indentation': 3, u'title': u'with color'}
["test data","[\"test\",{\"fn\":\"function () {\\n        var result = TestAgent.inspect(object, false, 2, true);\\n        expect(result).to.contain('error');\\n        expect(result).to.contain('details');\\n        expect(result).to.contain('three');\\n      }\",\"title\":\"should return formatted string\",\"fullTitle\":\"test-agent/inspect .inspect with color should return formatted string\",\"type\":\"test\",\"testAgentEnvId\":\"TA\"}]"]
test {u'fullTitle': u'test-agent/inspect .inspect with color should return formatted string', u'type': u'test', u'testAgentEnvId': u'TA', u'fn': u"function () {\n        var result = TestAgent.inspect(object, false, 2, true);\n        expect(result).to.contain('error');\n        expect(result).to.contain('details');\n        expect(result).to.contain('three');\n      }", u'title': u'should return formatted string'}
["test data","[\"pass\",{\"fn\":\"function () {\\n        var result = TestAgent.inspect(object, false, 2, true);\\n        expect(result).to.contain('error');\\n        expect(result).to.contain('details');\\n        expect(result).to.contain('three');\\n      }\",\"title\":\"should return formatted string\",\"fullTitle\":\"test-agent/inspect .inspect with color should return formatted string\",\"duration\":15,\"state\":\"passed\",\"type\":\"test\",\"testAgentEnvId\":\"TA\"}]"]
pass {u'title': u'should return formatted string', u'state': u'passed', u'testAgentEnvId': u'TA', u'duration': 15, u'fullTitle': u'test-agent/inspect .inspect with color should return formatted string', u'type': u'test', u'fn': u"function () {\n        var result = TestAgent.inspect(object, false, 2, true);\n        expect(result).to.contain('error');\n        expect(result).to.contain('details');\n        expect(result).to.contain('three');\n      }"}
["test data","[\"test end\",{\"fn\":\"function () {\\n        var result = TestAgent.inspect(object, false, 2, true);\\n        expect(result).to.contain('error');\\n        expect(result).to.contain('details');\\n        expect(result).to.contain('three');\\n      }\",\"title\":\"should return formatted string\",\"fullTitle\":\"test-agent/inspect .inspect with color should return formatted string\",\"duration\":15,\"state\":\"passed\",\"type\":\"test\",\"testAgentEnvId\":\"TA\"}]"]
test end {u'title': u'should return formatted string', u'state': u'passed', u'testAgentEnvId': u'TA', u'duration': 15, u'fullTitle': u'test-agent/inspect .inspect with color should return formatted string', u'type': u'test', u'fn': u"function () {\n        var result = TestAgent.inspect(object, false, 2, true);\n        expect(result).to.contain('error');\n        expect(result).to.contain('details');\n        expect(result).to.contain('three');\n      }"}
["test data","[\"suite end\",{\"title\":\"with color\",\"fullTitle\":\"test-agent/inspect .inspect with color\",\"root\":false,\"indentation\":3,\"testAgentEnvId\":\"TA\"}]"]
suite end {u'fullTitle': u'test-agent/inspect .inspect with color', u'root': False, u'testAgentEnvId': u'TA', u'indentation': 3, u'title': u'with color'}
["test data","[\"suite end\",{\"title\":\".inspect\",\"fullTitle\":\"test-agent/inspect .inspect\",\"root\":false,\"indentation\":2,\"testAgentEnvId\":\"TA\"}]"]
suite end {u'fullTitle': u'test-agent/inspect .inspect', u'root': False, u'testAgentEnvId': u'TA', u'indentation': 2, u'title': u'.inspect'}
["test data","[\"suite end\",{\"title\":\"test-agent/inspect\",\"fullTitle\":\"test-agent/inspect\",\"root\":false,\"indentation\":1,\"testAgentEnvId\":\"TA\"}]"]
suite end {u'fullTitle': u'test-agent/inspect', u'root': False, u'testAgentEnvId': u'TA', u'indentation': 1, u'title': u'test-agent/inspect'}
["test data","[\"suite end\",{\"title\":\"\",\"fullTitle\":\"\",\"root\":true,\"indentation\":0,\"testAgentEnvId\":\"TA\"}]"]
suite end {u'fullTitle': u'', u'root': True, u'testAgentEnvId': u'TA', u'indentation': 0, u'title': u''}
["test data","[\"end\",{\"suites\":4,\"tests\":3,\"passes\":2,\"pending\":0,\"failures\":1,\"start\":\"2012-10-13T03:02:43.824Z\",\"end\":\"2012-10-13T03:02:43.934Z\",\"duration\":110,\"testAgentEnvId\":\"TA\"}]"]
end {u'suites': 4, u'tests': 3, u'end': u'2012-10-13T03:02:43.934Z', u'passes': 2, u'start': u'2012-10-13T03:02:43.824Z', u'testAgentEnvId': u'TA', u'duration': 110, u'failures': 1, u'pending': 0}
