diff --git a/.jshintignore b/.jshintignore
index 5afbfc1..68c9a49 100644
--- a/.jshintignore
+++ b/.jshintignore
@@ -9,6 +9,7 @@ apps/camera/test/**
 apps/system/camera/**
 build/r.js
 build/config/gps-prefs.js
+build/config/payment-dev-prefs.js
 build/config/payment-prefs.js
 build/copy-build-stage-data.js
 build/csslint.js
diff --git a/Makefile b/Makefile
index 7dbcac6..355bfe5 100644
--- a/Makefile
+++ b/Makefile
@@ -253,8 +253,8 @@ endif
 # some commands for invoking it. But it is platform dependent
 # IMPORTANT: you should generally change the directory name when you change the
 # URL unless you know what you're doing
-XULRUNNER_SDK_URL=http://ftp.mozilla.org/pub/mozilla.org/xulrunner/nightly/2014/07/2014-07-04-03-02-08-mozilla-central/xulrunner-33.0a1.en-US.
-XULRUNNER_BASE_DIRECTORY?=xulrunner-sdk-33
+XULRUNNER_SDK_URL=http://ftp.mozilla.org/pub/mozilla.org/xulrunner/nightly/2014/03/2014-03-08-03-02-03-mozilla-central/xulrunner-30.0a1.en-US.
+XULRUNNER_BASE_DIRECTORY?=xulrunner-sdk-30
 XULRUNNER_DIRECTORY?=$(XULRUNNER_BASE_DIRECTORY)/xulrunner-sdk
 XULRUNNER_URL_FILE=$(XULRUNNER_BASE_DIRECTORY)/.url

@@ -705,23 +705,18 @@ $(NPM_INSTALLED_PROGRAMS): package.json node_modules


 NODE_MODULES_REV=$(shell cat gaia_node_modules.revision)
-# modules.tar and git-gaia-node-modules are the possible values for
-# $(NODE_MODULES_SRC). See the node_modules target.
-modules.tar: gaia_node_modules.revision
+$(NODE_MODULES_SRC): gaia_node_modules.revision
+ifeq "$(NODE_MODULES_SRC)" "modules.tar"
 	-$(DOWNLOAD_CMD) https://github.com/mozilla-b2g/gaia-node-modules/tarball/$(NODE_MODULES_REV) &&\
 	mv $(NODE_MODULES_REV) "$(NODE_MODULES_SRC)"
-
-git-gaia-node-modules: gaia_node_modules.revision
+else
 	if [ ! -d "$(NODE_MODULES_SRC)" ] ; then \
 		git clone "$(NODE_MODULES_GIT_URL)" "$(NODE_MODULES_SRC)" ; \
 	fi
 	(cd "$(NODE_MODULES_SRC)" && git fetch && git reset --hard "$(NODE_MODULES_REV)" )
+endif

-node_modules: gaia_node_modules.revision
-	# Running make without using a dependency ensures that we can run
-	# "make node_modules" with a custom NODE_MODULES_GIT_URL variable, and then
-	# run another target without specifying the variable
-	$(MAKE) $(NODE_MODULES_SRC)
+node_modules: $(NODE_MODULES_SRC)
 ifeq "$(NODE_MODULES_SRC)" "modules.tar"
 	$(TAR_WILDCARDS) --strip-components 1 -x -m -f $(NODE_MODULES_SRC) "mozilla-b2g-gaia-node-modules-*/node_modules"
 else
@@ -900,7 +895,7 @@ endif
 endif

 lint:
-	NO_XFAIL=1 $(MAKE) -k gjslint hint jsonlint
+	NO_XFAIL=1 $(MAKE) -k gjslint hint

 gjslint: GJSLINT_EXCLUDED_DIRS = $(shell grep '\/\*\*$$' .jshintignore | sed 's/\/\*\*$$//' | paste -s -d, -)
 gjslint: GJSLINT_EXCLUDED_FILES = $(shell egrep -v '(\/\*\*|^\s*)$$' .jshintignore | paste -s -d, -)
@@ -928,9 +923,6 @@ hint: node_modules/.bin/jshint
 csslint: $(XULRUNNER_BASE_DIRECTORY)
 	@$(call run-js-command,csslint)

-jsonlint: $(XULRUNNER_BASE_DIRECTORY)
-	@$(call run-js-command,jsonlint)
-
 # Erase all the indexedDB databases on the phone, so apps have to rebuild them.
 delete-databases:
 	@echo 'Stopping b2g'
diff --git a/README.md b/README.md
index d1c0fe2..6356481 100644
--- a/README.md
+++ b/README.md
@@ -180,6 +180,7 @@ make test-integration OOP=1

 #### Where to find documentation
   - [Node.js](http://nodejs.org)
+
   - [MDN: for high level overview](https://developer.mozilla.org/en-US/docs/Marionette/Marionette_JavaScript_Tools)
   - [mocha: which is wrapped by marionette-js-runner](http://visionmedia.github.io/mocha/)
   - [marionette-js-runner: for the test framework](https://github.com/mozilla-b2g/marionette-js-runner)
diff --git a/apps/bluetooth/js/pair_view.js b/apps/bluetooth/js/pair_view.js
index b6b2b54..f64c17c 100644
--- a/apps/bluetooth/js/pair_view.js
+++ b/apps/bluetooth/js/pair_view.js
@@ -35,16 +35,7 @@ var Pairview = {
   pinInput: document.getElementById('pin-input'),
   passkeyInput: document.getElementById('passkey-input'),

-  get isFullAttentionMode() {
-    return (window.innerHeight > 200);
-  },
-
   show: function pv_show() {
-    if (!this.isFullAttentionMode) {
-      this.close();
-      return;
-    }
-
     var _ = navigator.mozL10n.get;
     this.pairButton.addEventListener('click', this);
     this.closeButton.addEventListener('click', this);
@@ -155,10 +146,10 @@ var Pairview = {
         }
         break;
       case 'resize':
-        // XXX: this is hack that we have to close the attention in this case,
-        // while in most other cases, we would just change it into an active
-        // status bar
-        if (!this.isFullAttentionMode) {
+      // XXX: this is hack that we have to close the attention in this case,
+      // while in most other cases, we would just change it into an active
+      // status bar
+        if (window.innerHeight < 200) {
           this.close();
         }
         break;
diff --git a/apps/bluetooth/style/images/transfer.png b/apps/bluetooth/style/images/transfer.png
new file mode 100644
index 0000000..744ec92
Binary files /dev/null and b/apps/bluetooth/style/images/transfer.png differ
diff --git a/apps/bluetooth/style/images/transfer@1.5x.png b/apps/bluetooth/style/images/transfer@1.5x.png
new file mode 100644
index 0000000..a8b612c
Binary files /dev/null and b/apps/bluetooth/style/images/transfer@1.5x.png differ
diff --git a/apps/bluetooth/style/images/transfer@2.25x.png b/apps/bluetooth/style/images/transfer@2.25x.png
new file mode 100644
index 0000000..801889a
Binary files /dev/null and b/apps/bluetooth/style/images/transfer@2.25x.png differ
diff --git a/apps/bluetooth/style/images/transfer@2x.png b/apps/bluetooth/style/images/transfer@2x.png
new file mode 100644
index 0000000..e19bdb2
Binary files /dev/null and b/apps/bluetooth/style/images/transfer@2x.png differ
diff --git a/apps/bluetooth/test/unit/pair_view_test.js b/apps/bluetooth/test/unit/pair_view_test.js
index 7e6decf..458ddcf 100644
--- a/apps/bluetooth/test/unit/pair_view_test.js
+++ b/apps/bluetooth/test/unit/pair_view_test.js
@@ -36,39 +36,6 @@ suite('Bluetooth app > Pairview ', function() {
     document.body.innerHTML = '';
   });

-  suite('isFullAttentionMode > ', function() {
-    var realWindowInnerHeight;
-    suiteSetup(function() {
-      realWindowInnerHeight = window.innerHeight;
-    });
-
-    suiteTeardown(function() {
-      switchReadOnlyProperty(window, 'innerHeight', realWindowInnerHeight);
-    });
-
-    suite('window.innerHeight is 200 > ', function() {
-      setup(function() {
-        switchReadOnlyProperty(window, 'innerHeight', 200);
-      });
-
-      test('getting the mode of full attention should be false ' +
-         'after isFullAttentionMode() is called ', function() {
-        assert.isFalse(Pairview.isFullAttentionMode);
-      });
-    });
-
-    suite('window.innerHeight is 201 > ', function() {
-      setup(function() {
-        switchReadOnlyProperty(window, 'innerHeight', 201);
-      });
-
-      test('getting the mode of full attention should be true ' +
-         'after isFullAttentionMode() is called ', function() {
-        assert.isTrue(Pairview.isFullAttentionMode);
-      });
-    });
-  });
-
   suite('init > ', function() {
     var device = {
       address: '00:11:22:AA:BB:CC',
@@ -111,35 +78,6 @@ suite('Bluetooth app > Pairview ', function() {
       });
     });

-    suite('early return > ', function() {
-      var realWindowInnerHeight;
-
-      setup(function() {
-        realWindowInnerHeight = window.innerHeight;
-        switchReadOnlyProperty(window, 'innerHeight', 200);
-        this.sinon.stub(Pairview, 'close');
-        Pairview.show();
-      });
-
-      teardown(function() {
-        switchReadOnlyProperty(window, 'innerHeight', realWindowInnerHeight);
-      });
-
-      test('isFullAttentionMode() should be false', function() {
-        assert.isFalse(Pairview.isFullAttentionMode);
-      });
-
-      test('close() should be called while attention sceen is not in full ' +
-        'screen mode ', function() {
-        assert.isTrue(Pairview.close.called);
-      });
-
-      test('getTruncated() should not be called since early return',
-        function() {
-        assert.isFalse(window.getTruncated.called);
-      });
-    });
-
     suite('confirmation > ', function() {
       setup(function() {
         this.sinon.stub(Pairview, '_pairMode', 'passive');
diff --git a/apps/browser/index.html b/apps/browser/index.html
index 572358b..4af6e55 100644
--- a/apps/browser/index.html
+++ b/apps/browser/index.html
@@ -30,6 +30,7 @@
     <script defer src="shared/js/font_size_utils.js"></script>
     <script defer src="shared/js/accessibility_helper.js"></script>
     <script defer src="shared/js/mime_mapper.js"></script>
+    <script defer src="shared/js/simple_operator_variant_helper.js"></script>
     <script defer src="shared/js/utilities.js"></script>
     <script defer src="shared/js/url_helper.js"></script>
     <script defer src="shared/js/nfc_utils.js"></script>
diff --git a/apps/browser/js/browser.js b/apps/browser/js/browser.js
index 465b424..06ff0f8 100644
--- a/apps/browser/js/browser.js
+++ b/apps/browser/js/browser.js
@@ -277,41 +277,45 @@ var Browser = {
     var xhr = new XMLHttpRequest();
     xhr.open('GET', '/js/init.json', true);

-    xhr.addEventListener('load', function browser_defaultDataListener() {
+    xhr.addEventListener('load', (function browser_defaultDataListener() {
       if (!(xhr.status === 200 | xhr.status === 0)) {
         console.error('Unknown response when getting configuration data.');
         return;
       }
       var data = JSON.parse(xhr.responseText);

-      var mccCode = NumberHelper.zfill(variant.mcc, 3);
-      var mncCode = NumberHelper.zfill(variant.mnc, 3);
-      if (mccCode === DEFAULT_MCC && mncCode === DEFAULT_MNC) {
-        // If there is singleVariant configuration we wait for
-        // first run with a valid SIM
-        var keys = Object.keys(data);
-        var posDefault = keys.indexOf(DEFAULT_MCC + DEFAULT_MNC);
-        // We only want to know if there is configuration different from the
-        // default one
-        if (posDefault >= 0) {
-          keys.splice(posDefault, 1);
+      var mccCodes = variant.mcc;
+      var mncCodes = variant.mnc;
+      if (!Array.isArray(variant.mcc)) {
+        mccCodes = [variant.mcc];
+      }
+      if (!Array.isArray(variant.mnc)) {
+        mncCodes = [variant.mnc];
+      }
+
+      for (var i = 0; i < mccCodes.length; i++) {
+        var mccCode = NumberHelper.zfill(mccCodes[i], 3);
+        var mncCode = DEFAULT_MNC;
+        if (i < mncCodes.length) {
+          mncCode = mncCodes[i];
         }
-        // If there is another key, it is single variant configuration, we
-        // need to wait for the correct SIM
-        if (keys.length > 0) {
-          BrowserDB.waitFirstRunWithSim();
-          return;
+        mncCode = NumberHelper.zfill(mncCode, 3);
+
+        if (data[mccCode + mncCode]) {
+          callback(data[mccCode + mncCode]);
+            return;
         }
       }
-      if (data[mccCode + mncCode]) {
-        callback(data[mccCode + mncCode]);
+
+      if (data[DEFAULT_MCC + DEFAULT_MNC]) {
+        callback(data[DEFAULT_MCC + DEFAULT_MNC]);
         return;
       }

       callback(null);
       console.error('No configuration data found.');

-    }, false);
+    }).bind(this), false);

     xhr.onerror = function getDefaultDataError() {
       callback(null);
diff --git a/apps/browser/js/browser_db.js b/apps/browser/js/browser_db.js
index 3fc9044..b263d1f 100644
--- a/apps/browser/js/browser_db.js
+++ b/apps/browser/js/browser_db.js
@@ -10,13 +10,6 @@ var BrowserDB = {
   TOP_SITE_SCREENSHOTS: 4, // Number of top sites to keep screenshots for
   variantObserver: null,

-  waitFirstRunWithSim: function browserDB_waitFirstRunWithSim() {
-    window.navigator.mozSetMessageHandler('first-run-with-sim', (function(msg) {
-      Browser.getConfigurationData({ mcc: msg.mcc, mnc: msg.mnc },
-                                   this.populateBookmarks);
-    }).bind(this));
-  },
-
   init: function browserDB_init(callback) {
     this.db.open(callback);
   },
@@ -85,55 +78,56 @@ var BrowserDB = {
   populate: function browserDB_populate(upgradeFrom, callback) {
     console.log('Populating browser database.');

-    var self = this;
-    this.populateBookmarks = function(data) {
-      // Populate bookmarks if upgrading from version 0 or below
-      if (upgradeFrom < 1 && data.bookmarks) {
-        data.bookmarks.forEach(function(bookmark) {
-          if (!bookmark.uri || !bookmark.title) {
-            return;
-          }
-          self.addBookmark(bookmark.uri, bookmark.title, callback);
-          if (bookmark.iconUri) {
-            self.setAndLoadIconForPage(bookmark.uri, bookmark.iconUri);
-          }
-        }, self);
-      }
-      // Populate search engines & settings if upgrading from below version 7
-      if (upgradeFrom < 7 && data.searchEngines && data.settings) {
-        var defaultSearchEngine = data.settings.defaultSearchEngine;
-        if (defaultSearchEngine) {
-          self.updateSetting(defaultSearchEngine, 'defaultSearchEngine');
-        }
-        self.db.clearSearchEngines(function browserDB_addSearchEngines() {
-          data.searchEngines.forEach(function(searchEngine) {
-            if (!searchEngine.uri || !searchEngine.title ||
-                !searchEngine.iconUri) {
-              return;
-            }
-            self.addSearchEngine(searchEngine, callback);
-            if (searchEngine.uri == defaultSearchEngine) {
-              Browser.searchEngine = searchEngine;
-            }
-            self.setAndLoadIconForPage(searchEngine.uri, searchEngine.iconUri);
-          }, self);
-        });
-      }
-    };
-
     Browser.getDefaultData(function(data) {
       if (!data)
         return;
+
       // Populate top sites if upgrading from below version 7
       if (upgradeFrom < 7 && data.topSites) {
-        self.populateTopSites(data.topSites, -20);
+        this.populateTopSites(data.topSites, -20);
       }
+    }.bind(this));
+
+    SimpleOperatorVariantHelper.getOperatorVariant((function(mcc, mnc) {
+      Browser.getConfigurationData({ mcc: mcc, mnc: mnc }, (function(data) {

-    });
+        // Populate bookmarks if upgrading from version 0 or below
+        if (upgradeFrom < 1 && data.bookmarks) {
+          data.bookmarks.forEach(function(bookmark) {
+            if (!bookmark.uri || !bookmark.title)
+              return;
+            this.addBookmark(bookmark.uri, bookmark.title, callback);
+            if (bookmark.iconUri)
+              this.setAndLoadIconForPage(bookmark.uri, bookmark.iconUri);
+          }, this);
+        }

-    Browser.getConfigurationData({ mcc: '000', mnc: '000' },
-                                 this.populateBookmarks);
+        // Populate search engines & settings if upgrading from below version 7
+        if (upgradeFrom < 7 && data.searchEngines && data.settings) {
+          var defaultSearchEngine = data.settings.defaultSearchEngine;
+          if (defaultSearchEngine) {
+            this.updateSetting(defaultSearchEngine,
+              'defaultSearchEngine');
+          }

+          this.db.clearSearchEngines((function browserDB_addSearchEngines() {
+            data.searchEngines.forEach(function(searchEngine) {
+              if (!searchEngine.uri || !searchEngine.title ||
+                !searchEngine.iconUri)
+                return;
+              this.addSearchEngine(searchEngine, callback);
+              if (searchEngine.uri == defaultSearchEngine) {
+                Browser.searchEngine = searchEngine;
+              }
+              this.setAndLoadIconForPage(searchEngine.uri,
+                searchEngine.iconUri);
+            }, this);
+          }).bind(this));
+
+        }
+
+      }).bind(this));
+    }).bind(this));
   },

   addPlace: function browserDB_addPlace(uri, callback) {
diff --git a/apps/browser/manifest.webapp b/apps/browser/manifest.webapp
index d974e9f..454ef1f 100644
--- a/apps/browser/manifest.webapp
+++ b/apps/browser/manifest.webapp
@@ -47,9 +47,6 @@
     "189": "/shared/resources/branding/browser_189.png",
     "284": "/shared/resources/branding/browser_284.png"
   },
-  "messages": [
-     { "first-run-with-sim": "/index.html" }
-   ],
   "activities": {
     "view": {
       "filters": {
diff --git a/apps/browser/style/images/back-icon.png b/apps/browser/style/images/back-icon.png
new file mode 100644
index 0000000..44f962e
Binary files /dev/null and b/apps/browser/style/images/back-icon.png differ
diff --git a/apps/browser/style/images/back-icon@1.5x.png b/apps/browser/style/images/back-icon@1.5x.png
new file mode 100644
index 0000000..73d459f
Binary files /dev/null and b/apps/browser/style/images/back-icon@1.5x.png differ
diff --git a/apps/browser/style/images/back-icon@2.25x.png b/apps/browser/style/images/back-icon@2.25x.png
new file mode 100644
index 0000000..9ba51a9
Binary files /dev/null and b/apps/browser/style/images/back-icon@2.25x.png differ
diff --git a/apps/browser/style/images/back-icon@2x.png b/apps/browser/style/images/back-icon@2x.png
new file mode 100644
index 0000000..4d48239
Binary files /dev/null and b/apps/browser/style/images/back-icon@2x.png differ
diff --git a/apps/browser/style/images/bookmarked.png b/apps/browser/style/images/bookmarked.png
new file mode 100644
index 0000000..8913d22
Binary files /dev/null and b/apps/browser/style/images/bookmarked.png differ
diff --git a/apps/browser/style/images/bookmarked@1.5x.png b/apps/browser/style/images/bookmarked@1.5x.png
new file mode 100644
index 0000000..11576a7
Binary files /dev/null and b/apps/browser/style/images/bookmarked@1.5x.png differ
diff --git a/apps/browser/style/images/bookmarked@2.25x.png b/apps/browser/style/images/bookmarked@2.25x.png
new file mode 100644
index 0000000..9288b90
Binary files /dev/null and b/apps/browser/style/images/bookmarked@2.25x.png differ
diff --git a/apps/browser/style/images/bookmarked@2x.png b/apps/browser/style/images/bookmarked@2x.png
new file mode 100644
index 0000000..d44db91
Binary files /dev/null and b/apps/browser/style/images/bookmarked@2x.png differ
diff --git a/apps/browser/style/images/iconaction_browser_backpressed.png b/apps/browser/style/images/iconaction_browser_backpressed.png
new file mode 100644
index 0000000..cc1daba
Binary files /dev/null and b/apps/browser/style/images/iconaction_browser_backpressed.png differ
diff --git a/apps/browser/style/images/iconaction_browser_backpressed@1.5x.png b/apps/browser/style/images/iconaction_browser_backpressed@1.5x.png
new file mode 100644
index 0000000..0d8a41b
Binary files /dev/null and b/apps/browser/style/images/iconaction_browser_backpressed@1.5x.png differ
diff --git a/apps/browser/style/images/iconaction_browser_backpressed@2.25x.png b/apps/browser/style/images/iconaction_browser_backpressed@2.25x.png
new file mode 100644
index 0000000..a2f2df5
Binary files /dev/null and b/apps/browser/style/images/iconaction_browser_backpressed@2.25x.png differ
diff --git a/apps/browser/style/images/iconaction_browser_backpressed@2x.png b/apps/browser/style/images/iconaction_browser_backpressed@2x.png
new file mode 100644
index 0000000..e1d0e4a
Binary files /dev/null and b/apps/browser/style/images/iconaction_browser_backpressed@2x.png differ
diff --git a/apps/browser/style/images/iconaction_browser_forward_30x30.png b/apps/browser/style/images/iconaction_browser_forward_30x30.png
new file mode 100644
index 0000000..cc5e93c
Binary files /dev/null and b/apps/browser/style/images/iconaction_browser_forward_30x30.png differ
diff --git a/apps/browser/style/images/iconaction_browser_forward_30x30@1.5x.png b/apps/browser/style/images/iconaction_browser_forward_30x30@1.5x.png
new file mode 100644
index 0000000..e141d75
Binary files /dev/null and b/apps/browser/style/images/iconaction_browser_forward_30x30@1.5x.png differ
diff --git a/apps/browser/style/images/iconaction_browser_forward_30x30@2.25x.png b/apps/browser/style/images/iconaction_browser_forward_30x30@2.25x.png
new file mode 100644
index 0000000..d5741a2
Binary files /dev/null and b/apps/browser/style/images/iconaction_browser_forward_30x30@2.25x.png differ
diff --git a/apps/browser/style/images/iconaction_browser_forward_30x30@2x.png b/apps/browser/style/images/iconaction_browser_forward_30x30@2x.png
new file mode 100644
index 0000000..90a62fd
Binary files /dev/null and b/apps/browser/style/images/iconaction_browser_forward_30x30@2x.png differ
diff --git a/apps/browser/style/images/separator-large.png b/apps/browser/style/images/separator-large.png
new file mode 100644
index 0000000..93a5d17
Binary files /dev/null and b/apps/browser/style/images/separator-large.png differ
diff --git a/apps/browser/style/images/separator-large@1.5x.png b/apps/browser/style/images/separator-large@1.5x.png
new file mode 100644
index 0000000..6326a8e
Binary files /dev/null and b/apps/browser/style/images/separator-large@1.5x.png differ
diff --git a/apps/browser/style/images/separator-large@2x.png b/apps/browser/style/images/separator-large@2x.png
new file mode 100644
index 0000000..9f35e05
Binary files /dev/null and b/apps/browser/style/images/separator-large@2x.png differ
diff --git a/apps/browser/style/images/separator_large@2.25x.png b/apps/browser/style/images/separator_large@2.25x.png
new file mode 100644
index 0000000..80b7d88
Binary files /dev/null and b/apps/browser/style/images/separator_large@2.25x.png differ
diff --git a/apps/browser/test/marionette/manifest.ini b/apps/browser/test/marionette/manifest.ini
deleted file mode 100644
index 9debe81..0000000
--- a/apps/browser/test/marionette/manifest.ini
+++ /dev/null
@@ -1,6 +0,0 @@
-[awesomescreen_test.js]
-[navigate_test.js]
-[contextmenu_test.js]
-[bookmark_test.js]
-[share_url_test.js]
-[settings_test.js]
diff --git a/apps/browser/test/unit/browser_db_test.js b/apps/browser/test/unit/browser_db_test.js
index 125485a..56ee7f9 100644
--- a/apps/browser/test/unit/browser_db_test.js
+++ b/apps/browser/test/unit/browser_db_test.js
@@ -1,13 +1,9 @@
 'use strict';
 /* global BrowserDB, NumberHelper, MockNavigatorSettings */

-requireApp('browser/shared/test/unit/mocks/' +
-           'mock_navigator_moz_set_message_handler.js');
-
 // Stub of Browser object.
 var Browser = {
   _doNotCustomize: true,
-  _hasSV: false,

   getDefaultData: function getDefaultData(callback) {

@@ -48,32 +44,7 @@ var Browser = {
     var mncCode = NumberHelper.zfill(variant.mnc, 3);

     // Customization test data.
-    var dataNoSV = {
-      '000000': {
-        bookmarks: [
-          {
-            title: 'customize test 1',
-            uri: 'http://customize.test.mozilla.org/1'
-          },
-          {
-            title: 'customize test 2',
-            uri: 'http://customize.test.mozilla.org/2'
-          }
-        ],
-        searchEngines: [
-          {
-            title: 'customize search test 1',
-            uri: 'http://customize.test.mozilla.org/search/1',
-            iconUri: DATA_URI
-          }
-        ],
-        settings: {
-          defaultSearchEngine: 'http://customize.test.mozilla.org/search/1'
-        }
-      }
-    };
-
-    var dataSV = {
+    var data = {
       '000000': {
         bookmarks: [
           {
@@ -95,43 +66,16 @@ var Browser = {
         settings: {
           defaultSearchEngine: 'http://customize.test.mozilla.org/search/1'
         }
-      },
-      '214007': {
-        bookmarks: [
-          {
-            title: 'customize SV test 1',
-            uri: 'http://customize.sv.test.mozilla.org/1'
-          },
-          {
-            title: 'customize SV test 2',
-            uri: 'http://customize.sv.test.mozilla.org/2'
-          }
-        ],
-        searchEngines: [
-          {
-            title: 'customize SV search test 1',
-            uri: 'http://customize.sv.test.mozilla.org/search/1',
-            iconUri: DATA_URI
-          }
-        ],
-        settings: {
-          defaultSearchEngine: 'http://customize.sv.test.mozilla.org/search/1'
-        }
       }
     };

     // Imitate real getConfigurationData function by creating JSON from our
     // object and parsing it before returning it.
-    var json =
-       this._hasSV ? JSON.stringify(dataSV) : JSON.stringify(dataNoSV);
+    var json = JSON.stringify(data);

     // Select the data from the object.
     var parsed = JSON.parse(json);

-    if (mccCode === '000' && mncCode === '000' && this._hasSV) {
-      BrowserDB.waitFirstRunWithSim();
-      return;
-    }
     // Done, notify callback.
     callback(parsed[mccCode + mncCode]);

@@ -144,6 +88,7 @@ var Browser = {
 };

 requireApp('browser/shared/test/unit/mocks/mock_navigator_moz_settings.js');
+requireApp('browser/shared/js/simple_operator_variant_helper.js');

 requireApp('browser/shared/js/utilities.js');
 requireApp('browser/js/browser_db.js');
@@ -172,9 +117,6 @@ var clearBrowserStores = function(done) {
 suite('BrowserDB', function() {
   var realMozSettings = null;

-  const MSG_NAME = 'first-run-with-sim';
-  var message = { mcc: '214', mnc: '007' };
-
   suiteSetup(function() {
     realMozSettings = navigator.mozSettings;
     navigator.mozSettings = MockNavigatorSettings;
@@ -184,83 +126,9 @@ suite('BrowserDB', function() {
     navigator.mozSettings = realMozSettings;
   });

-  suite('BrowserDB.operatorVariantCustomization WITH SV configuration',
-        function() {
-    var realSetMessageHandler = null;
-
-    suiteSetup(function() {
-      realSetMessageHandler = window.navigator.mozSetMessageHandler;
-      window.navigator.mozSetMessageHandler =
-        window.MockNavigatormozSetMessageHandler;
-    });
-
-    suiteTeardown(function() {
-      window.navigator.mozSetMessageHandler = realSetMessageHandler;
-    });
-
-    setup(function(done) {
-      this.sinon.useFakeTimers();
-      navigator.mozSetMessageHandler.mSetup();
-      navigator.mozSettings.createLock()
-               .set({'operatorResources.data.topsites': {
-        'topSites': [
-          {
-            'title': 'Topsite',
-            'uri': 'http://customize.test.mozilla.org/topsite'
-          }
-        ]}});
-
-      // For these series of tests, we *do* want customizations to run.
-      Browser._doNotCustomize = false;
-      Browser._hasSV = true;
-      // And we want to manually initialize the DB.
-      BrowserDB.init(function() {
-        var itemsToAdd = 3;
-         BrowserDB.populate(0, function() {
-          if (--itemsToAdd <= 0) {
-            done();
-          }
-        });
-      window.navigator.mozSetMessageHandler.mTrigger(MSG_NAME, message);
-      });
-    });
-
-    teardown(function(done) {
-      Browser._doNotCustomize = true;
-      Browser._hasSV = false;
-      clearBrowserStores(done);
-      window.navigator.mozSetMessageHandler.mTeardown();
-    });
-
-    test('Operator Variant Customization -- Bookmarks with SV configuration',
-         function(done) {
-      BrowserDB.db.getAllBookmarks(function(bookmarks) {
-        assert.equal(bookmarks.length, 2);
-
-        // We can't yet guarantee order of bookmarks (bug 895807)
-        if (bookmarks[0].uri == 'http://customize.sv.test.mozilla.org/2') {
-          assert.equal(bookmarks[0].uri,
-                       'http://customize.sv.test.mozilla.org/2');
-          assert.equal(bookmarks[0].title, 'customize SV test 2');
-          assert.equal(bookmarks[1].uri,
-                       'http://customize.sv.test.mozilla.org/1');
-          assert.equal(bookmarks[1].title, 'customize SV test 1');
-        } else {
-          assert.equal(bookmarks[1].uri,
-                       'http://customize.sv.test.mozilla.org/2');
-          assert.equal(bookmarks[1].title, 'customize SV test 2');
-
-          assert.equal(bookmarks[0].uri,
-                       'http://customize.sv.test.mozilla.org/1');
-          assert.equal(bookmarks[0].title, 'customize SV test 1');
-        }
-        done();
-      });
-    });
-  });
-
   suite('BrowserDB.operatorVariantCustomization', function() {
     setup(function(done) {
+
       navigator.mozSettings.createLock()
                .set({'operatorResources.data.topsites': {
         'topSites': [
@@ -285,13 +153,10 @@ suite('BrowserDB', function() {

     teardown(function(done) {
       Browser._doNotCustomize = true;
-      Browser._hasSV = false;
       clearBrowserStores(done);
     });

-    test('Operator Variant Customization -- Bookmarks without SV configuration',
-         function(done) {
-
+    test('Operator Variant Customization -- Bookmarks', function(done) {
       BrowserDB.db.getAllBookmarks(function(bookmarks) {
         assert.equal(bookmarks.length, 2);

diff --git a/apps/calendar/elements/show_event.html b/apps/calendar/elements/show_event.html
index 564c910..53f4af7 100644
--- a/apps/calendar/elements/show_event.html
+++ b/apps/calendar/elements/show_event.html
@@ -31,7 +31,7 @@
         </li>

         <li class="current-calendar">
-          <div class="gaia-icon icon-calendar-dot calendar-text-color"></div>
+          <div class="icon-dot calendar-text-color"></div>
           <span class="content"></span>
         </li>

diff --git a/apps/calendar/index.html b/apps/calendar/index.html
index d3dbc57..e3b1c59 100644
--- a/apps/calendar/index.html
+++ b/apps/calendar/index.html
@@ -7,7 +7,7 @@
   <link rel="stylesheet" type="text/css" href="/shared/style/headers.css">
   <link rel="stylesheet" type="text/css" href="/shared/style/toolbars.css">
   <link rel="stylesheet" type="text/css" href="/shared/style/tabs.css">
-  <link rel="stylesheet" type="text/css" href="/shared/style/icons.css">
+  <link rel="stylesheet" type="text/css" href="/style/icons.css">
   <link rel="stylesheet" type="text/css" href="/style/calendar.css">
   <link rel="stylesheet" type="text/css" href="/style/ui.css">
   <link rel="stylesheet" type="text/css" href="/style/day_views.css">
@@ -39,7 +39,6 @@
   <script defer src="/js/calendar.js"></script>

   <!--- utils -->
-  <script defer src="/js/promise.js"></script>
   <script defer src="/js/presets.js"></script>
   <script defer src="/js/error.js"></script>
   <script defer src="/js/calc.js"></script>
@@ -166,7 +165,7 @@

   <ul id="view-selector" role="tablist" class="bb-tablist">
     <li class="today" role="presentation">
-      <a id="today" href="#today"><span class="gaia-icon icon-calendar-today"></span></a>
+      <a id="today" href="#today"><span class="icon-today"></span></a>
     </li>
     <li class="month" role="presentation"><a role="tab" aria-selected="true" aria-controls="month-view" id="month" data-l10n-id="show-month-view" href="/month/">Month</a></li>
     <li class="week" role="presentation"><a role="tab" aria-selected="false" aria-controls="week-view" id="week" data-l10n-id="show-week-view" href="/week/">Week</a></li>
diff --git a/apps/calendar/js/app.js b/apps/calendar/js/app.js
index f5cea44..144cf95 100644
--- a/apps/calendar/js/app.js
+++ b/apps/calendar/js/app.js
@@ -404,7 +404,7 @@ Calendar.App = (function(window) {
     },

     _showTodayDate: function() {
-      document.querySelector('#today .icon-calendar-today').innerHTML =
+      document.querySelector('#today .icon-today').innerHTML =
         new Date().getDate();
     },

diff --git a/apps/calendar/js/ext/page.js b/apps/calendar/js/ext/page.js
index a1d38c6..014f2e3 100644
--- a/apps/calendar/js/ext/page.js
+++ b/apps/calendar/js/ext/page.js
@@ -95,7 +95,8 @@
     if (false !== options.popstate) window.addEventListener('popstate', onpopstate, false);
     if (false !== options.click) window.addEventListener('click', onclick, false);
     if (!dispatch) return;
-    page.replace(location.pathname + location.search, null, true, dispatch);
+    var url = location.pathname + location.search + location.hash;
+    page.replace(url, null, true, dispatch);
   };

   /**
@@ -115,13 +116,14 @@
    *
    * @param {String} path
    * @param {Object} state
+   * @param {Boolean} dispatch
    * @return {Context}
    * @api public
    */

-  page.show = function(path, state){
+  page.show = function(path, state, dispatch){
     var ctx = new Context(path, state);
-    page.dispatch(ctx);
+    if (false !== dispatch) page.dispatch(ctx);
     if (!ctx.unhandled) ctx.pushState();
     return ctx;
   };
@@ -173,7 +175,8 @@
    */

   function unhandled(ctx) {
-    if (window.location.pathname + window.location.search == ctx.canonicalPath) return;
+    var current = window.location.pathname + window.location.search;
+    if (current == ctx.canonicalPath) return;
     page.stop();
     ctx.unhandled = true;
     window.location = ctx.canonicalPath;
@@ -191,14 +194,24 @@
   function Context(path, state) {
     if ('/' == path[0] && 0 != path.indexOf(base)) path = base + path;
     var i = path.indexOf('?');
+
     this.canonicalPath = path;
     this.path = path.replace(base, '') || '/';
+
     this.title = document.title;
     this.state = state || {};
     this.state.path = path;
     this.querystring = ~i ? path.slice(i + 1) : '';
     this.pathname = ~i ? path.slice(0, i) : path;
     this.params = [];
+
+    // fragment
+    this.hash = '';
+    if (!~this.path.indexOf('#')) return;
+    var parts = this.path.split('#');
+    this.path = parts[0];
+    this.hash = parts[1] || '';
+    this.querystring = this.querystring.split('#')[0];
   }

   /**
@@ -271,7 +284,7 @@
     return function(ctx, next){
       if (self.match(ctx.path, ctx.params)) return fn(ctx, next);
       next();
-    }
+    };
   };

   /**
@@ -289,7 +302,7 @@
       , qsIndex = path.indexOf('?')
       , pathname = ~qsIndex ? path.slice(0, qsIndex) : path
       , m = this.regexp.exec(pathname);
-
+
     if (!m) return false;

     for (var i = 1, len = m.length; i < len; ++i) {
@@ -334,7 +347,6 @@
     path = path
       .concat(strict ? '' : '/?')
       .replace(/\/\(/g, '(?:/')
-      .replace(/\+/g, '__plus__')
       .replace(/(\/)?(\.)?:(\w+)(?:(\(.*?\)))?(\?)?/g, function(_, slash, format, key, capture, optional){
         keys.push({ name: key, optional: !! optional });
         slash = slash || '';
@@ -346,10 +358,9 @@
           + (optional || '');
       })
       .replace(/([\/.])/g, '\\$1')
-      .replace(/__plus__/g, '(.+)')
       .replace(/\*/g, '(.*)');
     return new RegExp('^' + path + '$', sensitive ? '' : 'i');
-  };
+  }

   /**
    * Handle "populate" events.
@@ -368,17 +379,33 @@

   function onclick(e) {
     if (1 != which(e)) return;
+    if (e.metaKey || e.ctrlKey || e.shiftKey) return;
     if (e.defaultPrevented) return;
+
+    // ensure link
     var el = e.target;
     while (el && 'A' != el.nodeName) el = el.parentNode;
     if (!el || 'A' != el.nodeName) return;
-    var href = el.href;
-    var path = el.pathname + el.search;
-    if (el.hash || '#' == el.getAttribute('href')) return;
-    if (!sameOrigin(href)) return;
-    var orig = path;
+
+    // ensure non-hash for the same path
+    var link = el.getAttribute('href');
+    if (el.pathname == location.pathname && (el.hash || '#' == link)) return;
+
+    // check target
+    if (el.target) return;
+
+    // x-origin
+    if (!sameOrigin(el.href)) return;
+
+    // rebuild path
+    var path = el.pathname + el.search + (el.hash || '');
+
+    // same page
+    var orig = path + el.hash;
+
     path = path.replace(base, '');
     if (base && orig == path) return;
+
     e.preventDefault();
     page.show(orig);
   }
diff --git a/apps/calendar/js/promise.js b/apps/calendar/js/promise.js
deleted file mode 100644
index 4c0b91d..0000000
--- a/apps/calendar/js/promise.js
+++ /dev/null
@@ -1,56 +0,0 @@
-/* global Promise */
-/**
- * @fileoverview Utilities for converting async functions which use
- *     node-style callbacks to also cater promises callers.
- */
-Calendar.Promise = (function() {
-  'use strict';
-
-  function denodeify(fn) {
-    // This is our new, denodeified function. You can interact with it using
-    // node-style callbacks or promises.
-    return function() {
-      // Original arguments to fn.
-      var args = Array.slice(arguments);
-      var callback = args[args.length - 1];
-      if (typeof callback === 'function') {
-        // If consumer is trying to interact with node-style callback, let them.
-        return fn.apply(this, args);
-      }
-
-      // We need the defer style promise api here since we don't want to
-      // accidentily step on functions that return things like DOMRequests...
-      var deferred = defer();
-      args.push((err, result) => {
-        if (err) {
-          return deferred.reject(err);
-        }
-
-        deferred.resolve(result);
-      });
-
-      // Return the promise <=> the function doesn't return an object.
-      var returnValue = fn.apply(this, args);
-      return typeof returnValue === 'object' ? returnValue : deferred.promise;
-    };
-  }
-
-  function denodeifyAll(object, methods) {
-    methods.forEach((method) => {
-      object[method] = Calendar.Promise.denodeify(object[method]);
-    });
-  }
-
-  function defer() {
-    var deferred = {};
-    var promise = new Promise((resolve, reject) => {
-      deferred.resolve = resolve;
-      deferred.reject = reject;
-    });
-
-    deferred.promise = promise;
-    return deferred;
-  }
-
-  return { denodeify: denodeify, denodeifyAll: denodeifyAll };
-}());
diff --git a/apps/calendar/js/provider/abstract.js b/apps/calendar/js/provider/abstract.js
index 22efcb0..1165b44 100644
--- a/apps/calendar/js/provider/abstract.js
+++ b/apps/calendar/js/provider/abstract.js
@@ -8,18 +8,6 @@ Calendar.ns('Provider').Abstract = (function() {
         this[key] = options[key];
       }
     }
-
-
-    Calendar.Promise.denodeifyAll(this, [
-      'eventCapabilities',
-      'getAccount',
-      'findCalendars',
-      'syncEvents',
-      'ensureRecurrencesExpanded',
-      'createEvent',
-      'updateEvent',
-      'deleteEvent'
-    ]);
   }

   Abstract.prototype = {
@@ -152,6 +140,7 @@ Calendar.ns('Provider').Abstract = (function() {
         });
       });
     }
+
   };

   return Abstract;
diff --git a/apps/calendar/js/store/abstract.js b/apps/calendar/js/store/abstract.js
index ec9d6f6..831edc2 100644
--- a/apps/calendar/js/store/abstract.js
+++ b/apps/calendar/js/store/abstract.js
@@ -12,15 +12,6 @@
     this.db = db;
     this._cached = Object.create(null);
     Calendar.Responder.call(this);
-
-    Calendar.Promise.denodeifyAll(this, [
-      'persist',
-      'all',
-      'removeByIndex',
-      'get',
-      'remove',
-      'count'
-    ]);
   }

   Abstract.prototype = {
diff --git a/apps/calendar/js/store/account.js b/apps/calendar/js/store/account.js
index ca33003..68245d8 100755
--- a/apps/calendar/js/store/account.js
+++ b/apps/calendar/js/store/account.js
@@ -3,14 +3,6 @@

   function Account() {
     Calendar.Store.Abstract.apply(this, arguments);
-
-    Calendar.Promise.denodeifyAll(this, [
-      'verifyAndPersist',
-      'sync',
-      'markWithError',
-      'syncableAccounts',
-      'availablePresets'
-    ]);
   }

   Account.prototype = {
diff --git a/apps/calendar/js/store/alarm.js b/apps/calendar/js/store/alarm.js
index a1769bc..6df8991 100644
--- a/apps/calendar/js/store/alarm.js
+++ b/apps/calendar/js/store/alarm.js
@@ -19,11 +19,6 @@ Calendar.ns('Store').Alarm = (function() {
   function Alarm() {
     Calendar.Store.Abstract.apply(this, arguments);
     this._processQueue = this._processQueue.bind(this);
-
-    Calendar.Promise.denodeifyAll(this, [
-      'findAllByBusytimeId',
-      'workQueue'
-    ]);
   }

   Alarm.prototype = {
diff --git a/apps/calendar/js/store/busytime.js b/apps/calendar/js/store/busytime.js
index b624db8..6edfc27 100644
--- a/apps/calendar/js/store/busytime.js
+++ b/apps/calendar/js/store/busytime.js
@@ -16,11 +16,6 @@ Calendar.ns('Store').Busytime = (function() {
   function Busytime() {
     Calendar.Store.Abstract.apply(this, arguments);
     this._setupCache();
-
-    Calendar.Promise.denodeifyAll(this, [
-      'removeEvent',
-      'loadSpan'
-    ]);
   }

   Busytime.prototype = {
diff --git a/apps/calendar/js/store/calendar.js b/apps/calendar/js/store/calendar.js
index 85d4238..7db6c94 100644
--- a/apps/calendar/js/store/calendar.js
+++ b/apps/calendar/js/store/calendar.js
@@ -4,14 +4,6 @@
   function Store() {
     Calendar.Store.Abstract.apply(this, arguments);
     this._usedColors = [];
-
-    Calendar.Promise.denodeifyAll(this, [
-      'markWithError',
-      'remotesByAccount',
-      'sync',
-      'providerFor',
-      'ownersOf'
-    ]);
   }

   /**
diff --git a/apps/calendar/js/store/event.js b/apps/calendar/js/store/event.js
index 019ae6d..8ca020f 100644
--- a/apps/calendar/js/store/event.js
+++ b/apps/calendar/js/store/event.js
@@ -3,13 +3,6 @@

   function Events() {
     Calendar.Store.Abstract.apply(this, arguments);
-
-    Calendar.Promise.denodeifyAll(this, [
-      'providerFor',
-      'findByIds',
-      'ownersOf',
-      'eventsForCalendar'
-    ]);
   }

   Events.prototype = {
diff --git a/apps/calendar/js/store/ical_component.js b/apps/calendar/js/store/ical_component.js
index 3a79e65..5df93e1 100644
--- a/apps/calendar/js/store/ical_component.js
+++ b/apps/calendar/js/store/ical_component.js
@@ -3,10 +3,6 @@ Calendar.ns('Store').IcalComponent = (function() {

   function IcalComponent() {
     Calendar.Store.Abstract.apply(this, arguments);
-
-    Calendar.Promise.denodeifyAll(this, [
-      'findRecurrences'
-    ]);
   }

   IcalComponent.prototype = {
diff --git a/apps/calendar/js/store/setting.js b/apps/calendar/js/store/setting.js
index c94bcbd..0d1d245 100644
--- a/apps/calendar/js/store/setting.js
+++ b/apps/calendar/js/store/setting.js
@@ -3,10 +3,6 @@ Calendar.ns('Store').Setting = (function() {

   function Setting() {
     Calendar.Store.Abstract.apply(this, arguments);
-    Calendar.Promise.denodeifyAll(this, [
-      'getValue',
-      'set'
-    ]);
   }

   Setting.prototype = {
diff --git a/apps/calendar/js/templates/calendar.js b/apps/calendar/js/templates/calendar.js
index 09b8828..e113a7c 100644
--- a/apps/calendar/js/templates/calendar.js
+++ b/apps/calendar/js/templates/calendar.js
@@ -17,8 +17,7 @@
       }

       return '<li id="calendar-' + id + '" class="calendar-id-' + id + '">' +
-          '<div class="gaia-icon icon-calendar-dot calendar-text-color">' +
-          '</div>' +
+          '<div class="icon-dot calendar-text-color"></div>' +
           '<label class="pack-checkbox">' +
             '<input ' +
               'value="' + id + '" ' +
diff --git a/apps/calendar/js/templates/day.js b/apps/calendar/js/templates/day.js
index beafde4..29905a2 100644
--- a/apps/calendar/js/templates/day.js
+++ b/apps/calendar/js/templates/day.js
@@ -23,7 +23,7 @@

       return '<section class="' + classes + '" data-hour="' + hour + '">' +
           '<div class="hour-header">' +
-            (isAllDay ? '<i class="gaia-icon icon-calendar-allday"></i>' : '') +
+            (isAllDay ? '<i class="icon-allday"></i>' : '') +
             '<span ' + l10n + 'class="display-hour">' +
               displayHour +
             '</span>' +
@@ -54,12 +54,8 @@
       var containerClassName = 'container calendar-border-color ' +
         'calendar-id-' + calendarId;

-      var alarm = '';
-
       if (hasAlarm) {
         containerClassName += ' has-alarm';
-        alarm = '<i class="gaia-icon icon-calendar-alarm ' +
-          'calendar-text-color"></i>';
       }

       return '<section class="' + eventClassName + '" ' +
@@ -70,7 +66,7 @@
               this.h('location') +
             '</span>' +
           '</div>' +
-          alarm +
+          (hasAlarm ? '<i class="icon-alarm calendar-text-color"></i>' : '') +
         '</section>';
     }
   });
diff --git a/apps/calendar/js/templates/months_day.js b/apps/calendar/js/templates/months_day.js
index 8943b3b..ec3f4de 100644
--- a/apps/calendar/js/templates/months_day.js
+++ b/apps/calendar/js/templates/months_day.js
@@ -40,12 +40,10 @@
       return '<section class="' + sectionClassList + '" ' +
                       'data-id="' + this.h('busytimeId') + '">' +
              '<div class="' + containerClassList + '">' +
-               '<div class="gaia-icon icon-calendar-dot calendar-text-color">' +
-               '</div>' +
+               '<div class="icon-dot calendar-text-color"></div>' +
                '<div class="event-time">' + this.eventTime() + '</div>' +
                '<div class="event-details">' + this.eventDetails() + '</div>' +
-               '<div class="gaia-icon icon-calendar-alarm ' +
-                 'calendar-text-color"></div>' +
+               '<div class="icon-alarm calendar-text-color"></div>' +
              '</div>' +
              '</section>';
     }
diff --git a/apps/calendar/js/templates/week.js b/apps/calendar/js/templates/week.js
index 589f4a1..1aa5632 100644
--- a/apps/calendar/js/templates/week.js
+++ b/apps/calendar/js/templates/week.js
@@ -39,7 +39,9 @@

     frame: function() {
       return '<section class="sticky">' +
-          '<span class="all-day gaia-icon icon-calendar-allday"></span>' +
+          '<span class="all-day icon-allday">' +
+            this.l10n('', 'hour-allday') +
+          '</span>' +
         '</section>' +
         '<div class="scroll">' +
           '<div class="scroll-content">' +
diff --git a/apps/calendar/js/utils/account_creation.js b/apps/calendar/js/utils/account_creation.js
index 462cdfa..2d5b840 100755
--- a/apps/calendar/js/utils/account_creation.js
+++ b/apps/calendar/js/utils/account_creation.js
@@ -19,11 +19,8 @@ Calendar.ns('Utils').AccountCreation = (function() {
    */
   function AccountCreation(app) {
     this.app = app || Calendar.App;
-    Calendar.Responder.call(this);

-    Calendar.Promise.denodeifyAll(this, [
-      'send'
-    ]);
+    Calendar.Responder.call(this);
   }

   AccountCreation.prototype = {
diff --git a/apps/calendar/js/views/month_child.js b/apps/calendar/js/views/month_child.js
index bf807ec..277568f 100644
--- a/apps/calendar/js/views/month_child.js
+++ b/apps/calendar/js/views/month_child.js
@@ -83,26 +83,10 @@
     },

     _updateBusyCount: function(busytime, difference) {
-      var endDate = busytime.endDate;
-      var dates = [];
-      // Use the last second of previous day as the base for endDate
-      // (e.g., 1991-09-14T23:59:59 insteads of 1991-09-15T00:00:00).
-      if (endDate.getHours() === 0 &&
-          endDate.getMinutes() === 0 &&
-          endDate.getSeconds() === 0) {
-        endDate = new Date(endDate.getTime() - 1000);
-      }
-
-      dates = Calc.daysBetween(
-        busytime.startDate,
-        endDate
-      );
-
-      dates.forEach(function(date) {
-        var dayId = Calc.getDayId(date);
-        var count = this._dayToBusyCount[dayId];
-        this._setBusyCount(dayId, count + difference);
-      }, this);
+      var startDate = busytime.startDate;
+      var dayId = Calc.getDayId(startDate);
+      var count = this._dayToBusyCount[dayId];
+      this._setBusyCount(dayId, count + difference);
     },

     _setBusyCount: function(dayId, count) {
@@ -125,7 +109,7 @@
         var dot;
         for (; i < difference; i++) {
           dot = document.createElement('div');
-          dot.className = 'gaia-icon icon-calendar-dot';
+          dot.className = 'icon-dot';
           element.appendChild(dot);
         }

diff --git a/apps/calendar/package.json b/apps/calendar/package.json
index f5930cc..33cfe0c 100644
--- a/apps/calendar/package.json
+++ b/apps/calendar/package.json
@@ -4,8 +4,8 @@
     "dependencies": {
       "caldav": "github:mozilla-b2g/caldav/master",
       "ical": "github:mozilla-comm/ical.js/v0.0.2#build/ical.js",
-      "uuid": "github:broofa/node-uuid/v1.4.1",
-      "page": "github:visionmedia/page.js/1.3.2#index.js"
+      "node-uuid": "github:broofa/node-uuid/v1.4.1",
+      "page": "github:visionmedia/page.js/1.3.7#index.js"
     }
   }
 }
\ No newline at end of file
diff --git a/apps/calendar/style/day_views.css b/apps/calendar/style/day_views.css
index ba30bc2..9cf7419 100644
--- a/apps/calendar/style/day_views.css
+++ b/apps/calendar/style/day_views.css
@@ -101,12 +101,10 @@
   padding-right: 3rem;
 }

-.day-events .icon-calendar-alarm {
+.day-events .icon-alarm {
   position: absolute;
   top: 0.2rem;
   right: 0;
-  width: 3rem;
-  height: 3rem;
 }

 .day-events .event-title {
@@ -142,6 +140,7 @@
 .day-events .event.partial-hour .container,
 .hour-allday .event .container {
   padding-top: 0.4rem;
+  overflow: hidden;
   text-overflow: ellipsis;
   white-space: nowrap;
 }
@@ -185,14 +184,14 @@
   visibility: hidden;
 }

-.day-events .event.partial-hour-micro .icon-calendar-alarm,
-.day-events .event.partial-hour-tiny .icon-calendar-alarm {
+.day-events .event.partial-hour-micro .icon-alarm,
+.day-events .event.partial-hour-tiny .icon-alarm {
   /* hide icon since we don't have enough space for it and using a different
    * size looks weird (not consistent) */
   display: none;
 }

-.day-events .event.partial-hour-small .icon-calendar-alarm {
+.day-events .event.partial-hour-small .icon-alarm {
   top: 50%;
   transform: translateY(-50%);
 }
@@ -240,7 +239,7 @@
   will-change: scroll-position;
 }

-#day-view .icon-calendar-allday:before {
+#day-view .icon-allday:before {
   position: relative;
   top: 0.4rem;
   left: 0.4rem;
diff --git a/apps/calendar/style/event_view.css b/apps/calendar/style/event_view.css
index 0335c9c..58e1441 100644
--- a/apps/calendar/style/event_view.css
+++ b/apps/calendar/style/event_view.css
@@ -69,13 +69,13 @@
   padding-left: 1.4rem;
 }

-#event-view .current-calendar .icon-calendar-dot:before {
+#event-view .current-calendar .icon-dot {
   position: absolute;
   left: -2.2rem;
-  line-height: 2.3rem;
+  line-height: 1.8rem;
   font-size: 5rem;
 }

 #event-view .current-calendar .content {
-  margin-left: 1.2rem;
+  margin-left: 1rem;
 }
diff --git a/apps/calendar/style/fonts/gaia-calendar-icons.json b/apps/calendar/style/fonts/gaia-calendar-icons.json
new file mode 100644
index 0000000..10001fc
--- /dev/null
+++ b/apps/calendar/style/fonts/gaia-calendar-icons.json
@@ -0,0 +1,228 @@
+{
+	"metadata": {
+		"name": "gaia-calendar-icons",
+		"lastOpened": 1398293635456,
+		"created": 1398293600812
+	},
+	"iconSets": [
+		{
+			"icons": [
+				{
+					"paths": [
+						"M511.872 799.712c36.16 0 65.44-27.808 68.544-63.232h-137.152c3.072 35.424 32.448 63.232 68.608 63.232zM704.064 704c31.36 0 38.496-56.512 25.984-65.28l-5.184-6.752c-30.368-21.792-49.888-52.608-52.32-87.296h-0.8v-7.008c0 0 0 0 0-0.064v-99.392h-1.312c-4.576-46.368-40.256-85.408-90.24-104.544 0.384-2.816 0.8-5.632 0.8-8.512 0-38.208-30.944-69.184-69.12-69.184-38.24 0-69.184 30.976-69.184 69.184 0 2.976 0.512 5.792 0.864 8.672-49.76 19.2-85.312 58.144-89.888 104.416h-1.28v99.392h0.064c0 0.096-0.064 0.096-0.064 0.16v6.88h-0.864c-2.368 34.688-21.984 65.504-52.352 87.296l-6.016 7.040c-11.104 10.496-4.672 64.992 26.912 64.992h384z"
+					],
+					"defaultCode": 58880,
+					"grid": 32,
+					"id": 1
+				},
+				{
+					"paths": [
+						"M481.728 658.976h-171.456v-33.44c102.432-108.032 127.584-141.888 127.584-189.504 0-34.304-19.52-53.056-47.776-53.056-24.256 0-40.352 10.048-59.008 33.408l-26.88-21.984c23.392-30.656 51.616-46.24 88.064-46.24 53.408 0 87.264 36.16 87.264 86.528 0 54.464-34.752 99.776-123.68 189.088h130.624l-4.736 35.2zM644.512 467.616h34.688v82.4h37.824v33.44h-37.824v75.52h-38.624v-75.52h-120.672v-30.208l83.776-205.024 33.376 14.656-75.072 187.168h78.56l3.968-82.432zM881.28 599.744c-9.792 12.544-25.664 12.544-35.392 0l-78.752-101.408c18.624-9.696 40.8-16.512 64.992-19.776-16.672-161.952-153.536-288.224-319.84-288.224-177.632 0-321.632 144-321.632 321.6s144 321.632 321.632 321.632c88.352 0 168.352-35.68 226.464-93.344l43.008 42.976c-69.504 69.568-165.472 112.576-271.456 112.576-211.968-0.032-383.776-171.904-383.776-383.776 0-211.968 171.808-383.776 383.744-383.776 200.544 0 364.8 153.888 382.016 349.92 25.184 3.168 48.352 10.208 67.648 20.32l-78.656 101.28z"
+					],
+					"defaultCode": 58881,
+					"grid": 32,
+					"id": 2
+				},
+				{
+					"paths": [
+						"M512 672c-88.224 0-160-71.776-160-160s71.776-160 160-160 160 71.776 160 160-71.776 160-160 160zM512 384c-70.592 0-128 57.408-128 128s57.408 128 128 128c70.592 0 128-57.408 128-128 0-70.592-57.408-128-128-128z"
+					],
+					"defaultCode": 58882,
+					"grid": 32,
+					"id": 3
+				},
+				{
+					"paths": [
+						"M576 512c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-35.346 28.654-64 64-64 35.346 0 64 28.654 64 64z"
+					],
+					"defaultCode": 58883,
+					"grid": 32,
+					"id": 4
+				},
+				{
+					"paths": [
+						"M341.334 284.604l205.926 205.926c0.206 0.204 0.546 0.376 0.716 0.614 11.264 11.264 11.504 29.15 1.092 40.892l0.068 0.068-207.598 207.668c9.558 41.096 21.676 79.462 35.806 114.38l279.278-279.246c34.714-34.61 34.714-90.796 0-125.474l-279.586-279.552c-14.13 34.954-26.146 73.456-35.702 114.722z"
+					],
+					"defaultCode": 58884,
+					"grid": 32,
+					"id": 5
+				},
+				{
+					"paths": [
+						"M819.2 214.904c-69.052-69.496-181.146-69.496-250.23 0-0.784 0.818-1.332 1.774-2.116 2.628l-0.444-0.444-374.784 377.548c-0.068 0.102-0.17 0.136-0.272 0.24-51.2 51.61-51.2 135.030 0 186.64 51.2 51.438 134.178 51.438 185.378 0 0-0.034 0-0.034 0-0.034l0.034 0.034 377.652-380.006-32.462-32.7-377.652 379.938c0 0.034-0.034 0.068-0.068 0.102-33.28 33.418-87.212 33.418-120.49 0-33.246-33.486-33.246-87.688 0-121.242 0.034-0.034 0.102-0.068 0.138-0.102l-0.034-0.068 11.366-11.4 365.842-368.094c0.102-0.102 0.206-0.24 0.308-0.376 51.166-51.508 134.178-51.508 185.378 0 51.098 51.506 51.098 134.996 0.034 186.504l0.034 0.034-317.576 319.626 32.256 32.666 315.12-317.44c0.784-0.786 1.774-1.332 2.56-2.116 69.188-69.598 69.188-182.374 0.034-251.938z"
+					],
+					"defaultCode": 58886,
+					"grid": 32,
+					"id": 6
+				},
+				{
+					"paths": [
+						"M454.144 539.914c32.358 32.358 84.856 32.358 117.248 0l250.64-250.64c9.352-9.388 15.326-20.514 18.944-32.222-32.496-6.794-66.116-12.8-101.138-17.544l-25.804 25.77c-0.342 0.478-0.41 1.058-0.818 1.502l-189.814 189.782c-5.972 5.974-15.598 5.974-21.504 0l-189.782-189.782c-0.478-0.444-0.512-1.024-0.888-1.468l-25.772-25.804c-34.954 4.778-68.506 10.752-100.966 17.544 3.618 11.708 9.626 22.802 18.978 32.222l250.676 250.64zM170.872 638.764c13.618 40.62 47.444 68.438 87.176 68.438h505.378c39.73 0 73.558-27.784 87.278-68.438h-679.834z"
+					],
+					"defaultCode": 58887,
+					"grid": 32,
+					"id": 7
+				},
+				{
+					"paths": [
+						"M750.626 135.066c0-27.51-14.678-49.802-32.836-49.802-18.192 0-36.078 22.288-36.078 49.802v52.702h68.914v-52.702zM341.026 135.066c0-27.51-14.712-49.802-32.836-49.802-18.158 0-36.080 22.288-36.080 49.802v52.702h68.916v-52.702zM784.998 187.768h-34.372v20.548c0 27.408-14.678 48.64-32.836 48.64-18.192 0-36.078-22.222-36.078-49.732v-19.456h-340.686v20.548c0 27.408-14.712 48.64-32.836 48.64-18.158 0-36.080-22.222-36.080-49.732v-19.456h-33.246c-75.4 0-136.498 61.132-136.498 136.568v477.832c0 75.468 61.098 136.568 136.498 136.568h546.134c75.4 0 136.602-61.1 136.602-136.568v-477.832c0-75.436-61.202-136.568-136.602-136.568zM853.298 802.168c0 37.716-30.548 68.302-68.302 68.302h-546.134c-37.682 0-68.266-30.582-68.266-68.302v-443.734c0-37.648 30.55-68.232 68.266-68.232h546.134c37.75 0 68.302 30.582 68.302 68.232v443.734z"
+					],
+					"defaultCode": 58885,
+					"grid": 32,
+					"id": 8
+				}
+			],
+			"height": 1024,
+			"metadata": {
+				"name": "icomoon",
+				"url": "",
+				"designer": ""
+			},
+			"preferences": {
+				"showGlyphs": true,
+				"showQuickUse": true,
+				"fontPref": {
+					"prefix": "icon-",
+					"metadata": {
+						"fontFamily": "gaia-calendar-icons",
+						"majorVersion": 1,
+						"minorVersion": 0,
+						"fontURL": "",
+						"designer": ""
+					},
+					"metrics": {
+						"emSize": 512,
+						"baseline": 6.25,
+						"whitespace": 50
+					},
+					"includeMetadata": true,
+					"showMetrics": false,
+					"showMetadata": false,
+					"resetPoint": 58880
+				},
+				"imagePref": {
+					"color": 0,
+					"height": 32,
+					"columns": 16,
+					"margin": 16
+				},
+				"historySize": 100,
+				"showCodes": true,
+				"search": "",
+				"gridSize": 16,
+				"showGrid": true
+			},
+			"selection": [
+				{
+					"id": 0,
+					"order": 1,
+					"prevSize": 32,
+					"code": 58880,
+					"name": "alarm",
+					"ligatures": "",
+					"tempChar": ""
+				},
+				{
+					"id": 1,
+					"order": 2,
+					"prevSize": 32,
+					"code": 58881,
+					"name": "allday",
+					"ligatures": "",
+					"tempChar": ""
+				},
+				{
+					"id": 2,
+					"order": 3,
+					"prevSize": 32,
+					"code": 58882,
+					"name": "bullet",
+					"ligatures": "",
+					"tempChar": ""
+				},
+				{
+					"id": 3,
+					"order": 4,
+					"prevSize": 32,
+					"code": 58883,
+					"name": "dot",
+					"ligatures": "",
+					"tempChar": ""
+				},
+				{
+					"id": 4,
+					"order": 5,
+					"prevSize": 32,
+					"code": 58884,
+					"name": "right-arrow",
+					"ligatures": "",
+					"tempChar": ""
+				},
+				{
+					"id": 6,
+					"order": 6,
+					"prevSize": 32,
+					"code": 58886,
+					"name": "attachment",
+					"ligatures": "",
+					"tempChar": ""
+				},
+				{
+					"id": 7,
+					"order": 7,
+					"prevSize": 32,
+					"code": 58887,
+					"name": "download",
+					"ligatures": "",
+					"tempChar": ""
+				},
+				{
+					"id": 5,
+					"order": 8,
+					"prevSize": 32,
+					"code": 58885,
+					"name": "today",
+					"ligatures": "",
+					"tempChar": ""
+				}
+			],
+			"id": 1,
+			"prevSize": 32
+		}
+	],
+	"preferences": {
+		"showGlyphs": true,
+		"showQuickUse": true,
+		"fontPref": {
+			"prefix": "icon-",
+			"metadata": {
+				"fontFamily": "gaia-calendar-icons",
+				"majorVersion": 1,
+				"minorVersion": 0,
+				"fontURL": "",
+				"designer": ""
+			},
+			"metrics": {
+				"emSize": 512,
+				"baseline": 6.25,
+				"whitespace": 50
+			},
+			"includeMetadata": true,
+			"showMetrics": false,
+			"showMetadata": false,
+			"resetPoint": 58880
+		},
+		"imagePref": {
+			"color": 0,
+			"height": 32,
+			"columns": 16,
+			"margin": 16
+		},
+		"historySize": 100,
+		"showCodes": true,
+		"search": "",
+		"gridSize": 16,
+		"showGrid": true
+	},
+	"externalSets": []
+}
\ No newline at end of file
diff --git a/apps/calendar/style/fonts/gaia-calendar-icons.woff b/apps/calendar/style/fonts/gaia-calendar-icons.woff
new file mode 100755
index 0000000..e7a1bcc
Binary files /dev/null and b/apps/calendar/style/fonts/gaia-calendar-icons.woff differ
diff --git a/apps/calendar/style/icons.css b/apps/calendar/style/icons.css
new file mode 100644
index 0000000..cfcee04
--- /dev/null
+++ b/apps/calendar/style/icons.css
@@ -0,0 +1,80 @@
+/*
+
+font-face generated by IcoMoon (http://icomoon.io/app)
+
+Icons should be designed to "fit" a 32x32px grid.
+
+To edit/add icons import the json file (fonts/gaia-calendar-icons.json) into
+http://icomoon.io/app - and import each vector as individual SVG files.
+
+Make sure icons look sharp on the IcoMoon preview before exporting the font.
+If they don't look sharp you might need snap anchors/control-points to pixel
+grid (pixel hinting). For more info about how to design the vector for sharper
+icons see: https://github.com/blog/1135-the-making-of-octicons &
+http://asimpleframe.com/writing/custom-icon-font-tutorial-icomoon
+
+It's important to note that fonts doesn't supports "lines" and "outlines", make
+sure you "expand" all paths and simplify the paths as much as possible before
+exporting to SVG (removing groups and masks).
+
+We used default settings from IcoMoon and a 32px grid:
+
+ Font Metrics:
+  - Em Square Height: 512
+  - Baseline Height (% Em): 6.25
+  - Whitespace Width (% Em): 50
+
+We are using Unicode Private Use Areas (PUA) for the icons since they aren't
+part of the document semantics and icons aren't standardized; otherwise they
+would be read by screen readers.
+
+PS: We could use any other font software for this, but IcoMoon is a web app
+(cross platform), very easy to use and it's free;
+
+*/
+
+@font-face {
+  font-family: 'gaia-calendar-icons';
+  src: url('fonts/gaia-calendar-icons.woff');
+  font-weight: normal;
+  font-style: normal;
+}
+
+[class^="icon-"], [class*=" icon-"] {
+  font-family: 'gaia-calendar-icons';
+  /* icons use a 32x32px grid, so at 3.2rem they should have expected size */
+  font-size: 3.2rem;
+  font-style: normal;
+  font-weight: normal;
+  font-variant: normal;
+  text-transform: none;
+  line-height: 1;
+
+  /* Better Font Rendering =========== */
+  -moz-osx-font-smoothing: grayscale;
+}
+
+.icon-alarm:before {
+  content: "\e600";
+}
+.icon-allday:before {
+  content: "\e601";
+}
+.icon-bullet:before {
+  content: "\e602";
+}
+.icon-dot:before {
+  content: "\e603";
+}
+.icon-right-arrow:before {
+  content: "\e604";
+}
+.icon-today:before {
+  content: "\e605";
+}
+.icon-attachment:before {
+  content: "\e606";
+}
+.icon-download:before {
+  content: "\e607";
+}
diff --git a/apps/calendar/style/icons/update.png b/apps/calendar/style/icons/update.png
new file mode 100644
index 0000000..bb717e1
Binary files /dev/null and b/apps/calendar/style/icons/update.png differ
diff --git a/apps/calendar/style/icons/update@1.5x.png b/apps/calendar/style/icons/update@1.5x.png
new file mode 100644
index 0000000..3105d37
Binary files /dev/null and b/apps/calendar/style/icons/update@1.5x.png differ
diff --git a/apps/calendar/style/icons/update@2.25x.png b/apps/calendar/style/icons/update@2.25x.png
new file mode 100644
index 0000000..2c01935
Binary files /dev/null and b/apps/calendar/style/icons/update@2.25x.png differ
diff --git a/apps/calendar/style/icons/update@2x.png b/apps/calendar/style/icons/update@2x.png
new file mode 100644
index 0000000..697b9b2
Binary files /dev/null and b/apps/calendar/style/icons/update@2x.png differ
diff --git a/apps/calendar/style/month.css b/apps/calendar/style/month.css
index 8ebd292..a74d0c7 100644
--- a/apps/calendar/style/month.css
+++ b/apps/calendar/style/month.css
@@ -134,7 +134,7 @@ section.month .selected > .busy-indicator {
   color: white;
 }

-section.month .icon-calendar-dot {
+section.month .icon-dot {
   height: 0.4rem;
   line-height: 0.4rem;
   margin: 0 0.2rem;
@@ -142,9 +142,9 @@ section.month .icon-calendar-dot {
   width: 0.4rem;
 }

-section.month .icon-calendar-dot:before {
-  /* center dots */
-  margin-left: calc(50% - 1.8rem);
+section.month .icon-dot:before {
+  /* 1.6 rem is half of 3.2 rem font */
+  margin-left: calc(50% - 1.6rem);
 }

 /* months day view */
@@ -233,16 +233,13 @@ section.month .icon-calendar-dot:before {
   border-bottom: none;
 }

-#months-day-view .icon-calendar-dot {
-  position: absolute;
-  height: 3rem;
-  left: -1.4rem;
-  top: 50%;
-  margin-top: -3rem;
-}
-
-#months-day-view .icon-calendar-dot:before {
+#months-day-view .icon-dot {
+  display: block;
   font-size: 6rem;
+  height: 3rem;
+  left: -1.5rem;
+  position: absolute;
+  top: calc(50% - 3rem);
 }

 #months-day-view .event-time {
@@ -308,14 +305,14 @@ section.month .icon-calendar-dot:before {
   width: 100%;
 }

-#months-day-view .icon-calendar-alarm {
+#months-day-view .icon-alarm {
   display: none;
 }

-#months-day-view .has-alarms .icon-calendar-alarm {
+#months-day-view .has-alarms .icon-alarm {
   display: block;
   height: 6rem;
   line-height: 6rem;
   position: absolute;
-  right: 1rem;
+  right: 0.8rem;
 }
diff --git a/apps/calendar/style/settings.css b/apps/calendar/style/settings.css
index afeee74..86af7c9 100755
--- a/apps/calendar/style/settings.css
+++ b/apps/calendar/style/settings.css
@@ -135,10 +135,11 @@ not actually shown since the top header should be transparent.
   border-bottom: 0.1rem solid #dfdfdf;
 }

-#settings .calendars .icon-calendar-dot:before {
+#settings .calendars .icon-dot {
+  position: absolute;
   font-size: 5rem;
   line-height: 5rem;
-  margin-left: -1rem;
+  text-indent: -1rem;
 }

 #settings > menu {
diff --git a/apps/calendar/style/ui.css b/apps/calendar/style/ui.css
index 7a78a8a..02e3b23 100644
--- a/apps/calendar/style/ui.css
+++ b/apps/calendar/style/ui.css
@@ -39,17 +39,17 @@ ol.link-list li:only-child a {
   border-bottom: 0;
 }

-#today .icon-calendar-today {
+#today .icon-today {
   font-size: 1.4rem;
   line-height: 4.6rem;
 }

-#today .icon-calendar-today:before {
+#today .icon-today:before {
   position: absolute;
+  width: 100%;
+  display: block;
   font-size: 3rem;
-  line-height: 4.2rem;
-  left: 50%;
-  transform: translateX(-52%);
+  line-height: 4.5rem;
 }

 #view-selector > .today {
@@ -340,23 +340,3 @@ section[role="status"].active {
 #settings {
   visibility: hidden;
 }
-
-/* these settings avoid conflicts with the shared icons */
-.gaia-icon {
-  font-style: normal;
-  font-weight: normal;
-  font-variant: normal;
-  text-transform: none;
-  line-height: 1;
-}
-
-/* these icons uses a 32px base grid so we need to adjust the font size
- * (shared font uses a 3rem base font-size) */
-.icon-calendar-allday:before,
-.icon-calendar-alarm:before,
-.icon-calendar-bullet:before,
-.icon-calendar-dot:before,
-.icon-calendar-today:before,
-.icon-calendar-eventalarm:before {
-  font-size: 3.2rem;
-}
diff --git a/apps/calendar/style/week_view.css b/apps/calendar/style/week_view.css
index 5dc5047..2ff918c 100644
--- a/apps/calendar/style/week_view.css
+++ b/apps/calendar/style/week_view.css
@@ -82,6 +82,7 @@
   float: left;
   position: absolute;
   top: 1.9rem;
+  font-size: 3.2rem;
   width: 2.9rem;
   height: 5.1rem;
   color: #707070;
@@ -90,7 +91,7 @@
   line-height: 5rem;
 }

-#week-view .icon-calendar-allday:before {
+#week-view .icon-allday:before {
   margin-left: -0.2rem;
 }

diff --git a/apps/calendar/test/marionette/create_event_test.js b/apps/calendar/test/marionette/create_event_test.js
index 024dc69..0bc5964 100644
--- a/apps/calendar/test/marionette/create_event_test.js
+++ b/apps/calendar/test/marionette/create_event_test.js
@@ -58,11 +58,6 @@ marionette('creating events', function() {
       endDate: startDateNextDay,
       reminders: ['5 minutes before'],
       verifyMonthView: function() {
-        var month = app.month;
-        assert.lengthOf(month.squareDots(month.daySquares[7]), 1);
-        assert.lengthOf(month.squareDots(month.daySquares[8]), 1);
-        assert.equal(month.busyDots.length, 2, '2 busy dots');
-
         var event = app.monthDay.events[0];
         assert.equal(event.startTime, '12:34 PM', 'start time');
         assert.equal(event.endTime, '12:34 PM', 'end time');
@@ -114,15 +109,8 @@ marionette('creating events', function() {
       endDate: startDateNextDay,
       reminders: ['On day of event'],
       verifyMonthView: function() {
-        var month = app.month;
-        assert.lengthOf(month.squareDots(month.daySquares[7]), 1);
-        assert.lengthOf(month.squareDots(month.daySquares[8]), 1);
-        assert.equal(month.busyDots.length, 2, '2 busy dots');
-        assert.equal(
-          app.monthDay.events[0].allDay,
-          'All Day',
-          'event hour'
-        );
+        var event = app.monthDay.events[0];
+        assert.equal(event.allDay, 'All Day', 'event hour');
       },
       verifyReadEventView: function() {
         var readEvent = app.readEvent;
diff --git a/apps/calendar/test/marionette/lib/views/day.js b/apps/calendar/test/marionette/lib/views/day.js
index c8f1b0a..5548b06 100644
--- a/apps/calendar/test/marionette/lib/views/day.js
+++ b/apps/calendar/test/marionette/lib/views/day.js
@@ -25,7 +25,7 @@ Day.prototype = {
   },

   get allDayIcon() {
-    return this.activeDay.findElement('.hour-allday .icon-calendar-allday');
+    return this.activeDay.findElement('.hour-allday .icon-allday');
   },

   get currentTime() {
diff --git a/apps/calendar/test/marionette/lib/views/day_event.js b/apps/calendar/test/marionette/lib/views/day_event.js
index b1e7c3f..01a9bc1 100644
--- a/apps/calendar/test/marionette/lib/views/day_event.js
+++ b/apps/calendar/test/marionette/lib/views/day_event.js
@@ -27,6 +27,6 @@ DayEvent.prototype = {
   },

   get iconAlarm() {
-    return this.findElement('.icon-calendar-alarm');
+    return this.findElement('.icon-alarm');
   }
 };
diff --git a/apps/calendar/test/marionette/lib/views/modify_account.js b/apps/calendar/test/marionette/lib/views/modify_account.js
index e1308d6..d3f59aa 100644
--- a/apps/calendar/test/marionette/lib/views/modify_account.js
+++ b/apps/calendar/test/marionette/lib/views/modify_account.js
@@ -38,16 +38,6 @@ ModifyAccount.prototype = {
     this
       .findElement('.delete-record')
       .click();
-
-    this.client.waitFor(function() {
-      var confirm = this.findElement('.delete-confirm');
-      if (!confirm.displayed()) {
-        return false;
-      }
-
-      confirm.click();
-      return true;
-    }.bind(this));
   },

   /**
diff --git a/apps/calendar/test/marionette/lib/views/month.js b/apps/calendar/test/marionette/lib/views/month.js
index b077825..55229a0 100644
--- a/apps/calendar/test/marionette/lib/views/month.js
+++ b/apps/calendar/test/marionette/lib/views/month.js
@@ -21,11 +21,11 @@ Month.prototype = {
   },

   get busyDots() {
-    return this.activeMonth.findElements('.icon-calendar-dot');
+    return this.activeMonth.findElements('.icon-dot');
   },

   get days() {
-    return this.activeMonth.findElements('.day');
+    return this.findElements('.day');
   },

   get weekdayHeaders() {
@@ -41,10 +41,10 @@ Month.prototype = {
   },

   get todaySquare() {
-    return this.activeMonth.findElement('.present');
+    return this.findElement('.month.active .present');
   },

   squareDots: function(square) {
-    return square.findElements('.icon-calendar-dot');
+    return square.findElements('.icon-dot');
   }
 };
diff --git a/apps/calendar/test/marionette/lib/views/month_day_event.js b/apps/calendar/test/marionette/lib/views/month_day_event.js
index f69ec5d..0cc26ba 100644
--- a/apps/calendar/test/marionette/lib/views/month_day_event.js
+++ b/apps/calendar/test/marionette/lib/views/month_day_event.js
@@ -49,7 +49,7 @@ MonthDayEvent.prototype = {
   },

   get iconAlarm() {
-    return this.findElement('.icon-calendar-alarm');
+    return this.findElement('.icon-alarm');
   },

   hasAlarms: function() {
diff --git a/apps/calendar/test/marionette/lib/views/read_event.js b/apps/calendar/test/marionette/lib/views/read_event.js
index bfe3820..0a11031 100644
--- a/apps/calendar/test/marionette/lib/views/read_event.js
+++ b/apps/calendar/test/marionette/lib/views/read_event.js
@@ -33,7 +33,7 @@ ReadEvent.prototype = {

   get calendarColor() {
     return this
-      .findElement('.current-calendar > .icon-calendar-dot.calendar-text-color')
+      .findElement('.current-calendar > .icon-dot.calendar-text-color')
       .cssProperty('color');
   },

diff --git a/apps/calendar/test/marionette/manifest.ini b/apps/calendar/test/marionette/manifest.ini
deleted file mode 100644
index 8ed4971..0000000
--- a/apps/calendar/test/marionette/manifest.ini
+++ /dev/null
@@ -1,11 +0,0 @@
-[today_test.js]
-[create_event_test.js]
-[month_view_test.js]
-[alarm_test.js]
-[toggle_calendar_test.js]
-[day_view_test.js]
-[week_view_test.js]
-[caldav_test.js]
-skip-if = true # TODO skip-if caldav server enabled
-[server_test.js]
-disabled = "Doesn't work on devices"
diff --git a/apps/calendar/test/marionette/server_test.js b/apps/calendar/test/marionette/server_test.js
index a3df411..e3337b3 100644
--- a/apps/calendar/test/marionette/server_test.js
+++ b/apps/calendar/test/marionette/server_test.js
@@ -92,9 +92,6 @@ marionette('interop basic', function() {
     teardown(function() {
       debug('Delete account from calendar app.');
       app.teardownAccount(calendarName);
-      // Now make sure that the account was actually deleted (see bug 1036753)
-      var synced = getCalendars(app);
-      assert.notInclude(synced, calendarName, 'calendar should be deleted');
     });


@@ -118,7 +115,10 @@ marionette('interop basic', function() {


     test('should get calendar', function() {
-      var synced = getCalendars(app);
+      debug('Reading list of calendars from settings view.');
+      app.openSettingsView();
+      var synced = app.settings.calendars();
+      app.closeSettingsView();
       assert.include(synced, calendarName, calendarName + ' should be synced');
     });

@@ -234,11 +234,3 @@ marionette('interop basic', function() {
     });
   });
 });
-
-function getCalendars(app) {
-  debug('Reading list of calendars from settings view.');
-  app.openSettingsView();
-  var synced = app.settings.calendars();
-  app.closeSettingsView();
-  return synced;
-}
diff --git a/apps/calendar/test/marionette/today_test.js b/apps/calendar/test/marionette/today_test.js
index 4d62963..98d5ffe 100644
--- a/apps/calendar/test/marionette/today_test.js
+++ b/apps/calendar/test/marionette/today_test.js
@@ -69,9 +69,8 @@ marionette('today', function() {
   });

   test('should show correct date in the today icon', function() {
-    var todayDate = client.findElement(
-      '#view-selector a[href="#today"] .icon-calendar-today'
-    );
+    var todayDate =
+      client.findElement('#view-selector a[href="#today"] .icon-today');
     assert.equal(todayDate.text(), new Date().getDate());
   });
 });
diff --git a/apps/calendar/test/unit/app_test.js b/apps/calendar/test/unit/app_test.js
index adce8ab..35acf78 100644
--- a/apps/calendar/test/unit/app_test.js
+++ b/apps/calendar/test/unit/app_test.js
@@ -428,7 +428,7 @@ suite('app', function() {
     suiteSetup(function() {
       container = document.createElement('div');
       container.innerHTML = '<a id="today" href="#today">' +
-        '<span class="icon-calendar-today"></span></a>';
+        '<span class="icon-today"></span></a>';
       document.body.appendChild(container);
     });

@@ -436,10 +436,10 @@ suite('app', function() {
       container.parentNode.removeChild(container);
     });

-    test('show current date on the .icon-calendar-today span', function() {
+    test('show current date on the .icon-today span', function() {
       subject._showTodayDate();
       assert.equal(
-        document.querySelector('#today .icon-calendar-today').innerHTML,
+        document.querySelector('#today .icon-today').innerHTML,
         new Date().getDate()
       );
     });
@@ -455,7 +455,7 @@ suite('app', function() {

       container = document.createElement('div');
       container.innerHTML = '<a id="today" href="#today">' +
-        '<span class="icon-calendar-today">7</span></a>';
+        '<span class="icon-today">7</span></a>';
       document.body.appendChild(container);
     });

@@ -464,11 +464,11 @@ suite('app', function() {
       clock.restore();
     });

-    test('Update the date on the today span after midnight', function() {
+    test('Update the date on the .icon-today span after midnight', function() {
       subject._syncTodayDate();
       clock.tick(1500);
       assert.equal(
-        document.querySelector('#today .icon-calendar-today').innerHTML,
+        document.querySelector('#today .icon-today').innerHTML,
         8
       );
     });
diff --git a/apps/calendar/test/unit/promise_test.js b/apps/calendar/test/unit/promise_test.js
deleted file mode 100644
index 24f6e16..0000000
--- a/apps/calendar/test/unit/promise_test.js
+++ /dev/null
@@ -1,143 +0,0 @@
-'use strict';
-
-requireLib('promise.js');
-
-function errorOrFive(shouldError, callback) {
-  var error;
-  if (shouldError) {
-    error = new Error('You told me to error!');
-  } else {
-    error = null;
-  }
-
-  return callback(error, !shouldError && 5);
-}
-
-suite('denodeify', function() {
-  var subject;
-
-  setup(function() {
-    subject = Calendar.Promise.denodeify(errorOrFive);
-  });
-
-  test('node-style error', function(done) {
-    subject(true /* shouldError */, function(error) {
-      assert.instanceOf(error, Error);
-      assert.strictEqual(error.message, 'You told me to error!');
-      done();
-    });
-  });
-
-  test('node-style without error', function(done) {
-    subject(false /* shouldError */, function(error, result) {
-      assert.isNull(error);
-      assert.strictEqual(result, 5);
-      done();
-    });
-  });
-
-  test('promise with error', function(done) {
-    subject(true /* shouldError */)
-    .catch(function(error) {
-      assert.instanceOf(error, Error);
-      assert.strictEqual(error.message, 'You told me to error!');
-      done();
-    });
-  });
-
-  test('promise without error', function(done) {
-    subject(false /* shouldError */)
-    .then(function(value) {
-      assert.strictEqual(value, 5);
-      done();
-    });
-  });
-
-  test('no callback and no promise', function() {
-    // Should not hiccup.
-    subject(false /* shouldError */);
-  });
-});
-
-function SlowCalculator() {
-  this.currentValue = 0;
-  Calendar.Promise.denodeifyAll(this, [
-    'add',
-    'multiply'
-  ]);
-}
-
-SlowCalculator.prototype = {
-  add: function(x, callback) {
-    var error = null;
-    if (typeof x !== 'number') {
-      error = new Error('Can only add numbers!');
-    }
-
-    this.currentValue += x;
-    setTimeout(function() {
-      callback(error, error || this.currentValue);
-    }.bind(this), 10);
-  },
-
-  multiply: function(x, callback) {
-    var error = null;
-    if (typeof x !== 'number') {
-      error = new Error('Can only multiply numbers!');
-    }
-
-    this.currentValue *= x;
-    setTimeout(function() {
-      callback(error, error || this.currentValue);
-    }.bind(this), 10);
-  }
-};
-
-suite('denodeifyAll', function() {
-  var subject;
-
-  setup(function() {
-    subject = new SlowCalculator();
-  });
-
-  test('node-style error', function(done) {
-    subject.multiply('lolcats', function(error) {
-      assert.instanceOf(error, Error);
-      assert.strictEqual(error.message, 'Can only multiply numbers!');
-      done();
-    });
-  });
-
-  test('node-style without error', function(done) {
-    subject.add(5, function(error, result) {
-      assert.isNull(error);
-      assert.strictEqual(result, 5);
-      done();
-    });
-  });
-
-  test('promise with error', function(done) {
-    subject.add(/\s+/).catch(function(error) {
-      assert.instanceOf(error, Error);
-      assert.strictEqual(error.message, 'Can only add numbers!');
-      done();
-    });
-  });
-
-  test('promise without error', function(done) {
-    subject.add(9)
-    .then(function(value) {
-      assert.strictEqual(value, 9);
-      return subject.multiply(8);
-    })
-    .then(function(value) {
-      assert.strictEqual(value, 72);
-      done();
-    });
-  });
-
-  test('no callback and no promise', function() {
-    // Should not hiccup.
-    subject.multiply(3.14);
-  });
-});
diff --git a/apps/calendar/test/unit/setup.js b/apps/calendar/test/unit/setup.js
index 03feace..892a025 100644
--- a/apps/calendar/test/unit/setup.js
+++ b/apps/calendar/test/unit/setup.js
@@ -317,7 +317,6 @@
   requireApp('calendar/shared/js/lazy_loader.js');

   requireLib('calendar.js');
-  requireLib('promise.js');
   requireLib('performance.js');
   requireLib('error.js');
   requireApp('calendar/test/unit/loader.js');
diff --git a/apps/calendar/test/unit/views/day_child_test.js b/apps/calendar/test/unit/views/day_child_test.js
index 2ab22c0..41a0c94 100644
--- a/apps/calendar/test/unit/views/day_child_test.js
+++ b/apps/calendar/test/unit/views/day_child_test.js
@@ -73,7 +73,7 @@ suiteGroup('Views.DayChild', function() {
     var result = subject._renderEvent(busytime, event);
     assert.ok(result);

-    assert.include(result, 'icon-calendar-alarm');
+    assert.include(result, 'icon-alarm');
     assert.include(result, 'UX');
     assert.include(result, 'Paris');
   });
@@ -90,7 +90,7 @@ suiteGroup('Views.DayChild', function() {
     var result = subject._renderEvent(busytime, event);
     assert.ok(result);

-    assert.ok(result.indexOf('icon-calendar-alarm') === -1);
+    assert.ok(result.indexOf('icon-alarm') === -1);
   });

   test('#_renderEvent undefined alarms, bug 868600', function() {
diff --git a/apps/calendar/test/unit/views/month_child_test.js b/apps/calendar/test/unit/views/month_child_test.js
index bd5bbca..82e8233 100644
--- a/apps/calendar/test/unit/views/month_child_test.js
+++ b/apps/calendar/test/unit/views/month_child_test.js
@@ -382,28 +382,14 @@ suiteGroup('Views.MonthChild', function() {
   });

   suite('#_updateBusyCount', function() {
-    var busytime = {
-      startDate: new Date('January 17, 1998'),
-      endDate: new Date('January 20, 1998')
-    };
-    var dayIds = [];
+    var busytime = { startDate: new Date('January 17, 1998') };
+    var dayId = Calendar.Calc.getDayId(busytime.startDate);
     var stub;

     setup(function() {
-      var endDate = new Date(busytime.endDate.getTime() - 1000);
       stub = sinon.stub(subject, '_setBusyCount');
       subject._dayToBusyCount = Object.create(null);
-
-      Calendar.Calc.daysBetween(
-        busytime.startDate,
-        endDate
-      ).forEach(function(date) {
-        dayIds.push(Calendar.Calc.getDayId(date));
-      });
-
-      dayIds.forEach(function(dayId) {
-        subject._dayToBusyCount[dayId] = 2;
-      });
+      subject._dayToBusyCount[dayId] = 2;
     });

     teardown(function() {
@@ -412,10 +398,8 @@ suiteGroup('Views.MonthChild', function() {

     test('should update appropriate day', function() {
       subject._updateBusyCount(busytime, 1);
-      sinon.assert.calledThrice(stub);
-      dayIds.forEach(function(dayId, index) {
-        assert.ok(stub.getCall(index).calledWith(dayId, 3));
-      });
+      sinon.assert.calledOnce(stub);
+      sinon.assert.calledWith(stub, dayId, 3);
     });
   });

diff --git a/apps/callscreen/index.html b/apps/callscreen/index.html
index 72c0462..da933a1 100644
--- a/apps/callscreen/index.html
+++ b/apps/callscreen/index.html
@@ -41,7 +41,6 @@
     <script defer type="application/javascript" src="/shared/js/dialer/voicemail.js"></script>
     <script defer type="application/javascript" src="/shared/js/bluetooth_helper.js"></script>

-    <script defer type="application/javascript" src="/js/audio_competing_helper.js"></script>
     <script defer type="application/javascript" src="/js/call_screen.js"></script>
     <script defer type="application/javascript" src="/js/calls_handler.js"></script>
     <script defer type="application/javascript" src="/js/conference_group_handler.js"></script>
@@ -54,20 +53,13 @@
     -->

     <!-- incoming call / swiper on locked screen-->
-    <link rel="stylesheet" type="text/css" href="/style/lockscreen.css">
-    <script defer src="/shared/js/settings_listener.js"></script>
-    <script defer src="/shared/js/mobile_operator.js"></script>
+    <link rel="stylesheet" type="text/css" href="/style/swiper.css">
     <script defer src="/shared/js/lockscreen_slide.js"></script>
     <script defer src="/shared/js/screen_layout.js"></script>
-    <script defer src="/shared/js/simslot.js"></script>
-    <script defer src="/shared/js/simslot_manager.js"></script>
-    <script defer src="/shared/js/lockscreen_connection_info_manager.js"></script>
   </head>
   <body>
     <article id="call-screen" data-layout>
       <div id="lockscreen-header">
-        <div id="lockscreen-conn-states">
-        </div>
         <div id="lockscreen-clock-time"></div>
         <div id="lockscreen-date"></div>
       </div>
@@ -133,20 +125,20 @@
       </form>
       <article id="main-container">
         <div id="contact-background"></div>
-        <div id="lockscreen-masked-background" class="blank"></div>
-        <div id="lockscreen-area"></div>
         <div id="actions-container">
           <div id="swiper-wrapper">
+            <!--Slider module related widgets -->
+            <div id="lockscreen-area"></div>
             <div id="lockscreen-icon-container">
               <div id="lockscreen-area-hangup"
-                class="lockscreen-icon-area lockscreen-icon-left dark" role="button"
-                data-l10n-id="hangup-a11y-button" aria-label="Hang Up">
+                   class="lockscreen-icon-area lockscreen-icon-left dark" role="button"
+                   data-l10n-id="hangup-a11y-button">
                 <div class="lockscreen-icon">
                 </div>
               </div>
               <div id="lockscreen-area-pickup"
-                class="lockscreen-icon-area lockscreen-icon-right dark" role="button"
-                data-l10n-id="pickup-a11y-button" aria-label="Pick up">
+                   class="lockscreen-icon-area lockscreen-icon-right dark" role="button"
+                   data-l10n-id="pickup-a11y-button">
                 <div class="lockscreen-icon">
                 </div>
               </div>
@@ -157,6 +149,7 @@
                 </div>
               </div>
             </div>
+
           </div>
           <section id="statusMsg" role="status">
             <p></p>
diff --git a/apps/callscreen/js/audio_competing_helper.js b/apps/callscreen/js/audio_competing_helper.js
deleted file mode 100644
index e8d5d7a..0000000
--- a/apps/callscreen/js/audio_competing_helper.js
+++ /dev/null
@@ -1,146 +0,0 @@
-/* -*- Mode: js; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /
-/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */
-
-/* exported AudioCompetingHelper */
-
-/* globals AudioContext */
-
-(function(exports) {
-  'use strict';
-
-  /** App name competing for the telephony audio channel. */
-  var _appName = null;
-
-  /** AudioContext object reference. */
-  var _ac = null;
-
-  /** Buffer source we use for competing for the telephony audio channel. */
-  var _silenceBufferSource = null;
-
-  /** onmozinterruptbegin event handler reference. */
-  var _onmozinterruptbegin = null;
-
-  /** _onmozinterruptend event handler reference*/
-  var _onmozinterruptend = null;
-
-  /** Array of listener function to be called once the app is muted/unmute. */
-  var _listeners = {
-    mozinterruptbegin: [],
-    mozinterruptend: []
-  };
-
-  /** Flag */
-  var _addListenersBeforeCompeting = true;
-
-  /**
-   * Fire the given event on the audio competing helper.
-   *
-   * @param {String} type A string representing the event type being fired.
-   */
-  function _fireEvent(type) {
-    if (!_listeners[type]) {
-      return;
-    }
-
-    for (var i = 0; i <_listeners[type].length; i++) {
-      if(_listeners[type][i] && (typeof _listeners[type][i] === 'function')) {
-        _listeners[type][i].call(null);
-      }
-    }
-  }
-
-  /**
-   * The AudioCompetingHelper singleton object helps the callscreen to compete
-   * for the telephony audio channel. After bug 1016277 apps use the telephony
-   * audio channel on a LIFO basis which means apps might be muted by other
-   * apps trying to use the telephony audio channel.
-   */
-  var AudioCompetingHelper = {
-    /**
-     * Init function.
-     */
-    init: function ach_init(appName) {
-      _appName = appName;
-    },
-
-    /**
-     * Request the helper to start competing for the use of the telephony audio
-     * channel.
-     */
-    compete: function ach_compete() {
-      _ac = new AudioContext('telephony');
-
-      _silenceBufferSource = _ac.createBufferSource();
-      _silenceBufferSource.buffer = _ac.createBuffer(1, 2048, _ac.sampleRate);
-      _silenceBufferSource.connect(_ac.destination);
-      _silenceBufferSource.loop = true;
-
-      if (_addListenersBeforeCompeting) {
-        _onmozinterruptbegin = _fireEvent.bind(null, 'mozinterruptbegin');
-        _ac.addEventListener('mozinterruptbegin', _onmozinterruptbegin);
-        _onmozinterruptend = _fireEvent.bind(null, 'mozinterruptend');
-        _ac.addEventListener('mozinterruptend', _onmozinterruptend);
-        _addListenersBeforeCompeting = false;
-      }
-
-      _silenceBufferSource.start(0);
-    },
-
-    /**
-     * Request the helper to leave the competition for the use of the telephony
-     * audio channel.
-     */
-    leaveCompetition: function ach_leaveCompetition() {
-      if (!_silenceBufferSource) {
-        return;
-      }
-      _silenceBufferSource.stop(0);
-      _ac.removeEventListener('mozinterruptbegin', _onmozinterruptbegin);
-      _ac.removeEventListener('mozinterruptend', _onmozinterruptend);
-      _addListenersBeforeCompeting = true;
-    },
-
-    /**
-     * Register the specified listener on the audio competing helper.
-     *
-     * @param {String} type A string representing the event type to listen for.
-     * @param {Function} listener The function that receives a notification when
-     *                            an event of the specified type occurs.
-     */
-    addListener: function ach_addEventListener(type, listener) {
-      if ((type !== 'mozinterruptbegin') && (type !== 'mozinterruptend') ) {
-        // TODO: Should we throw an exception?
-        return;
-      }
-      if (listener && (typeof listener !== 'function')) {
-        // TODO: Should we throw an exception?
-        return;
-      }
-      _listeners[type].push(listener);
-    },
-
-    /**
-     * Clear the event listeners previously registered with
-     * AudioCompetingHelper.addEventListener.
-     *
-     * @param {String} type A string representing the event type being removed.
-     */
-    clearListeners: function ach_clearListeners(type) {
-      if (type) {
-        _listeners[type] = [];
-        return;
-      }
-      _listeners.mozinterruptbegin = [];
-      _listeners.mozinterruptend = [];
-    },
-
-    /**
-     * Getter function.
-     */
-    get audioContext() {
-      return _ac;
-    }
-  };
-
-  exports.AudioCompetingHelper = AudioCompetingHelper;
-})(this);
diff --git a/apps/callscreen/js/call_screen.js b/apps/callscreen/js/call_screen.js
index 5535e56..8c07598 100644
--- a/apps/callscreen/js/call_screen.js
+++ b/apps/callscreen/js/call_screen.js
@@ -12,7 +12,6 @@ var CallScreen = {

   body: document.body,
   screen: document.getElementById('call-screen'),
-  lockscreenConnStates: document.getElementById('lockscreen-conn-states'),
   views: document.getElementById('views'),

   calls: document.getElementById('calls'),
@@ -162,21 +161,6 @@ var CallScreen = {
     this.syncSpeakerEnabled();
   },

-  _connInfoManagerInitialized: false,
-  initLockScreenConnInfoManager: function cs_initLockScreenConnInfoManager() {
-    if (this._connInfoManagerInitialized) {
-      return;
-    }
-
-    /* mobile connection state on lock screen */
-    if (window.navigator.mozMobileConnections) {
-      LazyL10n.get(function localized(_) {
-          new window.LockScreenConnInfoManager(CallScreen.lockscreenConnStates);
-        CallScreen._connInfoManagerInitialized = true;
-      });
-    }
-  },
-
   _slideInitialized: false,
   initLockScreenSlide: function cs_initLockScreenSlide() {
     if (this._slideInitialized) {
@@ -188,49 +172,46 @@ var CallScreen = {
     this.hangUpIcon = document.getElementById('lockscreen-area-hangup');
     this.pickUpIcon = document.getElementById('lockscreen-area-pickup');
     this.initUnlockerEvents();
-    new LockScreenSlide({
-      useNewStyle: true,
-
-      IDs: {
-        overlay: 'main-container',
-        areas: {
-          left: 'lockscreen-area-hangup',
-          right: 'lockscreen-area-pickup'
+    new LockScreenSlide(
+      // Options
+      {
+        IDs: {
+          overlay: 'main-container',
+          areas: {
+            left: 'lockscreen-area-hangup',
+            right: 'lockscreen-area-pickup'
+          }
         },
-      },
-
-      trackNew: {
-        strokeColorTop: 'rgba(0, 0, 0, 0)',
-        strokeColorBottom: 'rgba(0, 0, 0, 0)',
-        fillColorTop: 'rgba(0, 0, 0, 0.1)',
-        fillColorBottom: 'rgba(0, 0, 0, 0.1)'
-      },
-
-      colors: {
-        left: {
-          touchedColor: '224, 0, 0',
-          touchedColorStop: '255, 255, 255'
+
+        track: {
+          backgroundColor: 'rgba(0, 0, 0, 0.4)'
         },
-        right: {
-          touchedColor: '0, 173, 173',
-          touchedColorStop: '255, 255, 255'
-        }
-      },

-      iconBG: {
-        left: {
-          color: 'rgba(224, 0, 0, 0.80)'
+        colors: {
+          left: {
+            touchedColor: '255, 0, 0',
+            touchedColorStop: '255, 178, 178'
+          },
+
+          right: {
+            touchedColor: '132, 200, 44',
+            touchedColorStop: '218, 238, 191'
+          }
         },
-        right: {
-          color: 'rgba(0, 173, 173, 0.80)'
-        }
-      },

-      resourcesNew: {
-        larrow: '/style/images/lock_screen/lockscreen_toggle_arrow_left.png',
-        rarrow: '/style/images/lock_screen/lockscreen_toggle_arrow_right.png'
+        resources: {
+          larrow: '/style/images/lock_screen/LArrow_Lockscreen.png',
+          rarrow: '/style/images/lock_screen/RArrow_Lockscreen.png'
+        },
+        handle: {
+          autoExpand: {
+            sentinelOffset: 80
+          },
+          backgroundColor: '255, 255, 255',
+          backgroundAlpha: 0.85
+        }
       }
-    });
+    );
   },

   _wallpaperReady: false,
@@ -351,7 +332,6 @@ var CallScreen = {

   hashchangeHandler: function cs_hashchangeHandler() {
     if (window.location.hash.startsWith('#locked')) {
-      this.initLockScreenConnInfoManager();
       this.showClock(new Date());
       this.initLockScreenSlide();

diff --git a/apps/callscreen/js/calls_handler.js b/apps/callscreen/js/calls_handler.js
index 9dd8a30..97acb8c 100644
--- a/apps/callscreen/js/calls_handler.js
+++ b/apps/callscreen/js/calls_handler.js
@@ -1,12 +1,10 @@
 /* globals BluetoothHelper, CallScreen, Contacts, HandledCall, KeypadManager,
-           LazyL10n, SimplePhoneMatcher, TonePlayer, Utils,
-           AudioCompetingHelper */
+           LazyL10n, SimplePhoneMatcher, TonePlayer, Utils */

 'use strict';

 /* globals BluetoothHelper, CallScreen, Contacts, FontSizeManager, HandledCall,
-           KeypadManager, LazyL10n, SimplePhoneMatcher, TonePlayer, Utils,
-           AudioCompetingHelper */
+           KeypadManager, LazyL10n, SimplePhoneMatcher, TonePlayer, Utils */

 var CallsHandler = (function callsHandler() {
   // Changing this will probably require markup changes
@@ -72,9 +70,6 @@ var CallsHandler = (function callsHandler() {

     navigator.mozSetMessageHandler('headset-button', handleHSCommand);
     navigator.mozSetMessageHandler('bluetooth-dialer-command', handleBTCommand);
-
-    AudioCompetingHelper.clearListeners();
-    AudioCompetingHelper.addListener('mozinterruptbegin', onMozInterrupBegin);
   }

   /* === Handled calls === */
@@ -170,7 +165,10 @@ var CallsHandler = (function callsHandler() {
     CallScreen.insertCall(hc.node);

     if (call.state === 'incoming') {
-      turnScreenOn(call);
+      // This is the initial incoming call, need to ring !
+      if (handledCalls.length === 1) {
+        handleFirstIncoming(call);
+      }
     }

     if (handledCalls.length > 1) {
@@ -229,7 +227,7 @@ var CallsHandler = (function callsHandler() {
     }
   }

-  function turnScreenOn(call) {
+  function handleFirstIncoming(call) {
     screenLock = navigator.requestWakeLock('screen');

     call.addEventListener('statechange', function callStateChange() {
@@ -783,34 +781,6 @@ var CallsHandler = (function callsHandler() {
     telephony.conferenceGroup.add(telephony.active);
   }

-  /* === Telephony audio channel competing functions ===*/
-
-  /**
-   * Helper function. Force the callscreen app to win the competion for the use
-   * of the telephony audio channel.
-   */
-  function forceAnAudioCompetitionWin() {
-    AudioCompetingHelper.leaveCompetition();
-    AudioCompetingHelper.compete();
-  }
-
-  /**
-   * onmozinterrupbegin event handler.
-   */
-  function onMozInterrupBegin() {
-    var openLines =
-      telephony.calls.length + (telephony.conferenceGroup.calls.length ? 1 : 0);
-
-    // If there are multiple calls handled by the callscreen app and it is
-    // interrupted by another app which uses the telephony audio channel the
-    // callscreen wins.
-    if (openLines !== 1) {
-     forceAnAudioCompetitionWin();
-      return;
-    }
-    holdOrResumeSingleCall();
-  }
-
   return {
     setup: setup,

diff --git a/apps/callscreen/js/handled_call.js b/apps/callscreen/js/handled_call.js
index d5547d0..e0571c7 100644
--- a/apps/callscreen/js/handled_call.js
+++ b/apps/callscreen/js/handled_call.js
@@ -1,5 +1,5 @@
 /* globals CallsHandler, CallScreen, Contacts, ContactPhotoHelper,
-           FontSizeManager, LazyL10n, Utils, Voicemail, AudioCompetingHelper */
+           FontSizeManager, LazyL10n, Utils, Voicemail */

 'use strict';

@@ -66,7 +66,6 @@ function HandledCall(aCall) {
     this.updateDirection();

     if (navigator.mozIccManager.iccIds.length > 1) {
-      this.node.classList.add('sim-info');
       var n = this.call.serviceId + 1;
       this.viaSimNode.textContent = _('via-sim', { n: n });
       this.simNumberNode.textContent = _('sim-number', { n: n });
@@ -95,22 +94,13 @@ HandledCall.prototype.handleEvent = function hc_handle(evt) {
       CallsHandler.updateKeypadEnabled();
       break;
     case 'connected':
-      // The dialer agent in the system app plays and stops the ringtone once
-      // the call state changes. If we play silence right after the ringtone
-      // stops then a mozinterrupbegin event is fired. This is a race condition
-      // we could easily avoid with a 1-second-timeout fix.
-      window.setTimeout(function onTimeout() {
-        AudioCompetingHelper.compete();
-      }, 1000);
       CallScreen.render('connected');
       this.connected();
       break;
     case 'disconnected':
-      AudioCompetingHelper.leaveCompetition();
       this.disconnected();
       break;
     case 'held':
-      AudioCompetingHelper.leaveCompetition();
       CallsHandler.updateKeypadEnabled();
       this.node.classList.add('held');
       break;
diff --git a/apps/callscreen/js/index.js b/apps/callscreen/js/index.js
index b4b1b40..077cfd10 100644
--- a/apps/callscreen/js/index.js
+++ b/apps/callscreen/js/index.js
@@ -4,7 +4,6 @@ window.addEventListener('load', function callSetup(evt) {
   window.removeEventListener('load', callSetup);

   CallsHandler.setup();
-  AudioCompetingHelper.init('callscreen');
   CallScreen.init();
   KeypadManager.init(true);
 });
diff --git a/apps/callscreen/manifest.webapp b/apps/callscreen/manifest.webapp
index 4705b47..77adfc7 100644
--- a/apps/callscreen/manifest.webapp
+++ b/apps/callscreen/manifest.webapp
@@ -27,12 +27,6 @@
     { "bluetooth-dialer-command": "/index.html" },
     { "headset-button": "/index.html" }
   ],
-  "datastores-access": {
-    "Gaia_Facebook_Friends": {
-      "readonly": true,
-      "description": "Facebook Friends"
-    }
-  },
   "orientation": "default",
   "icons": {
     "84": "/style/icons/dialer_84.png",
diff --git a/apps/callscreen/style/images/lock_screen/Ico_lsc_hangupwhite_40x40.png b/apps/callscreen/style/images/lock_screen/Ico_lsc_hangupwhite_40x40.png
deleted file mode 100644
index 5cc7a0b..0000000
Binary files a/apps/callscreen/style/images/lock_screen/Ico_lsc_hangupwhite_40x40.png and /dev/null differ
diff --git a/apps/callscreen/style/images/lock_screen/Ico_lsc_hangupwhite_40x40@1.5x.png b/apps/callscreen/style/images/lock_screen/Ico_lsc_hangupwhite_40x40@1.5x.png
deleted file mode 100644
index aad36e1..0000000
Binary files a/apps/callscreen/style/images/lock_screen/Ico_lsc_hangupwhite_40x40@1.5x.png and /dev/null differ
diff --git a/apps/callscreen/style/images/lock_screen/Ico_lsc_hangupwhite_40x40@2.25x.png b/apps/callscreen/style/images/lock_screen/Ico_lsc_hangupwhite_40x40@2.25x.png
deleted file mode 100644
index f387313..0000000
Binary files a/apps/callscreen/style/images/lock_screen/Ico_lsc_hangupwhite_40x40@2.25x.png and /dev/null differ
diff --git a/apps/callscreen/style/images/lock_screen/Ico_lsc_hangupwhite_40x40@2x.png b/apps/callscreen/style/images/lock_screen/Ico_lsc_hangupwhite_40x40@2x.png
deleted file mode 100644
index 62dfde2..0000000
Binary files a/apps/callscreen/style/images/lock_screen/Ico_lsc_hangupwhite_40x40@2x.png and /dev/null differ
diff --git a/apps/callscreen/style/images/lock_screen/Ico_lsc_pickupwhite_40x40.png b/apps/callscreen/style/images/lock_screen/Ico_lsc_pickupwhite_40x40.png
deleted file mode 100644
index 367e156..0000000
Binary files a/apps/callscreen/style/images/lock_screen/Ico_lsc_pickupwhite_40x40.png and /dev/null differ
diff --git a/apps/callscreen/style/images/lock_screen/Ico_lsc_pickupwhite_40x40@1.5x.png b/apps/callscreen/style/images/lock_screen/Ico_lsc_pickupwhite_40x40@1.5x.png
deleted file mode 100644
index 0c8da54..0000000
Binary files a/apps/callscreen/style/images/lock_screen/Ico_lsc_pickupwhite_40x40@1.5x.png and /dev/null differ
diff --git a/apps/callscreen/style/images/lock_screen/Ico_lsc_pickupwhite_40x40@2.25x.png b/apps/callscreen/style/images/lock_screen/Ico_lsc_pickupwhite_40x40@2.25x.png
deleted file mode 100644
index 72d681f..0000000
Binary files a/apps/callscreen/style/images/lock_screen/Ico_lsc_pickupwhite_40x40@2.25x.png and /dev/null differ
diff --git a/apps/callscreen/style/images/lock_screen/Ico_lsc_pickupwhite_40x40@2x.png b/apps/callscreen/style/images/lock_screen/Ico_lsc_pickupwhite_40x40@2x.png
deleted file mode 100644
index 53379ca..0000000
Binary files a/apps/callscreen/style/images/lock_screen/Ico_lsc_pickupwhite_40x40@2x.png and /dev/null differ
diff --git a/apps/callscreen/style/images/lock_screen/LArrow_Lockscreen.png b/apps/callscreen/style/images/lock_screen/LArrow_Lockscreen.png
new file mode 100644
index 0000000..d013f55
Binary files /dev/null and b/apps/callscreen/style/images/lock_screen/LArrow_Lockscreen.png differ
diff --git a/apps/callscreen/style/images/lock_screen/LArrow_Lockscreen@1.5x.png b/apps/callscreen/style/images/lock_screen/LArrow_Lockscreen@1.5x.png
new file mode 100644
index 0000000..85d8478
Binary files /dev/null and b/apps/callscreen/style/images/lock_screen/LArrow_Lockscreen@1.5x.png differ
diff --git a/apps/callscreen/style/images/lock_screen/LArrow_Lockscreen@2.25x.png b/apps/callscreen/style/images/lock_screen/LArrow_Lockscreen@2.25x.png
new file mode 100644
index 0000000..cde1a7a
Binary files /dev/null and b/apps/callscreen/style/images/lock_screen/LArrow_Lockscreen@2.25x.png differ
diff --git a/apps/callscreen/style/images/lock_screen/LArrow_Lockscreen@2x.png b/apps/callscreen/style/images/lock_screen/LArrow_Lockscreen@2x.png
new file mode 100644
index 0000000..277f868a
Binary files /dev/null and b/apps/callscreen/style/images/lock_screen/LArrow_Lockscreen@2x.png differ
diff --git a/apps/callscreen/style/images/lock_screen/RArrow_Lockscreen.png b/apps/callscreen/style/images/lock_screen/RArrow_Lockscreen.png
new file mode 100644
index 0000000..bdf9b4b
Binary files /dev/null and b/apps/callscreen/style/images/lock_screen/RArrow_Lockscreen.png differ
diff --git a/apps/callscreen/style/images/lock_screen/RArrow_Lockscreen@1.5x.png b/apps/callscreen/style/images/lock_screen/RArrow_Lockscreen@1.5x.png
new file mode 100644
index 0000000..e58ee19
Binary files /dev/null and b/apps/callscreen/style/images/lock_screen/RArrow_Lockscreen@1.5x.png differ
diff --git a/apps/callscreen/style/images/lock_screen/RArrow_Lockscreen@2.25x.png b/apps/callscreen/style/images/lock_screen/RArrow_Lockscreen@2.25x.png
new file mode 100644
index 0000000..04401d9
Binary files /dev/null and b/apps/callscreen/style/images/lock_screen/RArrow_Lockscreen@2.25x.png differ
diff --git a/apps/callscreen/style/images/lock_screen/RArrow_Lockscreen@2x.png b/apps/callscreen/style/images/lock_screen/RArrow_Lockscreen@2x.png
new file mode 100644
index 0000000..2808596
Binary files /dev/null and b/apps/callscreen/style/images/lock_screen/RArrow_Lockscreen@2x.png differ
diff --git a/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_answer.png b/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_answer.png
new file mode 100644
index 0000000..d34fe50
Binary files /dev/null and b/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_answer.png differ
diff --git a/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_answer@1.5x.png b/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_answer@1.5x.png
new file mode 100644
index 0000000..3199dd1
Binary files /dev/null and b/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_answer@1.5x.png differ
diff --git a/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_answer@2.25x.png b/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_answer@2.25x.png
new file mode 100644
index 0000000..7ff935e
Binary files /dev/null and b/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_answer@2.25x.png differ
diff --git a/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_answer@2x.png b/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_answer@2x.png
new file mode 100644
index 0000000..c9f9114
Binary files /dev/null and b/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_answer@2x.png differ
diff --git a/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_reject.png b/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_reject.png
new file mode 100644
index 0000000..4ede38f
Binary files /dev/null and b/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_reject.png differ
diff --git a/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_reject@1.5x.png b/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_reject@1.5x.png
new file mode 100644
index 0000000..e0da663
Binary files /dev/null and b/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_reject@1.5x.png differ
diff --git a/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_reject@2.25x.png b/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_reject@2.25x.png
new file mode 100644
index 0000000..c4a0985
Binary files /dev/null and b/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_reject@2.25x.png differ
diff --git a/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_reject@2x.png b/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_reject@2x.png
new file mode 100644
index 0000000..9a22a57
Binary files /dev/null and b/apps/callscreen/style/images/lock_screen/actionicon_lockscreen_reject@2x.png differ
diff --git a/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_left.png b/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_left.png
deleted file mode 100644
index ad35a4e..0000000
Binary files a/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_left.png and /dev/null differ
diff --git a/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_left@1.5x.png b/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_left@1.5x.png
deleted file mode 100644
index e697301..0000000
Binary files a/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_left@1.5x.png and /dev/null differ
diff --git a/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_left@2.25x.png b/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_left@2.25x.png
deleted file mode 100644
index 13b3ccf..0000000
Binary files a/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_left@2.25x.png and /dev/null differ
diff --git a/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_left@2x.png b/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_left@2x.png
deleted file mode 100644
index 5243e31..0000000
Binary files a/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_left@2x.png and /dev/null differ
diff --git a/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_right.png b/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_right.png
deleted file mode 100644
index 45d044f..0000000
Binary files a/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_right.png and /dev/null differ
diff --git a/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_right@1.5x.png b/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_right@1.5x.png
deleted file mode 100644
index 7ca33ae..0000000
Binary files a/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_right@1.5x.png and /dev/null differ
diff --git a/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_right@2.25x.png b/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_right@2.25x.png
deleted file mode 100644
index 2482dcc..0000000
Binary files a/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_right@2.25x.png and /dev/null differ
diff --git a/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_right@2x.png b/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_right@2x.png
deleted file mode 100644
index 6b3757d..0000000
Binary files a/apps/callscreen/style/images/lock_screen/lockscreen_toggle_arrow_right@2x.png and /dev/null differ
diff --git a/apps/callscreen/style/lockscreen.css b/apps/callscreen/style/lockscreen.css
deleted file mode 100644
index b18ce10..0000000
--- a/apps/callscreen/style/lockscreen.css
+++ /dev/null
@@ -1,209 +0,0 @@
-#lockscreen-header {
-  z-index: 9999;
-  position: absolute;
-  top: 0;
-  left: 0;
-  width: 100%;
-  -moz-box-sizing: border-box;
-  padding: 2rem 2.4rem 4.4rem;
-  color: #fff;
-  opacity: 1;
-}
-
-#lockscreen-conn-states {
-  width: 100%;
-  display: inline-block;
-  font-weight: 300;
-  font-size: 1.4rem;
-  padding-bottom: 1.4rem;
-
-  overflow: hidden;
-  white-space: nowrap;
-  text-overflow: ellipsis;
-}
-
-#lockscreen-conn-states span:empty {
-  display: none;
-}
-
-#lockscreen-conn-states span:first-child {
-  display: inline-block;
-  width: 4rem;
-  overflow: visible;
-}
-
-#lockscreen-conn-states span:last-child {
-  display: block;
-}
-
-/* For some reason display: inline-block disregards hidden attribute */
-#lockscreen-conn-states span[hidden],
-#lockscreen-conn-states[hidden] {
-  display: none;
-}
-
-#lockscreen-clock-time {
-  line-height: 1;
-  margin: -1.4rem 0 0 -0.4rem;
-  font-weight: 200;
-  font-size: 8.5rem;
-}
-
-#lockscreen-clock-time span { /* optional meridiem */
-  font-size: 3rem;
-  display: none;
-}
-
-#lockscreen-date {
-  font-weight: 300;
-  font-size: 1.4rem;
-}
-
-#lockscreen-clock-time, #lockscreen-date {
-  color: #fff;
-}
-
-#lockscreen-masked-background {
-  position: absolute;
-  top: 0;
-  overflow: hidden;
-
-  /* Must match the CSS background rule of #screen in system.css */
-  width: 100%;
-  height: 100%;
-  background-repeat: no-repeat;
-
-  -moz-user-select: none;
-  opacity: 1;
-  z-index: 1;
-}
-
-#lockscreen-masked-background {
-  background-size: 100% 100%;
-  transition: background-image 0.3s ease, background-color 0.3s ease;
-}
-
-#lockscreen-masked-background.blank {
-  background-image: linear-gradient(to bottom, rgba(0,0,0,0.3), rgba(0,0,0,0));
-  background-size: 100% 22.6rem;
-}
-
-#lockscreen-area {
-  position: absolute;
-  height: 10rem;
-  left: 0;
-  right: 0;
-  bottom: 0;
-  z-index: 4;
-}
-
-.lockscreen-icon-area {
-  height: 10rem;
-  position: absolute;
-  border-style: none;
-  transition: opacity 0.5s ease;
-}
-
-.lockscreen-icon {
-  margin-top: 2rem;
-  width: 6rem;
-  height: 6rem;
-
-  pointer-events: none;
-}
-
-#lockscreen-area-slide {
-  text-align: center;
-  width: calc(100%);
-}
-
-.touched .lockscreen-icon {
-  transition: none;
-}
-
-.lockscreen-icon-right {
-  right: calc(50% - 14rem);
-}
-
-.lockscreen-icon-left {
-  left: calc(50% - 14rem);
-}
-
-@media (min-width:768px) {
-  .lockscreen-icon-right {
-    right: calc(50% - 20.5rem);
-  }
-
-  .lockscreen-icon-left {
-    left: calc(50% - 20.5rem);
-  }
-
-  #lockscreen-header {
-    padding-left: 6rem;
-    font-weight: 300;
-  }
-
-  #lockscreen-date {
-    padding-top: 0.5rem;
-    font-size: 2.4rem;
-  }
-}
-
-button::-moz-focus-inner {
-  border: 0;
-}
-
-:-moz-any(.touched, #screen:not(.locked), #screen.attention, #lockscreen:not([data-panel="main"]))
-:-moz-any(#lockscreen-left-arrow, #lockscreen-right-arrow) {
-  display: none;
-  animation: none;
-}
-
-#lockscreen-area-pickup > div {
-  background-image: url('./images/lock_screen/Ico_lsc_pickupwhite_40x40.png');
-  background-position: 0.5rem center;
-  background-repeat: no-repeat;
-  background-size: 4rem;
-}
-
-.lockscreen-icon-left, .lockscreen-icon-right {
-  z-index: 16;
-  pointer-events: auto;
-}
-
-/* Compensation for the effects after enabling the pointer-event attribute. */
-.lockscreen-icon-left:active, .lockscreen-icon-right:active {
-  background: none;
-}
-
-#lockscreen-area-hangup > div {
-  background-image: url('./images/lock_screen/Ico_lsc_hangupwhite_40x40.png');
-  background-position: 1.4rem center;
-  background-repeat: no-repeat;
-  background-size: 4rem;
-}
-
-#lockscreen-icon-container {
-  position: absolute;
-  bottom: 0;
-  width: 100%;
-  height: 10rem;
-  pointer-events: none;
-  z-index: 5;
-  background-color: rgba(255, 255, 255, .85);
-}
-
-.touched #lockscreen-icon-container {
-  transition: none;
-}
-
-.touched .lockscreen-icon-area {
-  transition: none;
-}
-
-#lockscreen-canvas-wrapper {
-  position: absolute;
-  bottom: 0.75rem;
-  z-index: 8;
-  width: 100%;
-}
diff --git a/apps/callscreen/style/oncall.css b/apps/callscreen/style/oncall.css
index 4442d35..7d89760 100644
--- a/apps/callscreen/style/oncall.css
+++ b/apps/callscreen/style/oncall.css
@@ -181,15 +181,15 @@
     transition: transform 0.5s ease 0s;
   }

+  #call-screen:before {
+    background: url("images/call_screen/mask.png") no-repeat scroll 50% 50% / cover transparent;
+  }
+
   #main-container {
     position: absolute;
-    top: 0;
     height: 100%;
     width: 100%;
-    background-color: #000;
-    background-size: cover; /* Possible memory over-consumption with huge images, it should be removed for improving stability*/
-    background-position: 50% calc(50% - 1.2rem); /* 1.2rem is half the size of the status bar. Keep this value in sync with the one declared in system app's statusbar.css */
-    background-repeat: no-repeat;
+    background: #000 no-repeat center top/cover;
   }

   #actions-container {
@@ -505,7 +505,7 @@
     white-space: nowrap;
     overflow: hidden;
     text-overflow: ellipsis;
-    padding: 0 4.5rem 2rem 0;
+    padding: 0 0 2rem;
     font-size: 1.6rem;
     line-height: 2rem;
   }
@@ -710,6 +710,7 @@
     line-height: 3.5rem;
   }

+
   #incoming-container {
     position: absolute;
     bottom: 0;
@@ -745,7 +746,6 @@
   #incoming-container button {
     height: 4rem;
     flex: 1;
-    padding: 0;
     border:0;
     border-radius:2rem;
     display: block;
@@ -850,7 +850,6 @@
     overflow: hidden;
     text-overflow: ellipsis;
     font-weight: bold;
-    padding-right: 4.5rem;
   }

   #group-call-details {
@@ -858,12 +857,10 @@
   }

   #group-call-details .hangup-button {
-    position: absolute;
-    background: url('images/handled_call/actionicon_activecall_hangup.png') no-repeat scroll right 1.8rem center / 4rem auto transparent;
-    top: 0;
-    right: 0;
-    bottom: 0;
-    left: 0;
+    float: right;
+    width: 4.5rem;
+    height: 4.5rem;
+    background: url(images/handled_call/actionicon_activecall_hangup.png) no-repeat center center / 4rem;
   }

   #group-call .fake-number {
@@ -879,12 +876,12 @@
   #contact-background {
     position: absolute;
     top: 0;
-    height: 100%;
     width: 100%;
+    height: 100%;
+    background-repeat: no-repeat;
+    background-position: center center;
     background-color: transparent;
     background-size: cover;
-    background-position: center center;
-    background-repeat: no-repeat;
     opacity: 0;
     transition: opacity 0.3s linear;
   }
@@ -898,17 +895,17 @@
   }

   #call-screen[data-layout="dialing"] #callbar-answer,
+  #call-screen[data-layout="dialing"] #swiper-wrapper,
   #call-screen[data-layout="incoming"] #swiper-wrapper,
   #call-screen[data-layout="incoming-locked"] #callbar-answer,
   #call-screen[data-layout="incoming-locked"] #callbar-hang-up,
   #call-screen[data-layout="incoming-locked"] #call-options,
   #call-screen[data-layout="incoming-locked"] .duration,
+  #call-screen[data-layout="connected"] #swiper-wrapper,
   #call-screen[data-layout="connected"] #callbar-answer,
+  #call-screen[data-layout="connected-hold"] #swiper-wrapper,
   #call-screen[data-layout="connected-hold"] #callbar-answer,
-  #call-screen:not([data-layout="incoming-locked"]) #lockscreen-header,
-  #call-screen:not([data-layout="incoming-locked"]) #lockscreen-masked-background,
-  #call-screen:not([data-layout="incoming-locked"]) #lockscreen-area,
-  #call-screen:not([data-layout="incoming-locked"]) #swiper-wrapper {
+  #call-screen:not([data-layout="incoming-locked"]) #lockscreen-header {
     display: none;
   }

@@ -977,10 +974,6 @@
     font-weight: 300;
   }

-  #call-screen[data-layout="incoming-locked"] #calls.big-duration section.sim-info .numberWrapper {
-    padding-right: 6.5rem;
-  }
-
   #call-screen[data-layout="incoming-locked"] #calls.big-duration .numberWrapper .number {
     line-height: 3.4rem;
     padding-top: 2rem;
@@ -997,6 +990,40 @@
     padding-bottom: 2rem;
   }

+  #lockscreen-header {
+    z-index: 9999;
+    position: absolute;
+    top: 3.4rem;
+    left: 0;
+    width: 100%;
+    -moz-box-sizing: border-box;
+    padding: 1.8rem 2.5rem 1.2rem 2.5rem;
+    color: #fff;
+    text-shadow: 0 0 0.3rem #333;
+    transition: transform 0.2s ease, opacity 0.2s ease;
+    opacity: 1;
+  }
+
+  #lockscreen-clock-time {
+    margin: -0.6rem 0 -1rem -0.4rem;
+    font-weight: 300;
+    font-size: calc(26 * 0.226rem);
+  }
+
+  #lockscreen-clock-time span { /* optional meridiem */
+    font-size: calc(17 * 0.226rem);
+  }
+
+  #lockscreen-date {
+    font-weight: 400;
+    font-size: calc(7 * 0.226rem);
+  }
+
+  #lockscreen-clock-time, #lockscreen-date {
+    text-shadow: 0.1rem 0.1rem 0.3rem #000000;
+    color: #fff;
+  }
+
   /* We may need to sync system lockscreen media query part for showing call
      screen on larger screen size*/

@@ -1043,25 +1070,18 @@
   #call-screen[data-layout="incoming-locked"] .sim {
     display: inline-block;
     position: absolute;
-    top: 0;
-    right: 0;
-    padding-right: 2.5rem;
+    top: 2.6rem;
+    right: 2rem;
+    height: 2.2rem;
+    padding-right: 2.6rem;
+
     text-align: right;
     font-size: 1.3rem;
-    text-shadow: none;
-    line-height: 9rem;
-    color: #038282;
+    line-height: 3rem;
   }
-
-  #call-screen[data-layout="incoming-locked"] section.additionalInfo .sim {
-    line-height: 3.4rem;
-    padding-top: 2rem;
-  }
-
   #call-screen[data-layout="incoming-locked"] .sim .via-sim {
     display: none;
   }
-
   #call-screen[data-layout="incoming-locked"] .sim .sim-number {
     display: inline;
   }
diff --git a/apps/callscreen/style/swiper.css b/apps/callscreen/style/swiper.css
new file mode 100644
index 0000000..89e5a1f
--- /dev/null
+++ b/apps/callscreen/style/swiper.css
@@ -0,0 +1,126 @@
+/* Lockscreen slider - Need to move duplicate styling in other proper place */
+#lockscreen-area {
+  position: absolute;
+  height: 11.2rem;
+  left: 0;
+  right: 0;
+  bottom: 0;
+  z-index: 4;
+}
+
+.lockscreen-icon-area {
+  height: 10rem;
+  position: absolute;
+  border-style: none;
+  transition: opacity 0.5s ease;
+}
+
+.lockscreen-icon {
+  margin-top: 2rem;
+  width: 6rem;
+  height: 6rem;
+
+  pointer-events: none;
+}
+
+.lockscreen-icon-area.dark .lockscreen-icon {
+  opacity: 0.65;
+}
+
+#lockscreen-area-slide {
+  text-align: center;
+  width: calc(100%);
+}
+
+.touched .lockscreen-icon {
+  transition: none;
+}
+
+.lockscreen-icon-right {
+  right: calc(50% - 14rem);
+}
+
+.lockscreen-icon-left {
+  left: calc(50% - 14rem);
+}
+
+@media (min-width:768px) {
+  .lockscreen-icon-right {
+    right: calc(50% - 20.5rem);
+  }
+
+  .lockscreen-icon-left {
+    left: calc(50% - 20.5rem);
+  }
+
+  #lockscreen-header {
+    text-shadow: 0 0 0.5rem #111111;
+    padding-left: 6rem;
+    font-weight: 300;
+  }
+
+  #lockscreen-date {
+    padding-top: 0.5rem;
+    font-size: 2.4rem;
+  }
+}
+
+button::-moz-focus-inner {
+  border: 0;
+}
+
+:-moz-any(.touched, #screen:not(.locked), #screen.attention, #lockscreen:not([data-panel="main"]))
+:-moz-any(#lockscreen-left-arrow, #lockscreen-right-arrow) {
+  display: none;
+  animation: none;
+}
+
+#lockscreen-area-pickup > div {
+  background-image: url('images/lock_screen/actionicon_lockscreen_answer.png');
+  background-position: center;
+  background-repeat: no-repeat;
+  background-size: 4rem;
+}
+
+.lockscreen-icon-left, .lockscreen-icon-right {
+  z-index: 16;
+  pointer-events: auto;
+}
+
+/* Compensation for the effects after enabling the pointer-event attribute. */
+.lockscreen-icon-left:active, .lockscreen-icon-right:active {
+  background: none;
+}
+
+#lockscreen-area-hangup > div {
+  background-image: url('images/lock_screen/actionicon_lockscreen_reject.png');
+  background-position: center;
+  background-repeat: no-repeat;
+  background-size: 4rem;
+}
+
+#lockscreen-icon-container {
+  position: absolute;
+  bottom: 0;
+  width: 100%;
+  height: 10rem;
+  pointer-events: none;
+  border-top: 0.1rem solid #989898;
+  background-color: rgba(231, 231, 231, 0.85);
+  z-index: 5;
+}
+
+.touched #lockscreen-icon-container {
+  transition: none;
+}
+
+.touched .lockscreen-icon-area {
+  transition: none;
+}
+
+#lockscreen-canvas-wrapper {
+  position: absolute;
+  bottom: 0.75rem;
+  z-index: 8;
+  width: 100%;
+}
diff --git a/apps/callscreen/test/unit/audio_competing_helper_test.js b/apps/callscreen/test/unit/audio_competing_helper_test.js
deleted file mode 100644
index 41d9267..0000000
--- a/apps/callscreen/test/unit/audio_competing_helper_test.js
+++ /dev/null
@@ -1,54 +0,0 @@
-/* globals AudioCompetingHelper */
-
-'use strict';
-
-require('/js/audio_competing_helper.js');
-
-suite('callscreen / audio competing helper', function() {
-  var AudioCompetingApp = {
-    onMozInterrupEventHandler: function acp_onMozInterrupEventHandler () {
-    }
-  };
-
-  suiteSetup(function() {
-    AudioCompetingHelper.init('AudioCompetingApp');
-  });
-
-  suite('> event listener handling', function() {
-    test('listeners are added and called if the helper starts competing',
-      function() {
-        this.sinon.spy(AudioCompetingApp, 'onMozInterrupEventHandler');
-        AudioCompetingHelper.addListener(
-          'mozinterruptbegin', AudioCompetingApp.onMozInterrupEventHandler
-        );
-
-        AudioCompetingHelper.compete();
-
-        var evt = new CustomEvent('mozinterruptbegin');
-        AudioCompetingHelper.audioContext.dispatchEvent(evt);
-        sinon.assert.called(AudioCompetingApp.onMozInterrupEventHandler);
-    });
-
-    test('listeners are removed and not called if the helper stops competing',
-      function() {
-        this.sinon.spy(AudioCompetingApp, 'onMozInterrupEventHandler');
-
-        AudioCompetingHelper.leaveCompetition();
-
-        var evt = new CustomEvent('mozinterruptbegin');
-        AudioCompetingHelper.audioContext.dispatchEvent(evt);
-        sinon.assert.notCalled(AudioCompetingApp.onMozInterrupEventHandler);
-    });
-
-    test('listeners are not called if they were removed', function() {
-      this.sinon.spy(AudioCompetingApp, 'onMozInterrupEventHandler');
-      AudioCompetingHelper.clearListeners();
-
-      AudioCompetingHelper.compete();
-
-      var evt = new CustomEvent('mozinterruptbegin');
-      AudioCompetingHelper.audioContext.dispatchEvent(evt);
-      sinon.assert.notCalled(AudioCompetingApp.onMozInterrupEventHandler);
-    });
-  });
-});
diff --git a/apps/callscreen/test/unit/calls_handler_test.js b/apps/callscreen/test/unit/calls_handler_test.js
index ad71abb..42cce64 100644
--- a/apps/callscreen/test/unit/calls_handler_test.js
+++ b/apps/callscreen/test/unit/calls_handler_test.js
@@ -4,11 +4,10 @@
            MockNavigatormozSetMessageHandler, MockNavigatorMozTelephony,
            MockNavigatorWakeLock, MocksHelper, MockTonePlayer, MockUtils,
            telephonyAddCall, telephonyAddCdmaCall,
-           MockNavigatorMozMobileConnections, AudioCompetingHelper */
+           MockNavigatorMozMobileConnections */

 'use strict';

-require('/js/audio_competing_helper.js');
 require('/test/unit/mock_call_screen.js');
 require('/test/unit/mock_simple_phone_matcher.js');
 require('/shared/test/unit/mocks/mock_bluetooth_helper.js');
@@ -160,24 +159,6 @@ suite('calls handler', function() {
         assert.isTrue(toDefaultSpy.calledOnce);
       });

-      suite('screen management', function() {
-        setup(function() {
-          this.sinon.spy(navigator, 'requestWakeLock');
-          MockNavigatorMozTelephony.mTriggerCallsChanged();
-        });
-
-        test('should turn the screen on', function() {
-          sinon.assert.called(navigator.requestWakeLock, 'screen');
-        });
-
-        test('and release it when we pick up the call', function() {
-          mockCall._connect();
-          var lock = MockNavigatorWakeLock.mLastWakeLock;
-          assert.equal(lock.topic, 'screen');
-          assert.isTrue(lock.released);
-        });
-      });
-
       suite('in CDMA Network', function() {
         test('should not toggle no-add-call in CDMA network', function() {
           MockNavigatorMozMobileConnections[1].voice = {
@@ -280,24 +261,6 @@ suite('calls handler', function() {
           false, 'end');
       });

-      suite('screen management', function() {
-        setup(function() {
-          this.sinon.spy(navigator, 'requestWakeLock');
-          MockNavigatorMozTelephony.mTriggerCallsChanged();
-        });
-
-        test('should turn the screen on', function() {
-          sinon.assert.called(navigator.requestWakeLock, 'screen');
-        });
-
-        test('and release it when we pick up the call', function() {
-          extraCall._connect();
-          var lock = MockNavigatorWakeLock.mLastWakeLock;
-          assert.equal(lock.topic, 'screen');
-          assert.isTrue(lock.released);
-        });
-      });
-
       suite('DSDS SIM display >', function() {
         setup(function() {
           MockNavigatorMozIccManager.addIcc('12345', {'cardState': 'ready'});
@@ -1813,49 +1776,4 @@ suite('calls handler', function() {
       });
     });
   });
-
-  suite('> Audio competing event listening', function() {
-    var gsmcall = null;
-
-    setup(function() {
-      AudioCompetingHelper.init('test');
-      this.sinon.spy(AudioCompetingHelper, 'clearListeners');
-
-      gsmcall = new MockCall('543552', 'connected');
-      telephonyAddCall.call(this, gsmcall);
-
-      CallsHandler.setup();
-    });
-
-    test('should call clearListeners', function() {
-      sinon.assert.called(AudioCompetingHelper.clearListeners);
-    });
-
-    test('should call onMozInterrupBegin', function() {
-      this.sinon.spy(gsmcall, 'hold');
-
-      MockNavigatorMozTelephony.active = gsmcall;
-      AudioCompetingHelper.compete();
-      var evt = new CustomEvent('mozinterruptbegin');
-
-      AudioCompetingHelper.audioContext.dispatchEvent(evt);
-      sinon.assert.called(gsmcall.hold);
-      AudioCompetingHelper.leaveCompetition();
-    });
-
-    test('should call forceAnAudioCompetitionWin', function() {
-      this.sinon.spy(AudioCompetingHelper, 'compete');
-      this.sinon.spy(AudioCompetingHelper, 'leaveCompetition');
-
-      var gsmcall2 = new MockCall('543552', 'connected');
-      telephonyAddCall.call(this, gsmcall2);
-
-      AudioCompetingHelper.compete();
-      var evt = new CustomEvent('mozinterruptbegin');
-
-      AudioCompetingHelper.audioContext.dispatchEvent(evt);
-      sinon.assert.calledOnce(AudioCompetingHelper.leaveCompetition);
-      sinon.assert.calledTwice(AudioCompetingHelper.compete);
-    });
-  });
 });
diff --git a/apps/callscreen/test/unit/handled_call_test.js b/apps/callscreen/test/unit/handled_call_test.js
index ebb0a5e..cd27172 100644
--- a/apps/callscreen/test/unit/handled_call_test.js
+++ b/apps/callscreen/test/unit/handled_call_test.js
@@ -1,8 +1,7 @@
 /* globals CallsHandler, FontSizeManager, HandledCall, MockCall, MockCallScreen,
            MockCallsHandler, MockContactPhotoHelper, MockContacts,
            MockLazyL10n, MockMozL10n, MockNavigatorMozIccManager,
-           MockNavigatorSettings, MocksHelper, MockUtils, Voicemail,
-           AudioCompetingHelper */
+           MockNavigatorSettings, MocksHelper, MockUtils, Voicemail */

 'use strict';

@@ -18,7 +17,6 @@ require('/shared/test/unit/mocks/dialer/mock_call.js');
 require('/shared/test/unit/mocks/dialer/mock_calls_handler.js');
 require('/shared/test/unit/mocks/dialer/mock_font_size_manager.js');

-require('/js/audio_competing_helper.js');
 require('/js/handled_call.js');
 require('/shared/js/dialer/voicemail.js');

@@ -113,7 +111,6 @@ suite('dialer/handled_call', function() {
     mockCall = new MockCall(String(phoneNumber), 'dialing');
     subject = new HandledCall(mockCall);

-    AudioCompetingHelper.init('test');
     document.body.appendChild(subject.node);
   });

@@ -299,7 +296,6 @@ suite('dialer/handled_call', function() {

   suite('on connect', function() {
     setup(function() {
-      this.sinon.spy(AudioCompetingHelper, 'compete');
       mockCall._connect();
     });

@@ -361,12 +357,6 @@ suite('dialer/handled_call', function() {
     test('speaker initially off', function() {
       assert.isFalse(MockCallScreen.mSpeakerOn);
     });
-
-    test('AudioCompetingHelper compete gets called when connected', function() {
-      sinon.assert.notCalled(AudioCompetingHelper.compete);
-      this.sinon.clock.tick(1000);
-      sinon.assert.calledOnce(AudioCompetingHelper.compete);
-    });
   });

   suite('on disconnect', function() {
@@ -445,14 +435,6 @@ suite('dialer/handled_call', function() {
       test('it does not show the banner', function() {
         assert.isFalse(MockCallScreen.mShowStatusMessageCalled);
       });
-
-      test('AudioCompetingHelper leaveCompetition gets called on disconnected',
-        function() {
-          this.sinon.spy(AudioCompetingHelper, 'leaveCompetition');
-          mockCall._disconnect();
-
-          sinon.assert.called(AudioCompetingHelper.leaveCompetition);
-      });
     });

     suite('from a group', function() {
@@ -473,7 +455,6 @@ suite('dialer/handled_call', function() {

   suite('holding', function() {
     setup(function() {
-      this.sinon.spy(AudioCompetingHelper, 'leaveCompetition');
       mockCall._hold();
     });

@@ -484,11 +465,6 @@ suite('dialer/handled_call', function() {
     test('add the css class', function() {
       assert.isTrue(subject.node.classList.contains('held'));
     });
-
-    test('AudioCompetingHelper leaveCompetition gets called when held',
-      function() {
-	sinon.assert.called(AudioCompetingHelper.leaveCompetition);
-    });
   });

   suite('resuming', function() {
diff --git a/apps/camera/bower.json b/apps/camera/bower.json
index be0a17b..da7a557 100644
--- a/apps/camera/bower.json
+++ b/apps/camera/bower.json
@@ -23,9 +23,6 @@
     "device-orientation": "gaia-components/device-orientation",
     "view": "gaia-components/view#~0.1.1",
     "model": "gaia-components/model#~0.1.0",
-    "drag": "gaia-components/drag",
-    "gaia-header": "gaia-components/gaia-header#~0.2.2",
-    "gaia-theme": "gaia-components/gaia-theme#~0.2.0",
-    "gaia-icons": "gaia-components/gaia-icons#~0.2.1"
+    "drag": "gaia-components/drag"
   }
 }
diff --git a/apps/camera/bower_components/device-orientation/.bower.json b/apps/camera/bower_components/device-orientation/.bower.json
index 5e998be..607a919 100644
--- a/apps/camera/bower_components/device-orientation/.bower.json
+++ b/apps/camera/bower_components/device-orientation/.bower.json
@@ -1,7 +1,6 @@
 {
   "name": "device-orientation",
   "main": "index.js",
-  "version": "0.1.1",
   "homepage": "https://github.com/gaia-components/device-orientation",
   "license": "MIT",
   "ignore": [
@@ -12,13 +11,14 @@
     "tests",
     "README.md"
   ],
-  "_release": "0.1.1",
+  "_release": "70fc8b7d26",
   "_resolution": {
-    "type": "version",
-    "tag": "v0.1.1",
-    "commit": "5c9280f39824e0673cf949af11dc46d176b2ff17"
+    "type": "branch",
+    "branch": "master",
+    "commit": "70fc8b7d263773c02f0260ef9445d5a90cf91234"
   },
   "_source": "git://github.com/gaia-components/device-orientation.git",
   "_target": "*",
-  "_originalSource": "gaia-components/device-orientation"
+  "_originalSource": "gaia-components/device-orientation",
+  "_direct": true
 }
\ No newline at end of file
diff --git a/apps/camera/bower_components/device-orientation/bower.json b/apps/camera/bower_components/device-orientation/bower.json
index d88599c..e1af6eb 100644
--- a/apps/camera/bower_components/device-orientation/bower.json
+++ b/apps/camera/bower_components/device-orientation/bower.json
@@ -1,7 +1,7 @@
 {
   "name": "device-orientation",
   "main": "index.js",
-  "version": "0.1.1",
+  "version": "0.1.0",
   "homepage": "https://github.com/gaia-components/device-orientation",
   "license": "MIT",
   "ignore": [
diff --git a/apps/camera/bower_components/device-orientation/index.js b/apps/camera/bower_components/device-orientation/index.js
index 56c7dda..985fffe 100644
--- a/apps/camera/bower_components/device-orientation/index.js
+++ b/apps/camera/bower_components/device-orientation/index.js
@@ -189,4 +189,4 @@ module.exports = {

 });})((function(n,w){return typeof define=='function'&&define.amd?
 define:typeof module=='object'?function(c){c(require,exports,module);}:function(c){
-var m={exports:{}},r=function(n){return w[n];};w[n]=c(r,m.exports,m)||m.exports;};})('device-orientation',this));
\ No newline at end of file
+var m={exports:{}},r=function(n){return w[n];};w[n]=c(r,m.exports,m)||m.exports;};})('module-name',this));
\ No newline at end of file
diff --git a/apps/camera/bower_components/drag/.bower.json b/apps/camera/bower_components/drag/.bower.json
index b652f1f..7144695 100644
--- a/apps/camera/bower_components/drag/.bower.json
+++ b/apps/camera/bower_components/drag/.bower.json
@@ -1,7 +1,6 @@
 {
   "name": "drag",
   "main": "index.js",
-  "version": "0.1.0",
   "homepage": "https://github.com/gaia-components/drag",
   "authors": [
     "Wilson Page <wilsonpage@me.com>"
@@ -17,13 +16,14 @@
   "dependencies": {
     "evt": "gaia-components/evt#~0.4.0"
   },
-  "_release": "0.1.0",
+  "_release": "52e759bf70",
   "_resolution": {
-    "type": "version",
-    "tag": "v0.1.0",
-    "commit": "6e641263f3bfd880ee366e73c797ae371e45b7be"
+    "type": "branch",
+    "branch": "master",
+    "commit": "52e759bf703262aad900375213e71867784c31ec"
   },
   "_source": "git://github.com/gaia-components/drag.git",
   "_target": "*",
-  "_originalSource": "gaia-components/drag"
+  "_originalSource": "gaia-components/drag",
+  "_direct": true
 }
\ No newline at end of file
diff --git a/apps/camera/bower_components/drag/bower.json b/apps/camera/bower_components/drag/bower.json
index b2eef05..25d5e48 100644
--- a/apps/camera/bower_components/drag/bower.json
+++ b/apps/camera/bower_components/drag/bower.json
@@ -1,7 +1,7 @@
 {
   "name": "drag",
   "main": "index.js",
-  "version": "0.1.0",
+  "version": "0.0.0",
   "homepage": "https://github.com/gaia-components/drag",
   "authors": [
     "Wilson Page <wilsonpage@me.com>"
diff --git a/apps/camera/bower_components/drag/package.json b/apps/camera/bower_components/drag/package.json
index 67042bd..9ef4125 100644
--- a/apps/camera/bower_components/drag/package.json
+++ b/apps/camera/bower_components/drag/package.json
@@ -1,6 +1,6 @@
 {
   "name": "drag",
-  "version": "0.1.0",
+  "version": "0.0.0",
   "description": "",
   "main": "index.js",
   "scripts": {
@@ -17,9 +17,6 @@
   },
   "homepage": "https://github.com/gaia-components/drag",
   "dependencies": {
-    "evt": "git://github.com/gaia-components/evt@0.4.0"
-  },
-  "devDependencies": {
     "gaia-test": "git://github.com/gaia-components/gaia-test"
   }
 }
diff --git a/apps/camera/bower_components/evt/.bower.json b/apps/camera/bower_components/evt/.bower.json
index cb42b6a..43e7638 100644
--- a/apps/camera/bower_components/evt/.bower.json
+++ b/apps/camera/bower_components/evt/.bower.json
@@ -22,7 +22,8 @@
     "tag": "v0.4.0",
     "commit": "3593dd6b4dd19f683d00fd0eaf2581c11a128da6"
   },
-  "_source": "git://github.com/gaia-components/evt.git",
+  "_source": "git://github.com/wilsonpage/evt.git",
   "_target": "~0.4.0",
-  "_originalSource": "gaia-components/evt"
+  "_originalSource": "wilsonpage/evt",
+  "_direct": true
 }
\ No newline at end of file
diff --git a/apps/camera/bower_components/gaia-header/.bower.json b/apps/camera/bower_components/gaia-header/.bower.json
deleted file mode 100644
index ab027fc..0000000
--- a/apps/camera/bower_components/gaia-header/.bower.json
+++ /dev/null
@@ -1,33 +0,0 @@
-{
-  "name": "gaia-header",
-  "version": "0.2.2",
-  "homepage": "https://github.com/gaia-components/gaia-header",
-  "authors": [
-    "Wilson Page <wilsonpage@me.com>"
-  ],
-  "main": "script.js",
-  "license": "MIT",
-  "ignore": [
-    "**/.*",
-    "node_modules",
-    "bower_components",
-    "test",
-    "tests",
-    "index.html",
-    "karma.conf.js",
-    "package.json",
-    "README.md"
-  ],
-  "dependencies": {
-    "gaia-icons": "gaia-components/gaia-icons#0.2.1"
-  },
-  "_release": "0.2.2",
-  "_resolution": {
-    "type": "version",
-    "tag": "v0.2.2",
-    "commit": "527097512f39866881035c7952794ee8bf6e2502"
-  },
-  "_source": "git://github.com/gaia-components/gaia-header.git",
-  "_target": "~0.2.2",
-  "_originalSource": "gaia-components/gaia-header"
-}
\ No newline at end of file
diff --git a/apps/camera/bower_components/gaia-header/bower.json b/apps/camera/bower_components/gaia-header/bower.json
deleted file mode 100644
index 1ac0430..0000000
--- a/apps/camera/bower_components/gaia-header/bower.json
+++ /dev/null
@@ -1,24 +0,0 @@
-{
-  "name": "gaia-header",
-  "version": "0.2.2",
-  "homepage": "https://github.com/gaia-components/gaia-header",
-  "authors": [
-    "Wilson Page <wilsonpage@me.com>"
-  ],
-  "main": "script.js",
-  "license": "MIT",
-  "ignore": [
-    "**/.*",
-    "node_modules",
-    "bower_components",
-    "test",
-    "tests",
-    "index.html",
-    "karma.conf.js",
-    "package.json",
-    "README.md"
-  ],
-  "dependencies": {
-    "gaia-icons": "gaia-components/gaia-icons#0.2.1"
-  }
-}
diff --git a/apps/camera/bower_components/gaia-header/dist/script.js b/apps/camera/bower_components/gaia-header/dist/script.js
deleted file mode 100644
index 1e469d6..0000000
--- a/apps/camera/bower_components/gaia-header/dist/script.js
+++ /dev/null
@@ -1,532 +0,0 @@
-!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.GaiaHeader=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){
-(function(define){'use strict';define(function(_dereq_,exports,module){
-/*globals define,exports,module,require*/
-
-  /**
-   * Utility functions for measuring and manipulating font sizes
-   */
-  var GaiaHeaderFontFit = {
-    /**
-     * Allowable font sizes for header elements.
-     */
-    _HEADER_SIZES: [
-      16, 17, 18, 19, 20, 21, 22, 23, 24
-    ],
-
-    /**
-     * Perform auto-resize when textContent changes on element.
-     *
-     * @param {HTMLHeadingElement} heading The element to observer for changes
-     */
-    observeHeadingChanges: function(heading) {
-      var observer = this._getTextChangeObserver();
-      // Listen for any changes in the child nodes of the header.
-      observer.observe(heading, { childList: true });
-    },
-
-    /**
-     * Resize and reposition the header text based on string length and
-     * container position.
-     *
-     * @param {HTMLHeadingElement} heading h1 text inside header to reformat.
-     */
-    reformatHeading: function(heading) {
-      // Skip resize logic if header has no content, ie before localization.
-      if (!heading || heading.textContent.trim() === '') {
-        return;
-      }
-
-      // Reset our centering styles.
-      this._resetCentering(heading);
-
-      // Cache the element style properties to avoid reflows.
-      var style = this._getStyleProperties(heading);
-
-      // Perform auto-resize and center.
-      style.textWidth = this._autoResizeElement(heading, style);
-      this._centerTextToScreen(heading, style);
-    },
-
-    /**
-     * Clear any current canvas contexts from the cache.
-     */
-    resetCache: function() {
-      this._cachedContexts = {};
-    },
-
-    /**
-     * Keep a cache of canvas contexts with a given font.
-     * We do this because it is faster to create new canvases
-     * than to re-set the font on existing contexts repeatedly.
-     *
-     * @private
-     */
-    _cachedContexts: {},
-
-    /**
-     * Grab or create a cached canvas context for a given fontSize/family pair.
-     * @todo Add font-weight as a new dimension for caching.
-     *
-     * @param {number} fontSize The font size of the canvas we want.
-     * @param {string} fontFamily The font family of the canvas we want.
-     * @param {string} fontStyle The style of the font (default to italic).
-     * @return {CanvasRenderingContext2D} A context with the specified font.
-     * @private
-     */
-    _getCachedContext: function(fontSize, fontFamily, fontStyle) {
-      // Default to italic style since this code is only ever used
-      // by headers right now and header text is always italic.
-      fontStyle = fontStyle || 'italic';
-
-      var cache = this._cachedContexts;
-      var ctx = cache[fontSize] && cache[fontSize][fontFamily] ?
-        cache[fontSize][fontFamily][fontStyle] : null;
-
-      if (!ctx) {
-        var canvas = document.createElement('canvas');
-        canvas.setAttribute('moz-opaque', 'true');
-        canvas.setAttribute('width', '1');
-        canvas.setAttribute('height', '1');
-
-        ctx = canvas.getContext('2d', { willReadFrequently: true });
-        ctx.font = fontStyle + ' ' + fontSize + 'px ' + fontFamily;
-
-        // Populate the contexts cache.
-        if (!cache[fontSize]) {
-          cache[fontSize] = {};
-        }
-        if (!cache[fontSize][fontFamily]) {
-          cache[fontSize][fontFamily] = {};
-        }
-        cache[fontSize][fontFamily][fontStyle] = ctx;
-      }
-
-      return ctx;
-    },
-
-    /**
-     * Use a single observer for all text changes we are interested in.
-     *
-     * @private
-     */
-    _textChangeObserver: null,
-
-    /**
-     * Auto-resize all text changes.
-     *
-     * @param {Array} mutations A MutationRecord list.
-     * @private
-     */
-    _handleTextChanges: function(mutations) {
-      for (var i = 0; i < mutations.length; i++) {
-        this.reformatHeading(mutations[i].target);
-      }
-    },
-
-    /**
-     * Singleton-like interface for getting our text change observer.
-     * By reusing the observer, we make sure we only ever attach a
-     * single observer to any given element we are interested in.
-     *
-     * @private
-     */
-    _getTextChangeObserver: function() {
-      if (!this._textChangeObserver) {
-        this._textChangeObserver = new MutationObserver(
-          this._handleTextChanges.bind(this));
-      }
-      return this._textChangeObserver;
-    },
-
-    /**
-     * Get the width of a string in pixels, given its fontSize and fontFamily
-     * and fontStyle.
-     *
-     * @param {string} string The string we are measuring.
-     * @param {number} fontSize The size of the font to measure against.
-     * @param {string} fontFamily The font family to measure against.
-     * @param {string} fontStyle The style of the font (default to italic).
-     * @return {number} The pixel width of the string with the given font.
-     * @private
-     */
-    _getFontWidth: function(string, fontSize, fontFamily, fontStyle) {
-      var ctx = this._getCachedContext(fontSize, fontFamily, fontStyle);
-      return ctx.measureText(string).width;
-    },
-
-    /**
-     * Get the maximum allowable fontSize for a string such that it will
-     * not overflow past a maximum width.
-     *
-     * @param {string} string The string for which to check max font size.
-     * @param {Array.<number>} allowedSizes A list of fontSizes allowed.
-     * @param {string} fontFamily The font family of the string we're measuring.
-     * @param {number} maxWidth The maximum number of pixels before overflow.
-     * @return {Object} Dict containing max fontSize and overflow flag.
-     * @private
-     */
-    _getMaxFontSizeInfo: function(string, allowedSizes, fontFamily, maxWidth) {
-      var fontSize;
-      var resultWidth;
-      var i = allowedSizes.length - 1;
-
-      do {
-        fontSize = allowedSizes[i];
-        resultWidth = this._getFontWidth(string, fontSize, fontFamily);
-        i--;
-      } while (resultWidth > maxWidth && i >= 0);
-
-      return {
-        fontSize: fontSize,
-        overflow: resultWidth > maxWidth,
-        textWidth: resultWidth
-      };
-    },
-
-    /**
-     * Get an element's content width disregarding its box model sizing.
-     *
-     * @param {Object} style element, or style object.
-     * @returns {Number} Width in pixels of elements content.
-     * @private
-     */
-    _getContentWidth: function(style) {
-      var width = parseInt(style.width, 10);
-      if (style.boxSizing === 'border-box') {
-        width -= (parseInt(style.paddingRight, 10) +
-          parseInt(style.paddingLeft, 10));
-      }
-      return width;
-    },
-
-    /**
-     * Get an element's style properies.
-     *
-     * @param {HTMLHeadingElement} heading The element from which to get style.
-     * @return {Object} A dictionary containing element's style properties.
-     * @private
-     */
-    _getStyleProperties: function(heading) {
-      var style = window.getComputedStyle(heading);
-      var contentWidth = this._getContentWidth(style);
-      if (isNaN(contentWidth)) {
-        contentWidth = 0;
-      }
-
-      return {
-        fontFamily: style.fontFamily,
-        contentWidth: contentWidth,
-        paddingRight: parseInt(style.paddingRight, 10),
-        paddingLeft: parseInt(style.paddingLeft, 10),
-        offsetLeft: heading.offsetLeft
-      };
-    },
-
-    /**
-     * Auto-resize element's font to fit its content width.
-     *
-     * @param {HTMLHeadingElement} heading The element to auto-resize.
-     * @param {Object} styleOptions Dictionary containing cached style props,
-     *                 to avoid reflows caused by grabbing style properties.
-     * @return {number} The pixel width of the resized text.
-     * @private
-     */
-    _autoResizeElement: function(heading, styleOptions) {
-      var contentWidth = styleOptions.contentWidth ||
-        this._getContentWidth(heading);
-
-      var fontFamily = styleOptions.fontFamily ||
-        getComputedStyle(heading).fontFamily;
-
-      var info = this._getMaxFontSizeInfo(
-        heading.textContent,
-        this._HEADER_SIZES,
-        fontFamily,
-        contentWidth
-      );
-
-      heading.style.fontSize = info.fontSize + 'px';
-
-      return info.textWidth;
-    },
-
-    /**
-     * Reset the auto-centering styling on an element.
-     *
-     * @param {HTMLHeadingElement} heading The element to reset.
-     * @private
-     */
-    _resetCentering: function(heading) {
-      // We need to set the lateral margins to 0 to be able to measure the
-      // element width properly. All previously set values are ignored.
-      heading.style.marginLeft = heading.style.marginRight = '0';
-    },
-
-    /**
-     * Center an elements text based on screen position rather than container.
-     *
-     * @param {HTMLHeadingElement} heading The element we want to center.
-     * @param {Object} styleOptions Dictionary containing cached style props,
-     *                 avoids reflows caused by caching style properties.
-     * @private
-     */
-    _centerTextToScreen: function(heading, styleOptions) {
-      // Calculate the minimum amount of space needed for the header text
-      // to be displayed without overflowing its content box.
-      var minHeaderWidth = styleOptions.textWidth + styleOptions.paddingRight +
-        styleOptions.paddingLeft;
-
-      // Get the amount of space on each side of the header text element.
-      var sideSpaceLeft = styleOptions.offsetLeft;
-      var sideSpaceRight = this._getWindowWidth() - sideSpaceLeft -
-        styleOptions.contentWidth - styleOptions.paddingRight -
-        styleOptions.paddingLeft;
-
-      // If both margins have the same width, the header is already centered.
-      if (sideSpaceLeft === sideSpaceRight) {
-        return;
-      }
-
-      // To center, we need to make sure the space to the left of the header
-      // is the same as the space to the right, so take the largest of the two.
-      var margin = Math.max(sideSpaceLeft, sideSpaceRight);
-
-      // If the minimum amount of space our header needs plus the max margins
-      // fits inside the width of the window, we can center this header.
-      // We subtract 1 pixels to wrap text like Gecko.
-      // See https://bugzil.la/1026955
-      if (minHeaderWidth + (margin * 2) < this._getWindowWidth() - 1) {
-        if (sideSpaceLeft < sideSpaceRight) {
-          heading.style.marginLeft = (sideSpaceRight - sideSpaceLeft) + 'px';
-        }
-        if (sideSpaceRight < sideSpaceLeft) {
-          heading.style.marginRight = (sideSpaceLeft - sideSpaceRight) + 'px';
-        }
-      }
-    },
-
-    /**
-     * Cache and return the width of the inner window.
-     *
-     * @return {number} The width of the inner window in pixels.
-     * @private
-     */
-    _getWindowWidth: function() {
-      return window.innerWidth;
-    }
-  };
-
-  module.exports = GaiaHeaderFontFit;
-
-});})((function(n,w){'use strict';return typeof define=='function'&&define.amd?
-define:typeof module=='object'?function(c){c(_dereq_,exports,module);}:
-function(c){var m={exports:{}},r=function(n){return w[n];};
-w[n]=c(r,m.exports,m)||m.exports;};})('./lib/font-fit',this));
-
-},{}],2:[function(_dereq_,module,exports){
-(function(define){'use strict';define(function(_dereq_,exports,module){
-/*globals define*//*jshint node:true*/
-
-/**
- * Dependencies
- */
-
-var fontFit = _dereq_('./lib/font-fit');
-
-/**
- * Locals
- */
-
-var baseComponents = window.COMPONENTS_BASE_URL || 'bower_components/';
-var base = window.GAIA_HEADER_BASE_URL || baseComponents + 'gaia-header/';
-
-// Extend from the HTMLElement prototype
-var proto = Object.create(HTMLElement.prototype);
-
-/**
- * Supported action types
- *
- * @type {Object}
- */
-var actionTypes = {
-  menu: true,
-  back: true,
-  close: true,
-};
-
-/**
- * Called when the element is first created.
- *
- * Here we create the shadow-root and
- * inject our template into it.
- *
- * @private
- */
-proto.createdCallback = function() {
-  var shadow = this.createShadowRoot();
-  var tmpl = template.content.cloneNode(true);
-
-  // Get els
-  this.els = {
-    actionButton: tmpl.querySelector('.action-button'),
-    headings: this.querySelectorAll('h1,h2,h3,h4'),
-    inner: tmpl.querySelector('.inner')
-  };
-
-  // Action button
-  this.configureActionButton();
-  this.els.actionButton.addEventListener('click',
-    proto.onActionButtonClick.bind(this));
-
-  shadow.appendChild(tmpl);
-  this.styleHack();
-  setTimeout(this.runFontFit.bind(this), 50);
-};
-
-/**
- * Load in the the component's styles.
- *
- * We're working around a few platform bugs
- * here related to @import in the shadow-dom
- * stylesheet. When HTML-Imports are ready
- * we won't have to use @import anymore.
- *
- * @private
- */
-proto.styleHack = function() {
-  var style = document.createElement('style');
-  var self = this;
-
-  this.style.visibility = 'hidden';
-  style.innerHTML = '@import url(' + base + 'style.css);';
-  style.setAttribute('scoped', '');
-  this.classList.add('content');
-  this.appendChild(style);
-
-  // There are platform issues around using
-  // @import inside shadow root. Ensuring the
-  // stylesheet has loaded before putting it in
-  // the shadow root seems to work around this.
-  style.addEventListener('load', function() {
-    self.shadowRoot.appendChild(style.cloneNode(true));
-    self.style.visibility = '';
-    self.styled = true;
-    self.dispatchEvent(new CustomEvent('styled'));
-  });
-};
-
-proto.runFontFit = function() {
-  for (var i = 0; i < this.els.headings.length; i++) {
-    fontFit.reformatHeading(this.els.headings[i]);
-    fontFit.observeHeadingChanges(this.els.headings[i]);
-  }
-};
-
-/**
- * Called when one of the attributes
- * on the element changes.
- *
- * @private
- */
-proto.attributeChangedCallback = function(attr, oldVal, newVal) {
-  if (attr === 'action') {
-    this.configureActionButton();
-    fontFit.reformatHeading(this._heading);
-  }
-};
-
-/**
- * When called, trigger the action button.
- */
-proto.triggerAction = function() {
-  if (this.isSupportedAction(this.getAttribute('action'))) {
-    this.els.actionButton.click();
-  }
-};
-
-/**
- * Configure the action button based
- * on the value of the `data-action`
- * attribute.
- *
- * @private
- */
-proto.configureActionButton = function() {
-  var old = this.els.actionButton.getAttribute('icon');
-  var type = this.getAttribute('action');
-  var supported = this.isSupportedAction(type);
-
-  this.els.inner.classList.toggle('supported-action', supported);
-  if (!supported) { return; }
-
-  this.els.actionButton.style.display = 'block';
-  this.els.actionButton.classList.remove('icon-' + old);
-  this.els.actionButton.classList.add('icon-' + type);
-};
-
-/**
- * Validate action against supported list.
- *
- * @private
- */
-proto.isSupportedAction = function(action) {
-  return action && actionTypes[action];
-};
-
-/**
- * Handle clicks on the action button.
- *
- * Fired async to allow the 'click' event
- * to finish its event path before
- * dispatching the 'action' event.
- *
- * @param  {Event} e
- * @private
- */
-proto.onActionButtonClick = function(e) {
-  var config = { detail: { type: this.getAttribute('action') } };
-  var actionEvent = new CustomEvent('action', config);
-  setTimeout(this.dispatchEvent.bind(this, actionEvent));
-};
-
-// HACK: Create a <template> in memory at runtime.
-// When the custom-element is created we clone
-// this template and inject into the shadow-root.
-// Prior to this we would have had to copy/paste
-// the template into the <head> of every app that
-// wanted to use <gaia-header>, this would make
-// markup changes complicated, and could lead to
-// things getting out of sync. This is a short-term
-// hack until we can import entire custom-elements
-// using HTML Imports (bug 877072).
-var template = document.createElement('template');
-template.innerHTML = [
-  '<div class="inner">',
-    '<button class="action-button"></button>',
-    '<content></content>',
-  '</div>'
-].join('');
-
-// Load the icon-font into the document <head>
-(function loadFont() {
-  var href = baseComponents + 'gaia-icons/style.css';
-  var existing = document.querySelector('link[href="' + href + '"]');
-  if (existing) { return; }
-  var link = document.createElement('link');
-  link.rel = 'stylesheet';
-  link.type = 'text/css';
-  link.href = href;
-  document.head.appendChild(link);
-})();
-
-// Register and return the constructor
-module.exports = document.registerElement('gaia-header', { prototype: proto });
-
-});})((function(n,w){'use strict';return typeof define=='function'&&define.amd?
-define:typeof module=='object'?function(c){c(_dereq_,exports,module);}:
-function(c){var m={exports:{}},r=function(n){return w[n];};
-w[n]=c(r,m.exports,m)||m.exports;};})('gaia-header',this));
-
-},{"./lib/font-fit":1}]},{},[2])
-(2)
-});
\ No newline at end of file
diff --git a/apps/camera/bower_components/gaia-header/lib/font-fit.js b/apps/camera/bower_components/gaia-header/lib/font-fit.js
deleted file mode 100644
index 9163244..0000000
--- a/apps/camera/bower_components/gaia-header/lib/font-fit.js
+++ /dev/null
@@ -1,323 +0,0 @@
-(function(define){'use strict';define(function(require,exports,module){
-/*globals define,exports,module,require*/
-
-  /**
-   * Utility functions for measuring and manipulating font sizes
-   */
-  var GaiaHeaderFontFit = {
-    /**
-     * Allowable font sizes for header elements.
-     */
-    _HEADER_SIZES: [
-      16, 17, 18, 19, 20, 21, 22, 23, 24
-    ],
-
-    /**
-     * Perform auto-resize when textContent changes on element.
-     *
-     * @param {HTMLHeadingElement} heading The element to observer for changes
-     */
-    observeHeadingChanges: function(heading) {
-      var observer = this._getTextChangeObserver();
-      // Listen for any changes in the child nodes of the header.
-      observer.observe(heading, { childList: true });
-    },
-
-    /**
-     * Resize and reposition the header text based on string length and
-     * container position.
-     *
-     * @param {HTMLHeadingElement} heading h1 text inside header to reformat.
-     */
-    reformatHeading: function(heading) {
-      // Skip resize logic if header has no content, ie before localization.
-      if (!heading || heading.textContent.trim() === '') {
-        return;
-      }
-
-      // Reset our centering styles.
-      this._resetCentering(heading);
-
-      // Cache the element style properties to avoid reflows.
-      var style = this._getStyleProperties(heading);
-
-      // Perform auto-resize and center.
-      style.textWidth = this._autoResizeElement(heading, style);
-      this._centerTextToScreen(heading, style);
-    },
-
-    /**
-     * Clear any current canvas contexts from the cache.
-     */
-    resetCache: function() {
-      this._cachedContexts = {};
-    },
-
-    /**
-     * Keep a cache of canvas contexts with a given font.
-     * We do this because it is faster to create new canvases
-     * than to re-set the font on existing contexts repeatedly.
-     *
-     * @private
-     */
-    _cachedContexts: {},
-
-    /**
-     * Grab or create a cached canvas context for a given fontSize/family pair.
-     * @todo Add font-weight as a new dimension for caching.
-     *
-     * @param {number} fontSize The font size of the canvas we want.
-     * @param {string} fontFamily The font family of the canvas we want.
-     * @param {string} fontStyle The style of the font (default to italic).
-     * @return {CanvasRenderingContext2D} A context with the specified font.
-     * @private
-     */
-    _getCachedContext: function(fontSize, fontFamily, fontStyle) {
-      // Default to italic style since this code is only ever used
-      // by headers right now and header text is always italic.
-      fontStyle = fontStyle || 'italic';
-
-      var cache = this._cachedContexts;
-      var ctx = cache[fontSize] && cache[fontSize][fontFamily] ?
-        cache[fontSize][fontFamily][fontStyle] : null;
-
-      if (!ctx) {
-        var canvas = document.createElement('canvas');
-        canvas.setAttribute('moz-opaque', 'true');
-        canvas.setAttribute('width', '1');
-        canvas.setAttribute('height', '1');
-
-        ctx = canvas.getContext('2d', { willReadFrequently: true });
-        ctx.font = fontStyle + ' ' + fontSize + 'px ' + fontFamily;
-
-        // Populate the contexts cache.
-        if (!cache[fontSize]) {
-          cache[fontSize] = {};
-        }
-        if (!cache[fontSize][fontFamily]) {
-          cache[fontSize][fontFamily] = {};
-        }
-        cache[fontSize][fontFamily][fontStyle] = ctx;
-      }
-
-      return ctx;
-    },
-
-    /**
-     * Use a single observer for all text changes we are interested in.
-     *
-     * @private
-     */
-    _textChangeObserver: null,
-
-    /**
-     * Auto-resize all text changes.
-     *
-     * @param {Array} mutations A MutationRecord list.
-     * @private
-     */
-    _handleTextChanges: function(mutations) {
-      for (var i = 0; i < mutations.length; i++) {
-        this.reformatHeading(mutations[i].target);
-      }
-    },
-
-    /**
-     * Singleton-like interface for getting our text change observer.
-     * By reusing the observer, we make sure we only ever attach a
-     * single observer to any given element we are interested in.
-     *
-     * @private
-     */
-    _getTextChangeObserver: function() {
-      if (!this._textChangeObserver) {
-        this._textChangeObserver = new MutationObserver(
-          this._handleTextChanges.bind(this));
-      }
-      return this._textChangeObserver;
-    },
-
-    /**
-     * Get the width of a string in pixels, given its fontSize and fontFamily
-     * and fontStyle.
-     *
-     * @param {string} string The string we are measuring.
-     * @param {number} fontSize The size of the font to measure against.
-     * @param {string} fontFamily The font family to measure against.
-     * @param {string} fontStyle The style of the font (default to italic).
-     * @return {number} The pixel width of the string with the given font.
-     * @private
-     */
-    _getFontWidth: function(string, fontSize, fontFamily, fontStyle) {
-      var ctx = this._getCachedContext(fontSize, fontFamily, fontStyle);
-      return ctx.measureText(string).width;
-    },
-
-    /**
-     * Get the maximum allowable fontSize for a string such that it will
-     * not overflow past a maximum width.
-     *
-     * @param {string} string The string for which to check max font size.
-     * @param {Array.<number>} allowedSizes A list of fontSizes allowed.
-     * @param {string} fontFamily The font family of the string we're measuring.
-     * @param {number} maxWidth The maximum number of pixels before overflow.
-     * @return {Object} Dict containing max fontSize and overflow flag.
-     * @private
-     */
-    _getMaxFontSizeInfo: function(string, allowedSizes, fontFamily, maxWidth) {
-      var fontSize;
-      var resultWidth;
-      var i = allowedSizes.length - 1;
-
-      do {
-        fontSize = allowedSizes[i];
-        resultWidth = this._getFontWidth(string, fontSize, fontFamily);
-        i--;
-      } while (resultWidth > maxWidth && i >= 0);
-
-      return {
-        fontSize: fontSize,
-        overflow: resultWidth > maxWidth,
-        textWidth: resultWidth
-      };
-    },
-
-    /**
-     * Get an element's content width disregarding its box model sizing.
-     *
-     * @param {Object} style element, or style object.
-     * @returns {Number} Width in pixels of elements content.
-     * @private
-     */
-    _getContentWidth: function(style) {
-      var width = parseInt(style.width, 10);
-      if (style.boxSizing === 'border-box') {
-        width -= (parseInt(style.paddingRight, 10) +
-          parseInt(style.paddingLeft, 10));
-      }
-      return width;
-    },
-
-    /**
-     * Get an element's style properies.
-     *
-     * @param {HTMLHeadingElement} heading The element from which to get style.
-     * @return {Object} A dictionary containing element's style properties.
-     * @private
-     */
-    _getStyleProperties: function(heading) {
-      var style = window.getComputedStyle(heading);
-      var contentWidth = this._getContentWidth(style);
-      if (isNaN(contentWidth)) {
-        contentWidth = 0;
-      }
-
-      return {
-        fontFamily: style.fontFamily,
-        contentWidth: contentWidth,
-        paddingRight: parseInt(style.paddingRight, 10),
-        paddingLeft: parseInt(style.paddingLeft, 10),
-        offsetLeft: heading.offsetLeft
-      };
-    },
-
-    /**
-     * Auto-resize element's font to fit its content width.
-     *
-     * @param {HTMLHeadingElement} heading The element to auto-resize.
-     * @param {Object} styleOptions Dictionary containing cached style props,
-     *                 to avoid reflows caused by grabbing style properties.
-     * @return {number} The pixel width of the resized text.
-     * @private
-     */
-    _autoResizeElement: function(heading, styleOptions) {
-      var contentWidth = styleOptions.contentWidth ||
-        this._getContentWidth(heading);
-
-      var fontFamily = styleOptions.fontFamily ||
-        getComputedStyle(heading).fontFamily;
-
-      var info = this._getMaxFontSizeInfo(
-        heading.textContent,
-        this._HEADER_SIZES,
-        fontFamily,
-        contentWidth
-      );
-
-      heading.style.fontSize = info.fontSize + 'px';
-
-      return info.textWidth;
-    },
-
-    /**
-     * Reset the auto-centering styling on an element.
-     *
-     * @param {HTMLHeadingElement} heading The element to reset.
-     * @private
-     */
-    _resetCentering: function(heading) {
-      // We need to set the lateral margins to 0 to be able to measure the
-      // element width properly. All previously set values are ignored.
-      heading.style.marginLeft = heading.style.marginRight = '0';
-    },
-
-    /**
-     * Center an elements text based on screen position rather than container.
-     *
-     * @param {HTMLHeadingElement} heading The element we want to center.
-     * @param {Object} styleOptions Dictionary containing cached style props,
-     *                 avoids reflows caused by caching style properties.
-     * @private
-     */
-    _centerTextToScreen: function(heading, styleOptions) {
-      // Calculate the minimum amount of space needed for the header text
-      // to be displayed without overflowing its content box.
-      var minHeaderWidth = styleOptions.textWidth + styleOptions.paddingRight +
-        styleOptions.paddingLeft;
-
-      // Get the amount of space on each side of the header text element.
-      var sideSpaceLeft = styleOptions.offsetLeft;
-      var sideSpaceRight = this._getWindowWidth() - sideSpaceLeft -
-        styleOptions.contentWidth - styleOptions.paddingRight -
-        styleOptions.paddingLeft;
-
-      // If both margins have the same width, the header is already centered.
-      if (sideSpaceLeft === sideSpaceRight) {
-        return;
-      }
-
-      // To center, we need to make sure the space to the left of the header
-      // is the same as the space to the right, so take the largest of the two.
-      var margin = Math.max(sideSpaceLeft, sideSpaceRight);
-
-      // If the minimum amount of space our header needs plus the max margins
-      // fits inside the width of the window, we can center this header.
-      // We subtract 1 pixels to wrap text like Gecko.
-      // See https://bugzil.la/1026955
-      if (minHeaderWidth + (margin * 2) < this._getWindowWidth() - 1) {
-        if (sideSpaceLeft < sideSpaceRight) {
-          heading.style.marginLeft = (sideSpaceRight - sideSpaceLeft) + 'px';
-        }
-        if (sideSpaceRight < sideSpaceLeft) {
-          heading.style.marginRight = (sideSpaceLeft - sideSpaceRight) + 'px';
-        }
-      }
-    },
-
-    /**
-     * Cache and return the width of the inner window.
-     *
-     * @return {number} The width of the inner window in pixels.
-     * @private
-     */
-    _getWindowWidth: function() {
-      return window.innerWidth;
-    }
-  };
-
-  module.exports = GaiaHeaderFontFit;
-
-});})((function(n,w){'use strict';return typeof define=='function'&&define.amd?
-define:typeof module=='object'?function(c){c(require,exports,module);}:
-function(c){var m={exports:{}},r=function(n){return w[n];};
-w[n]=c(r,m.exports,m)||m.exports;};})('./lib/font-fit',this));
diff --git a/apps/camera/bower_components/gaia-header/script.js b/apps/camera/bower_components/gaia-header/script.js
deleted file mode 100644
index 1d1f669..0000000
--- a/apps/camera/bower_components/gaia-header/script.js
+++ /dev/null
@@ -1,202 +0,0 @@
-(function(define){'use strict';define(function(require,exports,module){
-/*globals define*//*jshint node:true*/
-
-/**
- * Dependencies
- */
-
-var fontFit = require('./lib/font-fit');
-
-/**
- * Locals
- */
-
-var baseComponents = window.COMPONENTS_BASE_URL || 'bower_components/';
-var base = window.GAIA_HEADER_BASE_URL || baseComponents + 'gaia-header/';
-
-// Extend from the HTMLElement prototype
-var proto = Object.create(HTMLElement.prototype);
-
-/**
- * Supported action types
- *
- * @type {Object}
- */
-var actionTypes = {
-  menu: true,
-  back: true,
-  close: true,
-};
-
-/**
- * Called when the element is first created.
- *
- * Here we create the shadow-root and
- * inject our template into it.
- *
- * @private
- */
-proto.createdCallback = function() {
-  var shadow = this.createShadowRoot();
-  var tmpl = template.content.cloneNode(true);
-
-  // Get els
-  this.els = {
-    actionButton: tmpl.querySelector('.action-button'),
-    headings: this.querySelectorAll('h1,h2,h3,h4'),
-    inner: tmpl.querySelector('.inner')
-  };
-
-  // Action button
-  this.configureActionButton();
-  this.els.actionButton.addEventListener('click',
-    proto.onActionButtonClick.bind(this));
-
-  shadow.appendChild(tmpl);
-  this.styleHack();
-  setTimeout(this.runFontFit.bind(this), 50);
-};
-
-/**
- * Load in the the component's styles.
- *
- * We're working around a few platform bugs
- * here related to @import in the shadow-dom
- * stylesheet. When HTML-Imports are ready
- * we won't have to use @import anymore.
- *
- * @private
- */
-proto.styleHack = function() {
-  var style = document.createElement('style');
-  var self = this;
-
-  this.style.visibility = 'hidden';
-  style.innerHTML = '@import url(' + base + 'style.css);';
-  style.setAttribute('scoped', '');
-  this.classList.add('content');
-  this.appendChild(style);
-
-  // There are platform issues around using
-  // @import inside shadow root. Ensuring the
-  // stylesheet has loaded before putting it in
-  // the shadow root seems to work around this.
-  style.addEventListener('load', function() {
-    self.shadowRoot.appendChild(style.cloneNode(true));
-    self.style.visibility = '';
-    self.styled = true;
-    self.dispatchEvent(new CustomEvent('styled'));
-  });
-};
-
-proto.runFontFit = function() {
-  for (var i = 0; i < this.els.headings.length; i++) {
-    fontFit.reformatHeading(this.els.headings[i]);
-    fontFit.observeHeadingChanges(this.els.headings[i]);
-  }
-};
-
-/**
- * Called when one of the attributes
- * on the element changes.
- *
- * @private
- */
-proto.attributeChangedCallback = function(attr, oldVal, newVal) {
-  if (attr === 'action') {
-    this.configureActionButton();
-    fontFit.reformatHeading(this._heading);
-  }
-};
-
-/**
- * When called, trigger the action button.
- */
-proto.triggerAction = function() {
-  if (this.isSupportedAction(this.getAttribute('action'))) {
-    this.els.actionButton.click();
-  }
-};
-
-/**
- * Configure the action button based
- * on the value of the `data-action`
- * attribute.
- *
- * @private
- */
-proto.configureActionButton = function() {
-  var old = this.els.actionButton.getAttribute('icon');
-  var type = this.getAttribute('action');
-  var supported = this.isSupportedAction(type);
-
-  this.els.inner.classList.toggle('supported-action', supported);
-  if (!supported) { return; }
-
-  this.els.actionButton.style.display = 'block';
-  this.els.actionButton.classList.remove('icon-' + old);
-  this.els.actionButton.classList.add('icon-' + type);
-};
-
-/**
- * Validate action against supported list.
- *
- * @private
- */
-proto.isSupportedAction = function(action) {
-  return action && actionTypes[action];
-};
-
-/**
- * Handle clicks on the action button.
- *
- * Fired async to allow the 'click' event
- * to finish its event path before
- * dispatching the 'action' event.
- *
- * @param  {Event} e
- * @private
- */
-proto.onActionButtonClick = function(e) {
-  var config = { detail: { type: this.getAttribute('action') } };
-  var actionEvent = new CustomEvent('action', config);
-  setTimeout(this.dispatchEvent.bind(this, actionEvent));
-};
-
-// HACK: Create a <template> in memory at runtime.
-// When the custom-element is created we clone
-// this template and inject into the shadow-root.
-// Prior to this we would have had to copy/paste
-// the template into the <head> of every app that
-// wanted to use <gaia-header>, this would make
-// markup changes complicated, and could lead to
-// things getting out of sync. This is a short-term
-// hack until we can import entire custom-elements
-// using HTML Imports (bug 877072).
-var template = document.createElement('template');
-template.innerHTML = [
-  '<div class="inner">',
-    '<button class="action-button"></button>',
-    '<content></content>',
-  '</div>'
-].join('');
-
-// Load the icon-font into the document <head>
-(function loadFont() {
-  var href = baseComponents + 'gaia-icons/style.css';
-  var existing = document.querySelector('link[href="' + href + '"]');
-  if (existing) { return; }
-  var link = document.createElement('link');
-  link.rel = 'stylesheet';
-  link.type = 'text/css';
-  link.href = href;
-  document.head.appendChild(link);
-})();
-
-// Register and return the constructor
-module.exports = document.registerElement('gaia-header', { prototype: proto });
-
-});})((function(n,w){'use strict';return typeof define=='function'&&define.amd?
-define:typeof module=='object'?function(c){c(require,exports,module);}:
-function(c){var m={exports:{}},r=function(n){return w[n];};
-w[n]=c(r,m.exports,m)||m.exports;};})('gaia-header',this));
diff --git a/apps/camera/bower_components/gaia-header/style.css b/apps/camera/bower_components/gaia-header/style.css
deleted file mode 100644
index d4a86b1..0000000
--- a/apps/camera/bower_components/gaia-header/style.css
+++ /dev/null
@@ -1,164 +0,0 @@
-
-/**
- * Gaia Header
- */
-
-gaia-header {
-  display: block;
-}
-
-/** Inner
- ---------------------------------------------------------*/
-
-.inner {
-  display: flex;
-  min-height: 50px;
-  background: var(--header-background, #fff);
-}
-
-/** Action Button
- ---------------------------------------------------------*/
-
-/**
- * 1. Hidden by default
- */
-
-.action-button {
-  display: none; /* 1 */
-  align-items: center;
-  min-width: 50px;
-  font-size: 40px;
-  border: none;
-  color: var(--header-nav-button-color, #000);
-}
-
-/**
- * .action-supported
- *
- * 1. For icon vertical-alignment
- */
-
-.action-supported .action-button {
-  display: flex; /* 1 */
-}
-
-/**
- * :active
- */
-
-.action-button:active {
-  color: var(--header-nav-button-color-active, #fff);
-}
-
-/** Action Button Icon
- ---------------------------------------------------------*/
-
-/**
- * 1. To enable vertical alignment.
- */
-
-.action-button:before {
-  display: block;
-}
-
-
-/** Title
- ---------------------------------------------------------*/
-
-.content h1 {
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  flex: 1;
-  margin: 0;
-  padding: 0 16px;
-  white-space: nowrap;
-  text-overflow: ellipsis;
-  overflow: hidden;
-  text-align: center;
-  font-weight: 300;
-  font-style: italic;
-  font-size: 24px;
-  color: var(--header-title-color, #000);
-}
-
-/** Buttons
- ---------------------------------------------------------*/
-
-a,
-button,
-.content a,
-.content button {
-  display: block;
-  border: none;
-  width: auto;
-  height: auto;
-  margin: 0;
-  padding: 0;
-  font-size: 14px;
-  min-width: 50px;
-  text-decoration: none;
-  text-align: center;
-  background: none;
-  border-radius: 0;
-  color: var(--header-button-color, #000);
-  font-style: italic;
-  transition: var(--button-transition);
-  transition-delay: var(--button-transition-delay);
-}
-
-/**
- * :active
- */
-
-a:active,
-button:active,
-.content a:active,
-.content button:active {
-  background: var(--header-button-background, #000);
-  color: var(--header-button-color-active, #fff);
-  transition: none;
-}
-
-/**
- * :focus
- */
-
-a:focus,
-.content a:focus {
-  outline: none;
-}
-
-/** Icon Buttons
- ---------------------------------------------------------*/
-
-/**
- * Icons are a different color to text
- */
-
-.content [class*="icon-"] {
-  color: var(--header-nav-button-color, #000);
-}
-
-/**
- * :active
- */
-
-.content [class*="icon-"]:active {
-  color: var(--header-nav-button-color-active, #fff);
-}
-
-/** Icons
- ---------------------------------------------------------*/
-
-[class^="icon-"]:before,
-[class*="icon-"]:before {
-  font-family: "gaia-icons";
-  font-weight: normal;
-  font-style: normal;
-  text-rendering: optimizeLegibility;
-}
-
-.icon-back:before { content: 'back'; }
-.icon-menu:before { content: 'menu'; }
-.icon-close:before { content: 'close'; }
diff --git a/apps/camera/bower_components/gaia-icons/.bower.json b/apps/camera/bower_components/gaia-icons/.bower.json
deleted file mode 100644
index 25da6d2..0000000
--- a/apps/camera/bower_components/gaia-icons/.bower.json
+++ /dev/null
@@ -1,33 +0,0 @@
-{
-  "name": "gaia-icons",
-  "version": "0.2.1",
-  "homepage": "https://github.com/wilsonpage/gaia-icons",
-  "authors": [
-    "Wilson Page <wilsonpage@me.com>"
-  ],
-  "main": "style.css",
-  "license": "MIT",
-  "ignore": [
-    "**/.*",
-    "node_modules",
-    "bower_components",
-    "templates",
-    "images",
-    "test",
-    "tests",
-    "index.html",
-    "create-svg-icon-set-file.py",
-    "Gruntfile.js",
-    "README.md",
-    "package.json"
-  ],
-  "_release": "0.2.1",
-  "_resolution": {
-    "type": "version",
-    "tag": "v0.2.1",
-    "commit": "88d24a66d6d0a7f949c38c07d32a24bef23a1089"
-  },
-  "_source": "git://github.com/gaia-components/gaia-icons.git",
-  "_target": "~0.2.1",
-  "_originalSource": "gaia-components/gaia-icons"
-}
\ No newline at end of file
diff --git a/apps/camera/bower_components/gaia-icons/bower.json b/apps/camera/bower_components/gaia-icons/bower.json
deleted file mode 100644
index 6e56fc1..0000000
--- a/apps/camera/bower_components/gaia-icons/bower.json
+++ /dev/null
@@ -1,24 +0,0 @@
-{
-  "name": "gaia-icons",
-  "version": "0.2.1",
-  "homepage": "https://github.com/wilsonpage/gaia-icons",
-  "authors": [
-    "Wilson Page <wilsonpage@me.com>"
-  ],
-  "main": "style.css",
-  "license": "MIT",
-  "ignore": [
-    "**/.*",
-    "node_modules",
-    "bower_components",
-    "templates",
-    "images",
-    "test",
-    "tests",
-    "index.html",
-    "create-svg-icon-set-file.py",
-    "Gruntfile.js",
-    "README.md",
-    "package.json"
-  ]
-}
diff --git a/apps/camera/bower_components/gaia-icons/fonts/gaia-icons.eot b/apps/camera/bower_components/gaia-icons/fonts/gaia-icons.eot
deleted file mode 100644
index 329ab34..0000000
Binary files a/apps/camera/bower_components/gaia-icons/fonts/gaia-icons.eot and /dev/null differ
diff --git a/apps/camera/bower_components/gaia-icons/fonts/gaia-icons.ttf b/apps/camera/bower_components/gaia-icons/fonts/gaia-icons.ttf
deleted file mode 100644
index d3cc5ab..0000000
Binary files a/apps/camera/bower_components/gaia-icons/fonts/gaia-icons.ttf and /dev/null differ
diff --git a/apps/camera/bower_components/gaia-icons/fonts/gaia-icons.woff b/apps/camera/bower_components/gaia-icons/fonts/gaia-icons.woff
deleted file mode 100644
index 8b12d53..0000000
Binary files a/apps/camera/bower_components/gaia-icons/fonts/gaia-icons.woff and /dev/null differ
diff --git a/apps/camera/bower_components/gaia-icons/style.css b/apps/camera/bower_components/gaia-icons/style.css
deleted file mode 100644
index dafa8a2..0000000
--- a/apps/camera/bower_components/gaia-icons/style.css
+++ /dev/null
@@ -1,1033 +0,0 @@
-/* Generated by grunt-webfont */
-/* Based on https://github.com/endtwist/fontcustom/blob/master/lib/fontcustom/templates/fontcustom.css */
-
-
-@font-face {
-	font-family:"gaia-icons";
-	src:url("data:font/woff;base64,") format("woff");
-	font-weight:normal;
-	font-style:normal;
-}
-
-
-/* Bootstrap Overrides */
-[class^="icon-"]:before,
-[class*=" icon-"]:before,
-.ligature-icons {
-	font-family:"gaia-icons";
-	display:inline-block;
-	font-weight:normal;
-	font-style:normal;
-	speak:none;
-	text-decoration:inherit;
-	text-transform:none;
-	text-rendering:optimizeLegibility;
-	-webkit-font-smoothing:antialiased;
-	-moz-osx-font-smoothing:grayscale;
-}
-
-
-
-/* Icons */
-
-
-.icon-accessibility:before {
-	content:"accessibility";
-}
-
-
-
-.icon-add-contact:before {
-	content:"add-contact";
-}
-
-
-
-.icon-add:before {
-	content:"add";
-}
-
-
-
-.icon-airplane:before {
-	content:"airplane";
-}
-
-
-
-.icon-alarm-full:before {
-	content:"alarm-full";
-}
-
-
-
-.icon-alarm-stop:before {
-	content:"alarm-stop";
-}
-
-
-
-.icon-alarm:before {
-	content:"alarm";
-}
-
-
-
-.icon-album:before {
-	content:"album";
-}
-
-
-
-.icon-all-day:before {
-	content:"all-day";
-}
-
-
-
-.icon-arrow-back:before {
-	content:"arrow-back";
-}
-
-
-
-.icon-arrow-forward:before {
-	content:"arrow-forward";
-}
-
-
-
-.icon-artist:before {
-	content:"artist";
-}
-
-
-
-.icon-attachment:before {
-	content:"attachment";
-}
-
-
-
-.icon-back:before {
-	content:"back";
-}
-
-
-
-.icon-battery-low:before {
-	content:"battery-low";
-}
-
-
-
-.icon-battery-very-low:before {
-	content:"battery-very-low";
-}
-
-
-
-.icon-battery:before {
-	content:"battery";
-}
-
-
-
-.icon-bluetooth:before {
-	content:"bluetooth";
-}
-
-
-
-.icon-brightness:before {
-	content:"brightness";
-}
-
-
-
-.icon-calendar:before {
-	content:"calendar";
-}
-
-
-
-.icon-call-bluetooth:before {
-	content:"call-bluetooth";
-}
-
-
-
-.icon-call-hang-up:before {
-	content:"call-hang-up";
-}
-
-
-
-.icon-call-hold:before {
-	content:"call-hold";
-}
-
-
-
-.icon-call-incoming:before {
-	content:"call-incoming";
-}
-
-
-
-.icon-call-merge:before {
-	content:"call-merge";
-}
-
-
-
-.icon-call-missed:before {
-	content:"call-missed";
-}
-
-
-
-.icon-call-outgoing:before {
-	content:"call-outgoing";
-}
-
-
-
-.icon-call-reversed:before {
-	content:"call-reversed";
-}
-
-
-
-.icon-call:before {
-	content:"call";
-}
-
-
-
-.icon-camera:before {
-	content:"camera";
-}
-
-
-
-.icon-change-wallpaper:before {
-	content:"change-wallpaper";
-}
-
-
-
-.icon-clear-input:before {
-	content:"clear-input";
-}
-
-
-
-.icon-close:before {
-	content:"close";
-}
-
-
-
-.icon-compose:before {
-	content:"compose";
-}
-
-
-
-.icon-contact-find:before {
-	content:"contact-find";
-}
-
-
-
-.icon-contacts:before {
-	content:"contacts";
-}
-
-
-
-.icon-crashed:before {
-	content:"crashed";
-}
-
-
-
-.icon-crop-1x1:before {
-	content:"crop-1x1";
-}
-
-
-
-.icon-crop-2x3:before {
-	content:"crop-2x3";
-}
-
-
-
-.icon-crop-3x2:before {
-	content:"crop-3x2";
-}
-
-
-
-.icon-crop-free:before {
-	content:"crop-free";
-}
-
-
-
-.icon-crop:before {
-	content:"crop";
-}
-
-
-
-.icon-data:before {
-	content:"data";
-}
-
-
-
-.icon-delete:before {
-	content:"delete";
-}
-
-
-
-.icon-developer:before {
-	content:"developer";
-}
-
-
-
-.icon-device-info:before {
-	content:"device-info";
-}
-
-
-
-.icon-dialpad:before {
-	content:"dialpad";
-}
-
-
-
-.icon-dismiss-keyboard:before {
-	content:"dismiss-keyboard";
-}
-
-
-
-.icon-do-not-track:before {
-	content:"do-not-track";
-}
-
-
-
-.icon-download:before {
-	content:"download";
-}
-
-
-
-.icon-edit-contact:before {
-	content:"edit-contact";
-}
-
-
-
-.icon-edit-image:before {
-	content:"edit-image";
-}
-
-
-
-.icon-edit:before {
-	content:"edit";
-}
-
-
-
-.icon-email-forward:before {
-	content:"email-forward";
-}
-
-
-
-.icon-email-mark-read:before {
-	content:"email-mark-read";
-}
-
-
-
-.icon-email-mark-unread:before {
-	content:"email-mark-unread";
-}
-
-
-
-.icon-email-move:before {
-	content:"email-move";
-}
-
-
-
-.icon-email-reply:before {
-	content:"email-reply";
-}
-
-
-
-.icon-email:before {
-	content:"email";
-}
-
-
-
-.icon-exclamation:before {
-	content:"exclamation";
-}
-
-
-
-.icon-expand:before {
-	content:"expand";
-}
-
-
-
-.icon-facebook:before {
-	content:"facebook";
-}
-
-
-
-.icon-feedback:before {
-	content:"feedback";
-}
-
-
-
-.icon-find:before {
-	content:"find";
-}
-
-
-
-.icon-firefox:before {
-	content:"firefox";
-}
-
-
-
-.icon-flag:before {
-	content:"flag";
-}
-
-
-
-.icon-flash-auto:before {
-	content:"flash-auto";
-}
-
-
-
-.icon-flash-off:before {
-	content:"flash-off";
-}
-
-
-
-.icon-flash-on:before {
-	content:"flash-on";
-}
-
-
-
-.icon-focus-locked:before {
-	content:"focus-locked";
-}
-
-
-
-.icon-focus-locking:before {
-	content:"focus-locking";
-}
-
-
-
-.icon-forward:before {
-	content:"forward";
-}
-
-
-
-.icon-gesture:before {
-	content:"gesture";
-}
-
-
-
-.icon-gmail:before {
-	content:"gmail";
-}
-
-
-
-.icon-grid-circular:before {
-	content:"grid-circular";
-}
-
-
-
-.icon-grid:before {
-	content:"grid";
-}
-
-
-
-.icon-hdr-boxed:before {
-	content:"hdr-boxed";
-}
-
-
-
-.icon-hdr:before {
-	content:"hdr";
-}
-
-
-
-.icon-help:before {
-	content:"help";
-}
-
-
-
-.icon-homescreen:before {
-	content:"homescreen";
-}
-
-
-
-.icon-incoming-sms:before {
-	content:"incoming-sms";
-}
-
-
-
-.icon-info:before {
-	content:"info";
-}
-
-
-
-.icon-keyboard:before {
-	content:"keyboard";
-}
-
-
-
-.icon-languages:before {
-	content:"languages";
-}
-
-
-
-.icon-link:before {
-	content:"link";
-}
-
-
-
-.icon-location:before {
-	content:"location";
-}
-
-
-
-.icon-lock:before {
-	content:"lock";
-}
-
-
-
-.icon-media-storage:before {
-	content:"media-storage";
-}
-
-
-
-.icon-menu:before {
-	content:"menu";
-}
-
-
-
-.icon-messages:before {
-	content:"messages";
-}
-
-
-
-.icon-mic:before {
-	content:"mic";
-}
-
-
-
-.icon-minus:before {
-	content:"minus";
-}
-
-
-
-.icon-more:before {
-	content:"more";
-}
-
-
-
-.icon-mute:before {
-	content:"mute";
-}
-
-
-
-.icon-network:before {
-	content:"network";
-}
-
-
-
-.icon-nfc:before {
-	content:"nfc";
-}
-
-
-
-.icon-no-favicon:before {
-	content:"no-favicon";
-}
-
-
-
-.icon-notifications:before {
-	content:"notifications";
-}
-
-
-
-.icon-outgoing-sms:before {
-	content:"outgoing-sms";
-}
-
-
-
-.icon-outlook:before {
-	content:"outlook";
-}
-
-
-
-.icon-pause:before {
-	content:"pause";
-}
-
-
-
-.icon-picture-size:before {
-	content:"picture-size";
-}
-
-
-
-.icon-play:before {
-	content:"play";
-}
-
-
-
-.icon-playlist:before {
-	content:"playlist";
-}
-
-
-
-.icon-privacy:before {
-	content:"privacy";
-}
-
-
-
-.icon-radio:before {
-	content:"radio";
-}
-
-
-
-.icon-recent-calls:before {
-	content:"recent-calls";
-}
-
-
-
-.icon-reload:before {
-	content:"reload";
-}
-
-
-
-.icon-repeat-once:before {
-	content:"repeat-once";
-}
-
-
-
-.icon-repeat:before {
-	content:"repeat";
-}
-
-
-
-.icon-reply-all:before {
-	content:"reply-all";
-}
-
-
-
-.icon-rotate:before {
-	content:"rotate";
-}
-
-
-
-.icon-scene:before {
-	content:"scene";
-}
-
-
-
-.icon-sd-card:before {
-	content:"sd-card";
-}
-
-
-
-.icon-search:before {
-	content:"search";
-}
-
-
-
-.icon-secure-unverified:before {
-	content:"secure-unverified";
-}
-
-
-
-.icon-secure:before {
-	content:"secure";
-}
-
-
-
-.icon-seek-back:before {
-	content:"seek-back";
-}
-
-
-
-.icon-seek-forward:before {
-	content:"seek-forward";
-}
-
-
-
-.icon-select:before {
-	content:"select";
-}
-
-
-
-.icon-self-timer:before {
-	content:"self-timer";
-}
-
-
-
-.icon-send:before {
-	content:"send";
-}
-
-
-
-.icon-settings:before {
-	content:"settings";
-}
-
-
-
-.icon-share:before {
-	content:"share";
-}
-
-
-
-.icon-shuffle:before {
-	content:"shuffle";
-}
-
-
-
-.icon-sim-toolkit:before {
-	content:"sim-toolkit";
-}
-
-
-
-.icon-sim:before {
-	content:"sim";
-}
-
-
-
-.icon-skip-back:before {
-	content:"skip-back";
-}
-
-
-
-.icon-skip-forward:before {
-	content:"skip-forward";
-}
-
-
-
-.icon-sms:before {
-	content:"sms";
-}
-
-
-
-.icon-songs:before {
-	content:"songs";
-}
-
-
-
-.icon-sound-max:before {
-	content:"sound-max";
-}
-
-
-
-.icon-sound-min:before {
-	content:"sound-min";
-}
-
-
-
-.icon-sound-mute:before {
-	content:"sound-mute";
-}
-
-
-
-.icon-sparkle:before {
-	content:"sparkle";
-}
-
-
-
-.icon-star-empty:before {
-	content:"star-empty";
-}
-
-
-
-.icon-star-full:before {
-	content:"star-full";
-}
-
-
-
-.icon-stop:before {
-	content:"stop";
-}
-
-
-
-.icon-storage:before {
-	content:"storage";
-}
-
-
-
-.icon-switch:before {
-	content:"switch";
-}
-
-
-
-.icon-sync:before {
-	content:"sync";
-}
-
-
-
-.icon-tethering:before {
-	content:"tethering";
-}
-
-
-
-.icon-tick:before {
-	content:"tick";
-}
-
-
-
-.icon-time:before {
-	content:"time";
-}
-
-
-
-.icon-toggle-camera-front:before {
-	content:"toggle-camera-front";
-}
-
-
-
-.icon-toggle-camera-rear:before {
-	content:"toggle-camera-rear";
-}
-
-
-
-.icon-topup-with-code:before {
-	content:"topup-with-code";
-}
-
-
-
-.icon-topup:before {
-	content:"topup";
-}
-
-
-
-.icon-twitter:before {
-	content:"twitter";
-}
-
-
-
-.icon-undo-circular:before {
-	content:"undo-circular";
-}
-
-
-
-.icon-undo:before {
-	content:"undo";
-}
-
-
-
-.icon-unlock:before {
-	content:"unlock";
-}
-
-
-
-.icon-update-balance:before {
-	content:"update-balance";
-}
-
-
-
-.icon-usb:before {
-	content:"usb";
-}
-
-
-
-.icon-user:before {
-	content:"user";
-}
-
-
-
-.icon-vibrate:before {
-	content:"vibrate";
-}
-
-
-
-.icon-video-size:before {
-	content:"video-size";
-}
-
-
-
-.icon-video:before {
-	content:"video";
-}
-
-
-
-.icon-voicemail:before {
-	content:"voicemail";
-}
-
-
-
-.icon-wallpaper:before {
-	content:"wallpaper";
-}
-
-
-
-.icon-wand:before {
-	content:"wand";
-}
-
-
-
-.icon-wifi-1:before {
-	content:"wifi-1";
-}
-
-
-
-.icon-wifi-2:before {
-	content:"wifi-2";
-}
-
-
-
-.icon-wifi-3:before {
-	content:"wifi-3";
-}
-
-
-
-.icon-wifi-4:before {
-	content:"wifi-4";
-}
-
-
-
-.icon-wifi-5:before {
-	content:"wifi-5";
-}
-
-
-
-.icon-wifi-permissions:before {
-	content:"wifi-permissions";
-}
-
diff --git a/apps/camera/bower_components/gaia-theme/.bower.json b/apps/camera/bower_components/gaia-theme/.bower.json
deleted file mode 100644
index c31faa0..0000000
--- a/apps/camera/bower_components/gaia-theme/.bower.json
+++ /dev/null
@@ -1,34 +0,0 @@
-{
-  "name": "gaia-theme",
-  "version": "0.2.0",
-  "homepage": "https://github.com/gaia-components/gaia-theme",
-  "authors": [
-    "Wilson Page <wilsonpage@me.com>"
-  ],
-  "license": "MIT",
-  "ignore": [
-    "**/.*",
-    "node_modules",
-    "bower_components",
-    "test",
-    "tests",
-    "index.html",
-    "README.md"
-  ],
-  "devDependencies": {
-    "gaia-icons": "gaia-components/gaia-icons",
-    "gaia-header": "gaia-components/gaia-header",
-    "gaia-button": "gaia-components/gaia-button",
-    "gaia-switch": "gaia-components/gaia-switch",
-    "gaia-checkbox": "gaia-components/gaia-checkbox"
-  },
-  "_release": "0.2.0",
-  "_resolution": {
-    "type": "version",
-    "tag": "v0.2.0",
-    "commit": "98d119bce01e390f38ce36bd059750e71954dd43"
-  },
-  "_source": "git://github.com/gaia-components/gaia-theme.git",
-  "_target": "~0.2.0",
-  "_originalSource": "gaia-components/gaia-theme"
-}
\ No newline at end of file
diff --git a/apps/camera/bower_components/gaia-theme/bower.json b/apps/camera/bower_components/gaia-theme/bower.json
deleted file mode 100644
index 2090355..0000000
--- a/apps/camera/bower_components/gaia-theme/bower.json
+++ /dev/null
@@ -1,25 +0,0 @@
-{
-  "name": "gaia-theme",
-  "version": "0.2.0",
-  "homepage": "https://github.com/gaia-components/gaia-theme",
-  "authors": [
-    "Wilson Page <wilsonpage@me.com>"
-  ],
-  "license": "MIT",
-  "ignore": [
-    "**/.*",
-    "node_modules",
-    "bower_components",
-    "test",
-    "tests",
-    "index.html",
-    "README.md"
-  ],
-  "devDependencies": {
-    "gaia-icons": "gaia-components/gaia-icons",
-    "gaia-header": "gaia-components/gaia-header",
-    "gaia-button": "gaia-components/gaia-button",
-    "gaia-switch": "gaia-components/gaia-switch",
-    "gaia-checkbox": "gaia-components/gaia-checkbox"
-  }
-}
diff --git a/apps/camera/bower_components/gaia-theme/style.css b/apps/camera/bower_components/gaia-theme/style.css
deleted file mode 100644
index e929e58..0000000
--- a/apps/camera/bower_components/gaia-theme/style.css
+++ /dev/null
@@ -1,148 +0,0 @@
-/*
-gaia.css
-Customizable styles?
-- fonts, colors, default stying for elements.
-- styling for non web component UI elements.
-*/
-
-:root {
-  /* base colors */
-  --color-alpha: #333333;
-  --color-beta: #ffffff;
-  --color-gamma: #4d4d4d;
-  --color-delta: #5f5f5f;
-  --color-epsilon: #858585;
-  --color-zeta: #a6a6a6;
-  --color-eta: #c7c7c7;
-  --color-theta: #e7e7e7;
-  --color-iota: #f4f4f4;
-  --button-transition: all 0s;
-  --button-transition-delay: 300ms;
-
-  --dim-micro: 6px;
-  --dim-small: 14px;
-  --dim-mega: 60px;
-}
-
-:root {
-  /* brand colors */
-  --color-brand-darkblue: #00539f;
-  --color-brand-blue: #00caf2;
-  --color-brand-turquoise: #27c8c2;
-  --color-brand-darkorange: #e66000;
-  --color-brand-orange: #ff9500;
-  --color-brand-yellow: #ffcb00;
-  --color-brand-violet: #c40c84;
-  --color-brand-alpha: #00aac5;
-  --color-brand-beta: #00caf2;
-  --color-brand-gamma: #b2f2ff;
-
-  /* base dimensions */
-  --dim-micro: 6px;
-  --dim-milli: 12px;
-  --dim-small: 16px;
-  --dim-medium: 45px;
-  --dim-large: 50px;
-  --dim-mega: 60px;
-
-  --font-small: 14px;
-  --font-medium: 17px;
-  --font-large: 23px;
-
-  /* module style vars */
-  --header-background: #fff;
-  --header-nav-button-color:  var(--color-alpha);
-  --header-nav-button-color-active: var(--color-alpha);
-  --header-button-background: rgba(0,0,0,0.1);
-  --header-button-color-active: var(--color-alpha);
-  --header-button-color: var(--color-alpha);
-  --header-title-color: var(--color-alpha);
-
-  --button-background: var(--color-beta);
-  --button-background-active: var(--color-brand-blue);
-  --button-color: var(--color-alpha);
-  --button-color-active: var(--color-beta);
-  --button-transition: all 0.2s;
-  --button-boxshadow: inset 0 -1px 0 #d8d8d8, inset 0 1px 0 #eeeeee;
-
-  --switch-color-checked: var(--color-brand-blue);
-  --switch-color: var(--color-zeta);
-
-  --checkbox-color: var(--color-brand-blue);
-}
-
-
-/* sub-theme specific variables */
-.theme-communications {
-  --header-background: var(--color-brand-turquoise);
-  --header-nav-button-color:  var(--color-beta);
-  --header-nav-button-color-active: var(--color-beta);
-  --header-button-color:rgba(0,0,0,0.4);
-  --header-button-color-active: rgba(0,0,0,0.4);
-  --header-title-color: var(--color-beta);
-
-  --button-background: var(--color-beta);
-  --button-background-active: var(--color-brand-turquoise);
-  --button-color: var(--color-alpha);
-  --button-color-active: var(--color-beta);
-
-  --switch-color-checked: var(--color-brand-turquoise);
-  --switch-color: var(--color-zeta);
-
-  --checkbox-color: var(--color-brand-turquoise);
-}
-
-.theme-media {
-  /* variables */
-  --header-background: var(--color-gamma);
-  --header-nav-button-color:  var(--color-beta);
-  --header-nav-button-color-active: var(--color-beta);
-  --header-button-color: var(--color-brand-blue);
-  --header-button-color-active: var(--color-brand-blue);
-  --header-title-color: var(--color-beta);
-
-  --button-background: var(--color-delta);
-  --button-background-active: var(--color-brand-blue);
-  --button-color: var(--color-beta);
-  --button-color-active: var(--color-beta);
-  --button-boxshadow: 'none';
-
-  --switch-color: var(--color-delta);
-  --switch-color-checked: var(--color-brand-blue);
-
-  --checkbox-color: var(--color-brand-blue);
-}
-
-.theme-productivity {
-  --header-background: var(--color-brand-orange);
-  --header-nav-button-color:  var(--color-beta);
-  --header-nav-button-color-active:   rgba(255,255,255,0.2);
-  --header-button-color: var(--color-beta);
-  --header-button-color-active: rgba(255,255,255,0.2);
-  --header-button-background: transparent;
-  --header-title-color: var(--color-beta);
-
-  --button-background: var(--color-beta);
-  --button-background-active: var(--color-brand-orange);
-  --button-color: var(--color-alpha);
-  --button-color-active: var(--color-beta);
-
-  --checkbox-color: var(--color-brand-orange);
-
-  --switch-color-checked: var(--color-brand-orange);
-}
-
-.theme-settings {
-  /* variables */
-  --header-background: var(--color-iota);
-  --header-nav-button-color:  var(--color-alpha);
-  --header-nav-button-color-active: rgba(51,51,51,0.2);
-  --header-button-color: var(--color-brand-blue);
-  --header-button-background: transparent;
-  --header-button-color-active: rgba(0,202,242,0.2);
-  --header-title-color: var(--color-alpha);
-
-
-  --button-background-active: var(--color-brand-blue);
-  --button-color-active: var(--color-beta);
-}
diff --git a/apps/camera/bower_components/model/.bower.json b/apps/camera/bower_components/model/.bower.json
index d0e5034..5499fcf 100644
--- a/apps/camera/bower_components/model/.bower.json
+++ b/apps/camera/bower_components/model/.bower.json
@@ -26,5 +26,6 @@
   },
   "_source": "git://github.com/gaia-components/model.git",
   "_target": "~0.1.0",
-  "_originalSource": "gaia-components/model"
+  "_originalSource": "gaia-components/model",
+  "_direct": true
 }
\ No newline at end of file
diff --git a/apps/camera/bower_components/model/index.js b/apps/camera/bower_components/model/index.js
index 7bfa33a..3fd668f 100644
--- a/apps/camera/bower_components/model/index.js
+++ b/apps/camera/bower_components/model/index.js
@@ -101,4 +101,4 @@ function mix(a, b) {

 });})((function(n,w){return typeof define=='function'&&define.amd?
 define:typeof module=='object'?function(c){c(require,exports,module);}:function(c){
-var m={exports:{}},r=function(n){return w[n];};w[n]=c(r,m.exports,m)||m.exports;};})('model',this));
\ No newline at end of file
+var m={exports:{}},r=function(n){return w[n];};w[n]=c(r,m.exports,m)||m.exports;};})('model',this));
diff --git a/apps/camera/bower_components/view/.bower.json b/apps/camera/bower_components/view/.bower.json
index 589ce26..314eda9 100644
--- a/apps/camera/bower_components/view/.bower.json
+++ b/apps/camera/bower_components/view/.bower.json
@@ -26,5 +26,6 @@
   },
   "_source": "git://github.com/gaia-components/view.git",
   "_target": "~0.1.1",
-  "_originalSource": "gaia-components/view"
+  "_originalSource": "gaia-components/view",
+  "_direct": true
 }
\ No newline at end of file
diff --git a/apps/camera/build/require_config.jslike b/apps/camera/build/require_config.jslike
index edc83c0..e83b3be 100644
--- a/apps/camera/build/require_config.jslike
+++ b/apps/camera/build/require_config.jslike
@@ -35,8 +35,6 @@
     mangle: false
   },

-  cssImportIgnore: '../bower_components/gaia-icons/style.css',
-
   // Keeping build dir since Makefile cleans it up and
   // preps build dir with the shared directory
   keepBuildDir: true,
diff --git a/apps/camera/index.html b/apps/camera/index.html
index 86a2316..ec3a39b 100644
--- a/apps/camera/index.html
+++ b/apps/camera/index.html
@@ -10,6 +10,7 @@
     <!-- <link rel="stylesheet" type="text/css" href="/shared/style/confirm.css" /> -->
     <!-- <link rel="stylesheet" type="text/css" href="/shared/style/buttons.css" /> -->
     <!-- <link rel="stylesheet" type="text/css" href="/shared/style/action_menu.css" /> -->
+    <!-- <link rel="stylesheet" type="text/css" href="/shared/style/headers.css" /> -->
     <!-- <link rel="stylesheet" type="text/css" href="/shared/style/progress_activity.css" /> -->

     <!--
@@ -31,10 +32,11 @@
     <!-- <script defer src="/shared/js/blobview.js"></script> -->
     <!-- <script defer src="/shared/js/custom_dialog.js"></script> -->
     <!-- <script defer src="/shared/js/format.js"></script> -->
+    <!-- <script defer src="/shared/js/font_size_utils.js"></script> -->

     <link rel="stylesheet" type="text/css" href="style/main.css" />
   </head>
-  <body class="theme-media">
+  <body>
     <script src="js/main.js"></script>
   </body>
 </html>
diff --git a/apps/camera/js/app.js b/apps/camera/js/app.js
index c48bf8a..b54bf92 100644
--- a/apps/camera/js/app.js
+++ b/apps/camera/js/app.js
@@ -98,7 +98,6 @@ function App(options) {
 App.prototype.boot = function() {
   debug('boot');
   if (this.booted) { return; }
-  this.showSpinner('requestingCamera');
   this.bindEvents();
   this.initializeViews();
   this.runControllers();
@@ -127,8 +126,6 @@ App.prototype.boot = function() {
  */
 App.prototype.runControllers = function() {
   debug('run controllers');
-  this.controllers.overlay(this);
-  this.controllers.battery(this);
   this.controllers.settings(this);
   this.controllers.activity(this);
   this.controllers.camera(this);
@@ -136,6 +133,7 @@ App.prototype.runControllers = function() {
   this.controllers.recordingTimer(this);
   this.controllers.indicators(this);
   this.controllers.controls(this);
+  this.controllers.overlay(this);
   this.controllers.hud(this);
   this.controllers.zoomBar(this);
   debug('controllers run');
@@ -189,8 +187,8 @@ App.prototype.bindEvents = function() {
   // App
   this.once('viewfinder:visible', this.onCriticalPathDone);
   this.once('storage:checked:healthy', this.geolocationWatch);
-  this.on('busy', this.onBusy);
-  this.on('ready', this.onReady);
+  this.on('camera:ready', this.clearLoading);
+  this.on('camera:busy', this.onCameraBusy);
   this.on('visible', this.onVisible);
   this.on('hidden', this.onHidden);

@@ -269,12 +267,13 @@ App.prototype.onCriticalPathDone = function() {
   console.log('critical-path took %s', took + 'ms');

   // Load non-critical modules
-  this.loadL10n();
   this.loadController(this.controllers.previewGallery);
   this.loadController(this.controllers.storage);
   this.loadController(this.controllers.confirm);
+  this.loadController(this.controllers.battery);
   this.loadController(this.controllers.sounds);
   this.loadController(this.controllers.timer);
+  this.loadL10n();

   this.criticalPathDone = true;
   this.emit('criticalpathdone');
@@ -288,6 +287,22 @@ App.prototype.onCriticalPathDone = function() {
 };

 /**
+ * When the camera indicates it's busy it
+ * sometimes passes a `type` string. When
+ * this type matches one of our keys in the
+ * `loadingScreen` config, we display the
+ * loading screen in the given number
+ * of milliseconds.
+ *
+ * @param  {String} type
+ * @private
+ */
+App.prototype.onCameraBusy = function(type) {
+  var delay = this.settings.loadingScreen.get(type);
+  if (delay) { this.showLoading(delay); }
+};
+
+/**
  * Begins watching location if not within
  * a pending activity and the app isn't
  * currently hidden.
@@ -375,36 +390,18 @@ App.prototype.l10nGet = function(key) {
  * Shows the loading screen after the
  * number of ms defined in config.js
  *
- * @param {String} type
+ * @param {Number} delay
  * @private
  */
-App.prototype.showSpinner = function(key) {
-  debug('show loading type: %s', key);
-  var ms = this.settings.spinnerTimeouts.get(key) || 0;
+App.prototype.showLoading = function(delay) {
+  debug('show loading delay: %s', delay);
   var self = this;
-
-  clearTimeout(this.spinnerTimeout);
-  this.spinnerTimeout = setTimeout(function() {
+  clearTimeout(this.loadingTimeout);
+  this.loadingTimeout = setTimeout(function() {
     self.views.loading = new self.LoadingView();
     self.views.loading.appendTo(self.el).show();
     debug('loading shown');
-  }, ms);
-};
-
-/**
- * When the camera indicates it's busy it
- * sometimes passes a `type` string. When
- * this type matches one of our keys in the
- * `spinnerTimeouts` config, we display the
- * loading screen passing on the type.
- *
- * @param  {String} type
- * @private
- */
-App.prototype.onBusy = function(type) {
-  debug('camera busy, type: %s', type);
-  var delay = this.settings.spinnerTimeouts.get(type);
-  if (delay) { this.showSpinner(type); }
+  }, delay);
 };

 /**
@@ -413,10 +410,10 @@ App.prototype.onBusy = function(type) {
  *
  * @private
  */
-App.prototype.onReady = function() {
+App.prototype.clearLoading = function() {
   debug('clear loading');
   var view = this.views.loading;
-  clearTimeout(this.spinnerTimeout);
+  clearTimeout(this.loadingTimeout);
   if (!view) { return; }
   view.hide(view.destroy);
   this.views.loading = null;
diff --git a/apps/camera/js/config/config.js b/apps/camera/js/config/config.js
index 7f8045a..88bc840 100644
--- a/apps/camera/js/config/config.js
+++ b/apps/camera/js/config/config.js
@@ -7,7 +7,7 @@ module.exports = {
   // shared/js/media/media_frame.js
   globals : {
     // The maximum picture size that camera is allowed to take
-    CONFIG_MAX_IMAGE_PIXEL_SIZE: 5242880, // 5MP
+    CONFIG_MAX_IMAGE_PIXEL_SIZE: 3145728, // 3MP
     CONFIG_MAX_SNAPSHOT_PIXEL_SIZE: 5242880, // 5MP

     // Size of the exif preview embeded in images taken by camera
@@ -72,12 +72,12 @@ module.exports = {
     list: [
       {
         name: 'shutter',
-        url: './resources/sounds/shutter.opus',
+        url: './resources/sounds/shutter.ogg',
         setting: 'camera.sound.enabled'
       },
       {
         name: 'timer',
-        url: './resources/sounds/timer.opus',
+        url: './resources/sounds/timer.ogg',
         setting: 'camera.sound.enabled'
       },
       {
@@ -117,10 +117,9 @@ module.exports = {
     maxSharePixelSize: 0
   },

-  spinnerTimeouts: {
+  loadingScreen: {
     takingPicture: 1500,
-    requestingCamera: 700,
-    loadingVideo: 100
+    requestingCamera: 600
   },

   mode: {
@@ -292,7 +291,7 @@ module.exports = {
   hdr: {
     title: 'hdr',
     header: 'hdr-header',
-    icon: 'icon-hdr-boxed',
+    icon: 'icon-hdr-menu',
     disabled: false,
     options: [
       {
@@ -331,7 +330,7 @@ module.exports = {
   grid: {
     title: 'grid',
     header: 'grid-header',
-    icon: 'icon-grid-circular',
+    icon: 'icon-grid',
     options: [
       {
         key: 'off',
diff --git a/apps/camera/js/config/require.js b/apps/camera/js/config/require.js
index fb760fd..ec0e25b 100644
--- a/apps/camera/js/config/require.js
+++ b/apps/camera/js/config/require.js
@@ -15,14 +15,14 @@ require.config({
     'MediaFrame': '../shared/js/media/media_frame',
     'BlobView': '../shared/js/blobview',
     'CustomDialog': '../shared/js/custom_dialog',
+    'FontSizeUtils': '../shared/js/font_size_utils',
     'debug': '../bower_components/debug/index',
     'attach': '../bower_components/attach/index',
     'model': '../bower_components/model/index',
     'view': '../bower_components/view/index',
     'evt': '../bower_components/evt/index',
     'drag': '../bower_components/drag/index',
-    'device-orientation': '../bower_components/device-orientation/index',
-    'gaia-header': '../bower_components/gaia-header/dist/script'
+    'device-orientation': '../bower_components/device-orientation/index'
   },
   shim: {
     'format': {
@@ -62,6 +62,9 @@ require.config({
     },
     'CustomDialog': {
       exports: 'CustomDialog'
+    },
+    'FontSizeUtils': {
+      exports: 'FontSizeUtils'
     }
   }
 });
diff --git a/apps/camera/js/controllers/battery.js b/apps/camera/js/controllers/battery.js
index 58da1b8..be8c953 100644
--- a/apps/camera/js/controllers/battery.js
+++ b/apps/camera/js/controllers/battery.js
@@ -57,11 +57,11 @@ BatteryController.prototype.notifications = {
   },
   verylow: {
     text: 'battery-verylow-text',
-    className: 'icon-battery-very-low'
+    className: 'icon-battery-verylow'
   },
   critical: {
     text: 'battery-critical-text',
-    className: 'icon-battery-very-low',
+    className: 'icon-battery-verylow',
     persistent: true
   }
 };
diff --git a/apps/camera/js/controllers/camera.js b/apps/camera/js/controllers/camera.js
index 9bdfe6e..6f7b0b4 100644
--- a/apps/camera/js/controllers/camera.js
+++ b/apps/camera/js/controllers/camera.js
@@ -21,6 +21,7 @@ module.exports.CameraController = CameraController;
  * @param {App} app
  */
 function CameraController(app) {
+  debug('initializing');
   bindAll(this);
   this.app = app;
   this.camera = app.camera;
@@ -57,8 +58,8 @@ CameraController.prototype.bindEvents = function() {
   camera.on('shutter', app.firer('camera:shutter'));
   camera.on('configured', this.onCameraConfigured);
   camera.on('loaded', app.firer('camera:loaded'));
-  camera.on('ready', app.firer('ready'));
-  camera.on('busy', app.firer('busy'));
+  camera.on('ready', app.firer('camera:ready'));
+  camera.on('busy', app.firer('camera:busy'));

   // App
   app.on('viewfinder:focuspointchanged', this.onFocusPointChanged);
@@ -67,7 +68,6 @@ CameraController.prototype.bindEvents = function() {
   app.on('previewgallery:opened', this.shutdownCamera);
   app.on('previewgallery:closed', this.onGalleryClosed);
   app.on('storage:changed', this.onStorageChanged);
-  app.on('storage:volumechanged', this.onStorageVolumeChanged);
   app.on('activity:pick', this.onPickActivity);
   app.on('timer:ended', this.capture);
   app.on('visible', this.camera.load);
@@ -342,16 +342,6 @@ CameraController.prototype.onStorageChanged = function(state) {
 };

 /**
- * For instance, when the storage volume changes from to internal memory
- * to the SD Card
- *
- * @private
- */
-CameraController.prototype.onStorageVolumeChanged = function(storage) {
-  this.camera.setVideoStorage(storage.video);
-};
-
-/**
  * Updates focus area when the user clicks on the viewfinder
  */
 CameraController.prototype.onFocusPointChanged = function(focusPoint) {
@@ -365,21 +355,9 @@ CameraController.prototype.shutdownCamera = function() {
   this.camera.release();
 };

-/**
- * As the camera is shutdown when the
- * preview gallery is opened, we must
- * reload it when it is closed.
- *
- * Although if the app is has been minimised
- * we do not want to reload the camera as
- * the hardware must be released when the
- * app is not visible.
- *
- * @private
- */
 CameraController.prototype.onGalleryClosed = function() {
-  if (this.app.hidden) { return; }
-  this.camera.load(this.app.onReady);
+  this.app.showLoading();
+  this.camera.load(this.app.clearLoading);
 };

 });
\ No newline at end of file
diff --git a/apps/camera/js/controllers/confirm.js b/apps/camera/js/controllers/confirm.js
index 6df197f..7259d19 100644
--- a/apps/camera/js/controllers/confirm.js
+++ b/apps/camera/js/controllers/confirm.js
@@ -57,8 +57,6 @@ ConfirmController.prototype.renderView = function() {

   this.confirmView.on('click:select', this.onSelectMedia);
   this.confirmView.on('click:retake', this.onRetakeMedia);
-  this.confirmView.on('loadingvideo', this.app.firer('busy'));
-  this.confirmView.on('playingvideo', this.app.firer('ready'));
 };

 /**
diff --git a/apps/camera/js/controllers/controls.js b/apps/camera/js/controllers/controls.js
index 914cd3b..775469f 100644
--- a/apps/camera/js/controllers/controls.js
+++ b/apps/camera/js/controllers/controls.js
@@ -26,6 +26,7 @@ module.exports.ControlsController = ControlsController;
  * @param {App} app
  */
 function ControlsController(app) {
+  debug('initializing');
   bindAll(this);
   this.app = app;
   this.activity = app.activity;
@@ -49,9 +50,8 @@ ControlsController.prototype.bindEvents = function() {
   this.app.on('change:recording', this.onRecordingChange);
   this.app.on('camera:shutter', this.captureHighlightOff);
   this.app.on('newthumbnail', this.onNewThumbnail);
-  this.app.on('busy', this.onCameraBusy);
-  this.app.on('ready', this.restore);
-  this.app.once('criticalpathdone', this.view.show);
+  this.app.on('camera:busy', this.onCameraBusy);
+  this.app.on('camera:ready', this.restore);

   // View
   this.view.on('modechanged', this.onViewModeChanged);
diff --git a/apps/camera/js/controllers/hud.js b/apps/camera/js/controllers/hud.js
index 8729b19..b87a7e1 100644
--- a/apps/camera/js/controllers/hud.js
+++ b/apps/camera/js/controllers/hud.js
@@ -72,8 +72,8 @@ HudController.prototype.bindEvents = function() {
   this.hud.on('click:flash', this.onFlashClick);

   // Camera
-  this.app.on('busy', this.hud.setter('camera', 'busy'));
-  this.app.on('ready', this.hud.setter('camera', 'ready'));
+  this.app.on('camera:ready', this.hud.setter('camera', 'ready'));
+  this.app.on('camera:busy', this.hud.setter('camera', 'busy'));
   this.app.on('change:recording', this.hud.setter('recording'));

   // Timer
diff --git a/apps/camera/js/controllers/indicators.js b/apps/camera/js/controllers/indicators.js
index bac84fc..82fbde5 100644
--- a/apps/camera/js/controllers/indicators.js
+++ b/apps/camera/js/controllers/indicators.js
@@ -21,6 +21,7 @@ module.exports.IndicatorsController = IndicatorsController;
  * @param {Object} options
  */
 function IndicatorsController(app) {
+  debug('initializing');
   this.app = app;
   this.settings = app.settings;
   this.onSettingsConfigured = this.onSettingsConfigured.bind(this);
diff --git a/apps/camera/js/controllers/overlay.js b/apps/camera/js/controllers/overlay.js
index 5a43ba3..6ec7dbf 100644
--- a/apps/camera/js/controllers/overlay.js
+++ b/apps/camera/js/controllers/overlay.js
@@ -22,6 +22,7 @@ module.exports.OverlayController = OverlayController;
  * @param {App} app
  */
 function OverlayController(app) {
+  debug('initializing');
   bindAll(this);
   this.app = app;
   this.activity = app.activity;
@@ -45,7 +46,6 @@ OverlayController.prototype.bindEvents = function() {
  * @param  {String} value  ['nospace'|'shared'|'unavailable'|'available']
  */
 OverlayController.prototype.onStorageChanged = function(state) {
-  var self = this;
   debug('storage changed: \'%s\'', state);

   if (this.storageOverlay) {
@@ -54,11 +54,7 @@ OverlayController.prototype.onStorageChanged = function(state) {
   }

   if (state !== 'available') {
-    this.createOverlay(state, onOverlayCreated);
-  }
-
-  function onOverlayCreated(overlay) {
-    self.storageOverlay = overlay;
+    this.storageOverlay = this.createOverlay(state);
   }
 };

@@ -70,7 +66,6 @@ OverlayController.prototype.onStorageChanged = function(state) {
  * @param  {String} status  ['shutdown'|'critical'|'verylow'|'low']
  */
 OverlayController.prototype.onBatteryChanged = function(state) {
-  var self = this;
   debug('battery state change: \'%s\'', state);

   if (this.batteryOverlay) {
@@ -79,53 +74,31 @@ OverlayController.prototype.onBatteryChanged = function(state) {
   }

   if (state === 'shutdown') {
-    this.createOverlay(state, onOverlayCreated);
-  }
-
-  function onOverlayCreated(overlay) {
-    self.batteryOverlay = overlay;
+    this.batteryOverlay = this.createOverlay(state);
   }
 };

-OverlayController.prototype.createOverlay = function(type, callback) {
-  var data;
+OverlayController.prototype.createOverlay = function(type) {
+  var data = this.getOverlayData(type);
   var self = this;
-  var isClosable = this.activity.pick;
-  var overlay;

-  if (!this.app.localized()) {
-    this.app.showSpinner();
-    this.app.on('localized', onLocalized);
-    return;
-  }
+  if (!data) { return; }

-  function onLocalized() {
-    self.createOverlay(type, callback);
-  }
-
-  data = this.getOverlayData(type);
-
-  if (!data) {
-    if (callback) {
-      callback(null);
-    }
-    return;
-  }
-
-  overlay = new Overlay({
+  var isClosable = this.activity.pick;
+  var overlay = new Overlay({
     type: type,
     closable: isClosable,
     data: data
-  }).appendTo(document.body)
+  });
+
+  overlay
+    .appendTo(document.body)
     .on('click:close-btn', function() {
       self.app.emit('activitycanceled');
     });

   debug('inserted \'%s\' overlay', type);
-
-  if (callback) {
-    callback(overlay);
-  }
+  return overlay;
 };

 /**
diff --git a/apps/camera/js/controllers/preview-gallery.js b/apps/camera/js/controllers/preview-gallery.js
index a83806d..54a89b4 100644
--- a/apps/camera/js/controllers/preview-gallery.js
+++ b/apps/camera/js/controllers/preview-gallery.js
@@ -22,6 +22,7 @@ module.exports = function(app) { return new PreviewGalleryController(app); };
 module.exports.PreviewGalleryController = PreviewGalleryController;

 function PreviewGalleryController(app) {
+  debug('initializing');
   bindAll(this);
   this.app = app;
   this.settings = app.settings;
@@ -74,8 +75,6 @@ PreviewGalleryController.prototype.openPreview = function() {
   this.view.on('click:back', this.closePreview);
   this.view.on('swipe', this.handleSwipe);
   this.view.on('click:options', this.onOptionsClick);
-  this.view.on('loadingvideo', this.app.firer('busy'));
-  this.view.on('playingvideo', this.app.firer('ready'));

   // If lockscreen is locked, hide all control buttons
   var secureMode = this.app.inSecureMode;
@@ -135,6 +134,7 @@ PreviewGalleryController.prototype.onOptionsClick = function() {
   this.view.showOptionsMenu();
 };

+
 PreviewGalleryController.prototype.shareCurrentItem = function() {
   if (this.app.inSecureMode) {
     return;
diff --git a/apps/camera/js/controllers/recording-timer.js b/apps/camera/js/controllers/recording-timer.js
index 8cd81dd..e5ebde8 100644
--- a/apps/camera/js/controllers/recording-timer.js
+++ b/apps/camera/js/controllers/recording-timer.js
@@ -23,6 +23,7 @@ module.exports.RecordingTimerController = RecordingTimerController;
  * @param {App} app
  */
 function RecordingTimerController(app) {
+  debug('initializing');
   this.onRecordingChange = this.onRecordingChange.bind(this);
   this.view = app.view || new RecordingTimerView();
   this.app = app;
diff --git a/apps/camera/js/controllers/settings.js b/apps/camera/js/controllers/settings.js
index 5d1ab31..3ede705 100644
--- a/apps/camera/js/controllers/settings.js
+++ b/apps/camera/js/controllers/settings.js
@@ -25,6 +25,7 @@ module.exports.SettingsController = SettingsController;
  * @param {App} app
  */
 function SettingsController(app) {
+  debug('initializing');
   bindAll(this);
   this.app = app;
   this.settings = app.settings;
diff --git a/apps/camera/js/controllers/sounds.js b/apps/camera/js/controllers/sounds.js
index e8aa8d6..9df32d8 100644
--- a/apps/camera/js/controllers/sounds.js
+++ b/apps/camera/js/controllers/sounds.js
@@ -21,6 +21,7 @@ module.exports.SoundsController = SoundsController;
  * @param {App} app [description]
  */
 function SoundsController(app) {
+  debug('initializing');
   var list = app.settings.sounds.get('list');
   this.sounds = new Sounds(list);
   this.app = app;
diff --git a/apps/camera/js/controllers/storage.js b/apps/camera/js/controllers/storage.js
index 3e6aee5..b0a63b8 100644
--- a/apps/camera/js/controllers/storage.js
+++ b/apps/camera/js/controllers/storage.js
@@ -27,8 +27,8 @@ function StorageController(app) {
   this.camera = app.camera;
   this.settings = app.settings;
   this.storage = app.storage || new Storage();
-  this.bindEvents();
   this.configure();
+  this.bindEvents();
   debug('initialized');
 }

@@ -44,7 +44,6 @@ function StorageController(app) {
  * @private
  */
 StorageController.prototype.configure = function() {
-  this.storage.configure();
   this.camera.createVideoFilepath = this.storage.createVideoFilepath;
   this.updateMaxFileSize();
 };
@@ -67,7 +66,6 @@ StorageController.prototype.bindEvents = function() {
   this.app.on('visible', this.storage.check);

   // Storage
-  this.storage.on('volumechanged', this.app.firer('storage:volumechanged'));
   this.storage.on('itemdeleted', this.app.firer('storage:itemdeleted'));
   this.storage.on('changed', this.onChanged);
   this.storage.on('checked', this.onChecked);
diff --git a/apps/camera/js/controllers/timer.js b/apps/camera/js/controllers/timer.js
index d1e5197..1e410f2 100644
--- a/apps/camera/js/controllers/timer.js
+++ b/apps/camera/js/controllers/timer.js
@@ -33,7 +33,6 @@ function TimerController(app) {
   this.view = app.views.timer || new TimerView();
   this.view.appendTo(app.el);
   this.bindEvents();
-  debug('initialized');
 }

 /**
diff --git a/apps/camera/js/controllers/viewfinder.js b/apps/camera/js/controllers/viewfinder.js
index 90e7d54..c89c107 100644
--- a/apps/camera/js/controllers/viewfinder.js
+++ b/apps/camera/js/controllers/viewfinder.js
@@ -25,6 +25,7 @@ module.exports.ViewfinderController = ViewfinderController;
  * @param {App} app
  */
 function ViewfinderController(app) {
+  debug('initializing');
   bindAll(this);
   this.app = app;
   this.views = {};
@@ -107,8 +108,9 @@ ViewfinderController.prototype.bindEvents = function() {
   this.app.on('camera:focusstatechanged', this.views.focus.setFocusState);
   this.app.on('camera:facesdetected', this.onFacesDetected);
   this.app.on('camera:shutter', this.views.viewfinder.shutter);
-  this.app.on('busy', this.views.viewfinder.disable);
-  this.app.on('ready', this.views.viewfinder.enable);
+  this.app.on('camera:busy', this.views.viewfinder.disable);
+  this.app.on('camera:ready', this.views.viewfinder.enable);
+  this.app.on('previewgallery:closed', this.onPreviewGalleryClosed);
   this.app.on('camera:configured', this.onCameraConfigured);
   this.app.on('previewgallery:opened', this.onGalleryOpened);
   this.app.on('previewgallery:closed', this.onGalleryClosed);
@@ -174,6 +176,17 @@ ViewfinderController.prototype.onFacesDetected = function(faces) {
 };

 /**
+ * Starts the stream, only if
+ * the app is currently visible.
+ *
+ * @private
+ */
+ViewfinderController.prototype.onPreviewGalleryClosed = function() {
+  if (this.app.hidden) { return; }
+  this.startStream();
+};
+
+/**
  * Start the viewfinder stream flowing
  * with the current camera configuration.
  *
@@ -304,25 +317,15 @@ ViewfinderController.prototype.onSettingsClosed = function() {
   this.pinch.enable();
 };

-/**
- * Disables the viewfinder stream
- * and pinch events.
- *
- * @private
- */
 ViewfinderController.prototype.onGalleryOpened = function() {
-  this.views.viewfinder.disable();
+  // Disables events when the gallery opens
+  this.viewfinder.disable();
   this.pinch.disable();
 };

-/**
- * Enables the viewfinder stream
- * and pinch events.
- *
- * @private
- */
 ViewfinderController.prototype.onGalleryClosed = function() {
-  this.views.viewfinder.enable();
+  // Renables events when the gallery closes
+  this.viewfinder.enable();
   this.pinch.enable();
 };

diff --git a/apps/camera/js/controllers/zoom-bar.js b/apps/camera/js/controllers/zoom-bar.js
index 075de26..7e73540 100644
--- a/apps/camera/js/controllers/zoom-bar.js
+++ b/apps/camera/js/controllers/zoom-bar.js
@@ -20,6 +20,7 @@ module.exports.ZoomBarController = ZoomBarController;
  * @param {App} app
  */
 function ZoomBarController(app) {
+  debug('initializing');
   bindAll(this);
   this.app = app;
   this.camera = app.camera;
diff --git a/apps/camera/js/lib/camera-utils.js b/apps/camera/js/lib/camera-utils.js
index 6d8b49b..4bb4a39 100644
--- a/apps/camera/js/lib/camera-utils.js
+++ b/apps/camera/js/lib/camera-utils.js
@@ -4,7 +4,7 @@ define(function(require) {

   var debug = require('debug')('camera-utils');

-  var CameraUtils = {};
+  var CameraUtils = function CameraUtils() {};

   CameraUtils.scaleSizeToFitViewport = function(viewportSize, imageSize) {
     var sw = viewportSize.width / imageSize.width,
@@ -155,5 +155,9 @@ define(function(require) {
     return maximumPreviewSize;
   };

+  CameraUtils.prototype = {
+    constructor: CameraUtils
+  };
+
   return CameraUtils;
 });
diff --git a/apps/camera/js/lib/camera/camera.js b/apps/camera/js/lib/camera/camera.js
index d3889da..95c4afe 100644
--- a/apps/camera/js/lib/camera/camera.js
+++ b/apps/camera/js/lib/camera/camera.js
@@ -59,15 +59,14 @@ function Camera(options) {
   // Test hooks
   this.getVideoMetaData = options.getVideoMetaData || getVideoMetaData;
   this.orientation = options.orientation || orientation;
-  this.configStorage = options.configStorage || localStorage;
+  this.storage = options.storage || localStorage;

   this.cameraList = navigator.mozCameras.getListOfCameras();
   this.mozCamera = null;

-  this.storage = options.storage || {};
-
   // Video config
   this.video = {
+    storage: navigator.getDeviceStorage('videos'),
     filepath: null,
     minSpace: this.recordSpaceMin,
     spacePadding : this.recordSpacePadding
@@ -237,7 +236,7 @@ Camera.prototype.saveBootConfig = function() {
     pictureSize: this.pictureSize
   };

-  this.configStorage.setItem('cameraBootConfig', JSON.stringify(json));
+  this.storage.setItem('cameraBootConfig', JSON.stringify(json));
   debug('saved camera config', json);
 };

@@ -251,7 +250,7 @@ Camera.prototype.saveBootConfig = function() {
  * @return {Object}
  */
 Camera.prototype.fetchBootConfig = function() {
-  var string = this.configStorage.getItem('cameraBootConfig');
+  var string = this.storage.getItem('cameraBootConfig');
   var json = string && JSON.parse(string);
   debug('got camera config', json);
   return json;
@@ -648,16 +647,16 @@ Camera.prototype.release = function(done) {

   function onSuccess() {
     debug('successfully released');
+    self.releasing = false;
     self.ready();
     self.emit('released');
-    self.releasing = false;
     done();
   }

   function onError(err) {
     debug('failed to release hardware');
-    self.ready();
     self.releasing = false;
+    self.ready();
     done(err);
   }
 };
@@ -849,15 +848,6 @@ Camera.prototype.toggleRecording = function(options) {
 };

 /**
- * Seet the storage for video.
- *
- * @public
- */
-Camera.prototype.setVideoStorage = function(storage) {
-  this.storage.video = storage;
-};
-
-/**
  * Start recording a video.
  *
  * @public
@@ -866,7 +856,7 @@ Camera.prototype.startRecording = function(options) {
   debug('start recording');
   var frontCamera = this.selectedCamera === 'front';
   var rotation = this.orientation.get();
-  var storage = this.storage.video;
+  var storage = this.video.storage;
   var video = this.video;
   var self = this;

@@ -953,7 +943,7 @@ Camera.prototype.stopRecording = function() {

   var notRecording = !this.get('recording');
   var filepath = this.video.filepath;
-  var storage = this.storage.video;
+  var storage = this.video.storage;
   var self = this;

   if (notRecording) { return; }
@@ -1026,7 +1016,7 @@ Camera.prototype.onNewVideo = function(video) {
   // short and possibly corrupted.
   if (tooShort) {
     debug('video too short, deleting...');
-    this.storage.video.delete(video.filepath);
+    this.video.storage.delete(video.filepath);
     this.ready();
     return;
   }
@@ -1112,7 +1102,7 @@ Camera.prototype.onRecorderStateChange = function(msg) {
 Camera.prototype.getFreeVideoStorageSpace = function(done) {
   debug('get free storage space');

-  var storage = this.storage.video;
+  var storage = this.video.storage;
   var req = storage.freeSpace();
   req.onerror = onError;
   req.onsuccess = onSuccess;
diff --git a/apps/camera/js/lib/find.js b/apps/camera/js/lib/find.js
new file mode 100644
index 0000000..c56becc
--- /dev/null
+++ b/apps/camera/js/lib/find.js
@@ -0,0 +1,10 @@
+/*global define*/
+
+define(function(require) {
+  'use strict';
+
+  return function(query, el) {
+    el = el || document;
+    return el.querySelector(query);
+  };
+});
diff --git a/apps/camera/js/lib/sounds.js b/apps/camera/js/lib/sounds.js
index 4ba4035..2341215 100644
--- a/apps/camera/js/lib/sounds.js
+++ b/apps/camera/js/lib/sounds.js
@@ -36,6 +36,9 @@ Sounds.prototype.add = function(data) {
     enabled: false
   };

+  // Prefetch audio
+  sound.audio = this.createAudio(sound.url);
+
   this.items[data.name] = sound;
   this.isEnabled(sound, function(value) {
     self.setEnabled(sound, value);
@@ -112,12 +115,7 @@ Sounds.prototype.setEnabled = function(sound, value) {
  * @public
  */
 Sounds.prototype.play = function(name) {
-  var sound = this.items[name];
-  if (!sound.audio) {
-    sound.audio = this.createAudio(sound.url);
-  }
-
-  this.playSound(sound);
+  this.playSound(this.items[name]);
 };

 /**
diff --git a/apps/camera/js/lib/storage.js b/apps/camera/js/lib/storage.js
index 37c411a..ee17b8d 100644
--- a/apps/camera/js/lib/storage.js
+++ b/apps/camera/js/lib/storage.js
@@ -37,11 +37,12 @@ function Storage(options) {
   bindAll(this);
   this.maxFileSize = 0;
   options = options || {};
+  this.video = navigator.getDeviceStorage('videos');
+  this.picture = navigator.getDeviceStorage('pictures');
+  this.picture.addEventListener('change', this.onStorageChange);
   this.createFilename = options.createFilename || createFilename; // test hook
   this.dcf = options.dcf || dcf;
   this.dcf.init();
-  navigator.mozSettings.addObserver('device.storage.writable.name',
-                                    this.onStorageVolumeChanged);
   debug('initialized');
 }

@@ -152,50 +153,6 @@ Storage.prototype.onStorageChange = function(e) {
   this.check();
 };

-Storage.prototype.configure = function(storageVolumeName) {
-  var i;
-  var videosStorages;
-  var picturesStorages;
-  // If we had a previous ds for pictures, let's remove the observer
-  // we had set as well before fetching new ds.
-  if (this.picture) {
-    this.picture.removeEventListener('change', this.onStorageChange);
-  }
-  if (!storageVolumeName) {
-    this.video = navigator.getDeviceStorage('videos');
-    this.picture = navigator.getDeviceStorage('pictures');
-  } else { // We select the volumes with the passed name
-    videosStorages = navigator.getDeviceStorages('videos');
-    this.video = videosStorages[0];
-    for (i = 0; i < videosStorages.length; ++i) {
-      if (videosStorages[i].storageName === storageVolumeName) {
-        this.video = videosStorages[i];
-        break;
-      }
-    }
-
-    picturesStorages = navigator.getDeviceStorages('pictures');
-    this.picture = picturesStorages[0];
-    for (i = 0; i < picturesStorages.length; ++i) {
-      if (picturesStorages[i].storageName === storageVolumeName) {
-        this.picture = picturesStorages[i];
-        break;
-      }
-    }
-  }
-
-  this.picture.addEventListener('change', this.onStorageChange);
-  this.emit('volumechanged',{
-    video: this.video,
-    picture: this.picture
-  });
-};
-
-Storage.prototype.onStorageVolumeChanged = function(setting) {
-  debug('default storage volume change: %s', setting.settingValue);
-  this.configure(setting.settingValue);
-};
-
 Storage.prototype.checkFilepath = function(filepath) {
   var startString = filepath.indexOf('DCIM/');

diff --git a/apps/camera/js/lib/string-utils.js b/apps/camera/js/lib/string-utils.js
index a8c7c1c..a16d60f 100644
--- a/apps/camera/js/lib/string-utils.js
+++ b/apps/camera/js/lib/string-utils.js
@@ -1,7 +1,7 @@
 define(function(require) {
   'use strict';

-  var StringUtils = {};
+  var StringUtils = function StringUtils() {};

   StringUtils.toCamelCase = function(str) {

@@ -23,5 +23,9 @@ define(function(require) {
     return pathComponents[pathComponents.length - 1];
   };

+  StringUtils.prototype = {
+    constructor: StringUtils
+  };
+
   return StringUtils;
 });
diff --git a/apps/camera/js/main.js b/apps/camera/js/main.js
index 26eb059..014addd 100644
--- a/apps/camera/js/main.js
+++ b/apps/camera/js/main.js
@@ -19,9 +19,8 @@ var domLoaded = timing.domComplete - timing.domLoading;
 console.log('domloaded in %s', domLoaded + 'ms');

 // Create globals specified in the config file
-var key;
 if (settingsData.globals) {
-  for (key in settingsData.globals) {
+  for (var key in settingsData.globals) {
     window[key] = settingsData.globals[key];
   }
 }
@@ -41,12 +40,11 @@ var app = window.app = new App({
   }),

   controllers: {
-    overlay: require('controllers/overlay'),
-    battery: require('controllers/battery'),
     hud: require('controllers/hud'),
     controls: require('controllers/controls'),
     viewfinder: require('controllers/viewfinder'),
     recordingTimer: require('controllers/recording-timer'),
+    overlay: require('controllers/overlay'),
     settings: require('controllers/settings'),
     activity: require('controllers/activity'),
     camera: require('controllers/camera'),
@@ -57,6 +55,7 @@ var app = window.app = new App({
     previewGallery: 'controllers/preview-gallery',
     storage: 'controllers/storage',
     confirm: 'controllers/confirm',
+    battery: 'controllers/battery',
     sounds: 'controllers/sounds',
     timer: 'controllers/timer'
   }
@@ -69,9 +68,4 @@ app.camera.load();
 app.settings.fetch();
 app.boot();

-// Clean up
-for (key in settingsData) {
-  delete settingsData[key];
-}
-
 });
diff --git a/apps/camera/js/views/confirm.js b/apps/camera/js/views/confirm.js
index 4a74811..56daaa6 100644
--- a/apps/camera/js/views/confirm.js
+++ b/apps/camera/js/views/confirm.js
@@ -5,7 +5,6 @@ define(function(require, exports, module) {
  * Dependencies
  */

-var debug = require('debug')('view:confirm');
 var addPanAndZoomHandlers = require('lib/panzoom');
 var orientation = require('lib/orientation');
 var MediaFrame = require('MediaFrame');
@@ -36,44 +35,26 @@ module.exports = View.extend({
     this.els.retake = this.find('.js-retake');
     this.els.select = this.find('.js-select');

+    // Events
+    bind(this.els.retake, 'click', this.onButtonClick);
+    bind(this.els.select, 'click', this.onButtonClick);
+
     // Disable buttons on this view by default
     // until an image/video is displayed
     this.disableButtons();

-    // Initialize the MediaFrame component
     this.setupMediaFrame();
-
-    // Clean up
-    delete this.template;
-
-    debug('rendered');
-    return this.bindEvents();
-  },
-
-  bindEvents: function() {
-    bind(this.els.retake, 'click', this.onButtonClick);
-    bind(this.els.select, 'click', this.onButtonClick);
     return this;
   },

   setupMediaFrame: function() {
     this.mediaFrame = new MediaFrame(this.els.mediaFrame, true,
                                      this.maxPreviewSize);
-    this.mediaFrame.video.onloading = this.onVideoLoading;
-    this.mediaFrame.video.onplaying = this.onVideoPlaying;
     addPanAndZoomHandlers(this.mediaFrame);
     window.addEventListener('resize', this.onResize);
     return this;
   },

-  onVideoLoading: function() {
-    this.emit('loadingvideo', 'loadingVideo');
-  },
-
-  onVideoPlaying: function() {
-    this.emit('playingvideo');
-  },
-
   clearMediaFrame: function() {
     this.mediaFrame.clear();
     this.disableButtons();
diff --git a/apps/camera/js/views/controls.js b/apps/camera/js/views/controls.js
index ef125b0..b7c6a7f 100644
--- a/apps/camera/js/views/controls.js
+++ b/apps/camera/js/views/controls.js
@@ -48,14 +48,7 @@ module.exports = View.extend({
       container: this.els.switch,
     });

-    // Clean up
-    delete this.template;
-
-    debug('rendered');
-    return this.bindEvents();
-  },
-
-  bindEvents: function() {
+    // Bind events
     bind(this.els.thumbnail, 'click', this.onButtonClick);
     bind(this.els.capture, 'click', this.onButtonClick);
     bind(this.els.cancel, 'click', this.onButtonClick);
@@ -64,7 +57,8 @@ module.exports = View.extend({
     this.drag.on('snapped', this.onSwitchSnapped);
     this.drag.on('tapped', this.onSwitchTapped);
     this.on('inserted', this.onInserted);
-    return this;
+
+    debug('rendered');
   },

   onInserted: function() {
@@ -195,7 +189,7 @@ module.exports = View.extend({
       '<div class="capture-button test-capture rotates js-capture" name="capture">' +
         '<div class="circle outer-circle"></div>' +
         '<div class="circle inner-circle"></div>' +
-        '<div class="center icon-camera"></div>' +
+        '<div class="center icon"></div>' +
       '</div>' +
     '</div>' +
     '<div class="controls-right">' +
diff --git a/apps/camera/js/views/focus.js b/apps/camera/js/views/focus.js
index ef8a5c0..aca84c9 100644
--- a/apps/camera/js/views/focus.js
+++ b/apps/camera/js/views/focus.js
@@ -5,7 +5,7 @@ define(function(require, exports, module) {
  * Dependencies
  */

-var debug = require('debug')('view:focus');
+var find = require('lib/find');
 var View = require('view');

 /**
@@ -23,13 +23,7 @@ module.exports = View.extend({

   render: function() {
     this.el.innerHTML = this.template();
-    this.els.focus = this.find('.js-focus');
-
-    // Clean up
-    delete this.template;
-
-    debug('rendered');
-    return this;
+    this.els.focus = find('.js-focus', this.el);
   },

   setFocusState: function(state) {
diff --git a/apps/camera/js/views/hud.js b/apps/camera/js/views/hud.js
index 1dd6ad2..6cf4433 100644
--- a/apps/camera/js/views/hud.js
+++ b/apps/camera/js/views/hud.js
@@ -5,7 +5,6 @@ define(function(require, exports, module) {
  * Dependencies
  */

-var debug = require('debug')('view:hud');
 var bind = require('lib/bind');
 var View = require('view');

@@ -25,19 +24,9 @@ module.exports = View.extend({
     this.els.flash = this.find('.js-flash');
     this.els.camera = this.find('.js-camera');
     this.els.settings = this.find('.js-settings');
-
-    // Clean up
-    delete this.template;
-
-    debug('rendered');
-    return this.bindEvents();
-  },
-
-  bindEvents: function() {
     bind(this.els.flash, 'click', this.onFlashClick);
     bind(this.els.camera, 'click', this.onCameraClick);
     bind(this.els.settings, 'click', this.onSettingsClick, true);
-    return this;
   },

   setFlashMode: function(mode) {
@@ -89,7 +78,7 @@ module.exports = View.extend({
     /*jshint maxlen:false*/
     return '<div class="hud_btn hud_camera rotates test-camera-toggle js-camera"></div>' +
     '<div class="hud_btn hud_flash rotates test-flash-button js-flash"></div>' +
-    '<div class="hud_btn hud_settings rotates icon-menu test-settings-toggle js-settings">' +
+    '<div class="hud_btn hud_settings rotates icon-settings test-settings-toggle js-settings">' +
     '</div>';
   }
 });
diff --git a/apps/camera/js/views/indicators.js b/apps/camera/js/views/indicators.js
index dd90c4a..4788c85 100644
--- a/apps/camera/js/views/indicators.js
+++ b/apps/camera/js/views/indicators.js
@@ -5,7 +5,6 @@ define(function(require, exports, module) {
  * Dependencies
  */

-var debug = require('debug')('view:indicators');
 var View = require('view');

 /**
@@ -22,19 +21,13 @@ module.exports = View.extend({

   render: function() {
     this.el.innerHTML = this.template();
-
-    // Clean up
-    delete this.template;
-
-    debug('rendered');
-    return this;
   },

   template: function() {
     return '<li class="indicator_timer icon-self-timer rotates"></li>' +
     '<li class="indicator_hdr icon-hdr rotates"></li>' +
-    '<li class="indicator_geolocation icon-location rotates"></li>' +
-    '<li class="indicator_battery icon-battery-low rotates"></li>';
+    '<li class="indicator_geolocation icon-geolocation rotates"></li>' +
+    '<li class="indicator_battery icon rotates"></li>';
   }
 });

diff --git a/apps/camera/js/views/loading-screen.js b/apps/camera/js/views/loading-screen.js
index de6cee3..44e45a2 100644
--- a/apps/camera/js/views/loading-screen.js
+++ b/apps/camera/js/views/loading-screen.js
@@ -1,7 +1,6 @@
 define(function(require, exports, module) {
 'use strict';

-var debug = require('debug')('view:loading-screen');
 var View = require('view');

 module.exports = View.extend({
@@ -9,17 +8,7 @@ module.exports = View.extend({
   fadeTime: 300,

   initialize: function() {
-    this.render();
-  },
-
-  render: function() {
     this.el.innerHTML = this.template;
-
-    // Clean up
-    delete this.template;
-
-    debug('rendered');
-    return this;
   },

   show: function(done) {
diff --git a/apps/camera/js/views/overlay.js b/apps/camera/js/views/overlay.js
index 56b6cd1..c8eef5e 100644
--- a/apps/camera/js/views/overlay.js
+++ b/apps/camera/js/views/overlay.js
@@ -5,9 +5,9 @@ define(function(require, exports, module) {
  * Dependencies
  */

-var debug = require('debug')('view:overlay');
-var View = require('view');
+var find = require('lib/find');
 var bind = require('lib/bind');
+var View = require('view');

 /**
  * Exports
@@ -17,31 +17,24 @@ module.exports = View.extend({
   className: 'overlay',

   initialize: function(options) {
+    this.model = options.data;
     this.data('type', options.type);
     this.data('closable', options.closable);
-    this.render(options.data);
+    this.render();
   },

-  render: function(data) {
+  render: function() {

     // Inject HTML
-    this.el.innerHTML = this.template(data);
+    this.el.innerHTML = this.template(this.model);

     // Pick out elements
     this.els.buttons = {
-      close: this.find('.js-close-btn')
+      close: find('.js-close-btn', this.el)
     };

-    // Clean up
-    delete this.template;
-
-    debug('rendered');
-    return this.bindEvents();
-  },
-
-  bindEvents: function() {
+    // Attach event listeners
     bind(this.els.buttons.close, 'click', this.onButtonClick);
-    return this;
   },

   template: function(data) {
diff --git a/apps/camera/js/views/preview-gallery.js b/apps/camera/js/views/preview-gallery.js
index f8c2982..ccb453a 100644
--- a/apps/camera/js/views/preview-gallery.js
+++ b/apps/camera/js/views/preview-gallery.js
@@ -8,6 +8,7 @@ define(function(require) {

 var debug = require('debug')('view:preview-gallery');
 var addPanAndZoomHandlers = require('lib/panzoom');
+var FontSizeUtils = require('FontSizeUtils');
 var orientation = require('lib/orientation');
 var MediaFrame = require('MediaFrame');
 var bind = require('lib/bind');
@@ -15,12 +16,6 @@ var attach = require('attach');
 var View = require('view');

 /**
- * `<gaia-header>` used in template
- */
-
-require('gaia-header');
-
-/**
  * Constants
  */

@@ -44,13 +39,11 @@ return View.extend({

   render: function() {
     this.el.innerHTML = this.template();
+    this.els.previewControl = this.find('.js-preview');
     this.els.frameContainer = this.find('.js-frame-container');
-    this.els.previewMenu = this.find('.js-preview-menu');
     this.els.mediaFrame = this.find('.js-media-frame');
     this.els.countText = this.find('.js-count-text');
-    this.els.options = this.find('.js-options');
-    this.els.header = this.find('.js-header');
-    this.els.share = this.find('.js-share');
+    this.els.previewMenu = this.find('.js-preview-menu');

     // We're appending new elements to DOM so to make sure headers are
     // properly resized and centered, we emmit a lazyload event.
@@ -62,21 +55,11 @@ return View.extend({
     // Update localization strings
     navigator.mozL10n.translate(this.el);

-    // Configure the MediaFrame component
-    this.configure();
-
-    // Clean up
-    delete this.template;
-
-    debug('rendered');
-    return this.bindEvents();
-  },
-
-  bindEvents: function() {
+    // MediaFrame has a GestureDetector that can emit 'tap' events
     bind(this.el, 'tap', this.onTap);
-    bind(this.els.header, 'action', this.firer('click:back'));
-    bind(this.els.options, 'click', this.onButtonClick);
-    bind(this.els.share, 'click', this.onButtonClick);
+    attach.on(this.els.previewMenu, 'click', '.js-btn', this.onButtonClick);
+
+    this.configure();
     return this;
   },

@@ -84,27 +67,38 @@ return View.extend({
     this.currentIndex = this.lastIndex = 0;

     this.frame = new MediaFrame(this.els.mediaFrame, true, this.maxPreviewSize);
-    this.frame.video.onloading = this.onVideoLoading;
-    this.frame.video.onplaying = this.onVideoPlaying;
-    this.frame.video.onpaused = this.onVideoPaused;
+    this.frame.video.onplaying = this.handleVideoPlay;
+    this.frame.video.onpaused = this.handleVideoStop;

     addPanAndZoomHandlers(this.frame, this.swipeCallback);
   },

   template: function() {
     return '<div class="frame-container js-frame-container">' +
-        '<div class="media-frame js-media-frame"></div>' +
-      '</div>' +
-      '<div class="preview-menu js-preview-menu">' +
-        '<gaia-header class="js-header" action="back" skin="dark">' +
+     '<div class="media-frame js-media-frame"></div>' +
+     '</div>' +
+     '<div class="preview-menu js-preview-menu">' +
+       '<section class="skin-dark" role="region">' +
+        '<header class="js-preview-header">' +
+          '<button class="js-btn" name="back">' +
+            '<span class="preview-back-icon icon-back-arrow">' +
+            '</span>' +
+          '</button>' +
+          '<menu type="toolbar">' +
+            '<button class="js-btn" name="share">' +
+              '<span class="preview-share-icon icon-preview-share">' +
+              '</span>' +
+            '</button>' +
+            '<button class="js-btn" name="options" >' +
+              '<span class="preview-option-icon icon-preview-options">' +
+              '</span>' +
+            '</button>' +
+          '</menu>' +
           '<h1 data-l10n-id="preview">Preview</h1>' +
-          '<button class="preview-share-icon icon-share js-share"' +
-            'name="share"></button>' +
-          '<button class="preview-option-icon icon-more ' +
-            'js-options" name="options" ></button>' +
-        '</gaia-header>' +
-      '</div>' +
-    '<div class="count-text js-count-text"></div>';
+        '</header>' +
+       '</section>' +
+      '<div class="count-text js-count-text"></div>' +
+    '</div>';
   },

   onTap: function() {
@@ -174,7 +168,7 @@ return View.extend({

     // First, stop the video if there is one and it is playing.
     if (this.videoPlaying) {
-      this.onVideoPaused();
+      this.handleVideoStop();
     }

     // Now animate the item off the screen
@@ -225,7 +219,6 @@ return View.extend({
   onButtonClick: function(e, el) {
     if (this.videoPlaying) { return; }

-    el = el || e.currentTarget;
     var name = el.getAttribute('name');
     if (this.optionsMenuContainer) {
       this.hideOptionsMenu();
@@ -282,22 +275,16 @@ return View.extend({
       video.rotation);
   },

-  onVideoLoading: function() {
-    this.emit('loadingvideo', 'loadingVideo');
-  },
-
-  onVideoPlaying: function() {
+  handleVideoPlay: function() {
     if (this.videoPlaying) {
       return;
     }

     this.videoPlaying = true;
     this.previewMenuFadeOut();
-
-    this.emit('playingvideo');
   },

-  onVideoPaused: function() {
+  handleVideoStop: function() {
     if (!this.videoPlaying) {
       return;
     }
diff --git a/apps/camera/js/views/setting-options.js b/apps/camera/js/views/setting-options.js
index 0af0d8e..393706e 100755
--- a/apps/camera/js/views/setting-options.js
+++ b/apps/camera/js/views/setting-options.js
@@ -52,11 +52,6 @@ module.exports = View.extend({
     // options should be localized
     var localizable = data.optionsLocalizable === false ? false : true;
     data.options.forEach(this.renderOption.bind(this, localizable));
-
-    // Clean up
-    delete this.template;
-
-    debug('rendered');
     return this;
   },

diff --git a/apps/camera/js/views/setting.js b/apps/camera/js/views/setting.js
index cb3681c..476c2bb 100644
--- a/apps/camera/js/views/setting.js
+++ b/apps/camera/js/views/setting.js
@@ -42,11 +42,7 @@ module.exports = View.extend({
     data.value = data.selected && data.selected.title;

     this.el.innerHTML = this.template(data);
-
-    // Clean up
-    delete this.template;
-
-    debug('rendered (item %s)', data.key);
+    debug('rendered item %s', data.key);
     return this;
   },

diff --git a/apps/camera/js/views/settings.js b/apps/camera/js/views/settings.js
index 6f4f75d..50e7390 100644
--- a/apps/camera/js/views/settings.js
+++ b/apps/camera/js/views/settings.js
@@ -5,11 +5,11 @@ define(function(require, exports, module) {
  * Dependencies
  */

-var debug = require('debug')('view:settings');
 var OptionsView = require('views/setting-options');
+var debug = require('debug')('view:settings');
 var SettingView = require('views/setting');
-var View = require('view');
 var bind = require('lib/bind');
+var View = require('view');

 /**
  * Exports
@@ -56,17 +56,9 @@ module.exports = View.extend({
     this.els.items = this.find('.js-items');
     this.els.pane2 = this.find('.js-pane-2');
     this.els.close = this.find('.js-close');
+    bind(this.els.close, 'click', this.firer('click:close'));
     this.items.forEach(this.addItem);
-
-    // Clean up
-    delete this.template;
-
     debug('rendered');
-    return this.bindEvents();
-  },
-
-  bindEvents: function() {
-    bind(this.els.close, 'click', this.firer('click:close'));
     return this;
   },

@@ -114,7 +106,7 @@ module.exports = View.extend({
     '<div class="pane pane-2">' +
       '<div class="inner js-pane-2"></div>' +
     '</div>' +
-    '<div class="settings_close icon-menu js-close"></div>';
+    '<div class="settings_close icon-settings js-close"></div>';
   }
 });

diff --git a/apps/camera/js/views/timer.js b/apps/camera/js/views/timer.js
index aa61e3d..879fcd4 100644
--- a/apps/camera/js/views/timer.js
+++ b/apps/camera/js/views/timer.js
@@ -28,12 +28,6 @@ module.exports = View.extend({
   render: function() {
     this.el.innerHTML = this.template();
     this.els.count = this.find('.js-count');
-
-    // Clean up
-    delete this.template;
-
-    debug('rendered');
-    return this;
   },

   set: function(time) {
diff --git a/apps/camera/js/views/viewfinder.js b/apps/camera/js/views/viewfinder.js
index efc438b..9927d51 100644
--- a/apps/camera/js/views/viewfinder.js
+++ b/apps/camera/js/views/viewfinder.js
@@ -5,9 +5,9 @@ define(function(require, exports, module) {
  * Dependencies
  */

+var CameraUtils = require('lib/camera-utils');
 var debug = require('debug')('view:viewfinder');
 var bind = require('lib/bind');
-var CameraUtils = require('lib/camera-utils');
 var View = require('view');

 /**
@@ -31,26 +31,19 @@ module.exports = View.extend({

   initialize: function() {
     this.render();
+
+    bind(this.el, 'click', this.onClick);
+    bind(this.el, 'animationend', this.onShutterEnd);
+
     this.getSize();
   },

   render: function() {
     this.el.innerHTML = this.template();
+    // Find elements
     this.els.frame = this.find('.js-frame');
     this.els.video = this.find('.js-video');
     this.els.videoContainer = this.find('.js-video-container');
-
-    // Clean up
-    delete this.template;
-
-    debug('rendered');
-    return this.bindEvents();
-  },
-
-  bindEvents: function() {
-    bind(this.el, 'click', this.onClick);
-    bind(this.el, 'animationend', this.onShutterEnd);
-    return this;
   },

   /**
diff --git a/apps/camera/js/views/zoom-bar.js b/apps/camera/js/views/zoom-bar.js
index 102a8af..4baac40 100644
--- a/apps/camera/js/views/zoom-bar.js
+++ b/apps/camera/js/views/zoom-bar.js
@@ -5,10 +5,9 @@ define(function(require, exports, module) {
  * Dependencies
  */

-var debug = require('debug')('view:zoom-bar');
-var View = require('view');
-var bind = require('lib/bind');
 var orientation = require('lib/orientation');
+var bind = require('lib/bind');
+var View = require('view');

 /**
  * Locals
@@ -33,31 +32,25 @@ module.exports = View.extend({

     // Amount of inactivity time (in milliseconds) to hide the Zoom Bar
     this.zoomBarInactivityTimeout = 3000;
+
+    // Bind events
+    bind(this.els.scrubber, 'touchstart', this.onTouchStart);
+    bind(this.els.scrubber, 'touchmove', this.onTouchMove);
+    bind(this.els.scrubber, 'touchend', this.onTouchEnd);
+    bind(this.els.maxIndicator, 'click', this.onIncrement);
+    bind(this.els.minIndicator, 'click', this.onDecrement);
+    orientation.on('orientation', this.setOrientation);
   },

   render: function() {
     this.el.innerHTML = this.template();
+
+    // Find elements
     this.els.maxIndicator = this.find('.zoom-bar-max-indicator');
     this.els.minIndicator = this.find('.zoom-bar-min-indicator');
     this.els.inner = this.find('.zoom-bar-inner');
     this.els.track = this.find('.zoom-bar-track');
     this.els.scrubber = this.find('.zoom-bar-scrubber');
-
-    // Clean up
-    delete this.template;
-
-    debug('rendered');
-    return this.bindEvents();
-  },
-
-  bindEvents: function() {
-    bind(this.els.scrubber, 'touchstart', this.onTouchStart);
-    bind(this.els.scrubber, 'touchmove', this.onTouchMove);
-    bind(this.els.scrubber, 'touchend', this.onTouchEnd);
-    bind(this.els.maxIndicator, 'click', this.onIncrement);
-    bind(this.els.minIndicator, 'click', this.onDecrement);
-    orientation.on('orientation', this.setOrientation);
-    return this;
   },

   template: function() {
diff --git a/apps/camera/manifest.webapp b/apps/camera/manifest.webapp
index d9c8240..55ce1b6 100644
--- a/apps/camera/manifest.webapp
+++ b/apps/camera/manifest.webapp
@@ -16,8 +16,7 @@
     "settings":{ "access": "readonly" },
     "camera":{},
     "geolocation":{},
-    "audio-channel-notification":{},
-    "feature-detection": {}
+    "audio-channel-notification":{}
   },
   "activities": {
     "record": {
diff --git a/apps/camera/resources/sounds/camcorder_end.opus b/apps/camera/resources/sounds/camcorder_end.opus
index 66bea6e..f94047d 100644
Binary files a/apps/camera/resources/sounds/camcorder_end.opus and b/apps/camera/resources/sounds/camcorder_end.opus differ
diff --git a/apps/camera/resources/sounds/camcorder_start.opus b/apps/camera/resources/sounds/camcorder_start.opus
index d988c88..5ed60eb 100644
Binary files a/apps/camera/resources/sounds/camcorder_start.opus and b/apps/camera/resources/sounds/camcorder_start.opus differ
diff --git a/apps/camera/resources/sounds/shutter.ogg b/apps/camera/resources/sounds/shutter.ogg
new file mode 100644
index 0000000..f0c67d6
Binary files /dev/null and b/apps/camera/resources/sounds/shutter.ogg differ
diff --git a/apps/camera/resources/sounds/shutter.opus b/apps/camera/resources/sounds/shutter.opus
deleted file mode 100644
index bcba746..0000000
Binary files a/apps/camera/resources/sounds/shutter.opus and /dev/null differ
diff --git a/apps/camera/resources/sounds/timer.ogg b/apps/camera/resources/sounds/timer.ogg
new file mode 100644
index 0000000..8691bcd
Binary files /dev/null and b/apps/camera/resources/sounds/timer.ogg differ
diff --git a/apps/camera/resources/sounds/timer.opus b/apps/camera/resources/sounds/timer.opus
deleted file mode 100644
index 0191a24..0000000
Binary files a/apps/camera/resources/sounds/timer.opus and /dev/null differ
diff --git a/apps/camera/style/controls.css b/apps/camera/style/controls.css
index 3529b50..a83c356 100755
--- a/apps/camera/style/controls.css
+++ b/apps/camera/style/controls.css
@@ -15,14 +15,9 @@
   width: 100%;
   padding-bottom: 1rem;
   overflow: hidden;
-  opacity: 0;
   transition: opacity 100ms;
 }

-.controls.visible {
-  opacity: 1;
-}
-
 /**
  * faded
  */
@@ -371,6 +366,7 @@
   line-height: 10.2rem;
   text-align: center;
   color: #81ACB6;
+  content: "\e60f";
 }

 /**
@@ -395,7 +391,7 @@
  */

 .controls.mode-video .capture-button .center:before {
-  content: "";
+  content: '';
   top: calc(50% - 1rem);
   left: calc(50% - 1rem);
   width: 2.001rem; /* 1 */
diff --git a/apps/camera/style/focus-ring.css b/apps/camera/style/focus-ring.css
index 2e45306..591e0bc 100755
--- a/apps/camera/style/focus-ring.css
+++ b/apps/camera/style/focus-ring.css
@@ -4,11 +4,11 @@

 .focus {
   position: absolute;
-  width: 8.2rem;
+  width: 10rem;
   height: 10rem;
   font-size: 10rem;
   margin-top: -5rem;
-  margin-left: -4.1rem;
+  margin-left: -5rem;
   pointer-events: none;
   opacity: 0;
   transform-origin: 50% 50%;
@@ -46,7 +46,7 @@

 .focus-ring:before,
 .focus-ring:after {
-  font-family: 'gaia-icons';
+  font-family: 'gaia-camera';
   display: block;
   position: absolute;
   top: 0;
@@ -54,11 +54,11 @@
 }

 .focus-ring:before {
-  content: "focus-locking";
+  content: "\e616";
 }

 .focus-ring:after {
-  content: "focus-locked";
+  content: "\e615";
 }

 /**
diff --git a/apps/camera/style/icomoon.json b/apps/camera/style/icomoon.json
new file mode 100755
index 0000000..4e0d728
--- /dev/null
+++ b/apps/camera/style/icomoon.json
@@ -0,0 +1,667 @@
+{
+	"IcoMoonType": "selection",
+	"icons": [
+		{
+			"icon": {
+				"paths": [
+					"M238.933 449.98c-34.27 0-62.020 27.785-62.020 62.054 0 34.236 27.75 62.020 62.020 62.020s62.020-27.785 62.020-62.054c0-34.236-27.75-62.020-62.020-62.020zM511.727 449.98c-34.27 0-62.020 27.785-62.020 62.054 0 34.236 27.75 62.020 62.020 62.020s62.054-27.785 62.054-62.054c0-34.236-27.785-62.020-62.054-62.020zM785.067 449.98c-34.27 0-62.020 27.785-62.020 62.054 0 34.236 27.75 62.020 62.020 62.020 34.236 0 62.020-27.75 62.020-62.020 0-34.27-27.785-62.054-62.020-62.054z"
+				],
+				"tags": [
+					"preview-options"
+				],
+				"grid": 16
+			},
+			"properties": {
+				"order": 1,
+				"id": 28,
+				"prevSize": 32,
+				"code": 58904,
+				"name": "preview-options",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 0
+		},
+		{
+			"icon": {
+				"paths": [
+					"M511.454 305.937c-113.607 0-205.722 92.103-205.722 205.733 0 113.618 92.103 205.722 205.722 205.722 113.63 0 205.733-92.092 205.733-205.722 0.011-113.63-92.103-205.733-205.733-205.733zM837.518 159.38h-651.025c-59.017 0-106.86 47.844-106.86 106.86v491.52c0 59.017 47.844 106.849 106.86 106.849h651.025c59.017 0 106.849-47.844 106.849-106.849v-491.52c0-59.017-47.844-106.86-106.849-106.86zM512.273 768.387c-141.609 0-256.387-114.779-256.387-256.375 0-141.619 114.79-256.398 256.387-256.398 141.596 0 256.398 114.79 256.398 256.398 0 141.596-114.79 256.375-256.398 256.375z"
+				],
+				"tags": [
+					"camera"
+				],
+				"defaultCode": 58895,
+				"grid": 16
+			},
+			"properties": {
+				"id": 14,
+				"order": 3,
+				"prevSize": 32,
+				"code": 58895,
+				"name": "camera",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 1
+		},
+		{
+			"icon": {
+				"paths": [
+					"M608.666 531.831c-10.479-11.742-10.24-29.696 0.99-40.926 0.307-0.205 0.546-0.375 0.751-0.614l137.216-137.182c-10.479-39.765-24.883-76.083-42.325-108.271l-193.263 193.263-193.877-193.843c-17.408 32.119-31.915 68.403-42.462 108.134l137.865 137.933c0.239 0.239 0.546 0.41 0.751 0.614 11.23 11.23 11.537 29.184 1.058 40.926l0.171 0.068-139.878 139.81c10.547 39.697 25.020 75.947 42.462 107.998l193.877-193.877 193.263 193.263c17.34-32.085 31.778-68.369 42.325-108.032l-139.093-139.162 0.171-0.102z"
+				],
+				"tags": [
+					"pick-cancel"
+				],
+				"defaultCode": 58903,
+				"grid": 16
+			},
+			"properties": {
+				"id": 0,
+				"order": 4,
+				"prevSize": 32,
+				"code": 58903,
+				"name": "pick-cancel",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 2
+		},
+		{
+			"icon": {
+				"paths": [
+					"M512 174.106c-83.813 0-160.116 30.966-219.15 81.534l-101.053-81.422-17.691 17.691 293.653 364.247c0 0 0 0.057 0.028 0.057 24.441 24.441 64.041 24.441 88.481 0s24.441-64.069 0-88.509c-3.291-3.319-6.919-6.075-10.716-8.494l-193.078-155.559c44.241-34.003 99.394-54.506 159.525-54.506 145.153 0 262.828 117.675 262.828 262.828 0 145.125-117.703 262.857-262.828 262.857-145.153 0-262.8-117.731-262.8-262.857 0-18.534 1.941-36.563 5.597-54.028l-56.981-69.666c-15.103 38.334-23.709 79.987-23.709 123.694 0 186.609 151.284 337.894 337.894 337.894s337.894-151.257 337.894-337.866c0.057-186.609-151.257-337.894-337.894-337.894z"
+				],
+				"tags": [
+					"self-timer"
+				],
+				"defaultCode": 58887,
+				"grid": 16
+			},
+			"properties": {
+				"id": 1,
+				"order": 5,
+				"prevSize": 32,
+				"code": 58887,
+				"name": "self-timer",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 3
+		},
+		{
+			"icon": {
+				"paths": [
+					"M422.815 728.553h-0.101c-11.709 10.498-29.627 10.172-40.908-1.059-0.228-0.228-0.378-0.529-0.58-0.857l-231.289-314.238-32.528 113.815 240.196 323.221c34.118 20.339 78.763 16.177 108.061-13.249l440.719-523.746v-150.33l-483.572 566.447z"
+				],
+				"tags": [
+					"tick"
+				],
+				"defaultCode": 58884,
+				"grid": 16
+			},
+			"properties": {
+				"id": 13,
+				"order": 6,
+				"prevSize": 32,
+				"code": 58884,
+				"name": "tick",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 4
+		},
+		{
+			"icon": {
+				"paths": [
+					"M507.552 441.408h-16.448l-17.6 142.272h19.936c9.248 0 17.824-1.856 25.728-5.472 7.872-3.648 14.72-9.248 20.48-16.736s10.304-16.928 13.568-28.288 4.928-24.8 4.928-40.416c0-18.272-4.448-31.392-13.184-39.36-8.768-8-21.248-12-37.408-12zM689.984 156h-355.968c-98.304 0-177.984 79.68-177.984 177.984v356c0 98.272 79.712 177.984 177.984 177.984h356c98.304 0 177.984-79.68 177.984-177.984v-355.968c0-98.336-79.68-178.016-178.016-178.016zM407.072 612.256h-38.4l10.944-89.152h-68.992l-10.976 89.152h-38.112l24.256-199.392h38.4l-9.824 79.936h68.992l9.824-79.936h38.112l-24.224 199.392zM590.752 542.688c-4.8 14.816-11.872 27.36-21.12 37.664-9.248 10.336-20.576 18.176-33.952 23.68s-28.512 8.224-45.44 8.224h-58.336l24.224-199.392h51.968c13.888 0 26.336 1.696 37.376 5.024 11.136 3.36 20.512 8.384 28.32 15.008s13.76 14.912 17.888 24.8c4.128 9.92 6.24 21.408 6.24 34.496 0.032 18.88-2.368 35.712-7.168 50.496zM756.32 612.256h-41.248l-37.568-79.936h-23.68l-9.824 79.936h-38.048l24.256-199.392h56.32c25.76 0 44.864 4.608 57.312 13.856s18.624 22.144 18.624 38.688c0 15.008-4.448 27.968-13.44 38.816-8.928 10.848-20.992 18.432-36.256 22.656l43.552 85.376zM713.12 447.2c-6.048-4.416-15.68-6.656-28.992-6.656h-19.008l-8.128 64.384h24.576c13.056 0 23.136-3.232 30.176-9.664 7.008-6.464 10.496-15.936 10.496-28.448 0-8.672-2.976-15.232-9.12-19.616z"
+				],
+				"tags": [
+					"hdr-menu"
+				],
+				"defaultCode": 58898,
+				"grid": 16
+			},
+			"properties": {
+				"id": 2,
+				"order": 7,
+				"prevSize": 32,
+				"code": 58898,
+				"name": "hdr-menu",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 5
+		},
+		{
+			"icon": {
+				"paths": [
+					"M190.746 801.13c0 17.733 14.377 32.126 32.126 32.126h160.627v-192.753h-192.753v160.627zM801.13 190.746h-160.627v192.753h192.753v-160.643c0-17.733-14.377-32.11-32.126-32.11zM640.502 833.254h160.627c17.749 0 32.126-14.377 32.126-32.126v-160.627h-192.753v192.753zM190.746 222.854v160.643h192.753v-192.753h-160.643c-17.733 0-32.11 14.377-32.11 32.11zM640.502 608.377h192.753v-192.769h-192.753v192.769zM415.623 383.498h192.753v-192.753h-192.753v192.753zM415.623 608.377h192.753v-192.769h-192.753v192.769zM415.623 833.254h192.753v-192.753h-192.753v192.753zM190.746 608.377h192.753v-192.769h-192.753v192.769z"
+				],
+				"tags": [
+					"gallery"
+				],
+				"defaultCode": 58880,
+				"grid": 16
+			},
+			"properties": {
+				"id": 3,
+				"order": 8,
+				"prevSize": 32,
+				"code": 58880,
+				"name": "gallery",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 6
+		},
+		{
+			"icon": {
+				"paths": [
+					"M529.237 917.060l-2.15-0.102c-188.177 0-340.685-91.102-340.685-203.366 0-49.63 29.867-94.993 79.36-130.321v-10.923c-64.137 41.062-103.731 97.178-103.731 158.993 0 122.539 155.341 222.345 349.867 227.362l-25.327 59.392 152.951-80.418-84.48-80.384-25.805 59.767z",
+					"M512.171 55.433l25.327-49.527-152.917 66.97 84.378 67.072 24.542-49.254 19.627-0.068c180.599 4.198 324.608 78.165 324.608 169.028 0 41.37-29.969 79.223-79.394 108.646v9.045c64.137-34.202 103.663-80.862 103.663-132.403 0-102.263-155.307-185.31-349.833-189.508z",
+					"M501.828 226.202c-95.437 0-172.783 25.805-172.783 57.617l0.273 435.302c1.536 31.403 78.063 56.661 172.51 56.661 94.583 0 171.042-25.259 172.578-56.661 0 0 0.341-435.268 0.341-435.302 0-31.812-77.414-57.617-172.919-57.617zM639.215 671.334c0 18.807-15.223 34.031-34.133 34.031h-204.937c-18.842 0-34.133-15.223-34.133-34.031v-341.436c0-18.842 15.326-34.133 34.133-34.133h204.937c18.876 0 34.133 15.258 34.133 34.133v341.436z"
+				],
+				"tags": [
+					"toggle-camera-front"
+				],
+				"defaultCode": 58896,
+				"grid": 16
+			},
+			"properties": {
+				"order": 28,
+				"id": 29,
+				"prevSize": 32,
+				"code": 58907,
+				"name": "toggle-camera-front",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 7
+		},
+		{
+			"icon": {
+				"paths": [
+					"M529.237 917.060l-2.15-0.102c-188.177 0-340.685-91.102-340.685-203.366 0-49.63 29.867-94.993 79.36-130.321v-10.923c-64.137 41.062-103.731 97.178-103.731 158.993 0 122.539 155.341 222.345 349.867 227.362l-25.327 59.392 152.951-80.418-84.48-80.384-25.805 59.767z",
+					"M512.171 55.433l25.327-49.527-152.917 66.97 84.378 67.072 24.542-49.254 19.627-0.068c180.599 4.198 324.608 78.165 324.608 169.028 0 41.37-29.969 79.223-79.394 108.646v9.045c64.137-34.202 103.663-80.862 103.663-132.403 0-102.263-155.307-185.31-349.833-189.508z",
+					"M501.828 226.202c-95.437 0-172.783 25.805-172.783 57.617l0.273 435.302c1.536 31.403 78.063 56.661 172.51 56.661 94.583 0 171.042-25.259 172.578-56.661 0 0 0.341-435.268 0.341-435.302 0-31.812-77.414-57.617-172.919-57.617zM433.732 400.555c-21.231 0-38.468-17.033-38.468-38.093s17.237-38.093 38.468-38.093c21.265 0 38.502 17.033 38.502 38.093s-17.237 38.093-38.502 38.093z"
+				],
+				"tags": [
+					"toggle-camera-rear"
+				],
+				"defaultCode": 58896,
+				"grid": 16
+			},
+			"properties": {
+				"id": 15,
+				"order": 27,
+				"prevSize": 32,
+				"code": 58896,
+				"name": "toggle-camera-rear",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 8
+		},
+		{
+			"icon": {
+				"paths": [
+					"M945.943 211.44l-246.954 246.89v-102.114c0-86.891-70.406-157.291-157.291-157.291h-311.568c-86.891 0-157.291 70.406-157.291 157.291v311.568c0 86.891 70.406 157.291 157.291 157.291h311.568c86.891 0 157.291-70.406 157.291-157.291v-102.114l246.954 246.89c14.66 14.66 33.847 21.959 53.040 21.959v-645.033c-19.19 0-38.381 7.298-53.040 21.959z"
+				],
+				"tags": [
+					"video"
+				],
+				"defaultCode": 58882,
+				"grid": 16
+			},
+			"properties": {
+				"id": 4,
+				"order": 9,
+				"prevSize": 32,
+				"code": 58882,
+				"name": "video",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 9
+		},
+		{
+			"icon": {
+				"paths": [
+					"M709.583 452.779c0-109.066-88.395-197.5-197.479-197.5-109.066 0-197.479 88.436-197.479 197.5 0 43.438 14.202 83.487 37.969 116.092l-0.749 0.957 160.277 205.612 160.277-205.612-0.727-0.957c23.725-32.604 37.906-72.633 37.906-116.092zM512.311 551.529c-54.542 0-98.749-44.207-98.749-98.749s44.207-98.749 98.749-98.749c54.542 0 98.749 44.207 98.749 98.749 0 54.542-44.187 98.749-98.749 98.749z"
+				],
+				"tags": [
+					"geolocation"
+				],
+				"defaultCode": 58883,
+				"grid": 16
+			},
+			"properties": {
+				"id": 5,
+				"order": 10,
+				"prevSize": 32,
+				"code": 58883,
+				"name": "geolocation",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 10
+		},
+		{
+			"icon": {
+				"paths": [
+					"M752.956 120.471h-466.824c-33.265 0-60.235 26.97-60.235 60.235v384.090h1.039c-0.617 2.394-1.039 4.864-1.039 7.469v301.146c0 16.625 13.493 30.118 30.118 30.118h210.824c16.625 0 30.118-13.493 30.118-30.118v-301.161c0-16.64-13.493-30.118-30.118-30.118h-165.647v-331.309c0-8.312 6.731-15.059 15.059-15.059h406.588c8.312 0 15.059 6.731 15.059 15.059v602.338c0 8.312-6.746 15.059-15.059 15.059h-110.095v75.309h140.228c33.265 0 60.235-26.97 60.235-60.235v-662.588c-0.015-33.28-26.985-60.235-60.25-60.235z"
+				],
+				"tags": [
+					"picture-size"
+				],
+				"defaultCode": 58899,
+				"grid": 16
+			},
+			"properties": {
+				"id": 6,
+				"order": 11,
+				"prevSize": 32,
+				"code": 58899,
+				"name": "picture-size",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 11
+		},
+		{
+			"icon": {
+				"paths": [
+					"M624.64 460.8c-10.24-3.413-64.853-3.413-85.333 0l153.6-354.987-307.2 399.36c-10.24 20.48-6.827 47.787 13.653 58.027 10.24 3.413 64.853 3.413 85.333 0l-153.6 354.987 307.2-399.36c13.653-20.48 10.24-47.787-13.653-58.027z"
+				],
+				"tags": [
+					"flash-on"
+				],
+				"defaultCode": 58897,
+				"grid": 16
+			},
+			"properties": {
+				"id": 18,
+				"order": 12,
+				"prevSize": 32,
+				"code": 58897,
+				"name": "flash-on",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 12
+		},
+		{
+			"icon": {
+				"paths": [
+					"M385.707 273.067v0c-6.827-6.827-6.827-13.653 0-20.48 0 0 0 0 0 0l71.68-71.68c-6.827-20.48-13.653-37.547-20.48-54.613l-102.4 98.987-98.987-98.987c-10.24 17.067-17.067 34.133-20.48 54.613l71.68 71.68c0 0 0 0 0 0 6.827 6.827 6.827 13.653 0 20.48v0l-71.68 71.68c6.827 20.48 13.653 37.547 20.48 54.613l98.987-98.987 98.987 98.987c10.24-17.067 17.067-34.133 20.48-54.613l-68.267-71.68z",
+					"M744.107 460.8c-10.24-3.413-64.853-3.413-85.333 0l153.6-354.987-307.2 399.36c-10.24 20.48-6.827 47.787 13.653 58.027 10.24 3.413 64.853 3.413 85.333 0l-153.6 354.987 307.2-399.36c10.24-20.48 6.827-47.787-13.653-58.027z"
+				],
+				"tags": [
+					"flash-off"
+				],
+				"defaultCode": 58894,
+				"grid": 16
+			},
+			"properties": {
+				"id": 19,
+				"order": 13,
+				"prevSize": 32,
+				"code": 58894,
+				"name": "flash-off",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 13
+		},
+		{
+			"icon": {
+				"paths": [
+					"M105.412 512c0 47.586 8.418 93.124 23.462 135.529h217.48v-271.059h-217.495c-15.029 42.406-23.447 87.944-23.447 135.529zM140.89 346.353h205.463v-205.432c-91.256 40.809-164.593 114.251-205.463 205.432zM376.471 894.961c42.451 15.029 87.928 23.627 135.529 23.627s93.079-8.599 135.529-23.627v-217.314h-271.059v217.314zM346.353 883.080v-205.432h-205.463c40.87 91.181 114.206 164.638 205.463 205.432zM677.647 140.92v205.432h205.463c-40.87-91.166-114.206-164.623-205.463-205.432zM376.471 647.529h271.059v-271.059h-271.059v271.059zM895.127 376.486h-217.48v271.059h217.48c15.044-42.421 23.462-87.959 23.462-135.544s-8.418-93.124-23.462-135.514zM677.647 883.080c91.256-40.809 164.593-114.251 205.463-205.432h-205.463v205.432zM376.471 129.039v217.314h271.059v-217.314c-42.451-15.014-87.928-23.627-135.529-23.627-47.601 0-93.079 8.614-135.529 23.627z"
+				],
+				"tags": [
+					"grid"
+				],
+				"defaultCode": 58885,
+				"grid": 16
+			},
+			"properties": {
+				"id": 7,
+				"order": 14,
+				"prevSize": 32,
+				"code": 58885,
+				"name": "grid",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 14
+		},
+		{
+			"icon": {
+				"paths": [
+					"M511.895 110.411c-224.527 0-406.543 182.016-406.543 406.543 0 122.368 54.136 232.011 139.671 306.552l373.444-373.459c11.761-11.761 30.84-11.761 42.601 0l225.355 225.355c20.631-48.7 32.030-102.234 32.030-158.449 0-224.512-182.016-406.543-406.558-406.543zM406.498 501.911c-49.905 0-90.353-40.448-90.353-90.353 0-49.89 40.448-90.353 90.353-90.353 49.905 0 90.353 40.448 90.353 90.353 0 49.905-40.463 90.353-90.353 90.353z"
+				],
+				"tags": [
+					"scene"
+				],
+				"defaultCode": 58889,
+				"grid": 16
+			},
+			"properties": {
+				"id": 8,
+				"order": 15,
+				"prevSize": 32,
+				"code": 58889,
+				"name": "scene",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 15
+		},
+		{
+			"icon": {
+				"paths": [
+					"M922.522 427.11h-49.118c-4.54-26.283-18.876-85.367-18.876-85.367s-706.287-1.024-708.198-1.024c-28.297 0-51.2 76.39-51.2 170.667 0 94.242 22.903 170.701 51.2 170.701v1.058h708.233c0 0 14.063-60.075 18.603-85.333h49.084c4.471-25.327 7.066-54.818 7.066-86.426-0.034-30.686-2.526-59.426-6.793-84.275zM820.463 649.011h-581.359v-273.101h581.359v273.101z"
+				],
+				"tags": [
+					"battery-verylow"
+				],
+				"defaultCode": 58906,
+				"grid": 16
+			},
+			"properties": {
+				"id": 20,
+				"order": 16,
+				"prevSize": 32,
+				"code": 58906,
+				"name": "battery-verylow",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 16
+		},
+		{
+			"icon": {
+				"paths": [
+					"M922.522 427.11h-49.118c-4.54-26.283-18.876-85.367-18.876-85.367s-706.287-1.024-708.198-1.024c-28.297 0-51.2 76.39-51.2 170.667 0 94.242 22.903 170.701 51.2 170.701v1.058h708.233c0 0 14.063-60.075 18.603-85.333h49.084c4.471-25.327 7.066-54.818 7.066-86.426-0.034-30.686-2.526-59.426-6.793-84.275zM820.463 649.011h-478.959v-273.101h478.959v273.101z"
+				],
+				"tags": [
+					"battery-low"
+				],
+				"defaultCode": 58905,
+				"grid": 16
+			},
+			"properties": {
+				"id": 21,
+				"order": 17,
+				"prevSize": 32,
+				"code": 58905,
+				"name": "battery-low",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 17
+		},
+		{
+			"icon": {
+				"paths": [
+					"M342.187 715.127c-4.54 23.586-4.54 47.923 0 71.68h339.627c4.574-23.723 4.574-48.060 0-71.68h-339.627zM342.187 476.194c-4.54 23.654-4.54 47.957 0 71.68h339.627c4.574-23.723 4.574-48.026 0-71.68h-339.627zM681.813 308.941c4.574-23.689 4.574-48.060 0-71.714h-339.627c-4.54 23.654-4.54 48.026 0 71.714h339.627z"
+				],
+				"tags": [
+					"settings"
+				],
+				"defaultCode": 58892,
+				"grid": 16
+			},
+			"properties": {
+				"id": 9,
+				"order": 18,
+				"prevSize": 32,
+				"code": 58892,
+				"name": "settings",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 18
+		},
+		{
+			"icon": {
+				"paths": [
+					"M368.64 129.707h-64.853l-81.92 262.827h51.2l17.067-61.44h88.747l17.067 61.44h54.613l-81.92-262.827zM300.373 293.547l34.133-122.88 34.133 122.88h-68.267z",
+					"M744.107 460.8c-10.24-3.413-64.853-3.413-85.333 0l153.6-354.987-307.2 399.36c-10.24 20.48-6.827 47.787 13.653 58.027 10.24 3.413 64.853 3.413 85.333 0l-153.6 354.987 307.2-399.36c10.24-20.48 6.827-47.787-13.653-58.027z"
+				],
+				"tags": [
+					"flash-auto"
+				],
+				"defaultCode": 58893,
+				"grid": 16
+			},
+			"properties": {
+				"id": 10,
+				"order": 2,
+				"prevSize": 32,
+				"code": 58893,
+				"name": "flash-auto",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 19
+		},
+		{
+			"icon": {
+				"paths": [
+					"M179.985 501.487l110.114-110.148c-5.12-22.050-11.537-42.598-19.149-61.338l-149.436 149.504c-18.534 18.534-18.534 48.572 0 67.106l149.333 149.333c7.509-18.671 13.995-39.185 19.115-61.201l-111.002-111.002 0.068-0.102c-5.598-6.281-5.461-15.838 0.58-21.811 0.102-0.137 0.273-0.239 0.375-0.341zM579.209 417.041c-51.507 0-93.389 41.813-93.389 93.423s41.882 93.389 93.389 93.389c51.61 0 93.491-41.813 93.491-93.389-0-51.644-41.916-93.423-93.491-93.423zM748.988 328.055h-418.714c32.973 52.975 52.156 115.439 52.156 182.443 0 66.901-19.081 129.229-51.951 182.17h418.543c34.372 0 62.089-27.785 62.089-62.123v-240.367c0-34.27-27.75-62.123-62.123-62.123zM579.311 626.859c-64.307 0-116.463-52.053-116.463-116.395 0-64.307 52.122-116.463 116.463-116.463 64.307 0 116.429 52.156 116.429 116.463-0 64.341-52.156 116.395-116.429 116.395z"
+				],
+				"tags": [
+					"camera-back"
+				],
+				"defaultCode": 58886,
+				"grid": 16
+			},
+			"properties": {
+				"id": 22,
+				"order": 19,
+				"prevSize": 32,
+				"code": 58886,
+				"name": "camera-back",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 20
+		},
+		{
+			"icon": {
+				"paths": [
+					"M298.325 856.747c3.243 33.314 32.427 59.494 65.331 59.494h297.677c32.87 0 62.054-26.249 65.331-59.494l44.851-460.083h-517.871l44.681 460.083zM725.572 216.098h-44.407v-22.084c0-48.503-39.287-87.825-87.859-87.825h-162.372c-48.503 0-87.859 39.322-87.859 87.825v22.084h-44.407c-50.517 0-91.477 40.96-91.477 91.511v61.099h609.894v-61.099c0-50.551-41.028-91.511-91.511-91.511zM633.549 216.098h-242.859v-19.115c0-25.498 20.685-46.182 46.182-46.182h150.494c25.498 0 46.182 20.685 46.182 46.182v19.115z"
+				],
+				"tags": [
+					"preview-delete"
+				],
+				"defaultCode": 58888,
+				"grid": 16
+			},
+			"properties": {
+				"id": 23,
+				"order": 20,
+				"prevSize": 32,
+				"code": 58888,
+				"name": "preview-delete",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 21
+		},
+		{
+			"icon": {
+				"paths": [
+					"M752.956 120.471h-466.839c-33.265 0-60.235 26.97-60.235 60.235v228.804c-104.433 30.84-180.706 127.352-180.706 241.784 0 131.674 100.939 239.646 229.632 251.091 3.674 0.708 7.439 1.144 11.309 1.144h466.824c33.265 0 60.235-26.97 60.235-60.235v-662.588c0.015-33.28-26.955-60.235-60.22-60.235zM410.353 672.813v0.015l-181.609 108.77v-260.593l181.609 108.785c7.048 4.382 11.791 12.363 11.791 21.504 0 9.156-4.744 17.137-11.791 21.519zM737.882 813.161c0 8.312-6.731 15.059-15.059 15.059h-245.76c44.845-45.538 72.584-107.972 72.584-176.926 0-138.029-110.908-249.992-248.456-252.040v-188.416c0-8.312 6.746-15.059 15.059-15.059h406.588c8.312 0 15.059 6.731 15.059 15.059v602.323z"
+				],
+				"tags": [
+					"video-size"
+				],
+				"defaultCode": 58890,
+				"grid": 16
+			},
+			"properties": {
+				"id": 11,
+				"order": 21,
+				"prevSize": 32,
+				"code": 58890,
+				"name": "video-size",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 22
+		},
+		{
+			"icon": {
+				"paths": [
+					"M335.343 484.034h-97.915l13.941-113.477h-54.49l-34.405 283.114h54.060l15.586-126.616h97.915l-15.563 126.616h54.466l34.432-283.114h-54.088l-13.941 113.477zM605.548 399.026c-11.065-9.42-24.455-16.522-40.166-21.298-15.687-4.774-33.374-7.175-53.052-7.175h-73.74l-34.405 283.114h82.786c23.999 0 45.524-3.892 64.518-11.697 18.97-7.78 35.039-18.97 48.148-33.599s23.092-32.438 29.913-53.48c6.819-21.018 10.258-44.944 10.258-71.694 0-18.568-2.929-34.886-8.818-48.96-5.936-14.046-14.4-25.793-25.438-35.214zM576.218 541.406c-4.626 16.117-11.039 29.484-19.249 40.142-8.208 10.66-17.911 18.593-29.079 23.774-11.215 5.179-23.368 7.78-36.454 7.78h-28.294l25.010-201.97h23.341c22.938 0 40.645 5.684 53.079 17.003 12.403 11.343 18.643 29.987 18.643 55.93 0 22.102-2.348 41.227-6.997 57.347zM854.052 500.228c12.709-15.434 19.046-33.8 19.046-55.096 0-23.496-8.818-41.782-26.424-54.895-17.608-13.114-44.74-19.68-81.32-19.68h-79.904l-34.405 283.114h54.088l13.919-113.504h33.599l53.253 113.504h58.582l-61.842-121.282c21.547-6.011 38.701-16.726 51.409-32.158zM758.382 501.236h-34.837l11.469-91.373h27.031c18.847 0 32.562 3.156 41.152 9.42 8.614 6.292 12.909 15.563 12.909 27.863 0 17.762-4.977 31.226-14.93 40.368-9.953 9.143-24.253 13.718-42.796 13.718z"
+				],
+				"tags": [
+					"hdr"
+				],
+				"defaultCode": 58900,
+				"grid": 16
+			},
+			"properties": {
+				"id": 24,
+				"order": 22,
+				"prevSize": 32,
+				"code": 58900,
+				"name": "hdr",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 23
+		},
+		{
+			"icon": {
+				"paths": [
+					"M818.504 818.524c-43.733 43.742-94.527 76.085-148.693 97.222v11.534c118.33-45.027 212.451-139.119 257.449-257.488h-11.525c-21.137 54.175-53.48 104.979-97.232 148.731zM96.72 354.207h11.525c21.137-54.166 53.48-104.979 97.232-148.731 43.752-43.742 94.556-76.085 148.731-97.222v-11.534c-118.349 45.017-212.49 139.119-257.488 257.488zM915.736 354.207h11.534c-44.998-118.359-139.119-212.461-257.459-257.488v11.534c54.156 21.137 104.95 53.48 148.693 97.212 43.752 43.762 76.085 94.575 97.232 148.741zM108.245 669.802h-11.525c44.998 118.378 139.138 212.48 257.478 257.497v-11.544c-54.166-21.137-104.979-53.48-148.731-97.222-43.742-43.762-76.085-94.565-97.222-148.731z"
+				],
+				"tags": [
+					"focus-locking"
+				],
+				"grid": 16
+			},
+			"properties": {
+				"order": 23,
+				"id": 26,
+				"prevSize": 32,
+				"code": 58902,
+				"name": "focus-locking",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 24
+		},
+		{
+			"icon": {
+				"paths": [
+					"M474.897 531.968c-10.479-11.708-10.206-29.628 1.024-40.858 0.239-0.239 0.512-0.41 0.751-0.614l206.097-206.131c-9.557-41.233-21.606-79.77-35.806-114.825l-279.791 279.757c-34.679 34.714-34.679 90.931 0 125.645l279.484 279.518c14.199-34.918 26.283-73.387 35.874-114.517l-207.804-207.838 0.171-0.137z"
+				],
+				"tags": [
+					"back-arrow"
+				],
+				"defaultCode": 58881,
+				"grid": 16
+			},
+			"properties": {
+				"id": 12,
+				"order": 24,
+				"prevSize": 32,
+				"code": 58881,
+				"name": "back-arrow",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 25
+		},
+		{
+			"icon": {
+				"paths": [
+					"M354.217 96.749c-118.359 44.998-212.461 139.129-257.488 257.468h32.729c20.2-49.017 50.157-94.962 89.996-134.782 39.82-39.82 85.746-69.777 134.762-89.967v-32.72zM669.773 96.749l0.010 32.72c48.997 20.2 94.933 50.147 134.762 89.977 39.83 39.83 69.796 85.765 89.986 134.782h32.729c-45.017-118.33-139.129-212.461-257.488-257.478zM219.455 804.526c-39.83-39.81-69.787-85.746-89.986-134.743h-32.72c45.027 118.32 139.129 212.461 257.468 257.468v-32.739c-49.007-20.19-94.942-50.157-134.762-89.986zM927.261 669.783l-32.691 0.010c-20.2 49.007-50.147 94.942-89.977 134.772-39.839 39.83-85.784 69.806-134.801 89.986v32.7c118.34-45.008 212.451-139.148 257.468-257.468z"
+				],
+				"tags": [
+					"focus-locked"
+				],
+				"grid": 16
+			},
+			"properties": {
+				"order": 25,
+				"id": 27,
+				"prevSize": 32,
+				"code": 58901,
+				"name": "focus-locked",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 26
+		},
+		{
+			"icon": {
+				"paths": [
+					"M785.954 668.16c-39.492-22.767-87.142-18.5-121.583 6.997l-261.154-150.801c0.478-4.13 1.263-8.124 1.263-12.356s-0.785-8.26-1.263-12.39l261.154-150.767c34.475 25.498 82.057 29.798 121.583 6.997 53.077-30.652 71.27-98.543 40.585-151.62-30.618-53.111-98.543-71.305-151.586-40.653-39.492 22.801-59.597 66.219-54.75 108.817l-260.915 150.63c-18.466-13.687-41.062-22.050-65.809-22.050-61.303 0-111.002 49.698-111.002 111.002 0 61.338 49.698 111.002 111.002 111.002 24.713 0 47.343-8.363 65.775-22.050l260.949 150.665c-4.847 42.564 15.223 85.982 54.75 108.783 53.077 30.652 120.969 12.459 151.586-40.585 30.686-53.077 12.493-120.969-40.585-151.62z"
+				],
+				"tags": [
+					"preview-share"
+				],
+				"defaultCode": 58891,
+				"grid": 16
+			},
+			"properties": {
+				"id": 25,
+				"order": 26,
+				"prevSize": 32,
+				"code": 58891,
+				"name": "preview-share",
+				"ligatures": ""
+			},
+			"setIdx": 0,
+			"iconIdx": 27
+		}
+	],
+	"height": 1024,
+	"metadata": {
+		"name": "gaia-camera"
+	},
+	"preferences": {
+		"fontPref": {
+			"prefix": "icon-",
+			"metadata": {
+				"fontFamily": "gaia-camera",
+				"majorVersion": 1,
+				"minorVersion": 0
+			},
+			"showGlyphs": true,
+			"metrics": {
+				"emSize": 512,
+				"baseline": 6.25,
+				"whitespace": 50
+			},
+			"resetPoint": 58880,
+			"showQuickUse": true,
+			"quickUsageToken": false,
+			"showMetrics": true,
+			"showMetadata": false,
+			"showVersion": true,
+			"embed": true
+		},
+		"imagePref": {
+			"color": 0,
+			"height": 32,
+			"columns": 16,
+			"margin": 16,
+			"png": false,
+			"sprites": true
+		},
+		"historySize": 100,
+		"showCodes": true,
+		"gridSize": 16,
+		"showLiga": false,
+		"showGrid": true,
+		"showGlyphs": true,
+		"showQuickUse": true,
+		"search": ""
+	}
+}
\ No newline at end of file
diff --git a/apps/camera/style/icons.css b/apps/camera/style/icons.css
new file mode 100644
index 0000000..993cd21
--- /dev/null
+++ b/apps/camera/style/icons.css
@@ -0,0 +1,107 @@
+@font-face {
+  font-family: 'gaia-camera';
+  src: url(data:application/font-woff;charset=utf-8;base64,d09GRk9UVE8AABJ8AAoAAAAAEjQAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABDRkYgAAAA9AAADm4AAA5uPMUQ0E9TLzIAAA9kAAAAYAAAAGAIIvzRY21hcAAAD8QAAABMAAAATBpVzHJnYXNwAAAQEAAAAAgAAAAIAAAAEGhlYWQAABAYAAAANgAAADYAs4D/aGhlYQAAEFAAAAAkAAAAJAPVAgFobXR4AAAQdAAAAIAAAACAOQAJk21heHAAABD0AAAABgAAAAYAIFAAbmFtZQAAEPwAAAFdAAABXUYEjlFwb3N0AAASXAAAACAAAAAgAAMAAAEABAQAAQEBDGdhaWEtY2FtZXJhAAECAAEAOvgcAvgbA/gYBB4KABlT/4uLHgoAGVP/i4sMB4tr+JT4dAUdAAABJA8dAAABKREdAAAACR0AAA5lEgAhAQEMFxkbHiMoLTI3PEFGS1BVWl9kaW5zeH2Ch4yRlpugpapnYWlhLWNhbWVyYWdhaWEtY2FtZXJhdTB1MXUyMHVFNjAwdUU2MDF1RTYwMnVFNjAzdUU2MDR1RTYwNXVFNjA2dUU2MDd1RTYwOHVFNjA5dUU2MEF1RTYwQnVFNjBDdUU2MER1RTYwRXVFNjBGdUU2MTB1RTYxMXVFNjEydUU2MTN1RTYxNHVFNjE1dUU2MTZ1RTYxN3VFNjE4dUU2MTl1RTYxQXVFNjFCAAACAYkAHgAgAgABAAQABwAKAA0ApADeASwBcQGkAmcDAANtA+EEMwTCBTEFgQXTBlkGxgdkB5UIowkdCf8Kewr3C00Lpgv3DEgM+PyUDvyUDvyUDvuUDuraFYuDk4OTiwjci4vsKouLOgX3xvfGFTqLiyrsi4vcBYuTg5ODiwg6+9YV3IsFk4uTk4uTCIvcKouLKgX7dffGFYs67IuL7DqLBYOLg4OLgwj3dftVFeyLi+sqi4srBfsE9wQV64uL7CuLiyoFi/sEFeuLi+sri4srBYv7BRXri4vsK4uLKgX7BfcFFeyLi+sqi4srBQ73gfdqFYaRi5SRkIuMi4uLiwjy8gWHn4Wfg5wI+x/7IAV5eotvnXoI9x/7IAWSnJGekKAII/OLiwUO+G34ChX7EPsPi74Fi7Zor2CLCPswiwVgi2dni2AIi/swBYtgr2e2iwj3MIsFtouur4u2CIu+9xD7DwWSg5WIlIsIi/fWBYKLgYiEgwgO9/f3khWLwV+3VItVi15fi1WLdZJ3l3sIi4rbJNvyi4wFl5uSn4uhCChZFXCLdaGLp4umoaGmi6aLonWLcItvdHVwiwgO92f3CBWLiwWGhYKMhZCLi4uMi4sI+wj3MXtS9wz7NgWcgaGNmpoI93D3movW+4b7rwUOwPd0FYtzj3SSdgj3AYuL9xz7AYsFhHaHdItzCJzeFfKLi/IFXnZmZnZeCPcK+6YVoIOih6OLo4uij6CTCIv3APsci4v7AAV8kBWL8iSLBaBesGa4dgj3OvgIFYsk8osFdrhmsF6gCPsr+5IV9xyLi/cc+xyLi/scBfeY9xwV+wGLi/sc9wGLBZKgj6KLo4ujh6KEoAj7AfuSFbigsLCguAgki4skBfsr+A0Vi/sA9xyLi/cABXaTdI9zi3OLdId2gwgO5fd5FcLCBYiWiJaHlAhBQAWBgot8lYII1UAFj5SOlo6WCFPCjIsFiI6LkI6Oi4uLi4uLCPdctRVxi3Z3i3GLcaB2pYuki6Cgi6WLpXafcosI37gV+2WLBZxwlGyLaotpgmx6cQj3ZosFnIuZmYucCIv3DAWLnH2ZeYsIN/spFWuLcKWLq4urpaWsi6uLpXGLa4trcXFriwgO95T4HRVhi2V7bXIIWbSCgvcn+0oFi4uLi4uLl3+fi5eXl5eLn3+XiY2KjImMCCrZBaGcp5Wpi9SLxVGLQotCUVFCi0KLUcWL1IuUjJSMlAhvrgWDeId2i3WLLtc/6Ivoi9fXi+iL6D/XLosIDvcpvxWNepl+nIsI9ymLBZuLmpiMnAii93r7l4uh+3oF92r31BV1i4uWBYujd59ziwg5iwVzi3h3i3MIi4B0iwVyi3d2i3IIi233xYuLqQWLpHagcosIXYsV+w6Li5UFi5eWlpeLCNeLBZeLloCLfwiLgQUO95T4PRX7BIswMIv7BItNplW2ZQj3TvdPBZGRlYuRhQj3BPsFBZakkKWLqIv3BDDm+wSLCFb7WBVyi3efi6SLpJ+fpIuki593i3KLcnd3cosIDvgM+DgV+32LBXqLfn2LewiL+wcFV3xlW4tRi0q9VcuFjYqNi42LCPd9iwWci5mZi5sIi/fgBYubfZl6iwj7P/uoFYuLMFSL9xbmVQWPiY2Hi4aLh4mHh4kI9zhEFYuHiIiGiwj7DosFoaKZqouti9BTw0eMCIvqBYuPjo6Piwj3X4sFkIuOiIuHCIv7wgUO+B33JhV3lnOJen4I+xbXBYuNi42LjYuNi42LjQj3FtcFnH6jiZ+WppqUrXumfKVplXB7eICBdY12CPsWPwWBkoCQf4tsi3Jyi2yLbKRzqouXi5aPlZII9xY/BYl2lXWegKZ7rZWapZumgq1wmggO9z/3DhWJgIt+jYAI9z6LBY2Wi5iJlgj7PosFi/cMFYl/i3+Nfwj3PosFjZeLl4mXCPs+iwX3Pt8VjZaLmImWCPs+iwWJgIt+jYAI9z6LBQ73TPgzFWuLYvsXpYuTqbeLlG2mi2L3FwVpORWcyZxNaYsF93I4FYaMcIuAigjY90X7LftcBYWBjX6VhZGKpouVjAg++0X3LvdcBZCViZiBkQgO91X36xWLiwWHj4uOj4+Li4uLi4sIr68Fh5WIk4eUCFhZWr0FhoKHg4qBCK5nBYuLi4uLi4+Hi4iHhwiLi2hoBY6AjoOPggi8vb1ZBZCUjpONlghprgX3Ry4Vhoxwi4CKCNj3Rfst+1wFhYGNfpWFkYqmi5WMCD77Rfcu91wFkJWJmIGRCA73lPfbFVKLXV2LUotSuV3Ei8SLubmLxIvEXblSiwj3N9QV+9qLBW6Lc3OLbgiL+4oFi26jc6iLCPfaiwWoi6Oji6gIi/eKBYuoc6Nuiwj7N/vEFUSLUsSL0ovSxMTSi9KLxFKLRItEUlJEiwgO952gFYqMBSyLP7iLw4ukmqKknAiLkQVrdndvi2yLTtlZ7IkIfm3Ys2Gzfm0FgvhDFZikPmq1aZiklYsF5YnTZotdi3Z8eXJ8CIuGBaucn6OLpYu+PbQqjQiGNhVbi2V+i3sIi/tuBYt8sn66i7qLsZiMmouLi/dui4uLm2WYW4sIaTQVgIuDk4uWi5WTlJaLlYuUgouBi4CCg4GLCA73zPeOFYaMcIuBigjX90X7LftcBYaBjH6WhZCKpouVjAg/+0X3LfdcBZKViZh/kQgO95L3lxWDi4JElYsFj4uQjI+Nj42Ojo6Ojo+NkI2QjJGMkouTi5SJkYaPh4+FjYOLCOb3IxX7RosFWotjY4taCIv7RgWLWrNjvIsI90aLBbyLs7OLvAiL90YFi7xjs1qLCPsh+3gVd4uRt2iLhl94i5fvnouGY66LkLOei38nBeauFYmDh4WHhoaGhoeEiISIhIqCiwhui5fvpYsFkouRipGJkImQiY+Ij4eOh42GjYaMhYuFi4GKg4iECN5oFXeLeLN/i4ZjeIuX76eLBZiLlYiRh5GGjoWLgouEiYSHhoaFhYiDiQihYAV23RWIjoaMhIsIgouGa5iLBZGLkIyPjo6PjY+LkouPio6IjQgO+Az4OBX7fYsFeot+fYt7CIv7VIuLBYuJi4qLigiL+ysFi4OShJOLCPSLBZSLkZKLkwiL9ysFi5OFkoKLCDmLi/c6BYuPjo6Piwj3X4sFkIuOiIuHCIv7wgWLh4iIhosIVIuLZdGLBZyLmZmLmwiL9+AFi5t9mXqLCA73PPeCFVqLksRvi3r7IqaLk8q8i4NMpoud9yJwi4RSBfcbtRWFkIWPg42DjoKMgYsIZot6+yK0iwWXi5aNlY+Uj5ORkpKRkpCUj5aOlY2Xi5iLlYmTiJKJkoaRho8IfEQViYOIhYaFh4aHh4WIhYmFiYWLCH2Ll/CXiwWWi5SJkYWRhY+Ci36LgImBiYMI9x+gFZGTj5SLlYuXhpSCkoORfY95iwhji3r7IqaLksSbi6ZSqItsyAWWjpSQkZMIW4oVeouRuZiLBZSLkomQiI+IjYeLhIuDiYSGhoaHg4iCiwgO90X4RBVQdFxcdFAInIsFlaOaop+fn5+imqOVCIucBfcyixWLegWjgaJ8n3efd5p0lXMInIsFdMZculCiCPt1+/YVd598ooGjCHqLBaJQulzGdAiLnAVzlXSad58I9/bOFXqLBYFzfHR3d3d3dHxzgQiLegXGorq6osYIDvgt0hV1dXJ7cIAIi4UFxqK6uqLGCIWLBYBwe3J1dQj7/fd8FZGLBZamm6ShoaGhpJumlgiLkQVQdFxcdFAI+C6LFZGLBXTGXLpQogiLhQWmgKR7oXWhdZtylnAI/Cj7MhWFiwWiULpcxnQIi5EFcJZym3WhdaF7pICmCA73xPdqFYaRi5SRkYuLi4uLiwjQzwWGn4Odg5wIKioq7AWCe4R5hncI0EYFi4uLi4uLkYWLgoaFCIuLRUUFkHeSeZR7COzs7CoFk5uTnpCeCEXRi4sFDvcL95MVeot9fYt6i3qZfZyLnYuYmYuci5x+mXmLCPcdixV6i319i3qLepl9nIuci5mZi5yLnH2ZeosI9x2LFXmLfn2Leot6mH2di5yLmZmLnIucfZl6iwgO+GH3nhVziwWImYSoi4uLi/v1jIqLfYuAZItci1yWZZmLCIuK9/aLBYuLkqmOmAijiwWNmI2ai5qLm4mZiZcIWPsDFfuDi4v3HfeDi4v7HQUO+GH3nhVziwWImYSoi4uLi/v1jIqLfYuAZItci1yWZZmLCIuK9/aLBYuLkqmOmAijiwWNmI2ai5qLm4mZiZcIWPsDFfu2i4v3Hfe2i4v7HQUO952gFYqMBSyLP7iLw4ukmqKknAiLkQVrdndvi2yLTtlZ7IkIfm3Ys2Gzfm0FgvhDFZikPmq1aZiklYsF5YnTZotdi3Z8eXJ8CIuGBaucn6OLpYu+PbQqjQiGNhVbi2V+i3sIi/tuBYt8sn66i7qLsZiMmouLi/dui4uLm2WYW4sI0PtzFYuCg4OCiwgkiwWCi4OTi5QIi/c/BYuUk5OUiwjyiwWUi5ODi4IIi/s/BQ74lBT4lBWLDAoAAAADAgABkAAFAAABTAFmAAAARwFMAWYAAAD1ABkAhAAAAAAAAAAAAAAAAAAAAAEQAAAAAAAAAAAAAAAAAAAAAEAAAOYbAeD/4P/gAeAAIAAAAAEAAAAAAAAAAAAAACAAAAAAAAIAAAADAAAAFAADAAEAAAAUAAQAOAAAAAoACAACAAIAAQAg5hv//f//AAAAAAAg5gD//f//AAH/4xoEAAMAAQAAAAAAAAAAAAAAAQAB//8ADwABAAAAAQAAuZxOAl8PPPUACwIAAAAAAM/QoCEAAAAAz9CgIQAA/+MB8wHdAAAACAACAAAAAAAAAAEAAAHg/+AAAAIAAAAAAAHzAAEAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAQAAAAIAAF8CAAC4AgAAJAIAAJ0CAAA7AgAANQIAAD0CAABXAgAAaAIAADUCAAAXAgAAWwIAAKsCAABvAgAAbAIAACgCAABRAgAApgIAAE4CAABxAgAAUQIAADACAAAwAgAAigIAAFgCAAAwAgAAMAIAAFEAAFAAACAAAAAAAA4ArgABAAAAAAABABYAAAABAAAAAAACAA4AYwABAAAAAAADABYALAABAAAAAAAEABYAcQABAAAAAAAFABYAFgABAAAAAAAGAAsAQgABAAAAAAAKACgAhwADAAEECQABABYAAAADAAEECQACAA4AYwADAAEECQADABYALAADAAEECQAEABYAcQADAAEECQAFABYAFgADAAEECQAGABYATQADAAEECQAKACgAhwBnAGEAaQBhAC0AYwBhAG0AZQByAGEAVgBlAHIAcwBpAG8AbgAgADEALgAwAGcAYQBpAGEALQBjAGEAbQBlAHIAYWdhaWEtY2FtZXJhAGcAYQBpAGEALQBjAGEAbQBlAHIAYQBSAGUAZwB1AGwAYQByAGcAYQBpAGEALQBjAGEAbQBlAHIAYQBHAGUAbgBlAHIAYQB0AGUAZAAgAGIAeQAgAEkAYwBvAE0AbwBvAG4AAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==) format('woff');
+  font-weight: normal;
+  font-style: normal;
+}
+
+.icon,
+[class^="icon-"],
+[class*=" icon-"] {
+  font-style: normal;
+  font-weight: normal;
+  font-variant: normal;
+  text-transform: none;
+  line-height: 1;
+}
+
+.icon:before,
+[class^="icon-"]:before,
+[class*=" icon-"]:before {
+  font-family: 'gaia-camera';
+}
+
+.icon-preview-options:before {
+  content: "\e618";
+}
+.icon-camera:before {
+  content: "\e60f";
+}
+.icon-pick-cancel:before {
+  content: "\e617";
+}
+.icon-self-timer:before {
+  content: "\e607";
+}
+.icon-tick:before {
+  content: "\e604";
+}
+.icon-hdr-menu:before {
+  content: "\e612";
+}
+.icon-gallery:before {
+  content: "\e600";
+}
+.icon-toggle-camera-front:before {
+  content: "\e61b";
+}
+.icon-toggle-camera-rear:before {
+  content: "\e610";
+}
+.icon-video:before {
+  content: "\e602";
+}
+.icon-geolocation:before {
+  content: "\e603";
+}
+.icon-picture-size:before {
+  content: "\e613";
+}
+.icon-flash-on:before {
+  content: "\e611";
+}
+.icon-flash-off:before {
+  content: "\e60e";
+}
+.icon-grid:before {
+  content: "\e605";
+}
+.icon-scene:before {
+  content: "\e609";
+}
+.icon-battery-verylow:before {
+  content: "\e61a";
+}
+.icon-battery-low:before {
+  content: "\e619";
+}
+.icon-settings:before {
+  content: "\e60c";
+}
+.icon-flash-auto:before {
+  content: "\e60d";
+}
+.icon-camera-back:before {
+  content: "\e606";
+}
+.icon-preview-delete:before {
+  content: "\e608";
+}
+.icon-video-size:before {
+  content: "\e60a";
+}
+.icon-hdr:before {
+  content: "\e614";
+}
+.icon-focus-locking:before {
+  content: "\e616";
+}
+.icon-back-arrow:before {
+  content: "\e601";
+}
+.icon-focus-locked:before {
+  content: "\e615";
+}
+.icon-preview-share:before {
+  content: "\e60b";
+}
diff --git a/apps/camera/style/indicators.css b/apps/camera/style/indicators.css
index 96423c1..bd5c2f5 100644
--- a/apps/camera/style/indicators.css
+++ b/apps/camera/style/indicators.css
@@ -40,7 +40,6 @@
   height: 1.8rem;
   width: 1.8rem;
   font-size: 18px;
-  line-height: 1;
   margin-bottom: 1.2rem;
   border-radius: 4px;
   text-align: center;
@@ -67,19 +66,11 @@
   display: none;
 }

-/** Indication Geolocation
- ---------------------------------------------------------*/
-
-.indicator_geolocation {
-  font-size: 1.3rem;
-}
-
 /** Indicator Timer
  ---------------------------------------------------------*/

 .indicators .indicator_timer {
   display: block;
-  font-size: 1.7rem;
 }

 /** Indicator Battery
@@ -127,13 +118,21 @@
 }

 /**
+ * battery=low
+ */
+
+.indicators[battery='low'] .indicator_battery:before {
+  content: "\e619";
+}
+
+/**
  * battery=verylow,
  * battery=critical
  */

 .indicators[battery='verylow'] .indicator_battery:before,
 .indicators[battery='critical'] .indicator_battery:before {
-  content: "battery-verylow";
+  content: "\e61a";
 }

 /**
diff --git a/apps/camera/style/loading-screen.css b/apps/camera/style/loading-screen.css
index 1e5dcad..6cc3dc1 100644
--- a/apps/camera/style/loading-screen.css
+++ b/apps/camera/style/loading-screen.css
@@ -6,7 +6,7 @@
   position: absolute;
   left: 0;
   top: 0;
-  z-index: 1000;
+  z-index: 1;
   width: 100%;
   height: 100%;
   background: rgba(0,0,0,0.7);
diff --git a/apps/camera/style/main.css b/apps/camera/style/main.css
index a7e8daa..9c8421e 100644
--- a/apps/camera/style/main.css
+++ b/apps/camera/style/main.css
@@ -1,13 +1,12 @@

 /**
- * External
+ * Shared
  */

-@import url("../bower_components/gaia-icons/style.css");
-@import url("../bower_components/gaia-theme/style.css");
 @import url("../shared/style/confirm.css");
 @import url("../shared/style/buttons.css");
 @import url("../shared/style/action_menu.css");
+@import url("../shared/style/headers.css");
 @import url("../shared/style/progress_activity.css");

 /**
@@ -15,6 +14,7 @@
  */

 @import url("app.css");
+@import url("icons.css");
 @import url("viewfinder.css");
 @import url("focus-ring.css");
 @import url("face.css");
diff --git a/apps/camera/style/preview-gallery.css b/apps/camera/style/preview-gallery.css
index a227d90..3a37ddc 100644
--- a/apps/camera/style/preview-gallery.css
+++ b/apps/camera/style/preview-gallery.css
@@ -56,40 +56,24 @@
 /** Preview Menu
  ---------------------------------------------------------*/

-/**
- * 1. Sits on-top of frame-container.
- */
-
 .preview-menu {
-  position: relative; /* 1 */
   opacity: 0;
   visibility: hidden;
   pointer-events: none;
   transition: visibility 0.3s ease-in-out, opacity 0.3s ease-in-out;
 }

-/**
- * visible
- */
-
 .preview-menu.visible {
   opacity: 1;
   visibility: visible;
   pointer-events: auto;
 }

-/**
- * secure-mode
- */
-
 .preview-gallery[secure-mode=true] .preview-share-icon,
 .preview-gallery[secure-mode=true] .preview-option-icon {
   display: none;
 }

-/** Count Text
- ---------------------------------------------------------*/
-
 .count-text {
   position: absolute;
   bottom: 83px;
@@ -154,22 +138,23 @@ section[role="region"] > header:first-child > a:after {
 /**
   Button icon styles
  */
-
-/**
- * 1. !important required to override
- *    specificity of scoped stylesheet.
- */
-
-.preview-menu button {
-  font-size: 3.0rem !important; /* 1 */
+.preview-menu button > span {
+  color: #ffffff;
+  font-size: 3.0rem;
   text-align: center;
   text-shadow: none;
 }

-/**
- * 1. Allow flexbox to vertically center.
- */
+.preview-back-icon {
+  margin-left: -0.1rem;
+  vertical-align: -1.1rem;
+}
+
+.preview-share-icon {
+  margin-right: -0.1rem;
+  vertical-align: -0.9rem;
+}

-.preview-menu button:before {
-  display: block; /* 1 */
+.preview-option-icon {
+  vertical-align: -0.9rem;
 }
diff --git a/apps/camera/style/setting-options.css b/apps/camera/style/setting-options.css
index b3ced4e..a0ff2dd 100755
--- a/apps/camera/style/setting-options.css
+++ b/apps/camera/style/setting-options.css
@@ -107,8 +107,8 @@
   text-align: left;
   margin-top: 0rem;
   margin-right: -26.1rem;
-  margin-left: -2.5rem;
-  line-height: 9rem;
+  margin-left: -3rem;
+  line-height: 9.5rem;
   padding-left: 0.5rem;
   position: absolute;
 }
diff --git a/apps/camera/style/setting.css b/apps/camera/style/setting.css
index 0257513..46c8e57 100644
--- a/apps/camera/style/setting.css
+++ b/apps/camera/style/setting.css
@@ -40,13 +40,6 @@
   padding-left: 1rem;
 }

-/** Setting Text
- ---------------------------------------------------------*/
-
-.setting_text {
-  line-height: 1;
-}
-
 /** Title
  ---------------------------------------------------------*/

@@ -56,10 +49,6 @@
   color: rgba(255,255,255,0.5);
 }

-/**
- * :active
- */
-
 .setting:active .setting_title {
   color: #fff;
 }
diff --git a/apps/camera/style/settings.css b/apps/camera/style/settings.css
index fc3494d..2c5c85e 100644
--- a/apps/camera/style/settings.css
+++ b/apps/camera/style/settings.css
@@ -118,8 +118,7 @@
   height: 9rem;
   padding: 0 1.5rem;
   font-size: 2.4rem;
-  font-weight: 300;
-  font-style: italic;
+  font-weight: 100;
   line-height: 9rem;
   color: rgba(255,255,255,0.8);
 }
@@ -162,7 +161,7 @@

 .deg90 .settings_close,
 .deg270 .settings_close {
-  border-width: 1.5rem 2rem;
+  border-width: 1.5rem 1.9rem;
 }

 /**
diff --git a/apps/camera/test/marionette/lib/vendor/mquery.js b/apps/camera/test/marionette/lib/vendor/mquery.js
index a97907a..b08b20b 100644
--- a/apps/camera/test/marionette/lib/vendor/mquery.js
+++ b/apps/camera/test/marionette/lib/vendor/mquery.js
@@ -246,8 +246,7 @@ ElementSet.prototype.val = function(value) {

       this.client.switchToFrame(); // Switch to the system frame.

-      var options = this.client.findElements(
-        '.value-selector-select-option-popup li');
+      var options = this.client.findElements('#select-option-popup li');
       var values = (!Array.isArray(value) ? [value] : value);
       options.forEach(function(option) {
         var itemText = option.findElement('label span').text();
diff --git a/apps/camera/test/marionette/manifest.ini b/apps/camera/test/marionette/manifest.ini
deleted file mode 100644
index f0d5b09..0000000
--- a/apps/camera/test/marionette/manifest.ini
+++ /dev/null
@@ -1,4 +0,0 @@
-[capture_test.js]
-[zoom_test.js]
-[hud_test.js]
-[settings_test.js]
diff --git a/apps/camera/test/unit/app_test.js b/apps/camera/test/unit/app_test.js
index a10d459..0bc604f 100644
--- a/apps/camera/test/unit/app_test.js
+++ b/apps/camera/test/unit/app_test.js
@@ -66,7 +66,7 @@ suite('app', function() {
       require: sinon.stub(),
       settings: {
         geolocation: sinon.createStubInstance(this.Setting),
-        spinnerTimeouts: sinon.createStubInstance(this.Setting)
+        loadingScreen: sinon.createStubInstance(this.Setting)
       },
       views: {
         viewfinder: new this.View({ name: 'viewfinder' }),
@@ -74,12 +74,11 @@ suite('app', function() {
         hud: new this.View({ name: 'hud' })
       },
       controllers: {
-        battery: sinon.spy(),
-        overlay: sinon.spy(),
         hud: sinon.spy(),
         timer: sinon.spy(),
         controls: sinon.spy(),
         viewfinder: sinon.spy(),
+        overlay: sinon.spy(),
         camera: sinon.spy(),
         settings: sinon.spy(),
         activity: sinon.spy(),
@@ -91,6 +90,7 @@ suite('app', function() {
         previewGallery: 'controllers/preview-gallery',
         storage: 'controllers/storage',
         confirm: 'controllers/confirm',
+        battery: 'controllers/battery',
         sounds: 'controllers/sounds'
       }
     };
@@ -117,8 +117,7 @@ suite('app', function() {
     // methods before any of this happens, so that the
     // spy is always at the root of any call.
     this.sandbox.spy(this.App.prototype, 'boot');
-    this.sandbox.spy(this.App.prototype, 'onReady');
-    this.sandbox.spy(this.App.prototype, 'showSpinner');
+    this.sandbox.spy(this.App.prototype, 'clearLoading');

     // Aliases
     this.settings = options.settings;
@@ -176,11 +175,10 @@ suite('app', function() {
       var controllers = this.app.controllers;
       var app = this.app;

-      assert.ok(controllers.overlay.calledWith(app));
-      assert.ok(controllers.battery.calledWith(app));
       assert.ok(controllers.hud.calledWith(app));
       assert.ok(controllers.controls.calledWith(app));
       assert.ok(controllers.viewfinder.calledWith(app));
+      assert.ok(controllers.overlay.calledWith(app));
       assert.ok(controllers.camera.calledWith(app));
       assert.ok(controllers.zoomBar.calledWith(app));
     });
@@ -218,17 +216,13 @@ suite('app', function() {
     });

     test('Should clear loading screen when camera is ready', function() {
-      var on = this.app.on.withArgs('ready');
+      var on = this.app.on.withArgs('camera:ready');
       var callback = on.args[0][1];

       // Call the callback and make sure
-      // that `onReady` was called.
+      // that `clearLoading` was called.
       callback();
-      sinon.assert.calledOnce(this.App.prototype.onReady);
-    });
-
-    test('It calls `showSpinner`', function() {
-      sinon.assert.calledWith(this.App.prototype.showSpinner, 'requestingCamera');
+      sinon.assert.calledOnce(this.App.prototype.clearLoading);
     });

     suite('App#geolocationWatch()', function() {
@@ -262,7 +256,7 @@ suite('app', function() {
         this.spy = this.app.once.withArgs('viewfinder:visible');
         this.callback = this.spy.args[0][1];

-        sinon.stub(this.app, 'onReady');
+        sinon.stub(this.app, 'clearLoading');
         sinon.spy(this.app, 'loadController');
         sinon.spy(this.app, 'loadL10n');

@@ -289,6 +283,7 @@ suite('app', function() {
         assert.isTrue(loadController.calledWith(controllers.previewGallery));
         assert.isTrue(loadController.calledWith(controllers.storage));
         assert.isTrue(loadController.calledWith(controllers.confirm));
+        assert.isTrue(loadController.calledWith(controllers.battery));
         assert.isTrue(loadController.calledWith(controllers.sounds));
       });
     });
@@ -362,71 +357,62 @@ suite('app', function() {
     });
   });

-  suite('App#onBusy()', function() {
+  suite('App#onCameraBusy()', function() {
     setup(function() {
-      this.app.settings.spinnerTimeouts.get
+      this.app.settings.loadingScreen.get
         .withArgs('takingPicture')
         .returns(1500);

-      this.app.settings.spinnerTimeouts.get
+      this.app.settings.loadingScreen.get
         .withArgs('requestingCamera')
         .returns(600);

-      sinon.stub(this.app, 'showSpinner');
+      sinon.stub(this.app, 'showLoading');
     });

-    test('It calls showSpinner with type if busy type recongnised', function() {
-      this.app.onBusy('takingPicture');
-      sinon.assert.calledWith(this.app.showSpinner, 'takingPicture');
-      this.app.showSpinner.reset();
+    test('Should call showLoading if busy type recongnised', function() {
+      this.app.onCameraBusy('takingPicture');
+      sinon.assert.calledWith(this.app.showLoading, 1500);
+      this.app.showLoading.reset();

-      this.app.onBusy('requestingCamera');
-      sinon.assert.calledWith(this.app.showSpinner, 'requestingCamera');
-      this.app.showSpinner.reset();
+      this.app.onCameraBusy('requestingCamera');
+      sinon.assert.calledWith(this.app.showLoading, 600);
+      this.app.showLoading.reset();
     });

     test('Should not show loading screen if busy type not recongnised', function() {
-      this.app.onBusy('unknownType');
-      sinon.assert.notCalled(this.app.showSpinner);
+      this.app.onCameraBusy('unknownType');
+      sinon.assert.notCalled(this.app.showLoading);
     });
   });

-  suite('App#showSpinner()', function() {
+  suite('App#showLoading()', function() {
     setup(function() {
       this.sandbox.spy(window, 'clearTimeout');
-
-      this.app.settings.spinnerTimeouts.get
-        .withArgs('takingPicture')
-        .returns(1500);
-
-      this.app.settings.spinnerTimeouts.get
-        .withArgs('requestingCamera')
-        .returns(600);
-
     });

     test('Should append a loading view to the app element and show', function() {
-      this.app.showSpinner('takingPicture');
-      this.clock.tick(1500);
+      this.app.showLoading(400);
+      this.clock.tick(400);
       sinon.assert.calledWith(this.app.views.loading.appendTo, this.app.el);
       sinon.assert.called(this.app.views.loading.show);
     });

     test('Should clear any existing timeouts', function() {
       this.sandbox.stub(window, 'setTimeout').returns('<timeout-id>');
-      this.app.showSpinner('requestingCamera');
-      this.app.showSpinner('requestingCamera');
+      this.app.showLoading(400);
+      this.app.showLoading(400);
       sinon.assert.calledWith(window.clearTimeout, '<timeout-id>');
     });

-    test('It should not require a type', function() {
-      this.app.showSpinner();
-      this.clock.tick(1);
-      sinon.assert.calledWith(this.app.views.loading.appendTo, this.app.el);
+    test('Should be able to overide default delay', function() {
+      this.sandbox.stub(window, 'setTimeout');
+      this.app.showLoading(3000);
+      assert.equal(window.setTimeout.args[0][1], 3000);
     });
   });

-  suite('App#onReady()', function() {
+  suite('App#clearLoading()', function() {
     setup(function() {
       this.sandbox.spy(window, 'clearTimeout');
       this.sandbox.stub(window, 'setTimeout').returns('<timeout-id>');
@@ -435,21 +421,21 @@ suite('app', function() {
     });

     test('Should clear loadingTimeout', function() {
-      this.app.showSpinner();
-      this.app.onReady();
+      this.app.showLoading();
+      this.app.clearLoading();
       sinon.assert.calledWith(window.clearTimeout, '<timeout-id>');
     });

     test('Should hide, then destroy the view', function() {
       var view = this.app.views.loading;
-      this.app.onReady();
+      this.app.clearLoading();

       sinon.assert.called(view.hide);
       assert.ok(view.destroy.calledAfter(view.hide));
     });

     test('Should clear reference to `app.views.loading`', function() {
-      this.app.onReady();
+      this.app.clearLoading();
       assert.equal(this.app.views.loading, null);
     });
   });
diff --git a/apps/camera/test/unit/controllers/camera_test.js b/apps/camera/test/unit/controllers/camera_test.js
index ed2fdc0..36fd021 100644
--- a/apps/camera/test/unit/controllers/camera_test.js
+++ b/apps/camera/test/unit/controllers/camera_test.js
@@ -450,23 +450,4 @@ suite('controllers/camera', function() {
       assert.isTrue(this.camera.stopRecording.called);
     });
   });
-
-  suite('CameraController#onGalleryClosed()', function() {
-    test('It loads the camera', function() {
-      this.controller.onGalleryClosed();
-      sinon.assert.called(this.camera.load);
-    });
-
-    test('It clears loading after the camera has loaded', function() {
-      this.controller.onGalleryClosed();
-      this.camera.load.args[0][0]();
-      sinon.assert.called(this.app.onReady);
-    });
-
-    test('It doesn\'t load the camera if the app is hidden', function() {
-      this.app.hidden = true;
-      this.controller.onGalleryClosed();
-      sinon.assert.notCalled(this.camera.load);
-    });
-  });
 });
diff --git a/apps/camera/test/unit/controllers/controls_test.js b/apps/camera/test/unit/controllers/controls_test.js
index 422ee9b..1533a96 100644
--- a/apps/camera/test/unit/controllers/controls_test.js
+++ b/apps/camera/test/unit/controllers/controls_test.js
@@ -107,12 +107,12 @@ suite('controllers/controls', function() {

     test('Should disable the controls when the camera is busy', function() {
       // Call the callback and check the view was disabled
-      this.app.on.withArgs('busy').args[0][1]();
+      this.app.on.withArgs('camera:busy').args[0][1]();
       sinon.assert.called(this.view.disable);
     });

     test('Should restore the controls when the camera is \'ready\'', function() {
-      sinon.assert.calledWith(this.app.on, 'ready', this.controller.restore);
+      sinon.assert.calledWith(this.app.on, 'camera:ready', this.controller.restore);
     });

     test('Should hide the controls when the timer is started', function() {
diff --git a/apps/camera/test/unit/controllers/hud_test.js b/apps/camera/test/unit/controllers/hud_test.js
index f34fdb4..19aad78 100644
--- a/apps/camera/test/unit/controllers/hud_test.js
+++ b/apps/camera/test/unit/controllers/hud_test.js
@@ -71,8 +71,8 @@ suite('controllers/hud', function() {
       assert.ok(this.app.settings.cameras.on.calledWith('change:selected'));

       assert.ok(this.app.on.calledWith('settings:configured'));
-      assert.ok(this.app.on.calledWith('ready'));
-      assert.ok(this.app.on.calledWith('busy'));
+      assert.ok(this.app.on.calledWith('camera:ready'));
+      assert.ok(this.app.on.calledWith('camera:busy'));
       assert.ok(this.app.on.calledWith('change:recording'));
       assert.ok(this.app.on.calledWith('timer:cleared'));
       assert.ok(this.app.on.calledWith('timer:started'));
@@ -87,12 +87,12 @@ suite('controllers/hud', function() {

     test('Should set \'camera\' to \'busy\' on view when busy', function() {
       assert.ok(this.hud.setter.calledWith('camera', 'busy'));
-      assert.ok(this.app.on.calledWith('busy'));
+      assert.ok(this.app.on.calledWith('camera:busy'));
     });

     test('Should set \'camera\' to \'ready\' on view when ready', function() {
       assert.ok(this.hud.setter.calledWith('camera', 'ready'));
-      assert.ok(this.app.on.calledWith('ready'));
+      assert.ok(this.app.on.calledWith('camera:ready'));
     });

     test('Should set \'timer\' to \'active\' on view when started', function() {
diff --git a/apps/camera/test/unit/controllers/overlay_test.js b/apps/camera/test/unit/controllers/overlay_test.js
index 784f465..7092fd8 100644
--- a/apps/camera/test/unit/controllers/overlay_test.js
+++ b/apps/camera/test/unit/controllers/overlay_test.js
@@ -24,7 +24,6 @@ suite('controllers/overlay', function() {
       pick: false,
       cancel: sinon.spy()
     };
-    this.app.localized.returns(true);

     this.app.l10nGet.withArgs('nocard2-title').returns('nocard title');
     this.app.l10nGet.withArgs('nocard3-text').returns('nocard body');
@@ -96,13 +95,6 @@ suite('controllers/overlay', function() {
       this.controller.createOverlay('unavailable');
       assert.isTrue(this.OverlayProto.appendTo.calledWith(document.body));
     });
-
-    test('Should show spinner if the application is not localized', function() {
-      this.app.localized.returns(false);
-      this.controller.createOverlay('shutdown');
-      assert.isTrue(this.app.showSpinner.called);
-    });
-
   });

   suite('OverlayController#getOverlayData()', function() {
diff --git a/apps/camera/test/unit/lib/camera/camera_test.js b/apps/camera/test/unit/lib/camera/camera_test.js
index f93577c..97298e6 100644
--- a/apps/camera/test/unit/lib/camera/camera_test.js
+++ b/apps/camera/test/unit/lib/camera/camera_test.js
@@ -43,17 +43,13 @@ suite('lib/camera/camera', function() {

     this.options = {
       getVideoMetaData: sinon.stub(),
-      configStorage: {
+      storage: {
         setItem: sinon.stub(),
         getItem: sinon.stub()
-      },
-      storage: {
-        video: this.videoStorage
       }
     };

     // Aliases
-    this.configStorage = this.options.configStorage;
     this.storage = this.options.storage;
     this.camera = new this.Camera(this.options);
     this.sandbox.spy(this.camera, 'ready');
@@ -74,9 +70,6 @@ suite('lib/camera/camera', function() {
           start: sinon.stub(),
           stop: sinon.stub()
         },
-        storage: {
-          video: this.videoStorage
-        },
         recordSpaceMin: 999,
         recordSpacePadding: 100
       };
@@ -173,7 +166,7 @@ suite('lib/camera/camera', function() {
       this.camera.startRecording();
       var args = this.camera.mozCamera.startRecording.args[0];
       var storage = args[1];
-      assert.ok(storage === this.camera.storage.video);
+      assert.ok(storage === this.camera.video.storage);
     });

     test('Should pass the generated filepath', function() {
@@ -1000,7 +993,7 @@ suite('lib/camera/camera', function() {

   suite('Camera#fetchBootConfig()', function() {
     setup(function() {
-      this.configStorage.getItem
+      this.storage.getItem
         .withArgs('cameraBootConfig')
         .returns('{"mozCameraConfig":{},"pictureSize":{},"recorderProfile":"720p"}');
     });
@@ -1057,7 +1050,7 @@ suite('lib/camera/camera', function() {
       this.camera.mozCameraConfig = '<moz-camera-config>';
       this.camera.saveBootConfig();

-      var data = JSON.parse(this.configStorage.setItem.args[0][1]);
+      var data = JSON.parse(this.storage.setItem.args[0][1]);
       assert.equal(data.pictureSize, '<picture-size>');
       assert.equal(data.recorderProfile, '<recorder-profile>');
       assert.equal(data.mozCameraConfig, '<moz-camera-config>');
@@ -1067,29 +1060,29 @@ suite('lib/camera/camera', function() {
       this.options.cacheConfig = false;
       this.camera = new this.Camera(this.options);
       this.camera.saveBootConfig();
-      sinon.assert.notCalled(this.configStorage.setItem);
+      sinon.assert.notCalled(this.storage.setItem);
     });

     test('Should only store bootConfig if mode is \'picture\' and \'back\' camera', function() {
       this.camera.selectedCamera = 'front';
       this.camera.mode = 'video';
       this.camera.saveBootConfig();
-      sinon.assert.notCalled(this.configStorage.setItem);
+      sinon.assert.notCalled(this.storage.setItem);

       this.camera.selectedCamera = 'back';
       this.camera.mode = 'video';
       this.camera.saveBootConfig();
-      sinon.assert.notCalled(this.configStorage.setItem);
+      sinon.assert.notCalled(this.storage.setItem);

       this.camera.selectedCamera = 'front';
       this.camera.mode = 'picture';
       this.camera.saveBootConfig();
-      sinon.assert.notCalled(this.configStorage.setItem);
+      sinon.assert.notCalled(this.storage.setItem);

       this.camera.selectedCamera = 'back';
       this.camera.mode = 'picture';
       this.camera.saveBootConfig();
-      sinon.assert.called(this.configStorage.setItem);
+      sinon.assert.called(this.storage.setItem);
     });
   });

diff --git a/apps/camera/test/unit/lib/sounds_test.js b/apps/camera/test/unit/lib/sounds_test.js
index 2eebfb2..4db2b78 100644
--- a/apps/camera/test/unit/lib/sounds_test.js
+++ b/apps/camera/test/unit/lib/sounds_test.js
@@ -17,12 +17,12 @@ suite('Sounds', function() {
   var list = [
     {
       name: 'shutter',
-      url: 'resources/sounds/shutter.opus',
+      url: 'resources/sounds/shutter.ogg',
       setting: 'camera.sound.enabled'
     },
     {
       name: 'timer',
-      url: 'resources/sounds/timer.opus',
+      url: 'resources/sounds/timer.ogg',
       setting: 'camera.sound.enabled'
     },
     {
@@ -54,7 +54,7 @@ suite('Sounds', function() {
     // A sound to pass to APIs
     this.mockSound = {
       name: 'camera',
-      url: 'resources/sounds/shutter.opus',
+      url: 'resources/sounds/shutter.ogg',
       setting: 'camera.sound.enabled'
     };

diff --git a/apps/camera/test/unit/lib/storage_test.js b/apps/camera/test/unit/lib/storage_test.js
index ecc0f69..bbae854 100644
--- a/apps/camera/test/unit/lib/storage_test.js
+++ b/apps/camera/test/unit/lib/storage_test.js
@@ -23,7 +23,6 @@ suite('lib/storage', function() {

     this.picture = {};
     this.picture.addEventListener = sinon.spy();
-    this.picture.removeEventListener = sinon.spy();
     this.picture.delete = sinon.stub().returns(this.picture);

     // Stub getDeviceStorage
@@ -38,17 +37,6 @@ suite('lib/storage', function() {
       .withArgs('videos')
       .returns(this.video);

-    // Stub getDeviceStorages
-    if (!navigator.getDeviceStorages) { navigator.getDeviceStorages = function() {}; }
-    this.sandbox.stub(navigator, 'getDeviceStorages')
-      .withArgs('pictures').returns([this.picture])
-      .withArgs('videos').returns([this.video]);
-
-    // Stub mozSettings
-    navigator.mozSettings = {
-      addObserver: sinon.stub()
-    };
-
     var options = {
       createFilename: sinon.stub().callsArgWith(2, 'filename.file'),
       dcf: { init: sinon.spy() }
@@ -56,7 +44,6 @@ suite('lib/storage', function() {

     // The test instance
     this.storage = new this.Storage(options);
-    this.storage.configure();

     // For convenience
     this.createFilename = options.createFilename;
@@ -69,9 +56,7 @@ suite('lib/storage', function() {

   suite('Storage()', function() {
     test('Should listen for change events', function() {
-      this.storage.configure();
       assert.isTrue(this.picture.addEventListener.calledWith('change'));
-      assert.isTrue(navigator.mozSettings.addObserver.called);
     });
   });

diff --git a/apps/camera/test/unit/setup.js b/apps/camera/test/unit/setup.js
index 18c92c5..ca22a52 100644
--- a/apps/camera/test/unit/setup.js
+++ b/apps/camera/test/unit/setup.js
@@ -46,14 +46,14 @@ requireApp('camera/bower_components/alameda/index.js', function() {
       'MediaFrame': '../shared/js/media/media_frame',
       'BlobView': '../shared/js/blobview',
       'CustomDialog': '../shared/js/custom_dialog',
+      'FontSizeUtils': '../shared/js/font_size_utils',
       'debug': '../bower_components/debug/index',
       'attach': '../bower_components/attach/index',
       'model': '../bower_components/model/index',
       'view': '../bower_components/view/index',
       'evt': '../bower_components/evt/index',
       'drag': '../bower_components/drag/index',
-      'device-orientation': '../bower_components/device-orientation/index',
-      'gaia-header': '../bower_components/gaia-header/dist/script'
+      'device-orientation': '../bower_components/device-orientation/index'
     },
     shim: {
       'format': {
@@ -77,7 +77,6 @@ requireApp('camera/bower_components/alameda/index.js', function() {
         exports: 'PerformanceTestingHelper'
       },
       'jpegMetaDataParser': {
-        deps: ['BlobView'],
         exports: 'parseJPEGMetadata'
       },
       'getImageSize': {
@@ -93,6 +92,9 @@ requireApp('camera/bower_components/alameda/index.js', function() {
       },
       'CustomDialog': {
         exports: 'CustomDialog'
+      },
+      'FontSizeUtils': {
+        exports: 'FontSizeUtils'
       }
     }
   });
diff --git a/apps/clock/style/images/dialog.png b/apps/clock/style/images/dialog.png
new file mode 100644
index 0000000..0111dee
Binary files /dev/null and b/apps/clock/style/images/dialog.png differ
diff --git a/apps/clock/style/images/dialog@2.25x.png b/apps/clock/style/images/dialog@2.25x.png
new file mode 100644
index 0000000..29820b1
Binary files /dev/null and b/apps/clock/style/images/dialog@2.25x.png differ
diff --git a/apps/clock/style/images/digital_clock_background.png b/apps/clock/style/images/digital_clock_background.png
new file mode 100644
index 0000000..51e093d
Binary files /dev/null and b/apps/clock/style/images/digital_clock_background.png differ
diff --git a/apps/clock/style/images/digital_clock_background@1.5x.png b/apps/clock/style/images/digital_clock_background@1.5x.png
new file mode 100644
index 0000000..f202013
Binary files /dev/null and b/apps/clock/style/images/digital_clock_background@1.5x.png differ
diff --git a/apps/clock/style/images/digital_clock_background@2.25x.png b/apps/clock/style/images/digital_clock_background@2.25x.png
new file mode 100644
index 0000000..e134a0c
Binary files /dev/null and b/apps/clock/style/images/digital_clock_background@2.25x.png differ
diff --git a/apps/clock/style/images/digital_clock_background@2x.png b/apps/clock/style/images/digital_clock_background@2x.png
new file mode 100644
index 0000000..072fd9d
Binary files /dev/null and b/apps/clock/style/images/digital_clock_background@2x.png differ
diff --git a/apps/clock/style/images/edit_background.png b/apps/clock/style/images/edit_background.png
new file mode 100644
index 0000000..52c29dd
Binary files /dev/null and b/apps/clock/style/images/edit_background.png differ
diff --git a/apps/clock/style/images/edit_background@1.5x.png b/apps/clock/style/images/edit_background@1.5x.png
new file mode 100644
index 0000000..f7a4549
Binary files /dev/null and b/apps/clock/style/images/edit_background@1.5x.png differ
diff --git a/apps/clock/style/images/ring_button_snooze.png b/apps/clock/style/images/ring_button_snooze.png
new file mode 100644
index 0000000..1368cf6
Binary files /dev/null and b/apps/clock/style/images/ring_button_snooze.png differ
diff --git a/apps/clock/style/images/ring_button_snooze@1.5x.png b/apps/clock/style/images/ring_button_snooze@1.5x.png
new file mode 100644
index 0000000..94616cb
Binary files /dev/null and b/apps/clock/style/images/ring_button_snooze@1.5x.png differ
diff --git a/apps/clock/style/picker/images/icons/checked.png b/apps/clock/style/picker/images/icons/checked.png
new file mode 100644
index 0000000..69d5c3d
Binary files /dev/null and b/apps/clock/style/picker/images/icons/checked.png differ
diff --git a/apps/clock/style/picker/images/icons/checked@1.5x.png b/apps/clock/style/picker/images/icons/checked@1.5x.png
new file mode 100644
index 0000000..490dded
Binary files /dev/null and b/apps/clock/style/picker/images/icons/checked@1.5x.png differ
diff --git a/apps/clock/style/picker/images/icons/checked@2.25x.png b/apps/clock/style/picker/images/icons/checked@2.25x.png
new file mode 100644
index 0000000..cf19193
Binary files /dev/null and b/apps/clock/style/picker/images/icons/checked@2.25x.png differ
diff --git a/apps/clock/style/picker/images/icons/checked@2x.png b/apps/clock/style/picker/images/icons/checked@2x.png
new file mode 100644
index 0000000..c1a6fbd
Binary files /dev/null and b/apps/clock/style/picker/images/icons/checked@2x.png differ
diff --git a/apps/clock/style/picker/images/ui/gradient.png b/apps/clock/style/picker/images/ui/gradient.png
new file mode 100644
index 0000000..d2e6f5b
Binary files /dev/null and b/apps/clock/style/picker/images/ui/gradient.png differ
diff --git a/apps/clock/style/picker/images/ui/gradient@1.5x.png b/apps/clock/style/picker/images/ui/gradient@1.5x.png
new file mode 100644
index 0000000..0e420cd
Binary files /dev/null and b/apps/clock/style/picker/images/ui/gradient@1.5x.png differ
diff --git a/apps/clock/style/picker/images/ui/pattern-time.png b/apps/clock/style/picker/images/ui/pattern-time.png
new file mode 100644
index 0000000..40292a2
Binary files /dev/null and b/apps/clock/style/picker/images/ui/pattern-time.png differ
diff --git a/apps/clock/style/picker/images/ui/shadow-invert.png b/apps/clock/style/picker/images/ui/shadow-invert.png
new file mode 100644
index 0000000..b1b905f
Binary files /dev/null and b/apps/clock/style/picker/images/ui/shadow-invert.png differ
diff --git a/apps/clock/style/picker/images/ui/shadow-invert@1.5x.png b/apps/clock/style/picker/images/ui/shadow-invert@1.5x.png
new file mode 100644
index 0000000..ee2dc1c
Binary files /dev/null and b/apps/clock/style/picker/images/ui/shadow-invert@1.5x.png differ
diff --git a/apps/clock/style/picker/images/ui/shadow-invert@2x.png b/apps/clock/style/picker/images/ui/shadow-invert@2x.png
new file mode 100644
index 0000000..15c95ed
Binary files /dev/null and b/apps/clock/style/picker/images/ui/shadow-invert@2x.png differ
diff --git a/apps/clock/style/picker/images/ui/shadow.png b/apps/clock/style/picker/images/ui/shadow.png
new file mode 100644
index 0000000..728fe77
Binary files /dev/null and b/apps/clock/style/picker/images/ui/shadow.png differ
diff --git a/apps/clock/style/picker/images/ui/shadow@1.5x.png b/apps/clock/style/picker/images/ui/shadow@1.5x.png
new file mode 100644
index 0000000..44b35b4
Binary files /dev/null and b/apps/clock/style/picker/images/ui/shadow@1.5x.png differ
diff --git a/apps/clock/style/picker/images/ui/shadow@2x.png b/apps/clock/style/picker/images/ui/shadow@2x.png
new file mode 100644
index 0000000..f515eff
Binary files /dev/null and b/apps/clock/style/picker/images/ui/shadow@2x.png differ
diff --git a/apps/clock/test/marionette/lib/mquery.js b/apps/clock/test/marionette/lib/mquery.js
index 0b46cc7..046e703 100644
--- a/apps/clock/test/marionette/lib/mquery.js
+++ b/apps/clock/test/marionette/lib/mquery.js
@@ -237,8 +237,7 @@ ElementSet.prototype.val = function(value) {

       this.client.switchToFrame(); // Switch to the system frame.

-      var options = this.client.findElements(
-        '.value-selector-select-option-popup li');
+      var options = this.client.findElements('#select-option-popup li');
       var values = (!Array.isArray(value) ? [value] : value);
       options.forEach(function(option) {
         var itemText = option.findElement('label span').text();
diff --git a/apps/clock/test/marionette/manifest.ini b/apps/clock/test/marionette/manifest.ini
deleted file mode 100644
index 3c36766..0000000
--- a/apps/clock/test/marionette/manifest.ini
+++ /dev/null
@@ -1,4 +0,0 @@
-[endurance_test.js]
-[timer_test.js]
-[alarm_test.js]
-[stopwatch_test.js]
diff --git a/apps/collection/add_to_collection.html b/apps/collection/add_to_collection.html
index 4a5daeb..c79385b 100644
--- a/apps/collection/add_to_collection.html
+++ b/apps/collection/add_to_collection.html
@@ -10,7 +10,6 @@
     <script defer src="shared/js/everythingme/device.js"></script>
     <script defer src="shared/js/everythingme/api.js"></script>

-    <script defer src="shared/js/async_storage.js"></script>
     <script defer src="shared/js/bookmarks_database.js"></script>
     <script defer src="shared/js/collections_database.js"></script>
     <script defer src="shared/js/l10n.js"></script>
@@ -24,7 +23,6 @@
     <script defer src="shared/elements/gaia_grid/js/items/bookmark.js"></script>
     <script defer src="shared/elements/gaia_grid/js/items/mozapp.js"></script>

-    <script defer src="js/common.js"></script>
     <script defer src="js/objects.js"></script>
     <script defer src="js/home_icons.js"></script>
     <script defer src="js/native_info.js"></script>
diff --git a/apps/collection/create.html b/apps/collection/create.html
index be3b6f2..c7ebf6d 100644
--- a/apps/collection/create.html
+++ b/apps/collection/create.html
@@ -34,7 +34,6 @@
     <script defer src="shared/elements/gaia_grid/js/items/bookmark.js"></script>
     <script defer src="shared/elements/gaia_grid/js/items/mozapp.js"></script>

-    <script defer src="js/common.js"></script>
     <script defer src="js/objects.js"></script>
     <script defer src="js/home_icons.js"></script>
     <script defer src="js/native_info.js"></script>
diff --git a/apps/collection/js/add_to_collection.js b/apps/collection/js/add_to_collection.js
index 430cba5..ac3ec7b 100644
--- a/apps/collection/js/add_to_collection.js
+++ b/apps/collection/js/add_to_collection.js
@@ -1,10 +1,10 @@
 'use strict';

 /* global BaseCollection */
-/* global CollectionIcon */
 /* global CollectionsDatabase */
+/* global CollectionIcon */
 /* global eme */
-/* global HomeIcons */
+/* global PinnedHomeIcon */

 (function(exports) {

@@ -30,13 +30,49 @@

       CollectionsDatabase.get(event.data.collectionId).then(fresh => {
         var collection = BaseCollection.create(fresh);
+        var newPinned = new PinnedHomeIcon(event.data.identifier);
+
+        collection.homeIcons.init().then(() => {
+
+          // If a record is already pinned, delete it so it appears first.
+          for (var i = 0, iLen = collection.pinned.length; i < iLen; i++) {
+              if (collection.pinned[i].identifier === newPinned.identifier) {
+                collection.pinned.splice(i, 1);
+                break;
+              }
+          }

-        eme.init()
-        .then(() => HomeIcons.init())
-        .then(() => {
-          collection.dropHomeIcon(event.data.identifier);
+          // If we don't have webicons, then we have likely never fetched this
+          //collection. Make a call to the server to fetch the apps.
+          if (!collection.webicons.length) {
+            var options = collection.categoryId ?
+              {categoryId: collection.categoryId} :
+              {query: collection.query};
+
+            eme.init()
+              .then(() => eme.api.Apps.search(options))
+              .then((response) => {
+                collection.addWebResults(response.response.apps);
+              })
+              .then(() => {
+                BaseCollection.getBackground(collection, grid.maxIconSize)
+                  .then((bgObject) => {
+                    collection.background = bgObject;
+                    this.pinAndSave(newPinned, collection);
+                  });
+              });
+          } else {
+            this.pinAndSave(newPinned, collection);
+          }
         });
       });
+    },
+
+    pinAndSave: function(newPinned, collection) {
+      collection.pinned.unshift(newPinned);
+      collection.renderIcon().then(() => {
+        collection.save();
+      });
     }
   };

diff --git a/apps/collection/js/collection_icon.js b/apps/collection/js/collection_icon.js
index 6cf4b31..0cde0c0 100644
--- a/apps/collection/js/collection_icon.js
+++ b/apps/collection/js/collection_icon.js
@@ -31,6 +31,9 @@

   /* constants */

+  // number of app icons in the collection icon
+  const numAppIcons = 3;
+
   // darkness of to side icons
   const sideIconDarken = 0.65;

@@ -40,13 +43,6 @@
   const defaultBgFill = 'rgba(51, 51, 51, 0.85)';
   const deafultBgImage = '/style/images/icon_default.png';

-  const emePrefix = /https?:\/\/api.everything.me/;
-
-  // icons from EverythingMe api requires clipping (they are rectangular),
-  // but everything else does not
-  function shouldClip(url) {
-    return emePrefix.test(url);
-  }

   function blobToDataURI(blob) {
     return new Promise(function convert(resolve, reject) {
@@ -106,6 +102,12 @@
     this.bgSrc = config.bgSrc || null;
   }

+  Object.defineProperty(CollectionIcon, 'numAppIcons', {
+    get: function get() {
+      return numAppIcons;
+    }
+  });
+
   CollectionIcon.init = function init(maxIconSize) {
     // measurements are based on a 60px icon (cf. bug 965711)
     scale = maxIconSize/60;
@@ -212,10 +214,9 @@
             imgCanvas.width = imgWidth;
             imgCanvas.height = imgHeight;

-            if (shouldClip(url)) {
-              ctx.arc(imgWidth/2, imgHeight/2, imgWidth/2, 0, 2 * Math.PI);
-              ctx.clip();
-            }
+            // we need rounded icons (API returns rectangular icons)
+            ctx.arc(imgWidth/2, imgHeight/2, imgWidth/2, 0, 2 * Math.PI);
+            ctx.clip();
             ctx.drawImage(img, 0, 0, imgWidth, imgHeight);

             if (darkness) {
diff --git a/apps/collection/js/common.js b/apps/collection/js/common.js
deleted file mode 100644
index b1c2607..0000000
--- a/apps/collection/js/common.js
+++ /dev/null
@@ -1,206 +0,0 @@
-'use strict';
-/* global eme */
-/* global Promise */
-
-(function (exports) {
-
-  // choose best ratio for device
-  function chooseBackgroundRatio(pixelRatio) {
-    // background ratios supported by mozilla cdn
-    var backgroundOptions = [1, 1.5, 2, 2.25];
-
-    return Math.max.apply(null,
-        backgroundOptions.filter((r) => pixelRatio >= r));
-  }
-
-  const backgroundRatio = chooseBackgroundRatio(window.devicePixelRatio);
-
-  const suffix =
-    backgroundRatio === 1 ? '.jpg' : ('@' + backgroundRatio + 'x.jpg');
-  const mozBgUrl =
-    'http://fxos.cdn.mozilla.net/collection/background/{categoryId}' + suffix;
-
-  const APPS_IN_ICON = 3;
-
-  function Common() {}
-
-  Common.prototype = {
-
-    APPS_IN_ICON: APPS_IN_ICON,
-
-    chooseBackgroundRatio: chooseBackgroundRatio,
-
-    b64toBlob: function b64toBlob(b64) {
-      return new Promise((resolve, reject) => {
-        var img = new Image();
-
-        img.onload = function onload() {
-          var canvas = document.createElement('canvas');
-          canvas.width = img.width;
-          canvas.height = img.height;
-
-          var ctx = canvas.getContext('2d');
-          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
-
-          canvas.toBlob(resolve);
-        };
-
-        img.onerror = reject;
-
-        img.src = b64;
-      });
-    },
-
-    // TODO
-    // add support for 'size' parameter (like getEmeBackground has) to fetch
-    // smaller backgrounds when the full size image is not required
-    // (like when creating collection icons)
-    getMozBackground: function getMozBackground(collection) {
-      if (!collection.categoryId) {
-        return Promise.reject('no categoryId');
-      }
-
-      var url = mozBgUrl.replace('{categoryId}', collection.categoryId);
-      var xhr = new XMLHttpRequest({mozSystem: true});
-      xhr.open('GET', url, true);
-      xhr.responseType = 'blob';
-
-      return new Promise((resolve, reject) => {
-        xhr.onload = function onload() {
-          if (xhr.status === 200) {
-            var blob = new Blob([xhr.response], {type: 'image/jpg'});
-            eme.log('getMozBackground', 'success', url);
-
-            resolve({
-              blob: blob,
-              source: url,
-              checksum: 'mozilla'  // TODO: generate checksum from image data
-            });
-
-          } else {
-            reject('xhr.status ' + xhr.status);
-          }
-        };
-
-        xhr.onerror = function onerror() {
-          reject('xhr error');
-        };
-
-        xhr.send();
-      });
-
-    },
-
-    getEmeBackground: function getEmeBackground(collection, size) {
-      var checksum;
-
-      var options = {
-        width: size || undefined,
-        height: size || undefined
-      };
-
-      if (collection.categoryId) {
-        options.categoryId = collection.categoryId;
-      }
-      else {
-        options.query = collection.query;
-      }
-
-      if (collection.background) {
-        checksum = collection.background.checksum;
-
-        // when we send _checksum server will not return an image if checksum
-        // was not updated, so check that we really have background data
-        if (collection.background.blob) {
-          options._checksum = checksum;
-        }
-      }
-
-      return eme.api.Search.bgimage(options)
-        .then((response) => {
-          if (checksum && checksum === response.checksum) {
-            eme.log('background didn\'t change (checksum match)');
-            return collection.background;
-          } else {
-            var b64;
-            var image = response.response.image;
-            if (image) {
-              b64 = image.data;
-              if (/image\//.test(image.MIMEType)) {  // base64 image data
-                b64 = 'data:' + image.MIMEType + ';base64,' + image.data;
-              }
-            }
-
-            return this.b64toBlob(b64).then(function toBg(blob) {
-
-              return {
-                blob: blob,
-                source: response.response.source,
-                checksum: response.checksum || null
-              };
-            });
-          }
-        });
-    },
-
-
-    // get background for a collection from
-    // 1. mozilla cdn
-    // 2. e.me api
-    getBackground: function getBackground(collection, size) {
-      return this.getMozBackground(collection)
-            .catch(function (e) {
-              eme.log('getBackground', e, 'trying e.me background');
-              return this.getEmeBackground(collection, size);
-            }.bind(this))
-            .catch(function (e) {
-              eme.log('getBackground', 'failed', e);
-            });
-    },
-
-    getWebIcons: function getWebIcons(collection) {
-      var options =
-        (collection.categoryId) ? {categoryId: collection.categoryId} :
-                                  {query: collection.query};
-
-      options.limit = APPS_IN_ICON;
-
-      return eme.api.Apps.search(options).then(response => {
-        var webicons =
-          response.response.apps.slice(0, APPS_IN_ICON).map(app => app.icon);
-
-        return webicons;
-      });
-    },
-
-    /**
-     * prepares the assets needed for rendering a collection's icon:
-     * 1. background
-     * 2. web icons
-     *
-     * returns a promise resolved when all assets requests are done and
-     * updates the collection instance but not the db
-     *
-     */
-    prepareAssets: function prepareAssets(collection) {
-      var ready = Promise.resolve(null);
-
-      var backgroundPromise = collection.backgroundReady ?
-                              ready : this.getBackground(collection);
-
-      var iconsPromise = collection.iconsReady ?
-                              ready : this.getWebIcons(collection);
-
-      return Promise.all([iconsPromise, backgroundPromise])
-            .then((results) => {
-              // results are null if not fetched
-              collection.webicons = results[0] || collection.webicons;
-              collection.background = results[1] || collection.background;
-              return collection;
-            });
-    }
-  };
-
-  exports.Common = new Common();
-
-}(window));
diff --git a/apps/collection/js/create_collection.js b/apps/collection/js/create_collection.js
index b21acf5..b6c66b5 100644
--- a/apps/collection/js/create_collection.js
+++ b/apps/collection/js/create_collection.js
@@ -1,8 +1,8 @@
 'use strict';
+/* global BaseCollection */
 /* global CategoryCollection */
-/* global CollectionIcon */
 /* global CollectionsDatabase */
-/* global Common */
+/* global CollectionIcon */
 /* global NativeInfo */
 /* global Promise */
 /* global QueryCollection */
@@ -32,7 +32,7 @@
     var maxIconSize = activity.source.data.maxIconSize;

     CollectionIcon.init(maxIconSize);
-    const APPS_IN_ICON = Common.APPS_IN_ICON;
+    var numAppIcons = CollectionIcon.numAppIcons;

     cancel.addEventListener('click', function() {
       // TODO request should always have an 'abort' method
@@ -75,10 +75,10 @@
                 // collection from custom query
                 // we make another request to get web app icons
                 dataReady = new Promise(function getIcons(resolve) {
-                  eme.api.Apps.search({query: selected, limit: APPS_IN_ICON})
+                  eme.api.Apps.search({query: selected, limit: numAppIcons})
                     .then(function success(response) {
                       var webicons =
-                        response.response.apps.slice(0,APPS_IN_ICON).map(
+                        response.response.apps.slice(0,numAppIcons).map(
                           function each(app) {
                             return app.icon;
                         });
@@ -105,7 +105,7 @@
                 var iconsReady = [];
                 collections.forEach(function doIcon(collection) {
                   var promise =
-                    Common.getBackground(collection, maxIconSize)
+                    BaseCollection.getBackground(collection, maxIconSize)
                     .then(function setBackground(bgObject) {
                       collection.background = bgObject;
                       return collection.renderIcon();
@@ -151,7 +151,7 @@
                 var iconTasks = [];
                 collections.forEach(collection => {
                   var promise =
-                    Common.getBackground(collection, maxIconSize)
+                    BaseCollection.getBackground(collection, maxIconSize)
                     .then(function setBackground(bgObject) {
                       collection.background = bgObject;
                       return collection.renderIcon();
diff --git a/apps/collection/js/home_icons.js b/apps/collection/js/home_icons.js
index 33326fe..26c4491 100644
--- a/apps/collection/js/home_icons.js
+++ b/apps/collection/js/home_icons.js
@@ -15,7 +15,6 @@
   var initPromise;

   function HomeIcons() {
-    this.ready = false;
     this.gridItemsByIdentifier = {};
     this.recordsByManifestUrl = {};
     this.recordsByBookmarkUrl = {};
@@ -23,9 +22,8 @@

   HomeIcons.prototype = {
     init: function init() {
-      initPromise =
-        Promise.all([this.collectBookmarkURLs(), this.collectManifestURLs()])
-               .then(() => this.ready = true);
+      initPromise = Promise.all([this.collectBookmarkURLs(),
+                                 this.collectManifestURLs()]);

       this.init = function noop() {
         return initPromise;
@@ -118,6 +116,6 @@

   };

-  exports.HomeIcons = new HomeIcons();
+  exports.HomeIcons = HomeIcons;

 }(window));
diff --git a/apps/collection/js/native_info.js b/apps/collection/js/native_info.js
index ee19f11..e218726 100644
--- a/apps/collection/js/native_info.js
+++ b/apps/collection/js/native_info.js
@@ -9,8 +9,10 @@

   const SETUP_KEY = 'NativeInfo-setup';

+  var homeIcons;
+
   function onerror(e) {
-    eme.error('NativeInfo error', e && (e.name || e.message || e));
+    eme.error('NativeInfo error', e.name || e.message || e);
   }

   // Provides information about native apps in order to match them against
@@ -71,14 +73,15 @@

         // we are going to traverse all the collections on device
         for (var id in collections) {
-          var collection = collections[id];
-          collection = BaseCollection.create(collection);
+          var collection = BaseCollection.create(collections[id]);

           if (collection.cName) {
             var guids = guidsByCname[collection.cName] || [];

             if (guids.length) {
-              var identifiers = guids;
+              // identifiers is directly guids when we process an app
+              var identifiers = !homeIcons ? guids :
+               guids.map(homeIcons.getIdentifier.bind(homeIcons));

               eme.log('NativeInfo', identifiers.length, 'matches for',
                collection.cName, JSON.stringify(identifiers));
@@ -105,43 +108,39 @@
     },

     // on app install/uninstall
-    // id should be a guid (manifest or bookmark URL)
     processApp: function processApp(action, id) {
       if (action === 'install') {
-        return HomeIcons.init()
-               .then(() => this.getInfo([id]))
-               .then(this.addToCollections)
-               .catch(onerror);
-
+        // id should be a guid (manifest or bookmark URL)
+        return this.getInfo([id]).then(this.addToCollections).catch(onerror);
       } else if (action === 'uninstall') {
-        return HomeIcons.init()
-               .then(() => this.removeFromCollections(id))
-               .catch(onerror);
+        return this.removeFromCollections(id).catch(onerror);
       }
     },

     // on collection install
     processCollection: function processCollection(collection) {
       return this.collectGuids()
-        .then(this.getInfo)
-        .then(function addToCollection(guidsByCname) {
-          // cName for suggested collections or query for custom collections
-          var key = collection.cName || collection.query;
-          var guids = guidsByCname[key] || [];
-
-          if (guids.length) {
-            var identifiers = guids;
-            eme.log('NativeInfo', identifiers);
-            collection.pinHomeIcons(identifiers);
-          }
-        });
+      .then(this.getInfo)
+      .then(function addToCollection(guidsByCname) {
+        // cName for suggested collections or query for custom collections
+        var key = collection.cName || collection.query;
+        var guids = guidsByCname[key] || [];
+
+        if (guids.length) {
+          var identifiers =
+            guids.map(homeIcons.getIdentifier.bind(homeIcons));
+          eme.log('NativeInfo', identifiers);
+          collection.pinHomeIcons(identifiers);
+        }
+      });
     },

     // returns a promise resolved with all guids for all apps and bookmarks
     collectGuids: function collectGuids() {
-      return HomeIcons.init().then(function success() {
-        var manifestURLs = HomeIcons.manifestURLs;
-        var bookmarkURLs = HomeIcons.bookmarkURLs;
+      homeIcons = new HomeIcons();
+      return homeIcons.init().then(function success() {
+        var manifestURLs = homeIcons.manifestURLs;
+        var bookmarkURLs = homeIcons.bookmarkURLs;
         eme.log('NativeInfo found', manifestURLs.length, 'apps');
         eme.log('NativeInfo found', bookmarkURLs.length, 'bookmarks');

diff --git a/apps/collection/js/objects.js b/apps/collection/js/objects.js
index 06de67c..755b462 100644
--- a/apps/collection/js/objects.js
+++ b/apps/collection/js/objects.js
@@ -2,14 +2,12 @@
 /* global eme */
 /* global CollectionsDatabase */
 /* global CollectionIcon */
-/* global Common */
 /* global GaiaGrid */
 /* global HomeIcons */
 /* global SearchDedupe */
 /* global GridIconRenderer */

 (function(exports) {
-  const APPS_IN_ICON = Common.APPS_IN_ICON;

   // web result created from E.me API data
   function WebResult(data, gridItemFeatures) {
@@ -44,28 +42,28 @@
     this.name = props.name || '';
     this.icon = props.icon || null;
     this.pinned = props.pinned || [];
+    this.webicons = props.webicons || [];

     // A list of the web results for this collection view
     this.webResults = [];

-    // list of base64 icon data for webResults from E.me api
-    // these icons are NOT ROUNDED
-    this.webicons = props.webicons || [];
-
     // an object containing data about the background image
-    // {blob: blob, source: string, checksum: string}
+    // {src: string, source: string, checksum: string}
     this.background = props.background || {};

     // save copy of original properties so we can tell when to re-render the
     // collection icon
-    this.originalProps = {
-      pinned: props.pinned ? props.pinned.slice() : [],
-      background: props.background || {}
-    };
+    this.originalProps = props;

     if (window.SearchDedupe) {
       this.dedupe = new SearchDedupe();
     }
+
+    // for rendering pinned homescreen apps/bookmarks
+    if (window.HomeIcons) {
+      this.homeIcons = new HomeIcons();
+      this.homeIcons.init();
+    }
   }

   BaseCollection.create = function create(data) {
@@ -77,18 +75,38 @@
     return null;
   };

-  BaseCollection.prototype = {
+  BaseCollection.getBackground = function getBackground(collection, iconSize) {
+    var src;
+    var options = {
+      width: iconSize,
+      height: iconSize
+    };

-    // let's us know if we have enough app icons for rendering the
-    //  collection's icon
-    get iconsReady() {
-      return this.pinned.length + this.webicons.length >= APPS_IN_ICON;
-    },
+    if (collection.categoryId) {
+      options.categoryId = collection.categoryId;
+    }
+    else {
+      options.query = collection.query;
+    }

-    // let's us know if the background is ready for rendering
-    get backgroundReady() {
-      return this.background && this.background.blob;
-    },
+    return eme.api.Search.bgimage(options).then(function success(response) {
+      var image = response.response.image;
+      if (image) {
+        src = image.data;
+        if (/image\//.test(image.MIMEType)) {  // base64 image data
+          src = 'data:' + image.MIMEType + ';base64,' + image.data;
+        }
+      }
+
+      return {
+        src: src,
+        source: response.response.source,
+        checksum: response.checksum || null
+      };
+    });
+  };
+
+  BaseCollection.prototype = {

     get localizedName() {
       // l10n prefix taken from /shared/locales/collection_categories
@@ -113,8 +131,7 @@
      */
     save: function save(method) {
       if (this.iconDirty) {
-        return this.renderIcon()
-                   .then(() => this.write(method), () => this.write(method));
+        return this.renderIcon().then(this.write.bind(this, method));
       } else {
         return this.write(method);
       }
@@ -137,14 +154,8 @@
         background: this.background,
         icon: this.icon
       };
-
-      // update instance
-      this.originalProps = toSave;
-
-      // update db
       return CollectionsDatabase[method](toSave).then(() => {
         this.id = toSave.id;
-        eme.log(this.name, 'saved to CollectionsDatabase');
       });
     },

@@ -155,36 +166,33 @@
      * - The background image changes.
      */
     get iconDirty() {
-      var original = this.originalProps;
+      var numAppIcons = CollectionIcon.numAppIcons;
+      var before = this.originalProps;
       try {
         // background
-        if ((original.background && original.background.blob) !==
-            (this.background && this.background.blob)) {
+        if (before.background.src !== this.background.src) {
+          this.originalProps.background = this.background;
           return true;
         }

         // apps
-        var first = this.pinned.concat(this.webResults).slice(0, APPS_IN_ICON);
-        var oFirst =
-          original.pinned.concat(original.webResults).slice(0, APPS_IN_ICON);
-
-        if (first.length !== oFirst.length) {
-          return true;
-        }
-
-        for (var i = 0; i < APPS_IN_ICON; i++) {
-          var item = first[i];
-          var oItem = oFirst[i];
+        var first = this.pinned.concat(this.webResults).slice(0, numAppIcons);
+        var oldFirst =
+          before.pinned.concat(before.webResults).slice(0, numAppIcons);

-          if ((item && item.identifier) !== (oItem && oItem.identifier)) {
+        for (var i = 0; i < numAppIcons; i++) {
+          if (first[i].identifier !== oldFirst[i].identifier) {
+            before.pinned = this.pinned;
             return true;
           }
         }

-      } catch (e) {
-        eme.error('icon dirty checking failed', e);
-      }
+        if (first.length !== before.length) {
+          before.pinned = this.pinned;
+          return true;
+        }

+      } catch (e) {}
       return false;
     },

@@ -203,9 +211,8 @@

       if (newItems.length) {
         this.pinned = this.pinned.concat(newItems);
-        this.save()
-          .then(() => eme.log(newItems.length, 'new pinned to', this.name));
-
+        this.save();
+        eme.log(newItems.length, 'new pinned to', this.name);
       }
     },

@@ -216,21 +223,6 @@
       this.pin(items);
     },

-    dropHomeIcon: function dropHomeIcon(identifier) {
-      var newPinned = new PinnedHomeIcon(identifier);
-
-      // If a record is already pinned, delete it so it appears first.
-      for (var i = 0, iLen = this.pinned.length; i < iLen; i++) {
-        if (this.pinned[i].identifier === identifier) {
-          this.pinned.splice(i, 1);
-          break;
-        }
-      }
-
-      this.pinned.unshift(newPinned);
-      this.save().then(() => eme.log(identifier, 'dropped into', this.name));
-    },
-
     pinWebResult: function pinWebResult(data) {
       this.pin(new WebResult(data));
     },
@@ -239,8 +231,8 @@
       var idx = this.pinnedIdentifiers.indexOf(identifier);
       if (idx !== -1) {
         this.pinned.splice(idx, 1);
-        return this.save()
-               .then(() => eme.log('removed pinned item', identifier));
+        eme.log('removed pinned item', identifier);
+        return this.save();
       }
     },

@@ -253,7 +245,7 @@
       });
       this.webResults = results;

-      this.webicons = arrayOfData.slice(0, APPS_IN_ICON)
+      this.webicons = arrayOfData.slice(0, CollectionIcon.numAppIcons)
         .map(app => app.icon);
     },

@@ -301,11 +293,7 @@
     toGridObject: function(item) {
       var icon;
       if (item.type === 'homeIcon') {
-        if (!HomeIcons.ready) {
-          eme.warn('HomeIcons not ready, pinned apps may not render properly');
-        }
-
-        icon = HomeIcons.get(item.identifier);
+        icon = this.homeIcons.get(item.identifier);
       } else if (item.type === 'webResult') {
         item.features = item.features || {};
         item.features.isEditable = false;
@@ -340,10 +328,11 @@
       }, this);
     },

-    addItemToGrid: function addItemToGrid(item, grid, position) {
-      this.pinned.splice(position, 1, new PinnedHomeIcon(item.identifier));
+    prependItemToGrid: function prependItemToGrid(item, grid) {
+      // Add the app to the beginning of the pinned array
+      this.pinned.unshift(new PinnedHomeIcon(item.identifier));

-      grid.add(this.toGridObject(item), position);
+      grid.add(this.toGridObject(item), 0);

       // Add a divider if it's our first pinned result.
       if (this.pinned.length === 1) {
@@ -382,42 +371,31 @@
     },

     renderIcon: function renderIcon() {
-      eme.log('rendering icon for', this.name);
-
-      return Common.prepareAssets(this)
-             .then(() => this.doRenderIcon())
-             .catch(() => this.doRenderIcon());
-    },

-    doRenderIcon: function doRenderIcon() {
       // Build the small icons from pinned, then webicons
-      var iconSrcs = this.pinned.slice(0, APPS_IN_ICON)
-                         .map((item) => this.toGridObject(item).icon);
+      var numAppIcons = CollectionIcon.numAppIcons;
+      var iconSrcs = this.pinned.slice(0, numAppIcons);

-      if (iconSrcs.length < APPS_IN_ICON) {
-        var moreIcons =
-          this.webicons
-          // bug 1028674: deupde
-          .filter((webicon) => iconSrcs.indexOf(webicon) === -1)
-          .slice(0, APPS_IN_ICON - iconSrcs.length);
+      iconSrcs = iconSrcs.concat(
+        this.webicons.slice(0, numAppIcons - iconSrcs.length));

-        iconSrcs = iconSrcs.concat(moreIcons);
+      for (var i = 0; i < iconSrcs.length; i++) {
+        if (typeof iconSrcs[i] === 'object') {
+          iconSrcs[i] = this.toGridObject(iconSrcs[i]).icon;
+        }
       }

-      var bgSrc = (this.background && this.background.blob) ?
-                  URL.createObjectURL(this.background.blob) :
-                  null;
-
       var icon = new CollectionIcon({
         iconSrcs: iconSrcs,
-        bgSrc: bgSrc
+        bgSrc: this.background ? this.background.src : null
       });

-      return icon.render().then((canvas) => {
+      // return a promise
+      return icon.render().then(function success(canvas) {
         this.icon = canvas.toDataURL();
-      });
+        return this.icon;
+      }.bind(this));
     }
-
   };


diff --git a/apps/collection/js/synchronize.js b/apps/collection/js/synchronize.js
index e1db390..bb40518 100644
--- a/apps/collection/js/synchronize.js
+++ b/apps/collection/js/synchronize.js
@@ -1,16 +1,10 @@
 'use strict';
-/* global eme */
-/* global CollectionIcon */
+
 /* global NativeInfo */

 (function(exports) {

   function Synchronizer() {
-
-    // Icon generation requirements.
-    var grid = document.getElementById('grid');
-    CollectionIcon.init(grid.maxIconSize);
-
     navigator.mozSetMessageHandler('connection', this.onConnection.bind(this));
   }

@@ -31,7 +25,7 @@
      */
     install: function(event) {
       var message = event.data;
-      eme.init().then(() => NativeInfo.processApp('install', message.id));
+      NativeInfo.processApp('install', message.id);
     },

     /**
@@ -39,7 +33,7 @@
      */
     uninstall: function(event) {
       var message = event.data;
-      eme.init().then(() => NativeInfo.processApp('uninstall', message.id));
+      NativeInfo.processApp('uninstall', message.id);
     }
   };

diff --git a/apps/collection/js/view_apps.js b/apps/collection/js/view_apps.js
index d58dba6..c9ea84d 100644
--- a/apps/collection/js/view_apps.js
+++ b/apps/collection/js/view_apps.js
@@ -1,25 +1,20 @@
 'use strict';
 /* global CollectionIcon */
-/* global CollectionsDatabase */
 /* global eme */
-/* global HomeIcons */
 /* global NativeInfo */
+/* global Promise */
+/* global CollectionsDatabase */

 (function(exports) {

   function ViewApps(collection) {

-    var rendered = false;
     var grid = document.getElementById('grid');
     var elements = {
       offline: document.getElementById('offline'),
       offlineMessage: document.getElementById('offline-message')
     };

-    // Items which are inserted during collection render.
-    // Prepend them to the list after we're done rendering.
-    var asyncItems = [];
-
     var options = {
       limit: 24
     };
@@ -31,17 +26,6 @@

     loading();

-    CollectionsDatabase.addEventListener('updated', function onUpdate(e) {
-      var data = e.target;
-      if (collection.categoryId !== data.categoryId) {
-        // Other collection was updated
-        return;
-      }
-
-      asyncItems.push(data);
-      rendered && prependAsyncItems();
-    });
-
     // XXX: Override the grid render method default options
     var _grid = grid._grid;
     var defaultGridRender = _grid.render;
@@ -62,41 +46,40 @@
     // Update Collection from db
     // Render grid for the first time
     // Go get web results
-    HomeIcons.init()
-    .then(() => NativeInfo.setup())
+    NativeInfo.setup()
+    // Ensure homeIcons are initialized
+    .then(() => collection.homeIcons.init())
     .then(() => collection.refresh())
+    .then(() => listenForAddToCollection())
     .then(() => collection.render(grid))
     .then(() => {
-      rendered = true;
       loading(false);
       queueRequest();
-      prependAsyncItems();
     });

     CollectionIcon.init(grid.maxIconSize);

-    function prependAsyncItems() {
-      var data;
-      while ((data = asyncItems.pop())) {
-        // "add-to-collection" activity puts the icon in the first position
-        var position = 0;
-        var item = data.pinned[position];
-        if (item && !grid.getIcon(item.identifier)) {
-          // The icon is not rendered so this event has been dispatched
-          // because of an "add-to-collection" activity
-          collection.addItemToGrid(item, grid, position);
-          return;
-        }
-
-        // "install" connection puts the icon in the last position
-        position = data.pinned.length - 1;
-        item = data.pinned[position];
-        if (item && !grid.getIcon(item.identifier)) {
-          // The icon is not rendered so this event has been dispatched
-          // because of an "install" message was received
-          collection.addItemToGrid(item, grid, position);
-        }
-      }
+    function listenForAddToCollection() {
+      return new Promise(function doListenForAddToCollection(resolve) {
+        CollectionsDatabase.addEventListener('updated', function onUpdate(e) {
+          var data = e.target;
+
+          if (collection.categoryId !== data.categoryId) {
+            // Other collection was updated
+            return;
+          }
+
+          // "add-to-collection" activity puts the icon in the first position
+          var item = data.pinned[0];
+          if (item && !grid.getIcon(item.identifier)) {
+            // The icon is not rendered so this event has been dispatched
+            // because of an "add-to-collection" activity
+            collection.prependItemToGrid(item, grid);
+          }
+        });
+
+        resolve();
+      });
     }

     function queueRequest() {
diff --git a/apps/collection/js/view_bg.js b/apps/collection/js/view_bg.js
index d5011e3..ccc91a7 100644
--- a/apps/collection/js/view_bg.js
+++ b/apps/collection/js/view_bg.js
@@ -1,6 +1,5 @@
 'use strict';
 /* global eme */
-/* global Common */

 (function(exports) {

@@ -21,21 +20,53 @@
       }
     }

-    function onOnline() {
-      Common.getBackground(collection).then(function success(background) {
-        // XXX better to drop the isFullSize flag
-        // a better approach would be not to store non-fullsize backgrounds
-        background.isFullSize = true;
+    function getBackground() {
+      var checksum;
+      var options = collection.categoryId ? {categoryId: collection.categoryId}
+                                          : {query: collection.query};

-        ViewBgImage.drawBackground(background);
+      if (collection.background) {
+        checksum = collection.background.checksum;

-        if (!collection.background ||
-             collection.background.checksum !== background.checksum) {
+        // when we send _checksum server will not return an image if checksum
+        // was not updated, so check that we really have a background src
+        if (collection.background.src) {
+          options._checksum = checksum;
+        }
+      }

-          collection.background = background;
-          collection.save();
+      return eme.api.Search.bgimage(options).then(function success(response) {
+        if (checksum && checksum === response.checksum) {
+          ViewBgImage.drawBackground(collection.background);
+          eme.log('background didn\'t change (checksum match)');
+        } else {
+          // update background
+          var src;
+          var image = response.response.image;
+          if (image) {
+            src = image.data;
+            if (/image\//.test(image.MIMEType)) {  // base64 image data
+              src = 'data:' + image.MIMEType + ';base64,' + image.data;
+            }
+
+            var newBackground = {
+              src: src,
+              source: response.response.source,
+              checksum: response.checksum,
+              isFullSize: true
+            };
+
+            ViewBgImage.drawBackground(newBackground);
+
+            collection.background = newBackground;
+            collection.save();
+          }
         }
+      });
+    }

+    function onOnline() {
+      getBackground().then(function success() {
         removeListeners();
       }, function error(e) {
         // no background
@@ -59,11 +90,9 @@
     }

     // draw stored background if in full size (as opposed to square icon size)
-    if (bg && bg.blob && bg.isFullSize) {
-      var url = URL.createObjectURL(bg.blob);
-      elements.content.style.backgroundImage = 'url(' + url + ')';
-      eme.log('drawBackground', 'drawn', url);
-
+    if (bg && bg.src && bg.isFullSize) {
+      elements.content.style.backgroundImage = 'url(' + bg.src + ')';
+      eme.log('drawBackground', 'drawn');
     } else {
       eme.log('drawBackground', 'not drawn, failed conditions', bg);
     }
diff --git a/apps/collection/manifest.webapp b/apps/collection/manifest.webapp
index fbe303b..f7fcb65 100644
--- a/apps/collection/manifest.webapp
+++ b/apps/collection/manifest.webapp
@@ -51,13 +51,6 @@
     }
   },
   "default_locale": "en-US",
-  "icons": {
-    "84": "/style/icons/collection_84.png",
-    "126": "/style/icons/collection_126.png",
-    "142": "/style/icons/collection_142.png",
-    "189": "/style/icons/collection_189.png",
-    "284": "/style/icons/collection_284.png"
-  },
   "datastores-access": {
     "bookmarks_store": {
       "readonly": true,
diff --git a/apps/collection/style/css/view.css b/apps/collection/style/css/view.css
index 65e1f50..819bf93 100644
--- a/apps/collection/style/css/view.css
+++ b/apps/collection/style/css/view.css
@@ -5,11 +5,6 @@ gaia-grid {
   z-index: 2;
 }

-/* gaia-grid over edit header dragging an icon */
-.dragging {
-  z-index: 11;
-}
-
 #edit-header {
   position: absolute;
   top: 0;
@@ -20,34 +15,14 @@ gaia-grid {
   transition: opacity 0.5s ease-in, visibility 0s linear 0.5s;
 }

-#edit-curtain {
-  z-index: 1;
-  position: absolute;
-  top: 0;
-  width: 100%;
-  height: 100%;
-  background-color: rgba(0,0,0,0.4);
-  transition: background-color 0.5s ease-in;
-  overflow: hidden;
-}
-
 .edit-mode #edit-header {
   visibility: visible;
   opacity: 1;
   transition: opacity 0.5s ease-in;
 }

-.edit-mode #edit-curtain {
-  background-color: #333333;
-}
-
 #header {
   background-position: center -2rem; /* to continue wallpaper position from status bar */
-  border-bottom: 0.1rem solid #555;
-}
-
-.edit-mode #header {
-  border-bottom: none;
 }

 #header:after {
@@ -62,39 +37,58 @@ gaia-grid {
 }

 #content {
+  border-top: 0.1rem solid #555;
   position: absolute;
   top: 0;
   left: 0;
   right: 0;
   bottom: 0;
-  padding-top: 7.3rem;
-  overflow-x: hidden;
-  overflow-y: scroll;
+  overflow: scroll;
+  padding-top: 2.4rem;
   -moz-user-select: none;
 }

 #content-background-image {
   position: absolute;
-  top: 0;
+  top: 5rem;
   left: 0;
   width: 100%;
-  height: 100%;
-  background-position: center 5rem;
+  height: calc(100% - 5rem);
   background-size: cover;
   overflow: hidden;
 }

+#content-background-overlay {
+  position: absolute;
+  top: 0;
+  left: 0;
+  bottom: 0;
+  right: 0;
+  background-color: rgba(0,0,0,0.4);
+  transition: background-color 0.5s ease-in;
+  overflow: hidden;
+}
+
+
+.edit-mode #content-background-overlay {
+  background-color: #333333;
+}
+
 /* Notifications */
 #content {
-  display: block;
+  display: flex;
+  flex-direction: column;
   width: 100%;
 }

 section[role="notification"] {
+  flex: 1 1 auto;
+  align-items: center;
   color: #fff;
   font-size: 1.6rem;
   line-height: 1.8rem;
   text-align: center;
+  justify-content: center;
   display: none;
   position: relative;
   z-index: 1;
@@ -104,12 +98,6 @@ section[role="notification"]#offline {
   padding: 1.2rem 5rem;
 }

-#content section[role="notification"]#loading {
-  position: absolute;
-  width: 100%;
-  top: calc(50% + 1.45rem); /* 2.9rem is the height of the progress element */
-}
-
 /* Prevent unnecessary cpu usage (bug 922341) */
 section[role="notification"] progress {
   display: none;
@@ -120,7 +108,7 @@ body[data-loading="true"] section[role="notification"] progress {
 }
 section[role="notification"].show,
 body[data-loading="true"] #content section[role="notification"]#loading{
-  display: block;
+  display: flex;
 }

 .edit-mode .icon[data-is-draggable="false"] {
diff --git a/apps/collection/style/icons/collection_126.png b/apps/collection/style/icons/collection_126.png
deleted file mode 100644
index 7b053df..0000000
Binary files a/apps/collection/style/icons/collection_126.png and /dev/null differ
diff --git a/apps/collection/style/icons/collection_142.png b/apps/collection/style/icons/collection_142.png
deleted file mode 100644
index 94878d5..0000000
Binary files a/apps/collection/style/icons/collection_142.png and /dev/null differ
diff --git a/apps/collection/style/icons/collection_189.png b/apps/collection/style/icons/collection_189.png
deleted file mode 100644
index aeec665..0000000
Binary files a/apps/collection/style/icons/collection_189.png and /dev/null differ
diff --git a/apps/collection/style/icons/collection_284.png b/apps/collection/style/icons/collection_284.png
deleted file mode 100644
index f4af0e6..0000000
Binary files a/apps/collection/style/icons/collection_284.png and /dev/null differ
diff --git a/apps/collection/style/icons/collection_84.png b/apps/collection/style/icons/collection_84.png
deleted file mode 100644
index e66ada9..0000000
Binary files a/apps/collection/style/icons/collection_84.png and /dev/null differ
diff --git a/apps/collection/synchronize.html b/apps/collection/synchronize.html
index 69e0c2a..fc25a39 100644
--- a/apps/collection/synchronize.html
+++ b/apps/collection/synchronize.html
@@ -7,7 +7,6 @@

     <script defer src="shared/js/bookmarks_database.js"></script>
     <script defer src="shared/js/collections_database.js"></script>
-    <script defer src="shared/js/async_storage.js"></script>

     <script defer src="shared/js/l10n.js"></script>
     <script defer src="shared/js/url_helper.js"></script>
@@ -16,7 +15,6 @@
     <script defer src="shared/elements/gaia_grid/js/grid_layout.js"></script>
     <script defer src="shared/elements/gaia_grid/script.js"></script>
     <script defer src="shared/elements/gaia_grid/js/items/grid_item.js"></script>
-    <script defer src="shared/elements/gaia_grid/js/items/bookmark.js"></script>
     <script defer src="shared/elements/gaia_grid/js/items/mozapp.js"></script>

     <script defer src="shared/js/everythingme/eme.js"></script>
@@ -24,15 +22,14 @@
     <script defer src="shared/js/everythingme/device.js"></script>
     <script defer src="shared/js/everythingme/api.js"></script>

-    <script defer src="js/common.js"></script>
-    <script defer src="js/objects.js"></script>
     <script defer src="js/collection_icon.js"></script>
+    <script defer src="js/objects.js"></script>
     <script defer src="js/home_icons.js"></script>
     <script defer src="js/native_info.js"></script>
-
+
     <script defer src="js/synchronize.js"></script>
   </head>
   <body>
-    <gaia-grid id="grid"></gaia-grid>
+  	<gaia-grid></gaia-grid>
   </body>
 </html>
diff --git a/apps/collection/test/unit/common_test.js b/apps/collection/test/unit/common_test.js
deleted file mode 100644
index 2eaddc9..0000000
--- a/apps/collection/test/unit/common_test.js
+++ /dev/null
@@ -1,156 +0,0 @@
-'use strict';
-/* global MockXMLHttpRequest */
-/* global Promise */
-
-require('/js/common.js');
-
-requireApp('collection/test/unit/mock_xmlhttprequest.js');
-
-const B64_DATA =
-  /* jshint -W101 */
-  '';
-
-var mocksHelper = new MocksHelper([
-  'XMLHttpRequest'
-]);
-mocksHelper.init();
-
-suite('common.js > ', function() {
-  mocksHelper.attachTestHelpers();
-
-  function createImageBlob(s) {
-    var data = [s || 'some stuff'];
-    var properties = {
-      type: 'image/jpg'
-    };
-
-    return new Blob(data, properties);
-  }
-
-  var subject = null;
-  var eme_checksum = 'eme_checksum';
-
-  suiteSetup(function() {
-    subject = window.Common;
-
-    // Stub eme api for now
-    window.eme = {
-      log: console.log,
-      api: {
-        Search: {
-          bgimage: function() {
-            return Promise.resolve({
-              'checksum': eme_checksum,
-              'response': {
-                'image': {
-                  'MIMEType': 'image/jpeg',
-                  'data': B64_DATA
-                }
-              }
-            });
-          }
-        }
-      }
-    };
-  });
-
-  test('choose correct background ratio', function() {
-    assert.equal(subject.chooseBackgroundRatio(1), 1);
-    assert.equal(subject.chooseBackgroundRatio(1.51), 1.5);
-    assert.equal(subject.chooseBackgroundRatio(1.9), 1.5);
-    assert.equal(subject.chooseBackgroundRatio(2.24), 2);
-    assert.equal(subject.chooseBackgroundRatio(2.251), 2.25);
-    assert.equal(subject.chooseBackgroundRatio(3), 2.25);
-  });
-
-  test('mozilla background fails when no categoryId', function(done) {
-    var mockCollection = {
-      categoryId: null
-    };
-
-    subject.getMozBackground(mockCollection).then(
-      function () {
-        done(new Error('expected failure (no categoryId)'));
-      }, function() {
-        done();
-      });
-  });
-
-  test('gets background from mozilla cdn',
-    function(done) {
-      var mockCollection = {
-        categoryId: 289  // Social
-      };
-
-      subject.getBackground(mockCollection).then(
-        function(bg) {
-          assert.equal(bg.checksum, 'mozilla');
-          done();
-        });
-
-      MockXMLHttpRequest.mSendOnLoad({
-        response: createImageBlob()
-      });
-  });
-
-  test('gets E.me background when cdn image fails',
-    function(done) {
-      var mockCollection = {
-        categoryId: 249 // Weather
-      };
-
-      var original = subject.getMozBackground;
-      subject.getMozBackground = function stub() {
-        return Promise.reject('error');
-      };
-
-      subject.getBackground(mockCollection).then(
-        function(bg) {
-          assert.equal(bg.checksum, eme_checksum);
-          done();
-        });
-
-
-      subject.getMozBackground = original;
-    });
-
-  test('E.me background changes if checksum changes',
-    function(done) {
-      var originalBlob = createImageBlob('my_background_src');
-
-      var mockCollection = {
-        categoryId: 249, // Weather
-        background: {
-          checksum: 'my_checksum',
-          blob: originalBlob
-        }
-      };
-
-      // getting background again should result in no-change of src
-      subject.getEmeBackground(mockCollection)
-        .then((background) => {
-          assert.notEqual(background.blob, originalBlob);
-          done();
-        });
-    });
-
-  test('E.me background does not change if checksum does not change',
-    function(done) {
-      var originalBlob = createImageBlob('originalBlob');
-
-      var mockCollection = {
-        categoryId: 249, // Weather
-        background: {
-          checksum: eme_checksum,
-          blob: originalBlob
-        }
-      };
-
-      // getting background again should result in no-change of blob
-      subject.getEmeBackground(mockCollection)
-        .then((background) => {
-          assert.equal(background.blob, originalBlob);
-          done();
-        });
-    });
-});
diff --git a/apps/collection/test/unit/view_bg_test.js b/apps/collection/test/unit/view_bg_test.js
index 01947b3..bb2d4b2 100644
--- a/apps/collection/test/unit/view_bg_test.js
+++ b/apps/collection/test/unit/view_bg_test.js
@@ -8,9 +8,19 @@ suite('bg image > ', function() {
   var subject;
   var serverResponse;

+  function setServerResponse(data) {
+    serverResponse = {
+      checksum: data.checksum,
+      response: {
+        image: {
+          data: data.src
+        }
+      }
+    };
+  }
+
   // Stub eme api
   window.eme = {
-    log: function() {},
     init: function() {
       return Promise.resolve();
     },
@@ -23,13 +33,6 @@ suite('bg image > ', function() {
     }
   };

-  // Mock Common
-  window.Common = {
-    getBackground: function(collection) {
-      return Promise.resolve(collection.background);
-    }
-  };
-
   setup(function(done) {
     loadBodyHTML('/view.html');

@@ -43,7 +46,62 @@ suite('bg image > ', function() {
     serverResponse = {};
   });

-  test('adds isFullSize flag after getBackground', function(done) {
+  test('no change if checksum matches', function(done) {
+    // mock collection with bg1
+    var mockCollection = {
+      background: {
+        src: 'foo',
+        checksum: 'foo'
+      }
+    };
+
+    // set server response
+    setServerResponse({
+      checksum: 'foo',
+      src: 'bar'
+    });
+
+    // mock ViewBgImage.drawBackground
+    this.sinon.stub(subject, 'drawBackground', function mockDraw(bg) {
+      if (this.drawBackground.callCount === 2) {
+        assert.equal(bg.src, 'foo');
+        done();
+      }
+    });
+
+    /* jshint -W031 */
+    new subject(mockCollection);
+  });
+
+  test('change if no checksum match', function(done) {
+    // mock collection with bg1
+    var mockCollection = {
+      background: {
+        src: 'foo',
+        checksum: 'foo'
+      }
+    };
+
+    // set server response
+    setServerResponse({
+      checksum: 'bar',
+      src: 'bar'
+    });
+
+    // mock ViewBgImage.drawBackground
+    this.sinon.stub(subject, 'drawBackground', function mockDraw(bg) {
+      if (this.drawBackground.callCount === 2) {
+        assert.equal(bg.src, 'bar');
+        done();
+      }
+    });
+
+    /* jshint -W031 */
+    new subject(mockCollection);
+  });
+
+  test('ViewBgImage image response has isFullSize param', function(done) {
+    // mock collection with bg1
     var mockCollection = {
       background: {
         src: 'foo',
@@ -51,8 +109,13 @@ suite('bg image > ', function() {
       }
     };

-    assert.isUndefined(mockCollection.background.isFullSize);
+    // set server response
+    setServerResponse({
+      checksum: 'bar',
+      src: 'bar'
+    });

+    // mock ViewBgImage.drawBackground
     this.sinon.stub(subject, 'drawBackground', function mockDraw(bg) {
       if (this.drawBackground.callCount === 1) {
         assert.isUndefined(bg.isFullSize);
diff --git a/apps/collection/test/unit/view_collection_test.js b/apps/collection/test/unit/view_collection_test.js
index 97a3a7b..30b4bd9 100644
--- a/apps/collection/test/unit/view_collection_test.js
+++ b/apps/collection/test/unit/view_collection_test.js
@@ -4,7 +4,6 @@
 /* global Promise */
 /* global MocksHelper */

-require('/js/common.js');
 require('/js/objects.js');
 require('/test/unit/mock_contextmenu.js');
 require('/test/unit/mock_view_apps.js');
diff --git a/apps/collection/testpage/testpage.html b/apps/collection/testpage/testpage.html
index 7310879..38faa69 100644
--- a/apps/collection/testpage/testpage.html
+++ b/apps/collection/testpage/testpage.html
@@ -44,7 +44,6 @@
     <script defer src="/shared/js/everythingme/cache.js"></script>
     <script defer src="/shared/js/everythingme/api.js"></script>

-    <script defer src="/js/common.js"></script>
     <script defer src="/js/objects.js"></script>
     <script defer src="/js/suggestions.js"></script>
     <script defer src="/js/contextmenu.js"></script>
diff --git a/apps/collection/view.html b/apps/collection/view.html
index 5674b35..21619f9 100644
--- a/apps/collection/view.html
+++ b/apps/collection/view.html
@@ -38,9 +38,8 @@
     <script defer src="shared/js/everythingme/device.js"></script>
     <script defer src="shared/js/everythingme/api.js"></script>

-    <script defer src="js/common.js"></script>
-    <script defer src="js/objects.js"></script>
     <script defer src="js/collection_icon.js"></script>
+    <script defer src="js/objects.js"></script>
     <script defer src="js/home_icons.js"></script>
     <script defer src="js/native_info.js"></script>
     <script defer src="js/contextmenu.js"></script>
@@ -75,19 +74,19 @@
           </header>
         </section>

-        <div id="edit-curtain"></div>
-
         <div id="content-background-image">
-          <div id="content">
-            <gaia-grid cols="4" id="grid" dragdrop></gaia-grid>
+          <div id="content-background-overlay">
+            <div id="content">
+              <gaia-grid cols="4" id="grid" dragdrop></gaia-grid>

-            <section role="notification" id="offline">
-              <span id="offline-message"></span>
-            </section>
+              <section role="notification" id="offline">
+                <span id="offline-message"></span>
+              </section>

-            <section role="notification" id="loading">
-              <progress></progress>
-            </section>
+              <section role="notification" id="loading">
+                <progress></progress>
+              </section>
+            </div>
           </div>
         </div>

diff --git a/apps/communications/contacts/elements/details.html b/apps/communications/contacts/elements/details.html
index 2e27a6b..98270ca 100644
--- a/apps/communications/contacts/elements/details.html
+++ b/apps/communications/contacts/elements/details.html
@@ -58,6 +58,7 @@
             <div class="item">
               <div class="item-body-exp">
                 <a href="#" class="action action-block">
+                  <span role="button" class="icon-address" data-l10n-id="legendAddress">Address</span>
                   <b>
                   <span>#streetAddress#</span>
                     #postalCode#
diff --git a/apps/communications/contacts/elements/form.html b/apps/communications/contacts/elements/form.html
index f583cf2..ff43b03 100644
--- a/apps/communications/contacts/elements/form.html
+++ b/apps/communications/contacts/elements/form.html
@@ -102,7 +102,7 @@
           <section class="item first">
             <a id="thumbnail-action" href="#" class="item-media fillflow-media">
               <p>
-                <span class="icon icon-addimage"></span>
+                <span role="button" class="icon-addimage"></span>
                 <em data-l10n-id="addPhoto"> Add photo</em>
               </p>
               <p class="edit-photo">
diff --git a/apps/communications/contacts/index.html b/apps/communications/contacts/index.html
index 06c968f..89c10d8 100644
--- a/apps/communications/contacts/index.html
+++ b/apps/communications/contacts/index.html
@@ -52,7 +52,6 @@
     <script defer src="/shared/js/contacts/import/utilities/config.js"></script>
     <script defer src="/contacts/js/utilities/cookie.js"></script>
     <script defer src="/contacts/js/utilities/extract_params.js"></script>
-    <script defer src="/contacts/js/utilities/performance_helper.js"></script>
     <script defer src="/shared/js/contacts/import/utilities/misc.js"></script>

     <!-- For initializing FB integration -->
diff --git a/apps/communications/contacts/js/activities.js b/apps/communications/contacts/js/activities.js
index 1961a157..c2616d9 100644
--- a/apps/communications/contacts/js/activities.js
+++ b/apps/communications/contacts/js/activities.js
@@ -36,14 +36,6 @@ var ActivityHandler = {
     return this._currentActivity.source.data;
   },

-  get activityContactProperties() {
-    if (!this._currentActivity) {
-      return null;
-    }
-
-    return this._currentActivity.source.data.contactProperties;
-  },
-
   /* checks first if we are handling an activity, then if it is
    * of the same type of any of the items from the list provided.
    * @param list Array with types of activities to be checked
@@ -167,23 +159,6 @@ var ActivityHandler = {
         dataSet = theContact.email;
         noDataStr = _('no_contact_email');
         break;
-      case 'webcontacts/select':
-        type = 'select';
-        var data = [];
-        if (this.activityContactProperties.indexOf('tel') !== -1) {
-          if (theContact.tel && theContact.tel.length) {
-            data = data.concat(theContact.tel);
-          }
-        }
-        if (this.activityContactProperties.indexOf('email') !== -1) {
-          if (theContact.email && theContact.email.length) {
-            data = data.concat(theContact.email);
-          }
-        }
-
-        dataSet = data;
-        noDataStr = _('no_contact_data');
-        break;
     }
     var hasData = dataSet && dataSet.length;
     var numOfData = hasData ? dataSet.length : 0;
@@ -203,9 +178,8 @@ var ActivityHandler = {
         break;
       case 1:
         // if one required type of data
-        if (this.activityDataType == 'webcontacts/tel' ||
-            this.activityDataType == 'webcontacts/select') {
-          result = this.pickContactsResult(theContact);
+        if (this.activityDataType == 'webcontacts/tel') {
+          result = utils.misc.toMozContact(theContact);
         } else {
           result[type] = dataSet[0].value;
         }
@@ -220,9 +194,11 @@ var ActivityHandler = {
           var itemData;
           var capture = function(itemData) {
             return function() {
-              if (self.activityDataType == 'webcontacts/tel' ||
-                  self.activityDataType == 'webcontacts/select') {
-                result = self.pickContactsResult(theContact, itemData);
+              if (self.activityDataType == 'webcontacts/tel') {
+                // filter phone from data.tel to take out the rest
+                result = utils.misc.toMozContact(theContact);
+                result.tel = self.filterDestinationForActivity(
+                               itemData, result.tel);
               } else {
                 result[type] = itemData;
               }
@@ -230,7 +206,7 @@ var ActivityHandler = {
               self.postPickSuccess(result);
             };
           };
-          for (var i = 0, l = dataSet.length; i < l; i++) {
+          for (var i = 0; i < dataSet.length; i++) {
             itemData = dataSet[i].value;
             var carrier = dataSet[i].carrier || '';
             prompt1.addToList(
@@ -243,41 +219,6 @@ var ActivityHandler = {
     } // switch
   },

-  pickContactsResult:
-  function ah_pickContactsResult(theContact, itemData) {
-    var pickResult = {};
-    var contact = utils.misc.toMozContact(theContact);
-
-    if (this.activityDataType == 'webcontacts/tel') {
-      pickResult = contact;
-
-      if (itemData) {
-        pickResult.tel = this.filterDestinationForActivity(
-                            itemData, pickResult.tel);
-      }
-    } else if (this.activityDataType == 'webcontacts/select') {
-      pickResult.contact = contact;
-
-      if (!itemData) {
-        pickResult.select = pickResult.contact.tel;
-
-        if (!pickResult.select || !pickResult.select.length) {
-          pickResult.select = pickResult.contact.email;
-        }
-      } else {
-        pickResult.select = this.filterDestinationForActivity(
-                                itemData, pickResult.contact.tel);
-
-        if (!pickResult.select || !pickResult.select.length) {
-          pickResult.select = this.filterDestinationForActivity(
-                                  itemData, pickResult.contact.email);
-        }
-      }
-    }
-
-    return pickResult;
-  },
-
   filterDestinationForActivity:
   function ah_filterDestinationForActivity(itemData, dataSet) {
     return dataSet.filter(function isSamePhone(item) {
diff --git a/apps/communications/contacts/js/contacts.js b/apps/communications/contacts/js/contacts.js
index 048fea0..54fe694 100755
--- a/apps/communications/contacts/js/contacts.js
+++ b/apps/communications/contacts/js/contacts.js
@@ -9,6 +9,7 @@
 /* global LazyLoader */
 /* global MozActivity */
 /* global navigationStack */
+/* global PerformanceTestingHelper */
 /* global SmsIntegration */
 /* global utils */
 /* global TAG_OPTIONS */
@@ -173,7 +174,6 @@ var Contacts = (function() {
     }
     document.body.classList.remove('hide');
     displayed = true;
-    utils.PerformanceHelper.visuallyComplete();
   };

   var addExtrasToContact = function addExtrasToContact(extrasString) {
@@ -219,6 +219,8 @@ var Contacts = (function() {
       }
       checkUrl();

+      PerformanceTestingHelper.dispatch('init-finished');
+
       asyncScriptsLoaded = true;
     });
   };
@@ -227,7 +229,6 @@ var Contacts = (function() {
     _ = navigator.mozL10n.get;
     initContainers();
     initEventListeners();
-    utils.PerformanceHelper.chromeInteractive();
     window.addEventListener('hashchange', checkUrl);

     // If the migration is not complete
@@ -948,11 +949,6 @@ var Contacts = (function() {
     editModeTitleElement.textContent = _('SelectedTxt', {n: count});
   };

-  window.addEventListener('DOMContentLoaded', function onLoad() {
-    utils.PerformanceHelper.domLoaded();
-    window.removeEventListener('DOMContentLoaded', onLoad);
-  });
-
   return {
     'goBack' : handleBack,
     'cancel': handleCancel,
diff --git a/apps/communications/contacts/js/utilities/performance_helper.js b/apps/communications/contacts/js/utilities/performance_helper.js
deleted file mode 100644
index 6b4308e..0000000
--- a/apps/communications/contacts/js/utilities/performance_helper.js
+++ /dev/null
@@ -1,37 +0,0 @@
-'use strict';
-
-/**
- * Utility class to fire events needed to measure the performance
- * of the application.
- * For an explanation of what means each event go here:
- * https://bugzilla.mozilla.org/show_bug.cgi?id=996038
- * For an explanation of how are adapted to the specific needs
- * in the contacts app please go here:
- * https://bugzilla.mozilla.org/show_bug.cgi?id=1015388#c8
- */
-(function(){
-
-  window.utils = window.utils || {};
-
-  var PerformanceHelper = {
-    domLoaded: function() {
-      window.dispatchEvent(new CustomEvent('moz-chrome-dom-loaded'));
-    },
-    chromeInteractive: function() {
-      window.dispatchEvent(new CustomEvent('moz-chrome-interactive'));
-    },
-    visuallyComplete: function() {
-      window.dispatchEvent(new CustomEvent('moz-app-visually-complete'));
-    },
-    contentInteractive: function() {
-      window.dispatchEvent(new CustomEvent('moz-content-interactive'));
-    },
-    loadEnd: function() {
-      window.dispatchEvent(new CustomEvent('moz-app-loaded'));
-    }
-  };
-
-
-  window.utils.PerformanceHelper = PerformanceHelper;
-
-})();
diff --git a/apps/communications/contacts/js/views/form.js b/apps/communications/contacts/js/views/form.js
index d628ef4..c7282a0 100644
--- a/apps/communications/contacts/js/views/form.js
+++ b/apps/communications/contacts/js/views/form.js
@@ -58,9 +58,6 @@ contacts.Form = (function() {
   // The size we want our contact photos to be
   var PHOTO_WIDTH = 320;
   var PHOTO_HEIGHT = 320;
-  // bug 1038414: ask for an image about 2MP before
-  // doing the crop to save memory in both apps
-  var MAX_PHOTO_SIZE = 200000;

   var touchstart = 'ontouchstart' in window ? 'touchstart' : 'mousedown';

@@ -1190,7 +1187,8 @@ contacts.Form = (function() {
     delButton.id = IMG_DELETE_ID;
     delButton.className = 'fillflow-row-action';
     var delIcon = document.createElement('span');
-    delIcon.className = 'icon icon-delete';
+    delIcon.setAttribute('role', 'button');
+    delIcon.className = 'icon-delete';
     delButton.appendChild(delIcon);
     delButton.onclick = function removeElement(event) {
       // Workaround until 809452 is fixed.
@@ -1255,8 +1253,7 @@ contacts.Form = (function() {
     var activity = new MozActivity({
       name: 'pick',
       data: {
-        type: 'image/jpeg',
-        maxFileSizeBytes: MAX_PHOTO_SIZE
+        type: 'image/jpeg'
       }
     });

diff --git a/apps/communications/contacts/js/views/list.js b/apps/communications/contacts/js/views/list.js
index 7f99ef7..2040e2c 100755
--- a/apps/communications/contacts/js/views/list.js
+++ b/apps/communications/contacts/js/views/list.js
@@ -8,6 +8,7 @@
 /* global LazyLoader */
 /* global monitorTagVisibility */
 /* global Normalizer */
+/* global PerformanceTestingHelper */
 /* global utils */

 var contacts = window.contacts || {};
@@ -647,8 +648,7 @@ contacts.List = (function() {
     }

     notifiedAboveTheFold = true;
-    // Replacing the old 'above-the-fold-ready' message
-    utils.PerformanceHelper.contentInteractive();
+    PerformanceTestingHelper.dispatch('above-the-fold-ready');

     // Don't bother loading the monitor until we have rendered our
     // first screen of contacts.  This avoids the overhead of
@@ -767,8 +767,7 @@ contacts.List = (function() {
     // if the notification has already happened.
     notifyAboveTheFold();

-    // Replacing old message 'startup-path-done'
-    utils.PerformanceHelper.loadEnd();
+    PerformanceTestingHelper.dispatch('startup-path-done');
     fb.init(function contacts_init() {
       if (fb.isEnabled) {
         Contacts.loadFacebook(NOP_FUNCTION);
diff --git a/apps/communications/contacts/js/webrtc-client/webrtc_client.js b/apps/communications/contacts/js/webrtc-client/webrtc_client.js
index 0b91013..db95229 100644
--- a/apps/communications/contacts/js/webrtc-client/webrtc_client.js
+++ b/apps/communications/contacts/js/webrtc-client/webrtc_client.js
@@ -14,15 +14,13 @@

 (function(exports) {
   'use strict';
-
+
   var ACTIVITY_NAME = 'webrtc-call';

-  var WEBRTC_CLIENTNAME = 'Firefox Hello';
-
   var _webrtcClientIntegrationDOM, _detailListDOM;
-
+
   var _cachedContact = null;
-
+
   var _isInDetail = false;
   var _isWebrtcClientInstalled;
   var voiceCallButton, videoCallButton;
@@ -41,7 +39,7 @@
       // TODO Add string if needed
     };
   }
-
+
   function _checkIfInstalled(forceCheck) {
     return new Promise(function(resolve, reject) {
       // If the value was previously checked we dont need to recheck again.
@@ -86,14 +84,13 @@
     // so we create the 'li' element
     _webrtcClientIntegrationDOM = document.createElement('li');
     _webrtcClientIntegrationDOM.id = 'webrtc-client-actions';
-
+
     var title = document.createElement('h2');
-    // This has been hardcoded to prevent uplifting issues to v2.0
-    title.textContent = WEBRTC_CLIENTNAME;
+    title.textContent = 'WebRTC Client';

     var colsWrapper = document.createElement('div');
     colsWrapper.className = 'fillflow-twocols';
-
+
     voiceCallButton = document.createElement('button');
     voiceCallButton.className = 'activity icon icon-webrtc-voice';
     navigator.mozL10n.localize(voiceCallButton, 'audio');
@@ -121,6 +118,16 @@
     _webrtcClientIntegrationDOM.appendChild(colsWrapper);
   }

+  function _enableButtons() {
+    voiceCallButton.disabled = false;
+    videoCallButton.disabled = false;
+  }
+
+  function _disableButtons() {
+    voiceCallButton.disabled = true;
+    videoCallButton.disabled = true;
+  }
+
   function _init() {
     // Cache the parent element
     _detailListDOM = document.getElementById('details-list');
@@ -132,24 +139,27 @@
     // Get the section which is going to be shown after, we will use it
     // as a reference
     var reference;
-    // Is there any phone element?
-    var phoneNumbers = _detailListDOM.querySelectorAll('[data-phone]');
-    var phonesLength = phoneNumbers && phoneNumbers.length;
-    if (phonesLength) {
-      reference = phoneNumbers[phonesLength - 1].nextSibling;
-    }
-    else {
-      var emails = _detailListDOM.querySelectorAll('[data-mail]');
-      var emailsLength = emails && emails.length;
-      if (emailsLength) {
-        reference = emails[emailsLength - 1];
-      }
+    // Is there any email element?
+    var emails = _detailListDOM.querySelectorAll('[data-mail]');
+    var emailsLength = emails && emails.length;
+    if (emailsLength > 0) {
+      reference = emails[emailsLength - 1];
+    } else {
+      // Is there any phone number element?
+      var phoneNumbers = _detailListDOM.querySelectorAll('[data-phone]');
+      reference = phoneNumbers[phoneNumbers.length - 1];
     }

-    _detailListDOM.insertBefore(
-      _webrtcClientIntegrationDOM,
-      reference
-    );
+    // Append into the right position
+    if (reference) {
+      _detailListDOM.insertBefore(
+        _webrtcClientIntegrationDOM,
+        reference.nextSibling
+      );
+    } else {
+      reference = _detailListDOM.children[0];
+      _detailListDOM.insertBefore(_webrtcClientIntegrationDOM, reference);
+    }
   }

   function _remove() {
@@ -182,31 +192,10 @@
     document.removeEventListener('visibilitychange', _onVisibilityChange);
   }

-  function _webRtcClientAvailable(contact) {
-    var mailPresent = false;
-    var telPresent = false;
-
-    if (Array.isArray(contact.email)) {
-      if (contact.email.length > 0 && contact.email[0] &&
-          contact.email[0].value && contact.email[0].value.trim()) {
-        mailPresent = true;
-      }
-    }
-
-    if (Array.isArray(contact.tel)) {
-      if (contact.tel.length > 0 && contact.tel[0] &&
-          contact.tel[0].value && contact.tel[0].value.trim()) {
-        telPresent = true;
-      }
-    }
-
-    return telPresent || mailPresent;
-  }
-
   function _onWebrtcClientInstalled() {
     // If we are not in the detail of a contact, we
     // dont need to render any button
-    if (!_webRtcClientAvailable(_cachedContact) || !_isInDetail) {
+    if (!_isInDetail) {
       return;
     }

@@ -214,6 +203,16 @@
     if (!document.getElementById('webrtc-client-actions')) {
       _render();
     }
+
+    // Check if we need to enable or disable the button
+    var phones = _cachedContact && _cachedContact.tel || [];
+    var emails = _cachedContact && _cachedContact.email || [];
+
+    if (phones.length === 0 && emails.length === 0) {
+      _disableButtons();
+    } else {
+      _enableButtons();
+    }
   }

   function _onWebrtcClientUninstalled() {
@@ -235,7 +234,7 @@
         _onWebrtcClientInstalled,
         _onWebrtcClientUninstalled
       );
-
+
     },
     stop: function stop() {
       // Clean the previous params
diff --git a/apps/communications/contacts/style/app.css b/apps/communications/contacts/style/app.css
index 7ed05dd..3623df3 100644
--- a/apps/communications/contacts/style/app.css
+++ b/apps/communications/contacts/style/app.css
@@ -102,11 +102,11 @@ a abbr {
 }

 /* Icons */
-span.icon {
+span[role="button"] {
   font-style: normal;
 }

-span.icon + b, span.icon + span {
+span[role="button"] + b, span[role="button"] + span {
   vertical-align: middle;
 }

@@ -201,17 +201,19 @@ menu, nav, section, video, audio, canvas, progress, meter, time {

 /* Rewritting from buttons.css */
 section[role="region"] > header:first-child button,
-section[role="region"] > header:first-child a {
+section[role="region"] > header:first-child a[role="button"] {
   white-space: normal;
 }

 /* Buttons inside list redefinition */
-li button span {
+li button span,
+li a[role="button"] span {
   font-size: 0;
 }

 /* Extending components */
-li button.activity > b em {
+li button.activity > b em ,
+li a[role="button"].activity > b em{
   color: #727272;
   font-style: normal;
 }
@@ -228,7 +230,8 @@ li button.activity > b em {
   margin-left: 1.5rem;
 }

-li button.activity > b {
+li button.activity > b ,
+li a[role="button"].activity > b{
   font-weight: normal;
   overflow: hidden;
   text-overflow: ellipsis;
@@ -237,7 +240,7 @@ li button.activity > b {
   position: absolute;
   left: 1.5rem;
   right: 3rem;
-  top: 1rem;
+  top: 0;
   bottom: 0;
 }

@@ -334,10 +337,6 @@ li button.activity > b {
   margin-right: 0;
 }

-.item-media.pull-right button {
-  padding-right: 3rem;
-}
-
 .item-body {
   display: table;
 }
@@ -371,21 +370,51 @@ li button.activity > b {

 /* ICONS */

-span.icon {
+span[role="button"] {
   font-size: 0;
   background: transparent no-repeat center center;
   background-size: 100% auto;
   display: inline-block;
 }

+span[role="button"].icon-finish {
+  background-color: rgba(0, 0, 0, 0.5);
+}
+
+/* selection list */
+span[role="button"].icon-selected {
+  background-color: rgba(0, 0, 0, 0.5);
+}
+
+/* tabs */
+span[role="button"].icon-profile {
+  background-color: rgba(255, 255, 255, 0.5)
+}
+
+/* navigation */
+span[role="button"].icon-log {
+  background-color: rgba(255, 255, 255, 0.5);
+}
+
+span[role="button"].icon-contacts {
+  background-color: rgba(255, 255, 255, 0.5);
+}
+
+span[role="button"].icon-messages {
+  background-color: rgba(255, 255, 255, 0.5);
+}
+
+span[role="button"].icon-grid {
+  background-color: rgba(255, 255, 255, 0.5);
+}
+
 /* GENERIC BUTTONS */
-span.icon.icon-delete {
+span[role="button"].icon-delete {
   background-image: url(/contacts/style/gphx/bitmap/default/forms/delete.png);
   background-size: 3rem;
-  width: 3rem;
 }

-span.icon.icon-addimage {
+span[role="button"].icon-addimage {
   background-image: url(/contacts/style/gphx/bitmap/default/forms/add.png);
   background-size: 3rem;
   width: 3rem;
@@ -407,7 +436,7 @@ li button.icon-email:before {
   background-image: url(/contacts/style/gphx/bitmap/default/buttons/mail.png);
 }

-span.icon.icon-address {
+span[role="button"].icon-address {
   background-image: url(/contacts/style/gphx/bitmap/default/buttons/location.png);
 }

@@ -439,12 +468,46 @@ li button.icon-find-and-merge:before {
   background-size: 3rem;
 }

+
+/* arrows */
+span[role="button"].icon-arrow {
+  border: solid 0.4rem transparent;
+  width: 0;
+  height: 0;
+}
+
+span[role="button"].icon-arrow.icon-arrow-top {
+  margin-top: -0.4rem;
+  border-bottom-color: #333;
+}
+
+span[role="button"].icon-arrow.icon-arrow-bottom {
+  margin-top: 0.4rem;
+  border-top-color: #333;
+}
+
+span[role="button"].icon-arrow.icon-arrow-left {
+  margin-right: 0.4rem;
+  border-right-color: #333;
+}
+
+span[role="button"].icon-arrow.icon-arrow-right {
+  margin-left: 0.4rem;
+  border-left-color: #333;
+}
+
 /* Block type (long text) */
 .action-block {
   height: auto;
   min-height: 4rem;
   word-wrap: normal;
 }
+.action-block span[role="button"] {
+  float: left;
+  display: inline;
+  background-size: 3rem;
+  display: none; /* Hide unused button */
+}
 .action-block b {
   display: block;
   overflow: hidden;
@@ -490,10 +553,9 @@ li button.icon-find-and-merge:before {
   top: 0;
   width: auto;
   height: auto;
-  padding-top: 0;
 }

-.fillflow-row-action span.icon {
+.fillflow-row-action span[role="button"] {
   border: none;
   margin: 0;
   height: 3.8rem;
@@ -557,13 +619,6 @@ li button.icon-find-and-merge:before {
   display: block;
 }

-.fillflow-media #photo-button {
-  width: 100%;
-  height: 100%;
-  background: none;
-  margin: inherit;
-  line-height: inherit;
-}

 .fillflow-media img {
   width: 100%;
@@ -628,7 +683,7 @@ form[role="dialog"].no-overlay button {

 .has-preferred-sim .icon-call:before {
   width: 9.5rem;
-  background-size: 3rem;
+  background-size: 3rem;
 }

 .js-sim-indication {
diff --git a/apps/communications/contacts/style/contacts.css b/apps/communications/contacts/style/contacts.css
index 081b759..1d9b8e4 100755
--- a/apps/communications/contacts/style/contacts.css
+++ b/apps/communications/contacts/style/contacts.css
@@ -461,7 +461,7 @@ section[role="region"] > header .icon.icon-settings {

 /* Extending BB buttons Icons at left side*/
 #view-settings [data-type="list"] li button.icon {
-  padding: 1.2rem 1.3rem 1.2rem 4rem;
+  padding: 0 1rem 0 4rem;
 }

 #view-settings [data-type="list"] li button.icon:before {
@@ -474,7 +474,7 @@ section[role="region"] > header .icon.icon-settings {
 }

 #import-settings [data-type="list"] li button.icon {
-  padding: 1rem 1.3rem 1rem 4rem;
+  padding: 0 1rem 0 4rem;
 }

 #import-settings [data-type="list"] li button.icon:before {
diff --git a/apps/communications/contacts/style/gphx/bitmap/default/block-list/fav.png b/apps/communications/contacts/style/gphx/bitmap/default/block-list/fav.png
new file mode 100644
index 0000000..36a3183
Binary files /dev/null and b/apps/communications/contacts/style/gphx/bitmap/default/block-list/fav.png differ
diff --git a/apps/communications/contacts/style/gphx/bitmap/default/block-list/fav@1.5x.png b/apps/communications/contacts/style/gphx/bitmap/default/block-list/fav@1.5x.png
new file mode 100644
index 0000000..1b5afe8
Binary files /dev/null and b/apps/communications/contacts/style/gphx/bitmap/default/block-list/fav@1.5x.png differ
diff --git a/apps/communications/contacts/style/gphx/bitmap/default/block-list/fav@2x.png b/apps/communications/contacts/style/gphx/bitmap/default/block-list/fav@2x.png
new file mode 100644
index 0000000..929da81
Binary files /dev/null and b/apps/communications/contacts/style/gphx/bitmap/default/block-list/fav@2x.png differ
diff --git a/apps/communications/contacts/style/icons/contacts_126.png b/apps/communications/contacts/style/icons/contacts_126.png
index 472cb46..d46ab03 100644
Binary files a/apps/communications/contacts/style/icons/contacts_126.png and b/apps/communications/contacts/style/icons/contacts_126.png differ
diff --git a/apps/communications/contacts/style/icons/contacts_142.png b/apps/communications/contacts/style/icons/contacts_142.png
index dfd322c..2f05d86 100644
Binary files a/apps/communications/contacts/style/icons/contacts_142.png and b/apps/communications/contacts/style/icons/contacts_142.png differ
diff --git a/apps/communications/contacts/style/icons/contacts_189.png b/apps/communications/contacts/style/icons/contacts_189.png
index c7454d6..8d4ecae 100644
Binary files a/apps/communications/contacts/style/icons/contacts_189.png and b/apps/communications/contacts/style/icons/contacts_189.png differ
diff --git a/apps/communications/contacts/style/icons/contacts_284.png b/apps/communications/contacts/style/icons/contacts_284.png
index 4aba952..739954b 100644
Binary files a/apps/communications/contacts/style/icons/contacts_284.png and b/apps/communications/contacts/style/icons/contacts_284.png differ
diff --git a/apps/communications/contacts/style/icons/contacts_84.png b/apps/communications/contacts/style/icons/contacts_84.png
index 5136ee9..660587e 100644
Binary files a/apps/communications/contacts/style/icons/contacts_84.png and b/apps/communications/contacts/style/icons/contacts_84.png differ
diff --git a/apps/communications/contacts/style/images/fb-check.png b/apps/communications/contacts/style/images/fb-check.png
new file mode 100644
index 0000000..4156cc4
Binary files /dev/null and b/apps/communications/contacts/style/images/fb-check.png differ
diff --git a/apps/communications/contacts/style/images/fb-check@1.5x.png b/apps/communications/contacts/style/images/fb-check@1.5x.png
new file mode 100644
index 0000000..7adc58d
Binary files /dev/null and b/apps/communications/contacts/style/images/fb-check@1.5x.png differ
diff --git a/apps/communications/contacts/style/images/fb-check@2.25x.png b/apps/communications/contacts/style/images/fb-check@2.25x.png
new file mode 100644
index 0000000..94fb68a
Binary files /dev/null and b/apps/communications/contacts/style/images/fb-check@2.25x.png differ
diff --git a/apps/communications/contacts/style/images/fb-check@2x.png b/apps/communications/contacts/style/images/fb-check@2x.png
new file mode 100644
index 0000000..fc50749
Binary files /dev/null and b/apps/communications/contacts/style/images/fb-check@2x.png differ
diff --git a/apps/communications/contacts/style/images/hotmail_icon.png b/apps/communications/contacts/style/images/hotmail_icon.png
new file mode 100644
index 0000000..5c5951f
Binary files /dev/null and b/apps/communications/contacts/style/images/hotmail_icon.png differ
diff --git a/apps/communications/contacts/style/images/hotmail_icon@1.5x.png b/apps/communications/contacts/style/images/hotmail_icon@1.5x.png
new file mode 100644
index 0000000..65570e0
Binary files /dev/null and b/apps/communications/contacts/style/images/hotmail_icon@1.5x.png differ
diff --git a/apps/communications/contacts/style/images/hotmail_icon@2.25x.png b/apps/communications/contacts/style/images/hotmail_icon@2.25x.png
new file mode 100644
index 0000000..5bcc6a5
Binary files /dev/null and b/apps/communications/contacts/style/images/hotmail_icon@2.25x.png differ
diff --git a/apps/communications/contacts/style/images/hotmail_icon@2x.png b/apps/communications/contacts/style/images/hotmail_icon@2x.png
new file mode 100644
index 0000000..43bbc4a
Binary files /dev/null and b/apps/communications/contacts/style/images/hotmail_icon@2x.png differ
diff --git a/apps/communications/contacts/style/images/import_contact@1.5.png b/apps/communications/contacts/style/images/import_contact@1.5.png
new file mode 100644
index 0000000..fa612e1
Binary files /dev/null and b/apps/communications/contacts/style/images/import_contact@1.5.png differ
diff --git a/apps/communications/contacts/style/images/import_contact@1.5x.png b/apps/communications/contacts/style/images/import_contact@1.5x.png
deleted file mode 100644
index fa612e1..0000000
Binary files a/apps/communications/contacts/style/images/import_contact@1.5x.png and /dev/null differ
diff --git a/apps/communications/contacts/test/marionette/manifest.ini b/apps/communications/contacts/test/marionette/manifest.ini
deleted file mode 100644
index 47ec874..0000000
--- a/apps/communications/contacts/test/marionette/manifest.ini
+++ /dev/null
@@ -1,6 +0,0 @@
-[form_test.js]
-[search_test.js]
-[activities_test.js]
-[details_test.js]
-[contacts_shortcuts_test.js]
-[delete_contacts_test.js]
diff --git a/apps/communications/contacts/test/unit/contacts_activities_test.js b/apps/communications/contacts/test/unit/contacts_activities_test.js
index 7f61de8..4a3a463 100755
--- a/apps/communications/contacts/test/unit/contacts_activities_test.js
+++ b/apps/communications/contacts/test/unit/contacts_activities_test.js
@@ -201,7 +201,7 @@ suite('Test Activities', function() {
       assert.equal(ConfirmDialog.text, window._('no_contact_phones'));
     });

-    test('webcontacts/tel, 1 result', function() {
+     test('webcontacts/tel, 1 result', function() {
       activity.source.data.type = 'webcontacts/tel';
       ActivityHandler._currentActivity = activity;
       // We want to test only with one phone, so erase the last one
@@ -224,7 +224,7 @@ suite('Test Activities', function() {
       }
     });

-    test('webcontacts/tel, many results', function() {
+   test('webcontacts/tel, many results', function() {
       activity.source.data.type = 'webcontacts/tel';
       ActivityHandler._currentActivity = activity;
       // we need to create a object from data to compare prototypes
@@ -313,83 +313,6 @@ suite('Test Activities', function() {
       // Mock returns always the first option from the select
       assert.equal(result.email, contact.email[0].value);
     });
-
-    test('webcontacts/select, 0 results', function() {
-      activity.source.data.type = 'webcontacts/select';
-      activity.source.data.contactProperties = ['tel', 'email'];
-      ActivityHandler._currentActivity = activity;
-      contact.tel = [];
-      contact.email = [];
-      ActivityHandler.dataPickHandler(contact);
-      assert.isTrue(ConfirmDialog.showing);
-      assert.isNull(ConfirmDialog.title);
-      assert.equal(ConfirmDialog.text, window._('no_contact_data'));
-    });
-
-    test('webcontacts/select, 1 results(tel)', function() {
-      activity.source.data.type = 'webcontacts/select';
-      activity.source.data.contactProperties = ['tel', 'email'];
-      ActivityHandler._currentActivity = activity;
-      contact.tel.pop();
-      contact.email = [];
-      var newContact = Object.create(contact);
-      sinon.stub(window.utils.misc, 'toMozContact',
-        function() {return newContact;});
-      ActivityHandler.dataPickHandler(newContact);
-      contact = window.utils.misc.toMozContact(contact);
-      assert.isFalse(ConfirmDialog.showing);
-      assert.equal(JSON.stringify(result.select),
-                   JSON.stringify(contact.tel));
-      assert.equal(JSON.stringify(result.contact),
-                   JSON.stringify(contact));
-      window.utils.misc.toMozContact.restore();
-    });
-
-    test('webcontacts/select, 1 results(email)', function() {
-      activity.source.data.type = 'webcontacts/select';
-      activity.source.data.contactProperties = ['tel', 'email'];
-      ActivityHandler._currentActivity = activity;
-      contact.tel = [];
-      contact.email.pop();
-      var newContact = Object.create(contact);
-      sinon.stub(window.utils.misc, 'toMozContact',
-        function() {return newContact;});
-      ActivityHandler.dataPickHandler(newContact);
-      contact = window.utils.misc.toMozContact(contact);
-      assert.isFalse(ConfirmDialog.showing);
-      assert.equal(JSON.stringify(result.select),
-                   JSON.stringify(contact.email));
-      assert.equal(JSON.stringify(result.contact),
-                   JSON.stringify(contact));
-      window.utils.misc.toMozContact.restore();
-    });
-
-    test('webcontacts/select, many results(tel)', function() {
-      activity.source.data.type = 'webcontacts/select';
-      activity.source.data.contactProperties = ['tel', 'email'];
-      ActivityHandler._currentActivity = activity;
-      contact.email = [];
-      var newContact = Object.create(contact);
-      sinon.stub(window.utils.misc, 'toMozContact',
-        function() {return newContact;});
-      ActivityHandler.dataPickHandler(newContact);
-      assert.isFalse(ConfirmDialog.showing);
-      assert.equal(newContact.tel[0].value, result.select[0].value);
-      window.utils.misc.toMozContact.restore();
-    });
-
-    test('webcontacts/select, many results(email)', function() {
-      activity.source.data.type = 'webcontacts/select';
-      activity.source.data.contactProperties = ['tel', 'email'];
-      ActivityHandler._currentActivity = activity;
-      contact.tel = [];
-      var newContact = Object.create(contact);
-      sinon.stub(window.utils.misc, 'toMozContact',
-        function() {return newContact;});
-      ActivityHandler.dataPickHandler(newContact);
-      assert.isFalse(ConfirmDialog.showing);
-      assert.equal(newContact.email[0].value, result.select[0].value);
-    });
   });

 });
diff --git a/apps/communications/contacts/test/unit/contacts_test.js b/apps/communications/contacts/test/unit/contacts_test.js
index e43e19d..0dff6e1 100644
--- a/apps/communications/contacts/test/unit/contacts_test.js
+++ b/apps/communications/contacts/test/unit/contacts_test.js
@@ -22,11 +22,13 @@ requireApp('communications/contacts/test/unit/mock_contacts_settings.js');

 require('/shared/test/unit/mocks/mock_lazy_loader.js');
 require('/shared/test/unit/mocks/mock_contact_all_fields.js');
+require('/shared/test/unit/mocks/mock_performance_testing_helper.js');

 var mocksForStatusBar = new MocksHelper([
   'DatastoreMigration',
   'LazyLoader',
   'SmsIntegration',
+  'PerformanceTestingHelper',
   'ActivityHandler'
 ]).init();

@@ -82,7 +84,6 @@ suite('Contacts', function() {
     realNavigationStack = window.navigationStack;
     window.navigationStack = MockNavigationStack;
     sinon.spy(window, 'navigationStack');
-    requireApp('communications/contacts/js/utilities/performance_helper.js');
     requireApp('communications/contacts/js/contacts.js', done);
   });

@@ -96,7 +97,6 @@ suite('Contacts', function() {
   });

   setup(function() {
-    this.sinon.spy(window.utils.PerformanceHelper, 'chromeInteractive');
     loadBodyHTML('/contacts/index.html');

     Contacts.init();
@@ -114,7 +114,6 @@ suite('Contacts', function() {

   test('mozL10n initialized', function() {
     sinon.assert.calledOnce(navigator.mozL10n.once);
-    sinon.assert.calledOnce(window.utils.PerformanceHelper.chromeInteractive);
   });

   suite('on contacts change', function() {
diff --git a/apps/communications/contacts/test/unit/views/list_test.js b/apps/communications/contacts/test/unit/views/list_test.js
index 6b8d5eb..6888b4c 100755
--- a/apps/communications/contacts/test/unit/views/list_test.js
+++ b/apps/communications/contacts/test/unit/views/list_test.js
@@ -11,6 +11,7 @@
 /* global Mockfb */
 /* global MockImageLoader */
 /* global MockMozContacts */
+/* global MockPerformanceTestingHelper */
 /* global MockURL */
 /* global MocksHelper */
 /* global MockNavigationStack */
@@ -36,7 +37,7 @@ requireApp('communications/contacts/test/unit/mock_extfb.js');
 requireApp('communications/contacts/test/unit/mock_activities.js');
 requireApp('communications/contacts/test/unit/mock_utils.js');
 requireApp('communications/contacts/test/unit/mock_mozContacts.js');
-requireApp('communications/contacts/js/utilities/performance_helper.js');
+require('/shared/test/unit/mocks/mock_performance_testing_helper.js');

 require('/shared/test/unit/mocks/mock_contact_photo_helper.js');

@@ -66,6 +67,10 @@ if (!window.ImageLoader) {
   window.ImageLoader = null;
 }

+if (!window.PerformanceTestingHelper) {
+  window.PerformanceTestingHelper = null;
+}
+
 if (!window.asyncStorage) {
   window.asyncStorage = null;
 }
@@ -91,6 +96,7 @@ suite('Render contacts list', function() {
       realContacts,
       realFb,
       realImageLoader,
+      realPerformanceTestingHelper,
       realAsyncStorage,
       mockContacts,
       realURL,
@@ -389,6 +395,8 @@ suite('Render contacts list', function() {
     realImageLoader = window.ImageLoader;
     window.ImageLoader = MockImageLoader;
     realURL = window.URL || {};
+    realPerformanceTestingHelper = window.PerformanceTestingHelper;
+    window.PerformanceTestingHelper = MockPerformanceTestingHelper;
     window.URL = MockURL;
     window.utils = window.utils || {};
     window.utils.alphaScroll = MockAlphaScroll;
@@ -415,6 +423,7 @@ suite('Render contacts list', function() {
     window.fb = realFb;
     window.mozL10n = realL10n;
     window.ImageLoader = realImageLoader;
+    window.PerformanceTestingHelper = realPerformanceTestingHelper;
     window.asyncStorage = realAsyncStorage;
     navigator.mozContacts = realMozContacts;
     mocksForListView.suiteTeardown();
@@ -464,11 +473,6 @@ suite('Render contacts list', function() {
       window.fb.isEnabled = false;
     });

-    setup(function() {
-      this.sinon.spy(window.utils.PerformanceHelper, 'contentInteractive');
-      this.sinon.spy(window.utils.PerformanceHelper, 'loadEnd');
-    });
-
     test('first time', function() {
       mockContacts = new MockContactsList();
       subject.load(mockContacts);
@@ -483,9 +487,6 @@ suite('Render contacts list', function() {
       assertNoGroup(groupD, containerD);
       assertNoGroup(groupGreek, containerGreek);
       assertNoGroup(groupCyrillic, containerCyrillic);
-      sinon.assert.calledOnce(
-        window.utils.PerformanceHelper.contentInteractive);
-      sinon.assert.calledOnce(window.utils.PerformanceHelper.loadEnd);
     });

     test('adding one at the beginning', function() {
diff --git a/apps/communications/contacts/test/unit/webrtc-client/webrtc_client_test.js b/apps/communications/contacts/test/unit/webrtc-client/webrtc_client_test.js
index 3ec788a..4e4c70d 100644
--- a/apps/communications/contacts/test/unit/webrtc-client/webrtc_client_test.js
+++ b/apps/communications/contacts/test/unit/webrtc-client/webrtc_client_test.js
@@ -14,10 +14,8 @@ suite('WebRTC Client integration', function() {
   // Mock of a contact with the info we need to render. In this case
   // just a phone number
   var mockContact = {
-    tel: [{
-      value: '612123123',
-      type: ['work']
-    }]
+    tel: ['612123123'],
+    email: []
   };
   // Keep in memory the DOM element we need for the tests
   var detailsList;
@@ -35,7 +33,7 @@ suite('WebRTC Client integration', function() {
     navigator.mozL10n = MockMozL10n;

     mocksHelperWebrtcClient.suiteSetup();
-
+
     // Create the basic structure for this test
     detailsList = document.createElement('ul');
     detailsList.id = 'details-list';
@@ -55,7 +53,7 @@ suite('WebRTC Client integration', function() {

   setup(function() {
     mocksHelperWebrtcClient.setup();
-
+
     // Rebuild the structure
     detailsList.innerHTML =
       '<li data-phone>' +
@@ -65,44 +63,32 @@ suite('WebRTC Client integration', function() {
   teardown(function() {
     mocksHelperWebrtcClient.teardown();

-    // Stop WebrtcClient as when tapping on 'back' in Contacts detail
+    // Stop WebrtcClient as when tapping on 'back' in Contacts detail
     WebrtcClient.stop();

     // Clean the structure
     detailsList.innerHTML = '';
   });

-  function assertWebRtcSectionPresent() {
-     // Is the section there?
+  test('If WebrtcClient & no email/phone, buttons are disabled ', function() {
+    // Execute the onsuccess
+    MockMozActivity.setResult([{},{}]);
+    WebrtcClient.start({}, true);
+    // Execute promise on demand
+    MockPromise.then(MockPromise.resolve, MockPromise.reject);
+    // Execute activity on demand
+    MockMozActivity.currentActivity.onsuccess();
+    // Is the section there?
     var webrtcClientSection = document.getElementById('webrtc-client-actions');
-    assert.isTrue(webrtcClientSection !== null);
-
+    assert.isTrue(!!webrtcClientSection);
+    // Are the buttons disabled?
     var buttons = webrtcClientSection.querySelectorAll('button');
     for (var i = 0, l = buttons.length; i < l; i++) {
-      assert.isFalse(buttons[i].disabled);
+      assert.isTrue(buttons[i].disabled);
     }
-  }
-
-  function assertWebRtcSectionAbsent() {
-    // Is the section there?
-    var webrtcClientSection = document.getElementById('webrtc-client-actions');
-    assert.isTrue(webrtcClientSection === null);
-  }
-
-  test('If WebrtcClient & no email/phone, buttons are not present ',
-    function() {
-      // Execute the onsuccess
-      MockMozActivity.setResult([{},{}]);
-      WebrtcClient.start({}, true);
-      // Execute promise on demand
-      MockPromise.then(MockPromise.resolve, MockPromise.reject);
-      // Execute activity on demand
-      MockMozActivity.currentActivity.onsuccess();
-
-      assertWebRtcSectionAbsent();
   });

-  test('If WebrtcClient & only phone, buttons are present ', function() {
+  test('If WebrtcClient & email or phone, buttons are enabled ', function() {
     // Execute the onsuccess
     MockMozActivity.setResult([{},{}]);
     WebrtcClient.start(mockContact, true);
@@ -110,69 +96,17 @@ suite('WebRTC Client integration', function() {
     MockPromise.then(MockPromise.resolve, MockPromise.reject);
     // Execute activity on demand
     MockMozActivity.currentActivity.onsuccess();
-
-    assertWebRtcSectionPresent();
-  });
-
-  test('If WebrtcClient & email and phone, buttons are correctly positioned',
-    function() {
-      var mockContact2 = {
-        tel: [{
-          value: '612123123',
-          type: ['work']
-        }],
-        email: [{
-          value: 'jj@jj.com',
-          type: ['home']
-        }]
-      };
-       // Rebuild the structure
-      detailsList.innerHTML = '<li data-phone></li>' + '<li data-mail></li>';
-      // Execute the onsuccess
-      MockMozActivity.setResult([{},{}]);
-      WebrtcClient.start(mockContact2, true);
-      // Execute promise on demand
-      MockPromise.then(MockPromise.resolve, MockPromise.reject);
-      // Execute activity on demand
-      MockMozActivity.currentActivity.onsuccess();
-
-      assertWebRtcSectionPresent();
-
-      var webRtcSection =  document.getElementById('webrtc-client-actions');
-      var previousEle = webRtcSection.previousElementSibling;
-      assert.isTrue(previousEle.dataset.phone !== null);
-
-      var nextEle = webRtcSection.nextElementSibling;
-      assert.isTrue(nextEle.dataset.mail !== null);
-  });
-
-  test('If WebrtcClient only email defined, buttons are correctly positioned',
-    function() {
-      var mockContact2 = {
-        email: [{
-          value: 'jj@jj.com',
-          type: ['home']
-        }]
-      };
-       // Rebuild the structure
-      detailsList.innerHTML = '<li data-mail></li>';
-
-      // Execute the onsuccess
-      MockMozActivity.setResult([{},{}]);
-      WebrtcClient.start(mockContact2, true);
-      // Execute promise on demand
-      MockPromise.then(MockPromise.resolve, MockPromise.reject);
-      // Execute activity on demand
-      MockMozActivity.currentActivity.onsuccess();
-
-      assertWebRtcSectionPresent();
-
-      var webRtcSection =  document.getElementById('webrtc-client-actions');
-      var nextEle = webRtcSection.nextElementSibling;
-      assert.isTrue(nextEle.dataset.mail !== null);
+    // Is the section there?
+    var webrtcClientSection = document.getElementById('webrtc-client-actions');
+    assert.isTrue(!!webrtcClientSection);
+    // Are the buttons disabled?
+    var buttons = webrtcClientSection.querySelectorAll('button');
+    for (var i = 0, l = buttons.length; i < l; i++) {
+      assert.isFalse(buttons[i].disabled);
+    }
   });

-  test('If no WebrtcClient, buttons are not present ', function() {
+  test('If no WebrtcClient, buttons are not appended ', function() {
     // Execute the onsuccess
     MockMozActivity.setResult([]);
     WebrtcClient.start(mockContact, true);
@@ -180,8 +114,9 @@ suite('WebRTC Client integration', function() {
     MockPromise.then(MockPromise.resolve, MockPromise.reject);
     // Execute activity on demand
     MockMozActivity.currentActivity.onsuccess();
-
-    assertWebRtcSectionAbsent();
+    // Is the section there?
+    var webrtcClientSection = document.getElementById('webrtc-client-actions');
+    assert.isTrue(!webrtcClientSection);
   });

   test('If no WebrtcClient, and installed after, added Buttons', function() {
@@ -205,8 +140,9 @@ suite('WebRTC Client integration', function() {
     MockPromise.then(MockPromise.resolve, MockPromise.reject);
     // Execute activity on demand
     MockMozActivity.currentActivity.onsuccess();
-
-    assertWebRtcSectionPresent();
+    // Is the button appended?
+    webrtcClientSection = document.getElementById('webrtc-client-actions');
+    assert.isTrue(!!document.getElementById('webrtc-client-actions'));
   });

   test('If WebrtcClient, and uninstalled after, removed Buttons', function() {
@@ -230,7 +166,8 @@ suite('WebRTC Client integration', function() {
     MockPromise.then(MockPromise.resolve, MockPromise.reject);
     // Execute activity on demand
     MockMozActivity.currentActivity.onsuccess();
-
-    assertWebRtcSectionAbsent();
+    // Is the button appended?
+    webrtcClientSection = document.getElementById('webrtc-client-actions');
+    assert.isTrue(!document.getElementById('webrtc-client-actions'));
   });
 });
diff --git a/apps/communications/dialer/index.html b/apps/communications/dialer/index.html
index 834df6a..a7d003c 100644
--- a/apps/communications/dialer/index.html
+++ b/apps/communications/dialer/index.html
@@ -149,7 +149,7 @@
             <button id="keypad-delete" class="reset-button" data-value="delete" data-l10n-id="keypadDelete">
             </button>
           </div>
-          <section id="suggestion-bar" class="suggestion-bar" aria-hidden="true" hidden>
+          <section id="suggestion-bar" class="suggestion-bar" hidden>
             <div role="button" is="suggestion-item" class="js-suggestion-item suggestion-item"></div>
             <div role="button" id="suggestion-count" class="suggestion-count more"></div>
           </section>
diff --git a/apps/communications/dialer/js/call_log.js b/apps/communications/dialer/js/call_log.js
index 2da9359..54be369 100644
--- a/apps/communications/dialer/js/call_log.js
+++ b/apps/communications/dialer/js/call_log.js
@@ -862,26 +862,37 @@ var CallLog = {

   // We need _updateContact and _removeContact aux functions to keep the
   // correct references to the log DOM element.
-  _updateContact: function _updateContact(log, phoneNumber, contactId,
-                                          updateDb) {
+  _updateContact: function _updateContact(log, phoneNumber, updateDb) {
     var self = this;
     Contacts.findByNumber(phoneNumber,
                           function(contact, matchingTel) {
       if (!contact || !matchingTel) {
-        self._removeContact(log, contactId, updateDb);
-        return;
-      }
-
-      // Update contact info.
-      if (self._contactCache && updateDb) {
-        CallLogDBManager.updateGroupContactInfo(contact, matchingTel,
-                                                function(result) {
-          if (typeof result === 'number' && result > 0) {
-            self.updateContactInfo(log, contact, matchingTel);
+        // Remove contact info.
+        if (self._contactCache && updateDb) {
+          var group = self._getGroupFromLog(log);
+          if (!group) {
+            return;
           }
-        });
+
+          CallLogDBManager.removeGroupContactInfo(null, group,
+                                                  function(result) {
+            self.updateContactInfo(log);
+          });
+        } else {
+          self.updateContactInfo(log);
+        }
       } else {
-        self.updateContactInfo(log, contact, matchingTel);
+        // Update contact info.
+        if (self._contactCache && updateDb) {
+          CallLogDBManager.updateGroupContactInfo(contact, matchingTel,
+                                                  function(result) {
+            if (typeof result === 'number' && result > 0) {
+              self.updateContactInfo(log, contact, matchingTel);
+            }
+          });
+        } else {
+          self.updateContactInfo(log, contact, matchingTel);
+        }
       }
     });
   },
@@ -947,7 +958,12 @@ var CallLog = {
       var log = logs[i];
       var logInfo = log.dataset;

-      this._updateContact(log, logInfo.phoneNumber, contactId, i == 0);
+      if (!reason ||
+          (phoneNumbers && phoneNumbers.indexOf(logInfo.phoneNumber) > -1)) {
+        this._updateContact(log, logInfo.phoneNumber, i == 0);
+      } else if (logInfo.contactId && (logInfo.contactId === contactId)) {
+        this._removeContact(log, contactId, i == 0);
+      }
     }
   },

diff --git a/apps/communications/dialer/js/dialer.js b/apps/communications/dialer/js/dialer.js
index 6455ebd..8639a98 100644
--- a/apps/communications/dialer/js/dialer.js
+++ b/apps/communications/dialer/js/dialer.js
@@ -291,34 +291,13 @@ var CallHandler = (function callHandler() {
           status: (incoming && data.duration > 0) ? 'connected' : null
         };

-        CallLogDBManager.add(entry, function(logEntry) {
-          CallLog.appendGroup(logEntry);
-          if(!data.secondNumber) {
-            highPriorityWakeLock.unlock();
-            return;
-          }
-          _addSecondCdmaCall(data, isVoicemailNumber, highPriorityWakeLock);
+        CallLogDBManager.add(entry, function(logGroup) {
+          highPriorityWakeLock.unlock();
+          CallLog.appendGroup(logGroup);
         });
       });
     });
-  }
-
-  function _addSecondCdmaCall(data, isVoicemailNumber, wakeLock) {
-    var entryCdmaSecond = {
-      date: Date.now() - parseInt(data.duration),
-      type: 'incoming',
-      number: data.secondNumber,
-      serviceId: data.serviceId,
-      emergency: false,
-      voicemail: isVoicemailNumber,
-      status: 'connected'
-    };
-
-    CallLogDBManager.add(entryCdmaSecond, function(logGroupCdmaSecondCall) {
-      CallLog.appendGroup(logGroupCdmaSecondCall);
-      wakeLock.unlock();
-    });
-  }
+   }

   /* === postMessage support === */
   function handleMessage(evt) {
@@ -388,12 +367,7 @@ var CallHandler = (function callHandler() {
   /* === Calls === */
   function call(number, cardIndex) {
     if (MmiManager.isMMI(number, cardIndex)) {
-      if (number === '*#06#') {
-        MmiManager.showImei();
-      } else {
-        MmiManager.send(number, cardIndex);
-      }
-
+      MmiManager.send(number, cardIndex);
       // Clearing the code from the dialer screen gives the user immediate
       // feedback.
       KeypadManager.updatePhoneNumber('', 'begin', true);
diff --git a/apps/communications/dialer/js/mmi.js b/apps/communications/dialer/js/mmi.js
index 8ca910c..00a2f7b 100644
--- a/apps/communications/dialer/js/mmi.js
+++ b/apps/communications/dialer/js/mmi.js
@@ -131,8 +131,6 @@ var MmiManager = {
     }).bind(this);

     var mmiResult = evt.target.result;
-
-    var ci = this.cardIndexForConnection(this._conn);
     var message = {};

     // We always expect an MMIResult object even for USSD requests.
@@ -149,7 +147,7 @@ var MmiManager = {
     message.type = 'mmi-success';

     if (mmiResult.serviceCode) {
-      message.title = this.prependSimNumber(this._(mmiResult.serviceCode), ci);
+      message.title = this._(mmiResult.serviceCode);
     }

     var additionalInformation = mmiResult.additionalInformation;
@@ -164,6 +162,16 @@ var MmiManager = {

         message.result = mmiResult.statusMessage;
         break;
+      case 'scImei':
+        // We always expect the IMEI, so if we got a .onsuccess event
+        // without the IMEI value, we throw an error message.
+        if (mmiResult.statusMessage) {
+          message.result = mmiResult.statusMessage;
+        } else {
+          message.type = 'mmi-error';
+          message.error = this._('GenericFailure');
+        }
+        break;
       case 'scPin':
       case 'scPin2':
       case 'scPuk':
@@ -217,13 +225,12 @@ var MmiManager = {
   notifyError: function mm_notifyError(evt) {
     var mmiError = evt.target.error;

-    var ci = this.cardIndexForConnection(this._conn);
     var message = {
       type: 'mmi-error'
     };

     if (mmiError.serviceCode) {
-      message.title = this.prependSimNumber(this._(mmiError.serviceCode), ci);
+      message.title = this._(mmiError.serviceCode);
     }

     message.error = mmiError.name ?
@@ -299,8 +306,8 @@ var MmiManager = {
       }

       var conn = navigator.mozMobileConnections[cardIndex || 0];
-      var operator = MobileOperator.userFacingInfo(conn).operator;
-      var title = this.prependSimNumber(operator ? operator : '', cardIndex);
+      var title = this.prependSimNumber(
+        MobileOperator.userFacingInfo(conn).operator, cardIndex);
       var data = {
         type: 'mmi-received-ui',
         message: message,
@@ -338,9 +345,8 @@ var MmiManager = {
                                      cardIndex);
             };
             var conn = navigator.mozMobileConnections[cardIndex || 0];
-            var operator = MobileOperator.userFacingInfo(conn).operator;
-            var title = self.prependSimNumber(operator ? operator : '',
-                                              cardIndex);
+            var title = self.prependSimNumber(
+              MobileOperator.userFacingInfo(conn).operator, cardIndex);
             /* XXX: Bug 1033254 - We put the |ussd-message=1| parameter in the
              * URL string to distinguish this notification from the others.
              * This should be thorought the application possibly by using the
@@ -417,73 +423,5 @@ var MmiManager = {
     }

     return 0;
-  },
-
-  /**
-   * Retrieves the IMEI code for the specified SIM card slot.
-   *
-   * @param {Integer} cardIndex The index of the SIM card slot.
-   * @returns {Promise} A promise that resolves to the IMEI code for the slot
-   *          upon successful completion or rejects upon failure.
-   */
-  _getImeiForCard: function mm_getImeiForCard(cardIndex) {
-    return new Promise(function(resolve, reject) {
-      var request = navigator.mozMobileConnections[cardIndex]
-                             .sendMMI('*#06#');
-      request.onsuccess = function mm_onGetImeiSuccess(event) {
-        var result = event.target.result;
-
-        // We always expect the IMEI, so if we got a .onsuccess event
-        // without the IMEI value, we throw an error message.
-        if ((result === null) || (result.serviceCode !== 'scImei') ||
-            (result.statusMessage === null)) {
-          reject(new Error('Could not retrieve the IMEI code for SIM' +
-                           cardIndex));
-        }
-
-        resolve(result.statusMessage);
-      };
-      request.onerror = function mm_onGetImeiError(error) {
-        reject(error);
-      };
-    });
-  },
-
-  /**
-   * Sends the necessary MMI messages to retrieve IMEI codes for all SIM slots
-   * and displays the resulting codes on the screen.
-   *
-   * @returns {Promise} A promise that is resolved when the operation has been
-   *          completed.
-   */
-  showImei: function mm_showImei() {
-    var self = this;
-
-    return new Promise(function(resolve, reject) {
-      self.init(function() {
-        var promises = [];
-
-        for (var i = 0; i < navigator.mozMobileConnections.length; i++) {
-          promises.push(self._getImeiForCard(i));
-        }
-
-        self.openUI();
-
-        Promise.all(promises).then(function(imeis) {
-          window.postMessage({
-            type: 'mmi-success',
-            title: self._('scImei'),
-            result: imeis.join('\n')
-          }, self.COMMS_APP_ORIGIN);
-          resolve();
-        }, function(reason) {
-          window.postMessage({
-            type: 'mmi-error',
-            error: self._('GenericFailure')
-          }, self.COMMS_APP_ORIGIN);
-          reject(reason);
-        });
-      });
-    });
   }
 };
diff --git a/apps/communications/dialer/js/suggestion_bar.js b/apps/communications/dialer/js/suggestion_bar.js
index 0639bfb..c83b450 100644
--- a/apps/communications/dialer/js/suggestion_bar.js
+++ b/apps/communications/dialer/js/suggestion_bar.js
@@ -9,7 +9,7 @@
 var SuggestionBar = {
   MIN_DIGIT_TO_SHOW: 3,
   SKIP_FOR_COUNTRYCODE: 2,
-  MAX_ITEMS: 50,
+  MAX_ITEMS: 10,

   _phoneNumber: null,
   _contactList: null,
@@ -104,7 +104,6 @@ var SuggestionBar = {
     var self = this;

     self.bar.hidden = false;
-    self.bar.setAttribute('aria-hidden', false);

     // Create matching index table for reference
     self._allMatched = self._getAllMatched(self._contactList);
@@ -113,8 +112,6 @@ var SuggestionBar = {
     var contact = self._contactList[0];
     var firstMatch = self._allMatched.allMatches[0][0];

-    var shouldHideSuggestionBar = false;
-
     // In a multi-SIM setup, tapping on a suggestion in the settings bar doesn't
     // place a call, it just fills in the phone number. In this case, we should
     // hide the suggestions bar to not confuse the user into thinking that
@@ -123,25 +120,16 @@ var SuggestionBar = {
         contact.tel[firstMatch].value == self._phoneNumber &&
         navigator.mozIccManager &&
         navigator.mozIccManager.iccIds.length > 1) {
-      shouldHideSuggestionBar = true;
-    }
-
-    // Don't show any suggestions if we have too many. The user should narrow it
-    // down further by entering more digits.
-    if (totalMatchNum > self.MAX_ITEMS) {
-      shouldHideSuggestionBar = true;
-    }
-
-    if (shouldHideSuggestionBar) {
-      self.clear();
+        self.bar.hidden = true;
       return 0;
     }

-    self.countTag.textContent = totalMatchNum;
+    self.countTag.textContent =
+      (totalMatchNum < self.MAX_ITEMS) ?
+      totalMatchNum : (self.MAX_ITEMS + '+');

-    var hasMoreThanOneMatch = (totalMatchNum > 1);
-    self.countTag.hidden = !hasMoreThanOneMatch;
-    self.countTag.classList.toggle('more', hasMoreThanOneMatch);
+    self.countTag.hidden = (totalMatchNum <= 1);
+    self.countTag.classList.toggle('more', (totalMatchNum > 1));

     var node = self.barSuggestionItem;
     self._fillContacts(contact, firstMatch, node);
@@ -173,7 +161,7 @@ var SuggestionBar = {
     var totalMatchNum = 0;

     if (Array.isArray(contacts) && contacts.length > 0) {
-      self._contactList = contacts;
+      self._contactList = contacts.slice(0, self.MAX_ITEMS);
       totalMatchNum = self._renderBar();
       self._hasMatchingLocalContacts = true;
     }
@@ -188,7 +176,7 @@ var SuggestionBar = {
       self._contactList = null;
     }

-    if (totalMatchNum > self.MAX_ITEMS) {
+    if (totalMatchNum >= self.MAX_ITEMS) {
       self._hasMatchingFbContacts = false;
       return;
     }
@@ -223,13 +211,16 @@ var SuggestionBar = {
     }

     this._hasMatchingFbContacts = true;
-    this._contactList = (this._contactList || []).concat(contacts);
+    this._contactList = this._contactList || [];
+    var toBeAdded = contacts.slice(0, this.MAX_ITEMS -
+                                     this._contactList.length);
+    this._contactList = this._contactList.concat(toBeAdded);
     this._renderBar();
   },

   _updateByContacts: function sb_updateByContacts() {
     // A search is both launched on mozContacts and on Facebook DS
-    Contacts.findListByNumber(this._phoneNumber, this.MAX_ITEMS + 1,
+    Contacts.findListByNumber(this._phoneNumber, this.MAX_ITEMS,
                               this._searchCallback.bind(this));
   },

@@ -276,7 +267,6 @@ var SuggestionBar = {
     this._setItem(node);
     this._contactList = null;
     this.bar.hidden = true;
-    this.bar.setAttribute('aria-hidden', true);

     if (isHardClear) {
       this._phoneNumber = null;
@@ -334,6 +324,7 @@ var SuggestionBar = {
     LazyLoader.load(this.overlay, function() {
       self._initOverlay();
       self._clearOverlay();
+      var maxItems = Math.min(self._contactList.length, self.MAX_ITEMS);
       var title = self.overlay.querySelector('header');
       LazyL10n.get(function localized(_) {
         title.textContent = _('suggestionMatches', {
@@ -341,7 +332,7 @@ var SuggestionBar = {
           matchNumber: self._phoneNumber
         });
       });
-      for (var i = 0; i < self._contactList.length; i++) {
+      for (var i = 0; i < maxItems; i++) {
         for (var j = 0; j < self._allMatched.allMatches[i].length; j++) {
           var node = self._createItem();
           self._fillContacts(self._contactList[i],
diff --git a/apps/communications/dialer/js/telephony_helper.js b/apps/communications/dialer/js/telephony_helper.js
index 09cce1d..b5ee4de 100644
--- a/apps/communications/dialer/js/telephony_helper.js
+++ b/apps/communications/dialer/js/telephony_helper.js
@@ -60,10 +60,7 @@ var TelephonyHelper = (function() {
                     [480, 620, 500], [0, 0, 500],
                     [480, 620, 500], [0, 0, 500],
                     [480, 620, 500], [0, 0, 500]];
-
-    TonePlayer.setChannel('telephony');
     TonePlayer.playSequence(sequence);
-    TonePlayer.setChannel('normal');
   }

   function startDial(cardIndex, conn, sanitizedNumber, oncall, onconnected,
@@ -97,28 +94,10 @@ var TelephonyHelper = (function() {
         onerror();
         return;
       } else if (emergencyOnly) {
-        var _ = navigator.mozL10n.get;
-        loadConfirm(function() {
-          ConfirmDialog.show(
-            _('connecting') + ' ...',
-            '',
-            {
-              title: _('emergencyDialogBtnOk'),
-              callback: function() {
-                ConfirmDialog.hide();
-              }
-            }
-          );
-          document.addEventListener('visibilitychange', function hideDialog() {
-            document.removeEventListener('visibilitychange', hideDialog);
-            ConfirmDialog.hide();
-          });
-        });
-
         // If the mobileConnection has a sim card we let gecko take the
         // default service, otherwise we force the first slot.
         cardIndex = hasCard ? undefined : 0;
-        callPromise = telephony.dialEmergency(sanitizedNumber);
+        callPromise = telephony.dialEmergency(sanitizedNumber, cardIndex);
       } else {
         callPromise = telephony.dial(sanitizedNumber, cardIndex);
       }
diff --git a/apps/communications/dialer/locales/dialer.en-US.properties b/apps/communications/dialer/locales/dialer.en-US.properties
index 7830c51..c6f86e8 100644
--- a/apps/communications/dialer/locales/dialer.en-US.properties
+++ b/apps/communications/dialer/locales/dialer.en-US.properties
@@ -85,7 +85,6 @@ sim-number=SIM{{ n }}
 hangup-a11y-button.ariaLabel=Hang Up
 pickup-a11y-button.ariaLabel=Pick up
 unlock-a11y-button.ariaLabel=Slider
-roaming={{operator}} (Roaming)

 settings=Settings

diff --git a/apps/communications/dialer/style/call_log.css b/apps/communications/dialer/style/call_log.css
index 145212a..71f01c6 100644
--- a/apps/communications/dialer/style/call_log.css
+++ b/apps/communications/dialer/style/call_log.css
@@ -68,12 +68,6 @@ form[role="dialog"][data-type="edit"] > menu {
   -moz-box-sizing: border-box;
 }

-/* For preventig active status with withheld number */
-#call-log-container[data-type="list"] li[data-phone-number=""]:after,
-#call-log-container[data-type="list"] li[data-phone-number=""]:active:after {
-  background-color: transparent;
-}
-
 #call-log-container[data-type="list"] li a p {
   line-height: 1.9rem;
 }
@@ -183,7 +177,7 @@ ol, ul {
   background-image: url('images/CallLog_30x30_missed-first-sim.png');
 }
 [data-type="list"].dual-sim .missed-call.highlighted aside.icon.icon-missed.second-sim {
-  background-image: url('images/CallLog_30x30_missed-second-sim.png');
+  background-image: url('images/CallLog_30x30_missed-first-sim.png');
 }

 .log-item * {
diff --git a/apps/communications/dialer/style/icons/dialer_126.png b/apps/communications/dialer/style/icons/dialer_126.png
index 5e1344e..c766ba2 100644
Binary files a/apps/communications/dialer/style/icons/dialer_126.png and b/apps/communications/dialer/style/icons/dialer_126.png differ
diff --git a/apps/communications/dialer/style/icons/dialer_142.png b/apps/communications/dialer/style/icons/dialer_142.png
index d280d26..04e95b6 100644
Binary files a/apps/communications/dialer/style/icons/dialer_142.png and b/apps/communications/dialer/style/icons/dialer_142.png differ
diff --git a/apps/communications/dialer/style/icons/dialer_189.png b/apps/communications/dialer/style/icons/dialer_189.png
index 34fd927..ef74ef7 100644
Binary files a/apps/communications/dialer/style/icons/dialer_189.png and b/apps/communications/dialer/style/icons/dialer_189.png differ
diff --git a/apps/communications/dialer/style/icons/dialer_284.png b/apps/communications/dialer/style/icons/dialer_284.png
index 448a496..04ee6f4 100644
Binary files a/apps/communications/dialer/style/icons/dialer_284.png and b/apps/communications/dialer/style/icons/dialer_284.png differ
diff --git a/apps/communications/dialer/style/icons/dialer_84.png b/apps/communications/dialer/style/icons/dialer_84.png
index 9b01964..7bdac19 100644
Binary files a/apps/communications/dialer/style/icons/dialer_84.png and b/apps/communications/dialer/style/icons/dialer_84.png differ
diff --git a/apps/communications/dialer/style/images/index.png b/apps/communications/dialer/style/images/index.png
new file mode 100644
index 0000000..31c0f66
Binary files /dev/null and b/apps/communications/dialer/style/images/index.png differ
diff --git a/apps/communications/dialer/style/suggestion.css b/apps/communications/dialer/style/suggestion.css
index d731101..2a2bade 100644
--- a/apps/communications/dialer/style/suggestion.css
+++ b/apps/communications/dialer/style/suggestion.css
@@ -9,11 +9,7 @@
 }

 .suggestion-bar[hidden] {
-  opacity: 0;
-}
-
-.suggestion-bar[hidden] .suggestion-count {
-  pointer-events: none;
+  display: none;
 }

 .suggestion-count {
@@ -47,7 +43,8 @@

 .suggestion-item {
   flex: 1;
-  padding: .2rem 2rem 0;
+  padding-left: 2rem;
+  padding-top: .2rem;
 }

 .suggestion-item .si__tel-type:not(:empty):after {
diff --git a/apps/communications/dialer/test/marionette/keypad_test.js b/apps/communications/dialer/test/marionette/keypad_test.js
index fc5784f..53a2cd3 100644
--- a/apps/communications/dialer/test/marionette/keypad_test.js
+++ b/apps/communications/dialer/test/marionette/keypad_test.js
@@ -56,20 +56,7 @@ marionette('Dialer > Keypad', function() {
     });
   }

-  function loadSuggestionDOM() {
-    typeNumber();
-
-    var del = subject.client.findElement(selectors.del);
-    actions.longPress(del, 1).perform();
-
-    var number = subject.client.findElement(selectors.phoneNumber);
-    client.waitFor(function() {
-      return (number.getAttribute('value') === '');
-    });
-  }
-
   test('Entering a 3 digits number with the keypad', function() {
-    loadSuggestionDOM();
     reflowHelper.startTracking(Dialer.URL + '/manifest.webapp');
     typeNumber();

diff --git a/apps/communications/dialer/test/marionette/manifest.ini b/apps/communications/dialer/test/marionette/manifest.ini
deleted file mode 100644
index 796ea2c..0000000
--- a/apps/communications/dialer/test/marionette/manifest.ini
+++ /dev/null
@@ -1,3 +0,0 @@
-[navigation_test.js]
-[keypad_test.js]
-[call_log_test.js]
diff --git a/apps/communications/dialer/test/unit/call_log_test.js b/apps/communications/dialer/test/unit/call_log_test.js
index 4dda8ae..5e0927a 100644
--- a/apps/communications/dialer/test/unit/call_log_test.js
+++ b/apps/communications/dialer/test/unit/call_log_test.js
@@ -1,7 +1,7 @@
 'use strict';

-/* global CallHandler, CallLog, CallLogDBManager, Contacts, KeypadManager,
-          MockImage, MockMozL10n, MockNavigatorMozIccManager, MockNotification,
+/* global CallHandler, CallLog, CallLogDBManager, KeypadManager, MockImage,
+          MockMozL10n, MockNavigatorMozIccManager, MockNotification,
           MocksHelper, MockSimSettingsHelper, Notification,
           PhoneNumberActionMenu */

@@ -28,12 +28,10 @@ require('/shared/test/unit/mocks/dialer/mock_keypad.js');
 require('/shared/test/unit/mocks/mock_notification.js');
 require('/shared/test/unit/mocks/mock_image.js');
 require('/shared/test/unit/mocks/mock_sim_settings_helper.js');
-require('/shared/test/unit/mocks/dialer/mock_contacts.js');

 var mocksHelperForCallLog = new MocksHelper([
   'asyncStorage',
   'CallLogDBManager',
-  'Contacts',
   'AccessibilityHelper',
   'PhoneNumberActionMenu',
   'PerformanceTestingHelper',
@@ -114,7 +112,6 @@ suite('dialer/call_log', function() {
   });

   teardown(function() {
-    CallLogDBManager.deleteAll(CallLog.render.bind(CallLog));
     noResult.parentNode.removeChild(noResult);
     CallLog._initialized = false;
     MockNavigatorMozIccManager.mTeardown();
@@ -499,6 +496,13 @@ suite('dialer/call_log', function() {
       renderSeveralDaysSpy = this.sinon.spy(CallLog, 'renderSeveralDays');
     });

+    teardown(function(done) {
+      CallLogDBManager.deleteAll(function() {
+        CallLog.render();
+        setTimeout(done);
+      });
+    });
+
     test('Below first render threshold same day', function(done) {
       appendAndCheckGroupDOM(5, 1, function() {
         sinon.assert.callCount(renderSeveralDaysSpy, 1);
@@ -666,10 +670,6 @@ suite('dialer/call_log', function() {
         CallLog.showEditMode();
       });

-      teardown(function() {
-        CallLog.hideEditMode();
-      });
-
       test('should fill the header', function() {
         assert.equal(CallLog.headerEditModeText.textContent, 'edit');
       });
@@ -705,11 +705,13 @@ suite('dialer/call_log', function() {
          '<input type="checkbox" checked>' +
          '<input type="checkbox" checked>' +
          '<input type="checkbox" checked>';
-        CallLog.callLogIconEdit.removeAttribute('disabled');
         CallLog.showEditMode();
         CallLog.hideEditMode();
       });

+      teardown(function() {
+      });
+
       test('should put the body out of recents-edit mode', function() {
         assert.isFalse(document.body.classList.contains('recents-edit'));
       });
@@ -858,86 +860,4 @@ suite('dialer/call_log', function() {
            longPressShouldShowActionMenu);
     });
   });
-
-  suite('oncontactchange', function() {
-    suite('contact removed', function() {
-      var allLogs;
-
-      setup(function() {
-        // Insert two groups with same contact
-        var grp = JSON.parse(JSON.stringify(incomingGroup));
-        grp.id = 1;
-        grp.date = 1;
-        CallLogDBManager.add(grp);
-
-        grp = JSON.parse(JSON.stringify(incomingGroup));
-        grp.id = 2;
-        grp.date = 2;
-        CallLogDBManager.add(grp);
-
-        CallLog.render();
-
-        this.sinon.stub(Contacts, 'findByNumber');
-
-        var contactEvent = {
-          reason: 'remove',
-          contactID: incomingGroup.contact.id
-        };
-        navigator.mozContacts.oncontactchange(contactEvent);
-
-        allLogs = document.body.getElementsByClassName('log-item');
-      });
-
-      suite('no new matching contact', function() {
-        setup(function() {
-          Contacts.findByNumber.yield();
-        });
-
-        test('all groups have no contact-id', function() {
-          for (var log of allLogs) {
-            assert.isUndefined(log.dataset.contactId);
-          }
-        });
-
-        test('all groups display the number', function() {
-          for (var log of allLogs) {
-            var primaryInfo = log.querySelector('.primary-info');
-            assert.equal(primaryInfo.textContent, incomingGroup.number);
-          }
-        });
-      });
-
-      suite('find new matching contacts', function() {
-        var newContact;
-        var matchingTel;
-
-        setup(function() {
-          matchingTel = {
-            value: '111222333',
-            type: 'Mobile',
-            carrier: 'Telefonica'
-          };
-          newContact = {
-            id: '2131245135413',
-            name: 'other contact',
-            matchingTel: matchingTel
-          };
-          Contacts.findByNumber.yield(newContact, matchingTel);
-        });
-
-        test('all groups have the new contact-id', function() {
-          for (var log of allLogs) {
-            assert.equal(log.dataset.contactId, newContact.id);
-          }
-        });
-
-        test('all groups have the new contact name', function() {
-          for (var log of allLogs) {
-            var primaryInfo = log.querySelector('.primary-info');
-            assert.equal(primaryInfo.textContent, newContact.name);
-          }
-        });
-      });
-    });
-  });
 });
diff --git a/apps/communications/dialer/test/unit/dialer_test.js b/apps/communications/dialer/test/unit/dialer_test.js
index ce115b9..79a317d 100644
--- a/apps/communications/dialer/test/unit/dialer_test.js
+++ b/apps/communications/dialer/test/unit/dialer_test.js
@@ -3,8 +3,8 @@
 /* global CallHandler, MocksHelper, MockLazyL10n, MockNavigatormozApps,
    MockNavigatorMozIccManager, MockNavigatormozSetMessageHandler,
    NavbarManager, Notification, MockKeypadManager, MockVoicemail,
-   MockCallLog, MockCallLogDBManager, MockNavigatorWakeLock, MockMmiManager,
-   MockSuggestionBar, LazyLoader, AccessibilityHelper */
+   MockCallLog, MockCallLogDBManager, MockNavigatorWakeLock, MmiManager,
+   LazyLoader, AccessibilityHelper */

 require(
   '/shared/test/unit/mocks/mock_navigator_moz_set_message_handler.js'
@@ -13,9 +13,8 @@ require('/shared/test/unit/mocks/mock_navigator_wake_lock.js');
 require('/dialer/test/unit/mock_call_log.js');
 require('/dialer/test/unit/mock_call_log_db_manager.js');
 require('/dialer/test/unit/mock_lazy_loader.js');
-require('/dialer/test/unit/mock_mmi_manager.js');
 require('/dialer/test/unit/mock_voicemail.js');
-require('/dialer/test/unit/mock_suggestion_bar.js');
+require('/dialer/test/unit/mock_mmi_manager.js');

 require('/shared/test/unit/mocks/mock_accessibility_helper.js');
 require('/shared/test/unit/mocks/mock_navigator_moz_apps.js');
@@ -43,7 +42,6 @@ var mocksHelperForDialer = new MocksHelper([
   'Notification',
   'NotificationHelper',
   'SettingsListener',
-  'SuggestionBar',
   'Utils',
   'TonePlayer',
   'Voicemail'
@@ -173,7 +171,7 @@ suite('navigation bar', function() {

     suite('> insertion in the call log database', function() {
       var sysMsg;
-      var addStub;
+      var addSpy;

       function triggerSysMsg(data) {
         MockNavigatormozSetMessageHandler.mTrigger('telephony-call-ended',
@@ -191,7 +189,7 @@ suite('navigation bar', function() {
       });

       setup(function() {
-        addStub = this.sinon.stub(MockCallLogDBManager, 'add');
+        addSpy = this.sinon.spy(MockCallLogDBManager, 'add');
       });

       test('should require a high priority wake lock', function() {
@@ -212,12 +210,12 @@ suite('navigation bar', function() {

         test('should flag the entry as voicemail if it is', function() {
           MockVoicemail.check.yield(true);
-          sinon.assert.calledWithMatch(addStub, {voicemail: true});
+          sinon.assert.calledWithMatch(addSpy, {voicemail: true});
         });

         test('should not flag the entry if it is not', function() {
           MockVoicemail.check.yield(false);
-          sinon.assert.calledWithMatch(addStub, {voicemail: false});
+          sinon.assert.calledWithMatch(addSpy, {voicemail: false});
         });
       });

@@ -225,7 +223,7 @@ suite('navigation bar', function() {
         test('should be set to now minus the call duration', function() {
           this.sinon.useFakeTimers(4200);
           triggerSysMsg(sysMsg);
-          sinon.assert.calledWithMatch(addStub, {date: 3000});
+          sinon.assert.calledWithMatch(addSpy, {date: 3000});
         });
       });

@@ -233,45 +231,37 @@ suite('navigation bar', function() {
         test('should be incoming for incoming calls', function() {
           sysMsg.direction = 'incoming';
           triggerSysMsg(sysMsg);
-          sinon.assert.calledWithMatch(addStub, {type: 'incoming'});
+          sinon.assert.calledWithMatch(addSpy, {type: 'incoming'});
         });

         test('should be alerting for outgoing calls', function() {
           sysMsg.direction = 'outgoing';
           triggerSysMsg(sysMsg);
-          sinon.assert.calledWithMatch(addStub, {type: 'dialing'});
+          sinon.assert.calledWithMatch(addSpy, {type: 'dialing'});
         });
       });

       test('should set the phone number', function() {
         triggerSysMsg(sysMsg);
-        sinon.assert.calledWithMatch(addStub, {number: '12345'});
-      });
-
-      test('should set cdma call waiting number', function() {
-        sysMsg.secondNumber = '23456';
-        triggerSysMsg(sysMsg);
-        sinon.assert.calledWithMatch(addStub, {number: '12345'});
-        addStub.yield();
-        sinon.assert.calledWithMatch(addStub, {number: '23456'});
+        sinon.assert.calledWithMatch(addSpy, {number: '12345'});
       });

       test('should set the serviceId', function() {
         triggerSysMsg(sysMsg);
-        sinon.assert.calledWithMatch(addStub, {serviceId: 1});
+        sinon.assert.calledWithMatch(addSpy, {serviceId: 1});
       });

       suite('> emergency', function() {
         test('should flag the entry as emergency if it is', function() {
           sysMsg.emergency = true;
           triggerSysMsg(sysMsg);
-          sinon.assert.calledWithMatch(addStub, {emergency: true});
+          sinon.assert.calledWithMatch(addSpy, {emergency: true});
         });

         test('should not flag the entry if it is not', function() {
           sysMsg.emergency = null;
           triggerSysMsg(sysMsg);
-          sinon.assert.calledWithMatch(addStub, {emergency: false});
+          sinon.assert.calledWithMatch(addSpy, {emergency: false});
         });
       });

@@ -279,12 +269,12 @@ suite('navigation bar', function() {
         test('should be connected for incoming connected calls', function() {
           sysMsg.direction = 'incoming';
           triggerSysMsg(sysMsg);
-          sinon.assert.calledWithMatch(addStub, {status: 'connected'});
+          sinon.assert.calledWithMatch(addSpy, {status: 'connected'});
         });

         test('should be null otherwise', function() {
           triggerSysMsg(sysMsg);
-          sinon.assert.calledWithMatch(addStub, {status: null});
+          sinon.assert.calledWithMatch(addSpy, {status: null});
         });
       });

@@ -294,44 +284,16 @@ suite('navigation bar', function() {
         var appendSpy = this.sinon.spy(MockCallLog, 'appendGroup');

         triggerSysMsg(sysMsg);
-        addStub.yield(fakeGroup);
+        addSpy.yield(fakeGroup);

         sinon.assert.calledWith(appendSpy, fakeGroup);
       });

-      test('should also insert new call waiting group for cdma log view',
-      function() {
-        var fakeGroup = '----uniq----';
-        var fakeGroupCdma = '-----cdma----';
-        var appendSpy = this.sinon.spy(MockCallLog, 'appendGroup');
-        sysMsg.secondNumber = '34567';
-
-        triggerSysMsg(sysMsg);
-        addStub.yield(fakeGroup);
-        assert.equal(MockNavigatorWakeLock.mLastWakeLock.mUnlockCount, 0);
-        addStub.yield(fakeGroupCdma);
-
-        sinon.assert.calledWith(appendSpy, fakeGroup);
-        sinon.assert.calledWith(appendSpy, fakeGroupCdma);
-      });
-
       test('should release the wake lock', function() {
         triggerSysMsg(sysMsg);
-        addStub.yield();
         var wakeLock = MockNavigatorWakeLock.mLastWakeLock;
         assert.isTrue(wakeLock.released);
       });
-
-      test('should only unlock after cdma call is added',
-      function() {
-        sysMsg.secondNumber = '45678';
-        triggerSysMsg(sysMsg);
-        var wakeLock = MockNavigatorWakeLock.mLastWakeLock;
-        addStub.yield();
-        assert.equal(wakeLock.mUnlockCount, 0);
-        addStub.yield();
-        assert.equal(wakeLock.mUnlockCount, 1);
-      });
     });

     suite('> Receiving a ussd', function() {
@@ -363,9 +325,9 @@ suite('navigation bar', function() {
       });

       test('should call the MmiManager', function() {
-        this.sinon.spy(MockMmiManager, 'handleMMIReceived');
+        this.sinon.spy(MmiManager, 'handleMMIReceived');
         triggerSysMsg();
-        sinon.assert.calledWith(MockMmiManager.handleMMIReceived,
+        sinon.assert.calledWith(MmiManager.handleMMIReceived,
                                 'testing', true);
       });

@@ -393,9 +355,9 @@ suite('navigation bar', function() {
         });

         test('should send a notification for unsolicited messages', function() {
-            this.sinon.spy(MockMmiManager, 'sendNotification');
+            this.sinon.spy(MmiManager, 'sendNotification');
             triggerSysMsg(0, true);
-            sinon.assert.calledOnce(MockMmiManager.sendNotification);
+            sinon.assert.calledOnce(MmiManager.sendNotification);
             var wakeLock = MockNavigatorWakeLock.mLastWakeLock;
             assert.isTrue(wakeLock.released);
           }
@@ -429,37 +391,6 @@ suite('navigation bar', function() {
       });
     });

-    suite('> Dialing MMI codes', function() {
-      setup(function (){
-        this.sinon.stub(MockMmiManager, 'isMMI').returns(true);
-        this.sinon.spy(MockMmiManager, 'send');
-        this.sinon.spy(MockKeypadManager, 'updatePhoneNumber');
-        this.sinon.spy(MockSuggestionBar, 'clear');
-      });
-
-      [ 0, 1 ].forEach(function(cardIndex) {
-        test('> Dialing a generic code on SIM ' + cardIndex, function() {
-          var number = '*123#';
-          CallHandler.call(number, cardIndex);
-
-          sinon.assert.calledWith(MockMmiManager.send, number, cardIndex);
-          sinon.assert.calledWithMatch(MockKeypadManager.updatePhoneNumber, '');
-          sinon.assert.calledOnce(MockSuggestionBar.clear);
-        });
-
-        test('> Requesting the IMEI codes on SIM ' + cardIndex, function() {
-          this.sinon.spy(MockMmiManager, 'showImei');
-
-          CallHandler.call('*#06#', cardIndex);
-
-          sinon.assert.calledOnce(MockMmiManager.showImei);
-          sinon.assert.notCalled(MockMmiManager.send);
-          sinon.assert.calledWithMatch(MockKeypadManager.updatePhoneNumber, '');
-          sinon.assert.calledOnce(MockSuggestionBar.clear);
-        });
-      });
-    });
-
     suite('> bluetooth commands', function() {
       function sendCommand(command) {
         MockNavigatormozSetMessageHandler.mTrigger('bluetooth-dialer-command', {
diff --git a/apps/communications/dialer/test/unit/keypad_test.js b/apps/communications/dialer/test/unit/keypad_test.js
index c8b1642..f25e4a8 100644
--- a/apps/communications/dialer/test/unit/keypad_test.js
+++ b/apps/communications/dialer/test/unit/keypad_test.js
@@ -70,9 +70,6 @@ suite('dialer/keypad', function() {
     navigator.mozSettings = MockNavigatorSettings;
     MockNavigatorSettings.mSyncRepliesOnly = true;

-    realMozTelephony = navigator.mozTelephony;
-    navigator.mozTelephony = MockNavigatorMozTelephony;
-
     previousBody = document.body.innerHTML;
     document.body.innerHTML = MockDialerIndexHtml;
     subject = KeypadManager;
@@ -84,8 +81,6 @@ suite('dialer/keypad', function() {
     navigator.mozL10n = realMozL10n;
     navigator.mozSettings = realMozSettings;
     MockNavigatorSettings.mSyncRepliesOnly = false;
-    MockNavigatorMozTelephony.mSuiteTeardown();
-    navigator.mozTelephony = realMozTelephony;

     document.body.innerHTML = previousBody;
   });
@@ -95,10 +90,6 @@ suite('dialer/keypad', function() {
     this.sinon.spy(FontSizeManager, 'adaptToSpace');
   });

-  teardown(function() {
-    MockNavigatorMozTelephony.mTeardown();
-  });
-
   suite('Keypad Manager', function() {
     test('sanitizePhoneNumber', function(done) {
       var testCases = {
@@ -215,12 +206,25 @@ suite('dialer/keypad', function() {
     });

     suite('Audible and DTMF tones when composing numbers', function() {
+      suiteSetup(function() {
+        realMozTelephony = navigator.mozTelephony;
+        navigator.mozTelephony = MockNavigatorMozTelephony;
+      });
+
+      suiteTeardown(function() {
+        MockNavigatorMozTelephony.mSuiteTeardown();
+        navigator.mozTelephony = realMozTelephony;
+      });

       setup(function() {
         subject._observePreferences();
         MockSettingsListener.mCallbacks['phone.ring.keypad'](true);
       });

+      teardown(function() {
+        MockNavigatorMozTelephony.mTeardown();
+      });
+
       test('Pressing a button plays a short tone', function() {
         var startSpy = this.sinon.spy(MockTonePlayer, 'start');
         var stopSpy = this.sinon.spy(MockTonePlayer, 'stop');
@@ -283,6 +287,8 @@ suite('dialer/keypad', function() {
       });

       teardown(function() {
+        MockNavigatorMozTelephony.mTeardown();
+
         subject.init(false);
       });

@@ -402,74 +408,6 @@ suite('dialer/keypad', function() {
       });
     });

-    suite('TonePlayer channel management', function() {
-      var realHidden, stubHidden, mockCall;
-
-      setup(function() {
-        realHidden = document.hidden;
-
-        Object.defineProperty(document, 'hidden', {
-          configurable: true,
-          get: function() { return stubHidden; }
-        });
-
-        stubHidden = true;
-
-        this.sinon.spy(MockTonePlayer, 'init');
-        this.sinon.spy(MockTonePlayer, 'setChannel');
-        subject.init(true);
-
-        mockCall = new MockCall('12345', 'connected', 0);
-      });
-
-      teardown(function() {
-        Object.defineProperty(document, 'hidden', {
-          configurable: true,
-          get: function() { return realHidden; }
-        });
-        subject.init(false);
-      });
-
-      test('should be on the normal channel at init', function() {
-        sinon.assert.calledOnce(MockTonePlayer.init);
-        sinon.assert.calledWith(MockTonePlayer.init, 'normal');
-      });
-
-      test('should switch to telephony when it gets displayed', function() {
-        stubHidden = false;
-        window.dispatchEvent(new CustomEvent('visibilitychange'));
-        var lastCall = MockTonePlayer.setChannel.lastCall;
-        assert.equal(lastCall.args[0], 'telephony');
-      });
-
-      test('should switch back to normal when it gets hidden', function() {
-        stubHidden = true;
-        window.dispatchEvent(new CustomEvent('visibilitychange'));
-        var lastCall = MockTonePlayer.setChannel.lastCall;
-        assert.equal(lastCall.args[0], 'normal');
-      });
-
-      test('should stay on the telephony channel if a call is ongoing',
-      function() {
-        MockNavigatorMozTelephony.calls = [mockCall];
-
-        stubHidden = true;
-        window.dispatchEvent(new CustomEvent('visibilitychange'));
-        var lastCall = MockTonePlayer.setChannel.lastCall;
-        assert.equal(lastCall.args[0], 'telephony');
-      });
-
-      test('should stay on the telephony channel if a conference is ongoing',
-      function() {
-        MockNavigatorMozTelephony.conferenceGroup.calls = [mockCall];
-
-        stubHidden = true;
-        window.dispatchEvent(new CustomEvent('visibilitychange'));
-        var lastCall = MockTonePlayer.setChannel.lastCall;
-        assert.equal(lastCall.args[0], 'telephony');
-      });
-    });
-
     suite('voiceMail hotkey', function() {
       var fakeVoicemail;

diff --git a/apps/communications/dialer/test/unit/mmi_test.js b/apps/communications/dialer/test/unit/mmi_test.js
index fcc7408..6789c31 100644
--- a/apps/communications/dialer/test/unit/mmi_test.js
+++ b/apps/communications/dialer/test/unit/mmi_test.js
@@ -1,6 +1,7 @@
-/* globals MockMobileconnection, MockMobileOperator, MockNavigatormozApps,
-           MockNavigatorMozIccManager, MockNavigatorMozMobileConnections,
-           MocksHelper, MmiManager, MockMmiUI, Notification */
+/* globals MockLazyL10n, MockMobileconnection, MockMobileOperator,
+           MockNavigatormozApps, MockNavigatorMozIccManager,
+           MockNavigatorMozMobileConnections, MocksHelper, MmiManager,
+           MockMmiUI, Notification */

 'use strict';

@@ -14,8 +15,7 @@ require('/shared/test/unit/mocks/mock_navigator_moz_icc_manager.js');
 require('/shared/test/unit/mocks/mock_navigator_moz_mobile_connections.js');
 require('/shared/test/unit/mocks/mock_notification.js');
 require('/shared/test/unit/mocks/mock_notification_helper.js');
-require('/shared/test/unit/mocks/mock_lazy_l10n.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+require('/shared/test/unit/mocks/dialer/mock_lazy_l10n.js');

 const SUCCESS_MMI_NO_MSG = 'sucess_mmi_no_msg';
 const FAILED_MMI_NO_MSG = 'failed_mmi_no_msg';
@@ -35,16 +35,6 @@ const MMI_CF_MSG_INVALID_SERVICE_CLASS = 'mmi_cf_invalid_sc';
 const MMI_CF_MSG_ALL_INACTIVE = 'mmi_cf_all_inactive';
 const MMI_CF_MSG_TWO_RULES = 'mmi_cf_two_rules';

-const ICC_SERVICE_CLASS_VOICE = (1 << 0);
-const ICC_SERVICE_CLASS_DATA = (1 << 1);
-const ICC_SERVICE_CLASS_FAX = (1 << 2);
-// const ICC_SERVICE_CLASS_SMS = (1 << 3);
-const ICC_SERVICE_CLASS_DATA_SYNC = (1 << 4);
-const ICC_SERVICE_CLASS_DATA_ASYNC = (1 << 5);
-const ICC_SERVICE_CLASS_PACKET = (1 << 6);
-const ICC_SERVICE_CLASS_PAD = (1 << 7);
-// const ICC_SERVICE_CLASS_MAX = (1 << 7);
-
 const EXPECTED_PHONE = '+34666222111';

 const TINY_TIMEOUT = 5;
@@ -63,151 +53,6 @@ suite('dialer/mmi', function() {
   var realMobileConnections;
   var mobileConn;

-  function sendMMIStub(message) {
-    var evt = {
-      target: {
-        result: null,
-        error: {
-          name: null
-        }
-      }
-    };
-
-    switch (message) {
-      case SUCCESS_MMI_NO_MSG:
-        evt.target.result = {
-          serviceCode: 'scFoo',
-          statusMessage: null
-        };
-        MmiManager.notifySuccess(evt);
-        break;
-      case SUCCESS_MMI_MSG:
-        evt.target.result = {
-          serviceCode: 'scFoo',
-          statusMessage: SUCCESS_MMI_MSG
-        };
-        MmiManager.notifySuccess(evt);
-        break;
-      case FAILED_MMI_NO_MSG:
-        evt.target.error = {
-          serviceCode: 'scFoo',
-          name: null
-        };
-        MmiManager.notifyError(evt);
-        break;
-      case FAILED_MMI_MSG:
-        evt.target.error = {
-          serviceCode: 'scFoo',
-          name: FAILED_MMI_MSG
-        };
-        MmiManager.notifyError(evt);
-        break;
-      case MMI_CF_MSG_ACTIVE_VOICE:
-        evt.target.result = {
-          additionalInformation: [{
-            active: true,
-            number: EXPECTED_PHONE,
-            serviceClass: ICC_SERVICE_CLASS_VOICE
-          }]
-        };
-        MmiManager.notifySuccess(evt);
-        break;
-      case MMI_CF_MSG_ACTIVE_DATA:
-        evt.target.result = {
-          additionalInformation: [{
-            active: true,
-            number: EXPECTED_PHONE,
-            serviceClass: ICC_SERVICE_CLASS_DATA
-          }]
-        };
-        MmiManager.notifySuccess(evt);
-        break;
-      case MMI_CF_MSG_ACTIVE_FAX:
-        evt.target.result = {
-          additionalInformation: [{
-            active: true,
-            number: EXPECTED_PHONE,
-            serviceClass: ICC_SERVICE_CLASS_FAX
-          }]
-        };
-        MmiManager.notifySuccess(evt);
-        break;
-      case MMI_CF_MSG_ACTIVE_DATA_SYNC:
-        evt.target.result = {
-          additionalInformation: [{
-            active: true,
-            number: EXPECTED_PHONE,
-            serviceClass: ICC_SERVICE_CLASS_DATA_SYNC
-          }]
-        };
-        MmiManager.notifySuccess(evt);
-        break;
-      case MMI_CF_MSG_ACTIVE_DATA_ASYNC:
-        evt.target.result = {
-          additionalInformation: [{
-            active: true,
-            number: EXPECTED_PHONE,
-            serviceClass: ICC_SERVICE_CLASS_DATA_ASYNC
-          }]
-        };
-        MmiManager.notifySuccess(evt);
-        break;
-      case MMI_CF_MSG_ACTIVE_PACKET:
-        evt.target.result = {
-          additionalInformation: [{
-            active: true,
-            number: EXPECTED_PHONE,
-            serviceClass: ICC_SERVICE_CLASS_PACKET
-          }]
-        };
-        MmiManager.notifySuccess(evt);
-        break;
-      case MMI_CF_MSG_ACTIVE_PAD:
-        evt.target.result = {
-          additionalInformation: [{
-            active: true,
-            number: EXPECTED_PHONE,
-            serviceClass: ICC_SERVICE_CLASS_PAD
-          }]
-        };
-        MmiManager.notifySuccess(evt);
-        break;
-      case MMI_CF_MSG_INVALID_SERVICE_CLASS:
-        evt.target.result = [{
-          active: true,
-          number: EXPECTED_PHONE,
-          serviceClass: -1
-        }];
-        MmiManager.notifySuccess(evt);
-        break;
-     case MMI_CF_MSG_TWO_RULES:
-        evt.target.result = {
-          additionalInformation: [{
-            active: true,
-            number: EXPECTED_PHONE,
-            serviceClass: ICC_SERVICE_CLASS_VOICE
-          },{
-            active: true,
-            number: EXPECTED_PHONE,
-            serviceClass: ICC_SERVICE_CLASS_DATA
-          }]
-        };
-        MmiManager.notifySuccess(evt);
-        break;
-      case MMI_CF_MSG_ALL_INACTIVE:
-        evt.target.result = {
-          additionalInformation: [{
-            active: false
-          }]
-        };
-        MmiManager.notifySuccess(evt);
-        break;
-    }
-
-    var domRequest = {};
-    return domRequest;
-  }
-
   mocksHelperForMMI.attachTestHelpers();

   suiteSetup(function() {
@@ -223,7 +68,146 @@ suite('dialer/mmi', function() {
     /* Replace the default mock connection with our own specialized version
      * tailored for this suite of tests. */
     mobileConn = new MockMobileconnection();
-    sinon.stub(mobileConn, 'sendMMI', sendMMIStub);
+    sinon.stub(mobileConn, 'sendMMI', function(message) {
+      var evt = {
+        target: {
+          result: null,
+          error: {
+            name: null
+          }
+        }
+      };
+
+      switch (message) {
+        case SUCCESS_MMI_NO_MSG:
+          evt.target.result = {
+            statusMessage: null
+          };
+          MmiManager.notifySuccess(evt);
+          break;
+        case SUCCESS_MMI_MSG:
+          evt.target.result = {
+            statusMessage: SUCCESS_MMI_MSG
+          };
+          MmiManager.notifySuccess(evt);
+          break;
+        case FAILED_MMI_NO_MSG:
+          evt.target.error = {
+            name: null
+          };
+          MmiManager.notifyError(evt);
+          break;
+        case FAILED_MMI_MSG:
+          evt.target.error = {
+            name: FAILED_MMI_MSG
+          };
+          MmiManager.notifyError(evt);
+          break;
+        case MMI_CF_MSG_ACTIVE_VOICE:
+          evt.target.result = {
+            additionalInformation: [{
+              active: true,
+              number: EXPECTED_PHONE,
+              serviceClass: this.ICC_SERVICE_CLASS_VOICE
+            }]
+          };
+          MmiManager.notifySuccess(evt);
+          break;
+        case MMI_CF_MSG_ACTIVE_DATA:
+          evt.target.result = {
+            additionalInformation: [{
+              active: true,
+              number: EXPECTED_PHONE,
+              serviceClass: this.ICC_SERVICE_CLASS_DATA
+            }]
+          };
+          MmiManager.notifySuccess(evt);
+          break;
+        case MMI_CF_MSG_ACTIVE_FAX:
+          evt.target.result = {
+            additionalInformation: [{
+              active: true,
+              number: EXPECTED_PHONE,
+              serviceClass: this.ICC_SERVICE_CLASS_FAX
+            }]
+          };
+          MmiManager.notifySuccess(evt);
+          break;
+        case MMI_CF_MSG_ACTIVE_DATA_SYNC:
+          evt.target.result = {
+            additionalInformation: [{
+              active: true,
+              number: EXPECTED_PHONE,
+              serviceClass: this.ICC_SERVICE_CLASS_DATA_SYNC
+            }]
+          };
+          MmiManager.notifySuccess(evt);
+          break;
+        case MMI_CF_MSG_ACTIVE_DATA_ASYNC:
+          evt.target.result = {
+            additionalInformation: [{
+              active: true,
+              number: EXPECTED_PHONE,
+              serviceClass: this.ICC_SERVICE_CLASS_DATA_ASYNC
+            }]
+          };
+          MmiManager.notifySuccess(evt);
+          break;
+        case MMI_CF_MSG_ACTIVE_PACKET:
+          evt.target.result = {
+            additionalInformation: [{
+              active: true,
+              number: EXPECTED_PHONE,
+              serviceClass: this.ICC_SERVICE_CLASS_PACKET
+            }]
+          };
+          MmiManager.notifySuccess(evt);
+          break;
+        case MMI_CF_MSG_ACTIVE_PAD:
+          evt.target.result = {
+            additionalInformation: [{
+              active: true,
+              number: EXPECTED_PHONE,
+              serviceClass: this.ICC_SERVICE_CLASS_PAD
+            }]
+          };
+          MmiManager.notifySuccess(evt);
+          break;
+        case MMI_CF_MSG_INVALID_SERVICE_CLASS:
+          evt.target.result = [{
+            active: true,
+            number: EXPECTED_PHONE,
+            serviceClass: -1
+          }];
+          MmiManager.notifySuccess(evt);
+          break;
+       case MMI_CF_MSG_TWO_RULES:
+          evt.target.result = {
+            additionalInformation: [{
+              active: true,
+              number: EXPECTED_PHONE,
+              serviceClass: this.ICC_SERVICE_CLASS_VOICE
+            },{
+              active: true,
+              number: EXPECTED_PHONE,
+              serviceClass: this.ICC_SERVICE_CLASS_DATA
+            }]
+          };
+          MmiManager.notifySuccess(evt);
+          break;
+        case MMI_CF_MSG_ALL_INACTIVE:
+          evt.target.result = {
+            additionalInformation: [{
+              active: false
+            }]
+          };
+          MmiManager.notifySuccess(evt);
+          break;
+      }
+
+      var domRequest = {};
+      return domRequest;
+    });
   });

   suiteTeardown(function() {
@@ -246,7 +230,6 @@ suite('dialer/mmi', function() {
     MockNavigatorMozMobileConnections.mTeardown();
     mobileConn.mTeardown();
     MmiManager._ui.teardown();
-    MmiManager._conn = null;
   });

   suite('Validate MMI codes', function() {
@@ -405,13 +388,16 @@ suite('dialer/mmi', function() {
         promise.then(function() {
           sinon.assert.calledOnce(Notification);
           sinon.assert.calledWithMatch(Notification,
-            /notification-title-with-sim.*2/,
+            'notification-title-with-sim',
             {
               body: MMI_MSG,
               icon: 'sms/dialer?ussdMessage=1&cardIndex=1'
             }
           );
           sinon.assert.calledTwice(MmiManager._);
+          assert.equal(MockLazyL10n.keys['sim-number'].n, 2);
+          assert.isNotNull(
+            MockLazyL10n.keys['mmi-notification-title-with-sim']);
         }).then(done, done);
     });
   });
@@ -493,6 +479,30 @@ suite('dialer/mmi', function() {
     });
   });

+  suite('Mmi received with multiple connections', function() {
+    var simNum = 2;
+
+    setup(function() {
+      // Make this look like a DSDS setup
+      var conn = new MockMobileconnection();
+      MockNavigatorMozMobileConnections.mAddMobileConnection(conn, simNum - 1);
+      MockNavigatorMozIccManager.addIcc('0', { 'cardState' : 'ready' });
+      MockNavigatorMozIccManager.addIcc('1', { 'cardState' : 'ready' });
+
+      MmiManager.handleMMIReceived(MMI_MSG, true, 1);
+    });
+
+    test('Check title, message and sessionEnded', function(done) {
+      setTimeout(function() {
+        assert.isNotNull(MockLazyL10n.keys['mmi-notification-title-with-sim']);
+        assert.equal(MockLazyL10n.keys['sim-number'].n, simNum);
+        assert.equal(MmiManager._ui._messageReceived, MMI_MSG);
+        assert.isTrue(MmiManager._ui._sessionEnded);
+        done();
+      }, TINY_TIMEOUT);
+    });
+  });
+
   suite('Mmi message reply via UI', function() {
     setup(function() {
       MmiManager._conn = mobileConn;
@@ -544,154 +554,6 @@ suite('dialer/mmi', function() {
     });
   });

-  suite('DSDS operation', function() {
-    var simNum = 2;
-
-    setup(function() {
-      // Make this look like a DSDS setup
-      var conn = new MockMobileconnection();
-      this.sinon.stub(conn, 'sendMMI', sendMMIStub);
-      MockNavigatorMozMobileConnections.mAddMobileConnection(conn, simNum - 1);
-      MockNavigatorMozIccManager.addIcc('0', { 'cardState' : 'ready' });
-      MockNavigatorMozIccManager.addIcc('1', { 'cardState' : 'ready' });
-
-      MmiManager.handleMMIReceived(MMI_MSG, true, 1);
-    });
-
-    suite('Receiving a message', function() {
-      test('Check title, message and sessionEnded', function(done) {
-        setTimeout(function() {
-          assert.match(MmiManager._ui._title,
-                       /mmi-notification-title-with-sim.*sim-number.*2/);
-          assert.equal(MmiManager._ui._messageReceived, MMI_MSG);
-          assert.isTrue(MmiManager._ui._sessionEnded);
-          done();
-        }, TINY_TIMEOUT);
-      });
-    });
-
-    [0, 1].forEach(function(cardIndex) {
-      suite('Sending a message on SIM' + cardIndex, function() {
-        suite('Successfully with result', function() {
-          setup(function() {
-            MmiManager.send(SUCCESS_MMI_MSG, cardIndex);
-          });
-
-          test('Check title, message and sessionEnded', function(done) {
-            setTimeout(function() {
-              assert.match(MmiManager._ui._title,
-                           new RegExp('mmi-notification-title-with-sim' +
-                                      '.*sim-number.*' + (cardIndex + 1)));
-              assert.equal(MmiManager._ui._messageReceived, SUCCESS_MMI_MSG);
-              assert.isNull(MmiManager._ui._sessionEnded);
-              done();
-            }, TINY_TIMEOUT);
-          });
-        });
-
-        suite('Successfully with no result', function() {
-          setup(function() {
-            MmiManager.send(SUCCESS_MMI_NO_MSG, cardIndex);
-          });
-
-          test('Check title, message and sessionEnded', function(done) {
-            setTimeout(function() {
-              assert.match(MmiManager._ui._title,
-                           new RegExp('mmi-notification-title-with-sim' +
-                                      '.*sim-number.*' + (cardIndex + 1)));
-              assert.isUndefined(MmiManager._ui._messageReceived);
-              assert.isNull(MmiManager._ui._sessionEnded);
-              done();
-            }, TINY_TIMEOUT);
-          });
-        });
-
-        suite('Error with result', function() {
-          setup(function() {
-            MmiManager.send(FAILED_MMI_MSG, cardIndex);
-          });
-
-          test('Check title, message and sessionEnded', function(done) {
-            setTimeout(function() {
-              assert.match(MmiManager._ui._title,
-                           new RegExp('mmi-notification-title-with-sim' +
-                                      '.*sim-number.*' + (cardIndex + 1)));
-              assert.equal(MmiManager._ui._messageReceived, FAILED_MMI_MSG);
-              assert.isNull(MmiManager._ui._sessionEnded);
-              done();
-            }, TINY_TIMEOUT);
-          });
-        });
-
-        suite('Error with no result', function() {
-          setup(function() {
-            MmiManager.send(FAILED_MMI_NO_MSG, cardIndex);
-          });
-
-          test('Check title, message and sessionEnded', function(done) {
-            setTimeout(function() {
-              assert.match(MmiManager._ui._title,
-                           new RegExp('mmi-notification-title-with-sim' +
-                                      '.*sim-number.*' + (cardIndex + 1)));
-              assert.equal(MmiManager._ui._messageReceived, 'GenericFailure');
-              assert.isNull(MmiManager._ui._sessionEnded);
-              done();
-            }, TINY_TIMEOUT);
-          });
-        });
-      });
-    });
-  });
-
-  suite('Retrieving IMEI codes', function() {
-    test('for a single SIM device', function(done) {
-      var imei = '123';
-      var conn = new MockMobileconnection();
-      MockNavigatorMozMobileConnections.mRemoveMobileConnection(0);
-      MockNavigatorMozMobileConnections.mAddMobileConnection(conn, 0);
-      this.sinon.spy(window, 'postMessage');
-
-      MmiManager.showImei().then(function() {
-        sinon.assert.calledWithMatch(window.postMessage, {
-          type: 'mmi-success',
-          title: 'scImei',
-          result: imei
-        });
-      }).then(done, done);
-
-      // Trigger the MMI request.
-      conn.mCachedSendMMIReq.onsuccess({
-        target: { result: { serviceCode: 'scImei', statusMessage: 123 } }
-      });
-    });
-
-    test('for a multi-SIM device', function(done) {
-      var imeis = [ '123', '456' ];
-      var conn1 = new MockMobileconnection();
-      var conn2 = new MockMobileconnection();
-      MockNavigatorMozMobileConnections.mRemoveMobileConnection(0);
-      MockNavigatorMozMobileConnections.mAddMobileConnection(conn1, 0);
-      MockNavigatorMozMobileConnections.mAddMobileConnection(conn2, 1);
-      this.sinon.spy(window, 'postMessage');
-
-      MmiManager.showImei().then(function() {
-        sinon.assert.calledWithMatch(window.postMessage, {
-          type: 'mmi-success',
-          title: 'scImei',
-          result: imeis.join('\n')
-        });
-      }).then(done, done);
-
-      // Trigger the MMI requests.
-      conn1.mCachedSendMMIReq.onsuccess({
-        target: { result: { serviceCode: 'scImei', statusMessage: imeis[0] } }
-      });
-      conn2.mCachedSendMMIReq.onsuccess({
-        target: { result: { serviceCode: 'scImei', statusMessage: imeis[1] } }
-      });
-    });
-  });
-
   /** Temporary disable CF tests until Bug 884343 (Use MMIResult for Call
    *   Forwarding related functionality) is done.

diff --git a/apps/communications/dialer/test/unit/mock_call_log_db_manager.js b/apps/communications/dialer/test/unit/mock_call_log_db_manager.js
index 955ec31..4888770 100644
--- a/apps/communications/dialer/test/unit/mock_call_log_db_manager.js
+++ b/apps/communications/dialer/test/unit/mock_call_log_db_manager.js
@@ -1,7 +1,3 @@
-'use strict';
-
-/* exported MockCallLogDBManager */
-
 var MockCallLogDBManager = {
   _calls: [],
   _getGroupListCursor: 0,
@@ -10,7 +6,7 @@ var MockCallLogDBManager = {
   _getGroupListCallback: null,
   add: function add(recentCall, callback) {
     this._calls.push(recentCall);
-    var group = {};
+    var group = new Object();
     group.number = recentCall.number;
     if (callback) {
       callback(group);
@@ -22,7 +18,7 @@ var MockCallLogDBManager = {
     this._calls.forEach(function(call) {
       if (call.type === type) {
         found = true;
-        var group = {};
+        var group = new Object();
         group.number = call.number;
         callback(group);
         return false;
@@ -41,26 +37,6 @@ var MockCallLogDBManager = {
     this._calls = [];
     callback();
   },
-  updateGroupContactInfo: function(contact, matchingTel, callback) {
-    var callsMatched = 0;
-    this._calls.forEach(function(call) {
-      if (call.contact.matchingTel.value == matchingTel.value) {
-        call.contact = contact;
-        callsMatched++;
-      }
-    });
-    callback(callsMatched);
-  },
-  removeGroupContactInfo: function(contactId, group, callback) {
-    var callsMatched = 0;
-    for (var i=0; i < this._calls.length; i++) {
-      if (this._calls[i].contact.id == contactId) {
-        delete this._calls[i];
-        callsMatched++;
-      }
-    }
-    callback(callsMatched);
-  },
   continue: function mcldm_continue() {
     if (this._calls.length > this._getGroupListCursor) {
       this.value = this._calls[this._getGroupListCursor];
diff --git a/apps/communications/dialer/test/unit/mock_dialer_index.html b/apps/communications/dialer/test/unit/mock_dialer_index.html
index c7ac7c4..788e1b5 100644
--- a/apps/communications/dialer/test/unit/mock_dialer_index.html
+++ b/apps/communications/dialer/test/unit/mock_dialer_index.html
@@ -10,7 +10,7 @@
             </button>
             </div>
           </div>
-          <section id="suggestion-bar" aria-hidden="true" hidden>
+          <section id="suggestion-bar" hidden>
             <div id="suggestion-count" class="more"></div>
             <div class="suggestion-item">
               <div class="name"></div>
diff --git a/apps/communications/dialer/test/unit/mock_mmi_manager.js b/apps/communications/dialer/test/unit/mock_mmi_manager.js
index d96d8f5..41e408c 100644
--- a/apps/communications/dialer/test/unit/mock_mmi_manager.js
+++ b/apps/communications/dialer/test/unit/mock_mmi_manager.js
@@ -29,9 +29,6 @@ var MockMmiManager = {
   },
   handleEvent: function(evt) {

-  },
-  showImei: function() {
-
   }
 };

diff --git a/apps/communications/dialer/test/unit/mock_mmi_ui.js b/apps/communications/dialer/test/unit/mock_mmi_ui.js
index 44504fa..908e2c2 100644
--- a/apps/communications/dialer/test/unit/mock_mmi_ui.js
+++ b/apps/communications/dialer/test/unit/mock_mmi_ui.js
@@ -1,7 +1,3 @@
-/* globals MmiManager */
-
-/* exported MockMmiUI */
-
 'use strict';

 var MockMmiUI = {
@@ -20,17 +16,14 @@ var MockMmiUI = {
     switch (evt.data.type) {
       case 'mmi-received-ui':
         this._messageReceived = evt.data.message;
-        this._title = evt.data.title;
         this._sessionEnded = evt.data.sessionEnded;
         break;
       case 'mmi-success':
         this._messageReceived = evt.data.result;
-        this._title = evt.data.title;
         this._sessionEnded = null;
         break;
       case 'mmi-error':
         this._messageReceived = evt.data.error;
-        this._title = evt.data.title;
         this._sessionEnded = null;
         break;
     }
diff --git a/apps/communications/dialer/test/unit/mock_suggestion_bar.js b/apps/communications/dialer/test/unit/mock_suggestion_bar.js
deleted file mode 100644
index e0bedd4..0000000
--- a/apps/communications/dialer/test/unit/mock_suggestion_bar.js
+++ /dev/null
@@ -1,11 +0,0 @@
-/* exported MockSuggestionBar */
-
-'use strict';
-
-var MockSuggestionBar = {
-  handleEvent: function msb_handleEvent(event) {},
-  update: function msb_update(number) {},
-  clear: function msb_clear(isHardClear) {},
-  showOverlay: function msb_showOverlay() {},
-  hideOverlay: function msb_hideOverlay() {}
-};
diff --git a/apps/communications/dialer/test/unit/multi_sim_action_button_test.js b/apps/communications/dialer/test/unit/multi_sim_action_button_test.js
index 7c222b6..09872ce 100644
--- a/apps/communications/dialer/test/unit/multi_sim_action_button_test.js
+++ b/apps/communications/dialer/test/unit/multi_sim_action_button_test.js
@@ -310,9 +310,9 @@ suite('multi SIM action button', function() {
     };

     var shouldNotShowAnIndicator = function() {
-      var setAttributesSpy = this.sinon.spy(MockMozL10n, 'setAttributes');
+      var localizeSpy = this.sinon.spy(MockMozL10n, 'localize');
       initSubject();
-      sinon.assert.notCalled(setAttributesSpy);
+      sinon.assert.notCalled(localizeSpy);
     };

     setup(function() {
@@ -333,31 +333,27 @@ suite('multi SIM action button', function() {
       });

       test('has a default localized SIM indicator', function() {
-        var setAttributesSpy = this.sinon.spy(MockMozL10n, 'setAttributes');
+        var localizeSpy = this.sinon.spy(MockMozL10n, 'localize');
         initSubject();
-        sinon.assert.calledWith(setAttributesSpy,
-                                simIndication,
-                                'sim-picker-button',
+        sinon.assert.calledWith(localizeSpy, simIndication, 'sim-picker-button',
                                 {n: expectedCardIndex+1});
       });

       test('has a custom localized SIM indicator', function() {
-        var setAttributesSpy = this.sinon.spy(MockMozL10n, 'setAttributes');
+        var localizeSpy = this.sinon.spy(MockMozL10n, 'localize');
         simIndication.dataset.l10nId = 'expected';
         initSubject();
-        sinon.assert.calledWith(setAttributesSpy, simIndication, 'expected',
+        sinon.assert.calledWith(localizeSpy, simIndication, 'expected',
                                 {n: expectedCardIndex+1});
       });

       test('indicator changes when settings change', function() {
-        var setAttributesSpy = this.sinon.spy(MockMozL10n, 'setAttributes');
+        var localizeSpy = this.sinon.spy(MockMozL10n, 'localize');

         MockSettingsListener.mTriggerCallback(
           'ril.telephony.defaultServiceId', 1);

-        sinon.assert.calledWith(setAttributesSpy,
-                                simIndication,
-                                'sim-picker-button',
+        sinon.assert.calledWith(localizeSpy, simIndication, 'sim-picker-button',
                                 {n: 2});
       });

@@ -383,12 +379,12 @@ suite('multi SIM action button', function() {
         });

         test('should show SIM indicator with in-use serviceId', function() {
-          var setAttributesSpy = this.sinon.spy(MockMozL10n, 'setAttributes');
+          var localizeSpy = this.sinon.spy(MockMozL10n, 'localize');

           MockTelephonyHelper.mInUseSim = 1;
           MockNavigatorMozTelephony.mTriggerEvent({type: 'callschanged'});

-          sinon.assert.calledWith(setAttributesSpy, simIndication,
+          sinon.assert.calledWith(localizeSpy, simIndication,
                                   'sim-picker-button', {n: 2});
         });

@@ -397,11 +393,11 @@ suite('multi SIM action button', function() {
           MockTelephonyHelper.mInUseSim = 1;
           MockNavigatorMozTelephony.mTriggerEvent({type: 'callschanged'});

-          var setAttributesSpy = this.sinon.spy(MockMozL10n, 'setAttributes');
+          var localizeSpy = this.sinon.spy(MockMozL10n, 'localize');
           MockTelephonyHelper.mTeardown();
           MockNavigatorMozTelephony.mTriggerEvent({type: 'callschanged'});

-          sinon.assert.calledWith(setAttributesSpy, simIndication,
+          sinon.assert.calledWith(localizeSpy, simIndication,
                                   'sim-picker-button', {n: 1});
         });
       });
diff --git a/apps/communications/dialer/test/unit/sim_picker_test.js b/apps/communications/dialer/test/unit/sim_picker_test.js
index a7f0a1a..f805228 100644
--- a/apps/communications/dialer/test/unit/sim_picker_test.js
+++ b/apps/communications/dialer/test/unit/sim_picker_test.js
@@ -42,6 +42,7 @@ suite('SIM picker', function() {

     realMozL10n = navigator.mozL10n;
     navigator.mozL10n = MockMozL10n;
+    navigator.mozL10n.localize = function() {};

     realTelephonyHelper = window.TelephonyHelper;
     window.TelephonyHelper = null;
@@ -71,9 +72,9 @@ suite('SIM picker', function() {

   suite('getOrPick/getInUseSim', function() {
     test('header should contain phone number when getter provided', function() {
-      var setAttributesSpy = this.sinon.spy(MockMozL10n, 'setAttributes');
+      var localizeSpy = this.sinon.spy(MockMozL10n, 'localize');
       subject.getOrPick(0, '1111', function() {});
-      sinon.assert.calledWith(setAttributesSpy,
+      sinon.assert.calledWith(localizeSpy,
                               header,
                               'sim-picker-dial-via-with-number',
                               {phoneNumber: '1111'});
@@ -81,23 +82,25 @@ suite('SIM picker', function() {

     test('header should not contain phone number when getter not provided',
          function() {
+      var localizeSpy = this.sinon.spy(MockMozL10n, 'localize');
       subject.getOrPick(0, null, function() {});
-      assert.equal(header.getAttribute('data-l10n-id'),
-                   'sim-picker-select-sim');
+      sinon.assert.calledWith(localizeSpy,
+                              header,
+                              'sim-picker-select-sim');
     });

     test('show the menu twice with different args', function() {
-      var setAttributesSpy = this.sinon.spy(MockMozL10n, 'setAttributes');
+      var localizeSpy = this.sinon.spy(MockMozL10n, 'localize');

       subject.getOrPick(0, '1111', function() {});
-      sinon.assert.calledWith(setAttributesSpy,
+      sinon.assert.calledWith(localizeSpy,
                               header,
                               'sim-picker-dial-via-with-number',
                               {phoneNumber: '1111'});
       assert.equal(menu.children.length, 3);

       subject.getOrPick(0, '2222', function() {});
-      sinon.assert.calledWith(setAttributesSpy,
+      sinon.assert.calledWith(localizeSpy,
                               header,
                               'sim-picker-dial-via-with-number',
                               {phoneNumber: '2222'});
diff --git a/apps/communications/dialer/test/unit/suggestion_bar_test.js b/apps/communications/dialer/test/unit/suggestion_bar_test.js
index 804c1b1..03deb25 100644
--- a/apps/communications/dialer/test/unit/suggestion_bar_test.js
+++ b/apps/communications/dialer/test/unit/suggestion_bar_test.js
@@ -173,9 +173,6 @@ suite('suggestion Bar', function() {
     this.sinon.stub(MockLazyL10n, 'get', function(callback) {
       callback(mozL10nGet);
     });
-
-    MockContacts.mTearDown();
-    MockFbContacts.mTeardown();
   });

   teardown(function() {
@@ -191,12 +188,6 @@ suite('suggestion Bar', function() {
     navigator.mozIccManager = realMozIccManager;
   });

-  var cloneMockContactResults = function(count) {
-    MockContacts.mResult = new Array(count);
-    for (var i = 0; i < MockContacts.mResult.length; i++) {
-      MockContacts.mResult[i] = mockResult1[0];
-    }
-  };

   suite('Suggestion Bar', function() {
     test('#update suggestions by contact data - 1 data', function() {
@@ -218,7 +209,6 @@ suite('suggestion Bar', function() {
       assert.isFalse(domSuggestionCount.classList.contains('more'),
                   '#suggestion-count shouldn\'t contain "more" style');
       assert.isFalse(domSuggestionBar.hidden, 'should show suggestionBar');
-      assert.equal(domSuggestionBar.getAttribute('aria-hidden'), 'false');
     });

     test('#update suggestions by contact data - 2 datas', function() {
@@ -239,7 +229,6 @@ suite('suggestion Bar', function() {
       assert.isTrue(domSuggestionCount.classList.contains('more'),
                   '#suggestion-count should contain "more" style');
       assert.isFalse(domSuggestionBar.hidden, 'should show suggestionBar');
-      assert.equal(domSuggestionBar.getAttribute('aria-hidden'), 'false');
     });

     test('#update suggestions by contact data - 0 local data - 1 FB data',
@@ -262,7 +251,6 @@ suite('suggestion Bar', function() {
         assert.isFalse(domSuggestionCount.classList.contains('more'),
                     '#suggestion-count should not contain "more" style');
         assert.isFalse(domSuggestionBar.hidden, 'should show suggestionBar');
-        assert.equal(domSuggestionBar.getAttribute('aria-hidden'), 'false');

         assert.equal(SuggestionBar._contactList.length, 1,
                      '_contactList.length should be 1');
@@ -289,7 +277,6 @@ suite('suggestion Bar', function() {
         assert.isTrue(domSuggestionCount.classList.contains('more'),
                     '#suggestion-count should contain "more" style');
         assert.isFalse(domSuggestionBar.hidden, 'should show suggestionBar');
-        assert.equal(domSuggestionBar.getAttribute('aria-hidden'), 'false');
     });

     test('#update suggestions by contact data - 0 local data - 2 FB data',
@@ -312,38 +299,6 @@ suite('suggestion Bar', function() {
         assert.isTrue(domSuggestionCount.classList.contains('more'),
                     '#suggestion-count should contain "more" style');
         assert.isFalse(domSuggestionBar.hidden, 'should show suggestionBar');
-        assert.equal(domSuggestionBar.getAttribute('aria-hidden'), 'false');
-    });
-
-    test('#update suggestions by contact data - 50 local data - 0 FB data',
-      function() {
-        var enteredNumber = '1234';
-        cloneMockContactResults(50);
-        subject.update(enteredNumber);
-
-        assert.isFalse(domSuggestionBar.hidden, 'should show suggestionBar');
-        assert.equal(domSuggestionBar.getAttribute('aria-hidden'), 'false');
-    });
-
-    test('#update suggestions by contact data - 51 local data - 0 FB data',
-      function() {
-        var enteredNumber = '1234';
-        cloneMockContactResults(51);
-        subject.update(enteredNumber);
-
-        assert.isTrue(domSuggestionBar.hidden, 'should hide suggestionBar');
-        assert.equal(domSuggestionBar.getAttribute('aria-hidden'), 'true');
-    });
-
-    test('#update suggestions by contact data - 50 local data - 1 FB data',
-      function() {
-        var enteredNumber = '1234';
-        cloneMockContactResults(50);
-        MockFbContacts.mResult = mockResultFb.slice(0, 1);
-        subject.update(enteredNumber);
-
-        assert.isTrue(domSuggestionBar.hidden, 'should hide suggestionBar');
-        assert.equal(domSuggestionBar.getAttribute('aria-hidden'), 'true');
     });

     suite('#clear suggestions', function() {
@@ -362,7 +317,6 @@ suite('suggestion Bar', function() {

       test('should hide suggestionBar', function() {
         assert.isTrue(domSuggestionBar.hidden);
-        assert.equal(domSuggestionBar.getAttribute('aria-hidden'), 'true');
       });
     });

@@ -383,7 +337,6 @@ suite('suggestion Bar', function() {

         assert.isFalse(domSuggestionBar.hidden,
                        'should not hide suggestionBar');
-        assert.equal(domSuggestionBar.getAttribute('aria-hidden'), 'false');
         assert.equal(tel.textContent, mockNumber);
       });

@@ -392,7 +345,6 @@ suite('suggestion Bar', function() {
         setupExactMatch();

         assert.isTrue(domSuggestionBar.hidden, 'should hide suggestionBar');
-        assert.equal(domSuggestionBar.getAttribute('aria-hidden'), 'true');
       });
     });

@@ -401,14 +353,6 @@ suite('suggestion Bar', function() {
   suite('Suggestion List', function() {
     suite('show overlay', function() {
       var suggestions;
-
-      var getSuggestions = function() {
-        suggestions = Array.prototype.filter.call(subject.list.children,
-          function(element) {
-            return element.classList.contains('js-suggestion-item');
-          });
-      };
-
       setup(function() {
         MockContacts.mResult = mockResult2;
         subject.update('1111');
@@ -417,7 +361,10 @@ suite('suggestion Bar', function() {
         this.sinon.spy(LazyLoader, 'load');

         subject.showOverlay();
-        getSuggestions();
+        suggestions = Array.prototype.filter.call(subject.list.children,
+          function(element) {
+            return element.classList.contains('js-suggestion-item');
+          });
       });

       test('should load the overlay', function() {
@@ -472,27 +419,6 @@ suite('suggestion Bar', function() {
                        '1111');
         });
       });
-
-      suite('high load', function() {
-        test('should show 50 suggestions', function() {
-          cloneMockContactResults(50);
-          subject.update('1234');
-          subject.showOverlay();
-          getSuggestions();
-
-          assert.equal(suggestions.length, 50);
-        });
-
-        test('should show 50 suggestions with 1 FB contact', function() {
-          cloneMockContactResults(49);
-          MockFbContacts.mResult = mockResultFb.slice(0, 1);
-          subject.update('1234');
-          subject.showOverlay();
-          getSuggestions();
-
-          assert.equal(suggestions.length, 50);
-        });
-      });
     });

     suite('hide overlay', function() {
diff --git a/apps/communications/dialer/test/unit/telephony_helper_test.js b/apps/communications/dialer/test/unit/telephony_helper_test.js
index 8c60ac9..30a4e1e 100644
--- a/apps/communications/dialer/test/unit/telephony_helper_test.js
+++ b/apps/communications/dialer/test/unit/telephony_helper_test.js
@@ -112,19 +112,6 @@ suite('telephony helper', function() {

     teardown(function() {
       MockIccHelper.mCardState = initialState;
-      document.dispatchEvent(new CustomEvent('visibilitychange'));
-    });
-
-    test('should display the connecting message', function() {
-      subject.call('112', 0);
-      sinon.assert.calledWith(spyConfirmShow, 'connecting ...', '');
-    });
-
-    test('should hide the connecting message', function() {
-      subject.call('112', 0);
-      var spyConfirmHide = this.sinon.spy(ConfirmDialog, 'hide');
-      document.dispatchEvent(new CustomEvent('visibilitychange'));
-      sinon.assert.calledOnce(spyConfirmHide);
     });

     suite('when there is no sim card', function() {
@@ -132,7 +119,7 @@ suite('telephony helper', function() {
       function() {
         var dialNumber = '112';
         subject.call(dialNumber, 0);
-        sinon.assert.calledWith(navigator.mozTelephony.dialEmergency, '112');
+        sinon.assert.calledWith(navigator.mozTelephony.dialEmergency, '112', 0);
       });
     });

@@ -145,7 +132,7 @@ suite('telephony helper', function() {
         var dialNumber = '112';
         subject.call(dialNumber, 0);
         sinon.assert.calledWith(navigator.mozTelephony.dialEmergency,
-                                '112');
+                                '112', undefined);
       });
     });
   });
@@ -345,19 +332,6 @@ suite('telephony helper', function() {
         }).then(done, done);
       });

-      test('Busy tone should be played in telephony channel', function(done) {
-        var playSpy = this.sinon.spy(MockTonePlayer, 'playSequence');
-        var setChannelSpy = this.sinon.spy(MockTonePlayer, 'setChannel');
-        var setTelephonySpy = setChannelSpy.withArgs('telephony');
-        var setNormalSpy = setChannelSpy.withArgs('normal');
-        subject.call('123', 0);
-        mockPromise.then(function() {
-          mockCall.onerror(createCallError('BusyError'));
-          assert.isTrue(setTelephonySpy.calledBefore(playSpy));
-          assert.isTrue(setNormalSpy.calledAfter(playSpy));
-        }).then(done, done);
-      });
-
       test('should handle FDNBlockedError', function(done) {
         subject.call('123', 0);
         mockPromise.then(function() {
diff --git a/apps/communications/dialer/test/unit/tone_player_test.js b/apps/communications/dialer/test/unit/tone_player_test.js
index 19e080c..8dc6ded 100644
--- a/apps/communications/dialer/test/unit/tone_player_test.js
+++ b/apps/communications/dialer/test/unit/tone_player_test.js
@@ -16,18 +16,13 @@ suite('shared/dialer/TonePlayer', function() {
     TonePlayer.trashAudio();
   });

-  test('should do nothing before init', function() {
-    TonePlayer.ensureAudio();
-    assert.equal(MockAudioContext.instances.length, 0);
-  });
-
   suite('init', function() {
     test('should instantiate an audio context with the channel', function() {
       TonePlayer.init('telephony');

       assert.equal(MockAudioContext.instances.length, 1);
       var ctx = MockAudioContext.instances[0];
-      assert.equal(ctx.mozAudioChannelType, 'telephony');
+      assert.equal(ctx.channel, 'telephony');
     });
   });

@@ -42,7 +37,7 @@ suite('shared/dialer/TonePlayer', function() {

       assert.equal(MockAudioContext.instances.length, 2);
       var ctx = MockAudioContext.instances[1];
-      assert.equal(ctx.mozAudioChannelType, 'telephony');
+      assert.equal(ctx.channel, 'telephony');
     });

     test('should do nothing if we\'re already on the correct channel',
@@ -51,7 +46,7 @@ suite('shared/dialer/TonePlayer', function() {

       assert.equal(MockAudioContext.instances.length, 1);
       var ctx = MockAudioContext.instances[0];
-      assert.equal(ctx.mozAudioChannelType, 'normal');
+      assert.equal(ctx.channel, 'normal');
     });

     suite('if the audio got trashed since init', function() {
@@ -65,7 +60,7 @@ suite('shared/dialer/TonePlayer', function() {

         assert.equal(MockAudioContext.instances.length, 2);
         var ctx = MockAudioContext.instances[1];
-        assert.equal(ctx.mozAudioChannelType, 'normal');
+        assert.equal(ctx.channel, 'normal');
       });
     });
   });
@@ -82,12 +77,5 @@ suite('shared/dialer/TonePlayer', function() {
       var ctx = MockAudioContext.instances[0];
       assert.equal(ctx.mozAudioChannelType, 'normal');
     });
-
-    test('should remember the channel for the next ensureAudio()', function() {
-      TonePlayer.trashAudio();
-      TonePlayer.ensureAudio();
-      var ctx = MockAudioContext.instances[1];
-      assert.equal(ctx.mozAudioChannelType, 'telephony');
-    });
   });
 });
diff --git a/apps/communications/manifest.webapp b/apps/communications/manifest.webapp
index cacc989..45e20e2 100644
--- a/apps/communications/manifest.webapp
+++ b/apps/communications/manifest.webapp
@@ -91,7 +91,7 @@
       "filters": {
         "type": {
           "required": true,
-          "value": ["webcontacts/contact","webcontacts/email","webcontacts/tel","webcontacts/select"]
+          "value": ["webcontacts/contact","webcontacts/email","webcontacts/tel"]
         }
        },
       "disposition": "inline",
@@ -178,7 +178,7 @@
   },

   "icons": {
-        "30": "/style/icons/communications_30.png",
-        "45": "/style/icons/communications_45.png"
+        "30": "/style/icons/communication_30.png",
+        "45": "/style/icons/communication_45.png"
   }
 }
diff --git a/apps/costcontrol/fte.html b/apps/costcontrol/fte.html
index b5e37c7..9e071d3 100644
--- a/apps/costcontrol/fte.html
+++ b/apps/costcontrol/fte.html
@@ -29,7 +29,6 @@
   <script type="text/javascript" src="shared/js/settings_listener.js"></script>
   <script type="text/javascript" src="shared/js/lazy_loader.js"></script>
   <script type="text/javascript" src="shared/js/font_size_utils.js"></script>
-  <script type="text/javascript" defer src="shared/js/performance_testing_helper.js"></script>

   <!-- Components -->
   <script defer src="/shared/js/component_utils.js"></script>
diff --git a/apps/costcontrol/index.html b/apps/costcontrol/index.html
index 56e7ffe..d2b5e0a 100644
--- a/apps/costcontrol/index.html
+++ b/apps/costcontrol/index.html
@@ -37,7 +37,6 @@
     <script type="text/javascript" defer src="shared/js/lazy_loader.js"></script>
     <script type="text/javascript" defer src="shared/js/font_size_utils.js"></script>
     <script type="text/javascript" defer src="shared/js/format.js"></script>
-    <script type="text/javascript" defer src='/shared/js/performance_testing_helper.js'></script>

     <script type="text/javascript" defer src="js/app.js"></script>
     <script type="text/javascript" defer src="js/application_init.js"></script>
diff --git a/apps/costcontrol/js/app.js b/apps/costcontrol/js/app.js
index 258cbff..1256e40 100755
--- a/apps/costcontrol/js/app.js
+++ b/apps/costcontrol/js/app.js
@@ -1,6 +1,6 @@
 /* global BalanceTab, ConfigManager, Common, NonReadyScreen, SimManager,
-          debug, CostControl, TelephonyTab, ViewManager, LazyLoader,
-          PerformanceTestingHelper, AirplaneModeHelper, setNextReset */
+          debug, CostControl, TelephonyTab, ViewManager,
+          LazyLoader, AirplaneModeHelper, setNextReset */
 /* exported CostControlApp */

 'use strict';
@@ -313,7 +313,6 @@ var CostControlApp = (function() {

   // Load settings in background
   function loadSettings() {
-    PerformanceTestingHelper.dispatch('init-load-settings');
     document.getElementById('settings-view-placeholder').src = 'settings.html';
   }

diff --git a/apps/costcontrol/js/common.js b/apps/costcontrol/js/common.js
index 1b7f304..b3f9d20 100755
--- a/apps/costcontrol/js/common.js
+++ b/apps/costcontrol/js/common.js
@@ -1,4 +1,4 @@
-/* global _, debug, ConfigManager, Toolkit, SimManager */
+/* global _, debug, ConfigManager, Toolkit, SimManager  */
 /* exported addAlarmTimeout, setNextReset, addNetworkUsageAlarm,
             getTopUpTimeout, Common, sendBalanceThresholdNotification
 */
@@ -72,28 +72,6 @@ var Common = {
         window.removeEventListener('message', handler);

         iframe.classList.remove('non-ready');
-
-        // PERFORMANCE EVENTS
-        // Designates that the app's *core* chrome or navigation interface
-        // exists in the DOM and is marked as ready to be displayed.
-        window.dispatchEvent(new CustomEvent('moz-chrome-dom-loaded'));
-
-        // Designates that the app's *core* chrome or navigation interface
-        // has its events bound and is ready for user interaction.
-        window.dispatchEvent(new CustomEvent('moz-chrome-interactive'));
-
-        // Designates that the app is visually loaded (e.g.: all of the
-        // "above-the-fold" content exists in the DOM and is marked as
-        // ready to be displayed).
-        window.dispatchEvent(new CustomEvent('moz-app-visually-complete'));
-
-        // Designates that the app has its events bound for the minimum
-        // set of functionality to allow the user to interact with the
-        // "above-the-fold" content.
-        window.dispatchEvent(new CustomEvent('moz-content-interactive'));
-
-        // Start up ended when FTE ready
-        window.dispatchEvent(new CustomEvent('moz-app-loaded'));
       }
     });

@@ -240,7 +218,7 @@ var Common = {
         }
       });
     }
-    // Set last Reset
+      // Set last Reset
     if (mode === 'all') {
       ConfigManager.setOption({ lastCompleteDataReset: new Date() });
     } else {
diff --git a/apps/costcontrol/js/costcontrol.js b/apps/costcontrol/js/costcontrol.js
index 13a33e2..a606e29 100644
--- a/apps/costcontrol/js/costcontrol.js
+++ b/apps/costcontrol/js/costcontrol.js
@@ -60,7 +60,7 @@ var CostControl = (function() {
     ConfigManager.requestAll(setupCostControl);
   }

-  var mobileMessageManager, statistics, isSendingBalanceRequest = false;
+  var mobileMessageManager, statistics;
   function loadAPIs() {
     if ('mozMobileMessage' in window.navigator) {
       mobileMessageManager = window.navigator.mozMobileMessage;
@@ -129,13 +129,11 @@ var CostControl = (function() {
           return;
         }

-        // TODO To avoid concurrence problems, the best solution would be to
-        // implement a request queue instead of the isSendingBalanceRequest lock
         // Check in-progress
         var isWaiting = settings.waitingForBalance !== null;
         var timeout = Toolkit.checkEnoughDelay(BALANCE_TIMEOUT,
                                                settings.lastBalanceRequest);
-        if ((isWaiting && !timeout) || isSendingBalanceRequest) {
+        if (isWaiting && !timeout) {
           result.status = 'in_progress';
           result.data = settings.lastBalance;
           if (callback) {
@@ -143,7 +141,6 @@ var CostControl = (function() {
           }
           return;
         }
-        isSendingBalanceRequest = true;

         // Dispatch
         LazyLoader.load('js/iac_manager.js', function() {
@@ -306,7 +303,6 @@ var CostControl = (function() {
               'lastBalanceRequest': new Date()
             },
             function _onSet() {
-              isSendingBalanceRequest = false;
               result.status = 'success';
               if (callback) {
                 callback(result);
@@ -316,25 +312,16 @@ var CostControl = (function() {
         };

         newAlarm.onerror = function _alarmFailedToSet(evt) {
-          ConfigManager.setOption(
-            {
-              'lastBalanceRequest': new Date()
-            },
-            function _onSet() {
-              isSendingBalanceRequest = false;
-              debug('Failed to set timeout for balance request!');
-              result.status = 'error';
-              result.details = 'timeout_fail';
-              if (callback) {
-                callback(result);
-              }
-            }
-          );
+          debug('Failed to set timeout for balance request!');
+          result.status = 'error';
+          result.details = 'timeout_fail';
+          if (callback) {
+            callback(result);
+          }
         };
       };

       newSMS.onerror = function _onError() {
-        isSendingBalanceRequest = false;
         debug('Request SMS failed! But returning stored balance.');
         IACManager.broadcastEndOfSMSQuery('balance').then(function(msg) {
           debug('After IAC broadcast ask for ending - balance');
diff --git a/apps/costcontrol/js/settings/settings.js b/apps/costcontrol/js/settings/settings.js
index b4fee85..a3408c0 100644
--- a/apps/costcontrol/js/settings/settings.js
+++ b/apps/costcontrol/js/settings/settings.js
@@ -1,6 +1,5 @@
 /* global BalanceView, LazyLoader, AutoSettings, BalanceLowLimitView,
-          ViewManager, dataLimitConfigurer, Formatting, PerformanceTestingHelper
-*/
+          ViewManager, dataLimitConfigurer, Formatting */
 /* exported debug, sendBalanceThresholdNotification */
 /*
  * Settings is in charge of setup the setting section. It uses an AutoSettings
@@ -30,7 +29,7 @@ var debug = window.parent.debug;

 var Settings = (function() {

-  var costcontrol, vmanager, initialized, endLoadSettingsNotified;
+  var costcontrol, vmanager, initialized;
   var plantypeSelector, phoneActivityTitle, phoneActivitySettings;
   var balanceTitle, balanceSettings, reportsTitle;
   var balanceView;
@@ -306,10 +305,6 @@ var Settings = (function() {
                           settings.lastTelephonyReset);
           break;
       }
-      if (endLoadSettingsNotified) {
-        PerformanceTestingHelper.dispatch('end-load-settings');
-        endLoadSettingsNotified = true;
-      }
     });
   }

diff --git a/apps/costcontrol/js/widget.js b/apps/costcontrol/js/widget.js
index bbad4ae..95a93a3 100755
--- a/apps/costcontrol/js/widget.js
+++ b/apps/costcontrol/js/widget.js
@@ -214,8 +214,9 @@ var Widget = (function() {
   }

   // USER INTERFACE
+
   // Reuse fte panel to display errors
-  function _showSimError(status, updateTextOnly) {
+  function _showSimError(status) {
     // Wait to l10n resources are ready
     navigator.mozL10n.ready(function showErrorStatus() {
       var widget = document.getElementById('cost-control');
@@ -223,12 +224,11 @@ var Widget = (function() {
       var leftPanel = document.getElementById('left-panel');
       var rightPanel = document.getElementById('right-panel');

-      if (!updateTextOnly) {
-        widget.setAttribute('aria-hidden', false);
-        fte.setAttribute('aria-hidden', false);
-        leftPanel.setAttribute('aria-hidden', true);
-        rightPanel.setAttribute('aria-hidden', true);
-      }
+      widget.setAttribute('aria-hidden', false);
+      fte.setAttribute('aria-hidden', false);
+      leftPanel.setAttribute('aria-hidden', true);
+      rightPanel.setAttribute('aria-hidden', true);
+
       var className = 'widget-' + status;
       document.getElementById('fte-icon').classList.add(className);
       Common.localize(fte.querySelector('p:first-child'), className +
@@ -496,9 +496,6 @@ var Widget = (function() {
         if (state === 'enabled') {
           waitForIccAndCheckSim();
           Widget.showSimError('airplane-mode');
-        } else if (isWaitingForIcc) {
-          var updateTextOnly = true;
-          Widget.showSimError('no-sim2', updateTextOnly);
         }
       }
     );
diff --git a/apps/costcontrol/settings.html b/apps/costcontrol/settings.html
index 35c80d9..a474297 100644
--- a/apps/costcontrol/settings.html
+++ b/apps/costcontrol/settings.html
@@ -27,7 +27,6 @@
     <script type="text/javascript" defer src="shared/js/l10n_date.js"></script>
     <script type="text/javascript" defer src="shared/js/lazy_loader.js"></script>
     <script type="text/javascript" defer src="shared/js/font_size_utils.js"></script>
-    <script defer src='/shared/js/performance_testing_helper.js'></script>

     <!-- Specific scripts -->
     <script type="text/javascript" defer src="js/settings/settings.js"></script>
@@ -233,9 +232,9 @@
       <form role="dialog" class="view" data-type="action" data-viewport="ethereal" id="reset-data-dialog" >
         <header data-l10n-id="reset-data-usage">Reset Data usage</header>
         <menu>
-          <button type="button" id="reset-data-mobile-usage" data-l10n-id="reset-mobile">Reset mobile data</button>
-          <button type="button" id="reset-data-wifi-usage" data-l10n-id="reset-wifi">Reset Wi-Fi data</button>
-          <button type="button" id="reset-all-data-usage" data-l10n-id="reset-all-data-usage">Reset mobile & Wi-Fi data</button>
+          <button id="reset-data-mobile-usage" data-l10n-id="reset-mobile">Reset mobile data</button>
+          <button id="reset-data-wifi-usage" data-l10n-id="reset-wifi">Reset Wi-Fi data</button>
+          <button id="reset-all-data-usage" data-l10n-id="reset-all-data-usage">Reset mobile & Wi-Fi data</button>

           <button type="button" data-l10n-id="cancel" class="close-reset-dialog">Cancel</button>
         </menu>
diff --git a/apps/costcontrol/style/images/app/icons/next.png b/apps/costcontrol/style/images/app/icons/next.png
new file mode 100644
index 0000000..0d77817
Binary files /dev/null and b/apps/costcontrol/style/images/app/icons/next.png differ
diff --git a/apps/costcontrol/style/images/app/icons/next@1.5x.png b/apps/costcontrol/style/images/app/icons/next@1.5x.png
new file mode 100644
index 0000000..5cb00ec
Binary files /dev/null and b/apps/costcontrol/style/images/app/icons/next@1.5x.png differ
diff --git a/apps/costcontrol/style/images/app/icons/next@2.25x.png b/apps/costcontrol/style/images/app/icons/next@2.25x.png
new file mode 100644
index 0000000..af3313d
Binary files /dev/null and b/apps/costcontrol/style/images/app/icons/next@2.25x.png differ
diff --git a/apps/costcontrol/style/images/app/icons/next@2x.png b/apps/costcontrol/style/images/app/icons/next@2x.png
new file mode 100644
index 0000000..dacadc5
Binary files /dev/null and b/apps/costcontrol/style/images/app/icons/next@2x.png differ
diff --git a/apps/costcontrol/style/images/app/icons/prev.png b/apps/costcontrol/style/images/app/icons/prev.png
new file mode 100644
index 0000000..b33773d
Binary files /dev/null and b/apps/costcontrol/style/images/app/icons/prev.png differ
diff --git a/apps/costcontrol/style/images/app/icons/prev@1.5x.png b/apps/costcontrol/style/images/app/icons/prev@1.5x.png
new file mode 100644
index 0000000..f4c46a5
Binary files /dev/null and b/apps/costcontrol/style/images/app/icons/prev@1.5x.png differ
diff --git a/apps/costcontrol/style/images/app/icons/prev@2.25x.png b/apps/costcontrol/style/images/app/icons/prev@2.25x.png
new file mode 100644
index 0000000..b340ca9
Binary files /dev/null and b/apps/costcontrol/style/images/app/icons/prev@2.25x.png differ
diff --git a/apps/costcontrol/style/images/app/icons/prev@2x.png b/apps/costcontrol/style/images/app/icons/prev@2x.png
new file mode 100644
index 0000000..2de964e
Binary files /dev/null and b/apps/costcontrol/style/images/app/icons/prev@2x.png differ
diff --git a/apps/costcontrol/style/images/app/ui/datausage/toggle-bg.png b/apps/costcontrol/style/images/app/ui/datausage/toggle-bg.png
new file mode 100644
index 0000000..a174b67
Binary files /dev/null and b/apps/costcontrol/style/images/app/ui/datausage/toggle-bg.png differ
diff --git a/apps/costcontrol/style/images/widget/ui/no-credit-pattern.png b/apps/costcontrol/style/images/widget/ui/no-credit-pattern.png
new file mode 100644
index 0000000..7f9d268
Binary files /dev/null and b/apps/costcontrol/style/images/widget/ui/no-credit-pattern.png differ
diff --git a/apps/costcontrol/style/views/datausage.css b/apps/costcontrol/style/views/datausage.css
index 4ae3c43..7c69188 100644
--- a/apps/costcontrol/style/views/datausage.css
+++ b/apps/costcontrol/style/views/datausage.css
@@ -1,11 +1,6 @@
 /* DATAUSAGE VIEW */
 #datausage-tab .content {
   padding: 0;
-  height: 100%;
-  display: flex;
-  flex-direction: column;
-  padding-bottom: 3rem;
-  box-sizing: border-box;
 }

 /* DATA TOGGLE */
@@ -85,7 +80,6 @@
 #datausage-tab section.graph {
   position: relative;
   height: 28.5rem;
-  flex: 1;
 }

 #datausage-tab section.graph canvas {
diff --git a/apps/costcontrol/test/unit/startup_test.js b/apps/costcontrol/test/unit/startup_test.js
index 441cb9e..2fb1538 100755
--- a/apps/costcontrol/test/unit/startup_test.js
+++ b/apps/costcontrol/test/unit/startup_test.js
@@ -3,7 +3,6 @@
           MockMozNetworkStats, MocksHelper, SimManager, MockNavigatorSettings,
           AirplaneModeHelper, MockNavigatorMozIccManager
 */
-/* exported PerformanceTestingHelper */
 'use strict';

 // XXX: As there are two iframes in the body, Firefox adds two indexed items
@@ -41,10 +40,6 @@ var realCommon,
     realMozNetworkStats,
     realMozIccManager;

-var PerformanceTestingHelper = {
-  dispatch: function() { }
-};
-
 if (!window.navigator.mozNetworkStats) {
   window.navigator.mozNetworkStats = null;
 }
@@ -86,6 +81,7 @@ var MocksHelperForUnitTest = new MocksHelper([
 suite('Application Startup Modes Test Suite >', function() {

   MocksHelperForUnitTest.attachTestHelpers();
+
   suiteSetup(function() {
     realCommon = window.Common;

diff --git a/apps/email/js/cards/cmp/contact_menu.html b/apps/email/js/cards/cmp/contact_menu.html
index 43563f1..fbd7573 100644
--- a/apps/email/js/cards/cmp/contact_menu.html
+++ b/apps/email/js/cards/cmp/contact_menu.html
@@ -1,9 +1,6 @@
 <form class="cmp-contact-menu" role="dialog" data-type="action">
   <header></header>
    <menu>
-     <button class="cmp-contact-menu-edit" data-l10n-id="message-edit-menu-edit">
-      EdiT
-    </button>
      <button class="cmp-contact-menu-delete" data-l10n-id="message-edit-menu-delete">
       DeletE
     </button>
diff --git a/apps/email/js/cards/cmp/invalid_addresses.html b/apps/email/js/cards/cmp/invalid_addresses.html
deleted file mode 100644
index a3a4cc5..0000000
--- a/apps/email/js/cards/cmp/invalid_addresses.html
+++ /dev/null
@@ -1,11 +0,0 @@
-<form role="dialog" data-type="confirm">
-  <section>
-    <h1 data-l10n-id="compose-invalid-addresses-title">ConfirmatioN</h1>
-    <p data-l10n-id="compose-invalid-addresses-description"></p>
-  </section>
-  <menu>
-    <button id="cmp-confirm-invalid-addresses"
-            class="confirm-dialog-ok recommend"
-            data-l10n-id="dialog-button-ok">OK</button>
-  </menu>
-</form>
diff --git a/apps/email/js/cards/cmp/send_failed_confirm.html b/apps/email/js/cards/cmp/send_failed_confirm.html
new file mode 100644
index 0000000..c43fb72
--- /dev/null
+++ b/apps/email/js/cards/cmp/send_failed_confirm.html
@@ -0,0 +1,10 @@
+<form role="dialog" class="cmp-send-failed-confirm" data-type="confirm">
+  <section>
+    <h1 data-l10n-id="confirm-dialog-title">ConfirmatioN</h1>
+    <p><span data-l10n-id="compose-send-message-failed"></span></p>
+  </section>
+  <menu>
+    <button id="cmp-send-failed-cancel" data-l10n-id="message-multiedit-cancel">CanceL</button>
+    <button id="cmp-send-failed-ok" class="recommend" data-l10n-id="dialog-button-ok">OK</button>
+  </menu>
+</form>
\ No newline at end of file
diff --git a/apps/email/js/cards/cmp/sending_container.html b/apps/email/js/cards/cmp/sending_container.html
new file mode 100644
index 0000000..9fab69e
--- /dev/null
+++ b/apps/email/js/cards/cmp/sending_container.html
@@ -0,0 +1,7 @@
+<form role="dialog" data-type="confirm" class="cmp-sending-container">
+  <section class="cmp-messages-sending">
+    <h1 data-l10n-id="compose-sending-message">Sending messagE</h1>
+    <p><progress></progress></p>
+  </section>
+</form>
+
diff --git a/apps/email/js/cards/compose.html b/apps/email/js/cards/compose.html
index 3e69a59..98ef5e5 100644
--- a/apps/email/js/cards/compose.html
+++ b/apps/email/js/cards/compose.html
@@ -58,7 +58,6 @@
                data-l10n-id="compose-subject">SubjecT:</span>
         <input class="cmp-subject-text" type="text" dir="auto" />
       </div>
-      <div class="cmp-error-message collapsed"></div>
       <div class="cmp-envelope-line cmp-attachment-total collapsed">
         <span class="cmp-attachment-label cmp-addr-label"
                data-l10n-id="compose-attachments[zero]">AttachmentS:</span>
diff --git a/apps/email/js/cards/compose.js b/apps/email/js/cards/compose.js
index ab2588b..ceb5ca1 100755
--- a/apps/email/js/cards/compose.js
+++ b/apps/email/js/cards/compose.js
@@ -13,11 +13,12 @@ var templateNode = require('tmpl!./compose.html'),
     cmpContactMenuNode = require('tmpl!./cmp/contact_menu.html'),
     cmpDraftMenuNode = require('tmpl!./cmp/draft_menu.html'),
     cmpPeepBubbleNode = require('tmpl!./cmp/peep_bubble.html'),
-    cmpInvalidAddressesNode = require('tmpl!./cmp/invalid_addresses.html'),
+    cmpSendFailedConfirmNode = require('tmpl!./cmp/send_failed_confirm.html'),
+    cmpSendingContainerNode = require('tmpl!./cmp/sending_container.html'),
     msgAttachConfirmNode = require('tmpl!./msg/attach_confirm.html'),
     evt = require('evt'),
     common = require('mail_common'),
-    Toaster = require('toaster'),
+    Toaster = common.Toaster,
     model = require('model'),
     iframeShims = require('iframe_shims'),
     Marquee = require('marquee'),
@@ -74,6 +75,7 @@ function ComposeCard(domNode, mode, args) {
   this.composerData = args.composerData || {};
   this.activity = args.activity;
   this.sending = false;
+  this.wifiLock = null;

   // Management of attachment work, to limit memory use
   this._totalAttachmentsFinishing = 0;
@@ -95,7 +97,6 @@ function ComposeCard(domNode, mode, args) {
   this.subjectNode = domNode.getElementsByClassName('cmp-subject-text')[0];
   this.textBodyNode = domNode.getElementsByClassName('cmp-body-text')[0];
   this.htmlBodyContainer = domNode.getElementsByClassName('cmp-body-html')[0];
-  this.errorMessage = domNode.getElementsByClassName('cmp-error-message')[0];
   this.htmlIframeNode = null;

   this.scrollContainer =
@@ -155,6 +156,11 @@ function ComposeCard(domNode, mode, args) {
   // state.
   this._selfClosed = false;

+  // Sent sound init
+  this.sentAudio = new Audio('/sounds/sent.ogg');
+  this.sentAudio.mozAudioChannelType = 'notification';
+  this.playSoundOnSend = false;
+
   // Set up unique data IDs for data-sensitive operations that could be in
   // progress. These IDs are unique per kind of action, not unique per instance
   // of a kind of action. However, these IDs are just used to know if a hard
@@ -163,7 +169,6 @@ function ComposeCard(domNode, mode, args) {
   this._dataIdSaveDraft = dataId + '-saveDraft';
   this._dataIdSendEmail = dataId + '-sendEmail';
 }
-
 ComposeCard.prototype = {
   /**
    * Inform Cards to not emit startup content events, this card will trigger
@@ -260,23 +265,27 @@ ComposeCard.prototype = {
       // then this logic will need to change, both the acquisition of the
       // account pref and the folder to use for the composer. So it is good to
       // group this logic together, since they both will need to change later.
-      if (this.composer) {
-        this._loadStateFromComposer();
-      } else {
-        var data = this.composerData;
-        model.latestOnce('folder', function(folder) {
-          this.composer = model.api.beginMessageComposition(data.message,
-                                                            folder,
-                                                            data.options,
-                                                            function() {
-            if (data.onComposer) {
-              data.onComposer(this.composer, this);
-            }
-
-            this._loadStateFromComposer();
+      model.latestOnce('account', function(account) {
+        this.playSoundOnSend = !!account.playSoundOnSend;
+
+        if (this.composer) {
+          this._loadStateFromComposer();
+        } else {
+          var data = this.composerData;
+          model.latestOnce('folder', function(folder) {
+            this.composer = model.api.beginMessageComposition(data.message,
+                                                              folder,
+                                                              data.options,
+                                                              function() {
+              if (data.onComposer) {
+                data.onComposer(this.composer, this);
+              }
+
+              this._loadStateFromComposer();
+            }.bind(this));
           }.bind(this));
-        }.bind(this));
-      }
+        }
+      }.bind(this));
     }.bind(this));
   },

@@ -304,9 +313,9 @@ ComposeCard.prototype = {
     expandAddresses(this.ccNode, this.composer.cc);
     expandAddresses(this.bccNode, this.composer.bcc);

-    this.validateAddresses();
-
-    this.renderSendStatus();
+    if (this.isEmptyAddress()) {
+      this.sendButton.setAttribute('aria-disabled', 'true');
+    }

     // Add attachments
     this.renderAttachments();
@@ -336,68 +345,11 @@ ComposeCard.prototype = {
     }
   },

-  /**
-   * If this draft came from the outbox, it might have a sendStatus
-   * description explaining why the send failed. Display it if so.
-   *
-   * The sendStatus information on this messages is provided through
-   * the sendOutboxMessages job; see `mailapi/jobs/outbox.js` for details.
-   */
-  renderSendStatus: function() {
-    var sendStatus = this.composer.sendStatus || {};
-    if (sendStatus.state === 'error') {
-      var badAddresses = sendStatus.badAddresses || [];
-
-      // For debugging, report some details to the console, masking
-      // recipients for privacy.
-      console.log('Editing a failed outbox message. Details:', JSON.stringify({
-        err: sendStatus.err,
-        badAddressCount: badAddresses.length,
-        sendFailures: sendStatus.sendFailures
-      }, null, ' '));
-
-      var l10nId;
-      if (badAddresses.length || sendStatus.err === 'bad-recipient') {
-        l10nId = 'send-failure-recipients';
-      } else {
-        l10nId = 'send-failure-unknown';
-      }
-
-      mozL10n.localize(this.errorMessage, l10nId);
-      this.errorMessage.classList.remove('collapsed');
-    } else {
-      this.errorMessage.classList.add('collapsed');
-    }
-  },
-
-  /**
-   * Return true if the given address is syntactically valid.
-   *
-   * @param {String} address
-   *   The email address to validate, as a string.
-   * @return {Boolean}
-   */
-  isValidAddress: function(address) {
-    // An address is valid if model.api.parseMailbox thinks it
-    // contains a valid address. (It correctly classifies names that
-    // are not valid addresses.)
-    var mailbox = model.api.parseMailbox(address);
-    return mailbox && mailbox.address;
-  },
-
-  /**
-   * Extract addresses from the bubbles and/or inputs, returning a map
-   * with keys for 'to', 'cc', 'bcc', 'all', and 'invalid' addresses.
-   */
-  extractAddresses: function() {
-    var allAddresses = [];
-    var invalidAddresses = [];
-
-    // Extract the addresses from the bubbles as well as any partial
-    // addresses entered in the text input.
-    var frobAddressNode = (function(node) {
-      var bubbles = node.parentNode.querySelectorAll('.cmp-peep-bubble');
+  _saveStateToComposer: function() {
+    function frobAddressNode(node) {
+      var container = node.parentNode;
       var addrList = [];
+      var bubbles = container.querySelectorAll('.cmp-peep-bubble');
       for (var i = 0; i < bubbles.length; i++) {
         var dataSet = bubbles[i].dataset;
         addrList.push({ name: dataSet.name, address: dataSet.address });
@@ -406,34 +358,11 @@ ComposeCard.prototype = {
         var mailbox = model.api.parseMailbox(node.value);
         addrList.push({ name: mailbox.name, address: mailbox.address });
       }
-      addrList.forEach(function(addr) {
-        allAddresses.push(addr);
-        if (!this.isValidAddress(addr.address)) {
-          invalidAddresses.push(addr);
-        }
-      }.bind(this));
       return addrList;
-    }.bind(this));
-
-    // NOTE: allAddresses contains invalidAddresses, but we never
-    // actually send a message directly using either of those lists.
-    // We use to/cc/bcc for that, and our send validation here
-    // prevents users from sending a message with invalid addresses.
-
-    return {
-      to: frobAddressNode(this.toNode),
-      cc: frobAddressNode(this.ccNode),
-      bcc: frobAddressNode(this.bccNode),
-      all: allAddresses,
-      invalid: invalidAddresses
-    };
-  },
-
-  _saveStateToComposer: function() {
-    var addrs = this.extractAddresses();
-    this.composer.to = addrs.to;
-    this.composer.cc = addrs.cc;
-    this.composer.bcc = addrs.bcc;
+    }
+    this.composer.to = frobAddressNode(this.toNode);
+    this.composer.cc = frobAddressNode(this.ccNode);
+    this.composer.bcc = frobAddressNode(this.bccNode);
     this.composer.subject = this.subjectNode.value;
     this.composer.body.text = this.fromEditor();
     // The HTML representation cannot currently change in our UI, so no
@@ -517,9 +446,7 @@ ComposeCard.prototype = {
     var container = node.parentNode;
     var bubble = this.createBubbleNode(name || address, address);
     container.insertBefore(bubble, node);
-    this.validateAddresses();
   },
-
   /**
    * deleteBubble: Delete the bubble from the parent container.
    */
@@ -531,38 +458,22 @@ ComposeCard.prototype = {
     if (node.classList.contains('cmp-peep-bubble')) {
       container.removeChild(node);
     }
-    this.validateAddresses();
+    if (this.isEmptyAddress()) {
+      this.sendButton.setAttribute('aria-disabled', 'true');
+    }
   },

   /**
-   * editBubble: Turn the bubble back into editable text.
+   * Check if envelope-bar is empty or contains any string or bubble.
    */
-  editBubble: function(node) {
-    if (!node) {
-      return;
+  isEmptyAddress: function() {
+    var inputSet = this.toNode.value + this.ccNode.value + this.bccNode.value;
+    var addrBar = this.domNode.getElementsByClassName('cmp-envelope-bar')[0];
+    var bubbles = addrBar.querySelectorAll('.cmp-peep-bubble');
+    if (!inputSet.replace(/\s/g, '') && bubbles.length === 0) {
+      return true;
     }
-    var container = node.parentNode;
-    if (node.classList.contains('cmp-peep-bubble')) {
-      container.removeChild(node);
-      var input = container.querySelector('.cmp-addr-text');
-      // If there is already a partially or fully entered address in
-      // the typing area, force it to be converted into a bubble, even
-      // though the resulting address may not be valid. If it's not
-      // valid, that bubble can subsequently be edited. This helps
-      // avoid the user losing anything they typed in.
-      if (input.value.length > 0) {
-        input.value = input.value + ',';
-        this.onAddressInput({ target: input }); // Bubblize if necessary.
-      }
-      var address = node.dataset.address;
-      var selStart = input.value.length;
-      var selEnd = selStart + address.length;
-      input.value += address;
-      input.focus();
-      this.onAddressInput({ target: input }); // Force width calculations.
-      input.setSelectionRange(selStart, selEnd);
-    }
-    this.validateAddresses();
+    return false;
   },

   /**
@@ -576,6 +487,9 @@ ComposeCard.prototype = {
       //delete bubble
       var previousBubble = node.previousElementSibling;
       this.deleteBubble(previousBubble);
+      if (this.isEmptyAddress()) {
+        this.sendButton.setAttribute('aria-disabled', 'true');
+      }
     }
   },

@@ -586,6 +500,11 @@ ComposeCard.prototype = {
     var node = evt.target;
     var container = evt.target.parentNode;

+    if (this.isEmptyAddress()) {
+      this.sendButton.setAttribute('aria-disabled', 'true');
+      return;
+    }
+    this.sendButton.setAttribute('aria-disabled', 'false');
     var makeBubble = false;
     // When do we want to tie off this e-mail address, put it into a bubble
     // and clear the input box so the user can type another address?
@@ -631,8 +550,6 @@ ComposeCard.prototype = {
     this.stringContainer.textContent = node.value;
     node.style.width =
       (this.stringContainer.clientWidth + 2) + 'px';
-
-    this.validateAddresses();
   },

   onContainerClick: function(evt) {
@@ -651,9 +568,6 @@ ComposeCard.prototype = {
       var formSubmit = (function(evt) {
         document.body.removeChild(contents);
         switch (evt.explicitOriginalTarget.className) {
-          case 'cmp-contact-menu-edit':
-            this.editBubble(target);
-            break;
           case 'cmp-contact-menu-delete':
             this.deleteBubble(target);
             break;
@@ -934,68 +848,30 @@ ComposeCard.prototype = {
     }
   },

-  /**
-   * Validate that the provided addresses are valid. Enable the send
-   * button conditional on all addresses being correct. If all
-   * addresses are correct and we had previously displayed a
-   * sendStatus error, hide the sendStatus error display.
-   *
-   * @return {Boolean}
-   *   True if all addresses are valid, otherwise false.
-   */
-  validateAddresses: function() {
-    var addrs = this.extractAddresses();
-
-    // The send button should only be disabled if the addresses are
-    // empty. They can still tap the send button if there are invalid
-    // addresses.
-    if (addrs.all.length === 0) {
-      this.sendButton.setAttribute('aria-disabled', 'true');
-    } else {
-      this.sendButton.setAttribute('aria-disabled', 'false');
-    }
-
-    if (addrs.invalid.length === 0) {
-      // If the error message is visible, meaning they opened this
-      // message from the outbox after a send failure, remove the error
-      // when they've corrected the recipients.
-      this.errorMessage.classList.add('collapsed');
-      return true; // No invalid addresses.
-    } else {
-      return false; // Some addresses were invalid.
+  releaseLocks: function() {
+    if (this.wifiLock) {
+      this.wifiLock.unlock();
+      this.wifiLock = null;
     }
   },

-  /**
-   * If the user attempts to tap the send button while there are
-   * invalid addresses, display a dialog to warn them to correct the
-   * error. Otherwise, go ahead and send the message.
-   */
   onSend: function() {
-    if (!this.validateAddresses()) {
-      ConfirmDialog.show(cmpInvalidAddressesNode.cloneNode(true), {
-        id: 'cmp-confirm-invalid-addresses',
-        handler: function() {
-          // There is nothing to do.
-        }
-      });
-    } else {
-      this.reallySend();
-    }
-  },
-
-  /**
-   * Actually send the message, foregoing any validation that the
-   * addresses are valid (as we did in `onSend` above).
-   */
-  reallySend: function() {
     /* Check if already lock is enabled,
      * If so disable it and then re enable the lock
      */
+    this.releaseLocks();
+    if (navigator.requestWakeLock) {
+      this.wifiLock = navigator.requestWakeLock('wifi');
+    }
     this._saveStateToComposer();

+    // XXX well-formedness-check (ideally just handle by not letting you send
+    // if you haven't added anyone...)
+    var self = this;
     var activity = this.activity;
     var domNode = this.domNode;
+    var sendingTemplate = cmpSendingContainerNode;
+    domNode.appendChild(sendingTemplate);

     // Indicate we are sending so we can suppress any of our auto-save logic
     // from trying to fire.
@@ -1004,28 +880,56 @@ ComposeCard.prototype = {
     // Initiate the send.
     console.log('compose: initiating send');
     evt.emit('uiDataOperationStart', this._dataIdSendEmail);
+    this.composer.finishCompositionSendMessage(
+      function callback(error , badAddress, sentDate) {
+        // Card could have been destroyed in the meantime,
+        // via an app card reset (not a _selfClosed case),
+        // so do not bother with the rest of this work if
+        // that was the case.
+        if (!this.composer) {
+          return;
+        }

-    this.composer.finishCompositionSendMessage(function(sendInfo) {
-      evt.emit('uiDataOperationStop', this._dataIdSendEmail);
-
-      // Card could have been destroyed in the meantime,
-      // via an app card reset (not a _selfClosed case),
-      // so do not bother with the rest of this work if
-      // that was the case.
-      if (!this.composer) {
-        return;
-      }
-
-      if (activity) {
-        // Just mention the action completed, but do not give
-        // specifics, to maintain some privacy.
-        activity.postResult('complete');
-        activity = null;
-      }
+        console.log('compose: callback triggered, err:', error);
+        // releasing the wake lock on send response
+        this.releaseLocks();
+        var activityHandler = function() {
+          if (activity) {
+            // Just mention the action completed, but do not give
+            // specifics, to maintain some privacy.
+            activity.postResult('complete');
+            activity = null;
+          }
+        };
+
+        domNode.removeChild(sendingTemplate);
+        if (error) {
+          // Indicate we are no longer sending so that if the user goes on to
+          // change the message, we do save it.
+          this.sending = false;
+
+          // TODO: We don't have the resend now, so we use alert dialog
+          //       before resend is enabled.
+          // var dialog = cmpSendFailedConfirmNode.cloneNode(true);
+          // document.body.appendChild(dialog);
+          // var formSubmit = function(evt) {
+          //   document.body.removeChild(dialog);
+          //   return false;
+          // };
+          // dialog.addEventListener('submit', formSubmit);
+          alert(mozL10n.get('compose-send-message-failed'));
+          return;
+        }

-      this._closeCard();
+        if (self.playSoundOnSend) {
+          self.sentAudio.play();
+        }

-    }.bind(this));
+        evt.emit('uiDataOperationStop', this._dataIdSendEmail);
+        activityHandler();
+        this._closeCard();
+      }.bind(this)
+    );
   },

   onContactAdd: function(event) {
@@ -1048,6 +952,7 @@ ComposeCard.prototype = {
               name = name[0];
           }
           self.insertBubble(emt, name, this.result.email);
+          self.sendButton.setAttribute('aria-disabled', 'false');
         }
       };
     } catch (e) {
@@ -1067,9 +972,7 @@ ComposeCard.prototype = {
       // toaster is shown for some other reason. In that case, do not want to
       // trigger activity after previous attachment completes.
       this._wantAttachment = true;
-      Toaster.toast({
-        text: mozL10n.get('compose-attachment-still-working')
-      });
+      Toaster.show('text', mozL10n.get('compose-attachment-still-working'));
       return;
     }

@@ -1127,6 +1030,8 @@ ComposeCard.prototype = {
       this._saveDraft('automatic');
     }

+    this.releaseLocks();
+
     if (this.composer) {
       this.composer.die();
       this.composer = null;
diff --git a/apps/email/js/cards/message_list.js b/apps/email/js/cards/message_list.js
index a1bfe57..ad97945 100644
--- a/apps/email/js/cards/message_list.js
+++ b/apps/email/js/cards/message_list.js
@@ -11,7 +11,6 @@ var templateNode = require('tmpl!./message_list.html'),
     common = require('mail_common'),
     date = require('date'),
     evt = require('evt'),
-    Toaster = require('toaster'),
     model = require('model'),
     headerCursor = require('header_cursor').cursor,
     htmlCache = require('html_cache'),
@@ -19,6 +18,7 @@ var templateNode = require('tmpl!./message_list.html'),
     mozL10n = require('l10n!'),
     VScroll = require('vscroll'),
     Cards = common.Cards,
+    Toaster = common.Toaster,
     ConfirmDialog = common.ConfirmDialog,
     batchAddClass = common.batchAddClass,
     bindContainerHandler = common.bindContainerHandler,
@@ -53,7 +53,6 @@ var defaultVScrollData = {
              '\u2583\u2583\u2583\u2583\u2583\u2583\u2583\u2583',
   'isRead': true,
   'isStarred': false,
-  'sendStatus': {},
   'subject': '\u2583\u2583\u2583\u2583\u2583\u2583\u2583\u2583' +
              '\u2583\u2583\u2583\u2583\u2583\u2583\u2583\u2583' +
              '\u2583\u2583\u2583\u2583\u2583\u2583\u2583\u2583'
@@ -202,11 +201,6 @@ function MessageListCard(domNode, mode, args) {
   this.toolbar.moveBtn
     .addEventListener('click', this.onMoveMessages.bind(this, true), false);

-  this.toolbar.starBtn = this.domNode.getElementsByClassName('msg-star-btn')[0],
-  this.toolbar.readBtn =
-    this.domNode.getElementsByClassName('msg-mark-read-btn')[0];
-
-
   // -- non-search mode
   if (mode === 'nonsearch') {
     // - search teaser bar
@@ -336,7 +330,6 @@ function MessageListCard(domNode, mode, args) {

   model.latest('folder', this._folderChanged);
   model.on('newInboxMessages', this.onNewMail);
-  model.on('backgroundSendStatus', this.onBackgroundSendStatus.bind(this));

   model.on('foldersSliceOnChange', this.onFoldersSliceChange);

@@ -368,7 +361,6 @@ function MessageListCard(domNode, mode, args) {
     }
   }
 }
-
 MessageListCard.prototype = {
   /**
    * How many milliseconds since our last progress update event before we put
@@ -441,28 +433,6 @@ MessageListCard.prototype = {
       return;
     }

-    if (this.curFolder.type === 'outbox') {
-      // You cannot edit the outbox messages if the outbox is syncing.
-      if (editMode && this.outboxSyncInProgress) {
-        return;
-      }
-
-      // Outbox Sync and Edit Mode are mutually exclusive. Disable
-      // outbox syncing before allowing us to enter edit mode, and
-      // vice versa. The callback shouldn't take long, but we wait to
-      // trigger edit mode until outbox sync has been fully disabled,
-      // to prevent ugly theoretical race conditions.
-      model.api.setOutboxSyncEnabled(model.account, !editMode, function() {
-        this._setEditMode(editMode);
-      }.bind(this));
-    } else {
-      this._setEditMode(editMode);
-    }
-  },
-
-  // This function is called from setEditMode() after ensuring that
-  // the backend is in a state where we can safely use edit mode.
-  _setEditMode: function(editMode) {
     var i,
         domNode = this.domNode;

@@ -532,6 +502,9 @@ MessageListCard.prototype = {
       mozL10n.get('message-multiedit-header',
                   { n: this.selectedMessages.length });

+    var starBtn = this.domNode.getElementsByClassName('msg-star-btn')[0],
+        readBtn = this.domNode.getElementsByClassName('msg-mark-read-btn')[0];
+
     // Enabling/disabling rules (not UX-signed-off):  Our bias is that people
     // want to star messages and mark messages unread (since it they naturally
     // end up unread), so unless messages are all in this state, we assume that
@@ -553,8 +526,17 @@ MessageListCard.prototype = {
     // Mark read if everything is unread, otherwise unread
     this.setAsRead = (this.selectedMessages.length && numRead === 0);

-    this.toolbar.starBtn.classList.toggle('msg-btn-active', !this.setAsStarred);
-    this.toolbar.readBtn.classList.toggle('msg-btn-active', this.setAsRead);
+    if (!this.setAsStarred) {
+      starBtn.classList.add('msg-btn-active');
+    } else {
+      starBtn.classList.remove('msg-btn-active');
+    }
+
+    if (this.setAsRead) {
+      readBtn.classList.add('msg-btn-active');
+    } else {
+      readBtn.classList.remove('msg-btn-active');
+    }
   },

   _hideSearchBoxByScrolling: function() {
@@ -650,7 +632,6 @@ MessageListCard.prototype = {
     switch (folder.type) {
       case 'drafts':
       case 'localdrafts':
-      case 'outbox':
       case 'sent':
         this.isIncomingFolder = false;
         break;
@@ -664,19 +645,15 @@ MessageListCard.prototype = {

     this.hideEmptyLayout();

-
-    // You can't refresh messages in the localdrafts folder.
-    this.toolbar.refreshBtn.classList.toggle('collapsed',
-                                             folder.type === 'localdrafts');
-    // You can't move messages in localdrafts or the outbox.
-    this.toolbar.moveBtn.classList.toggle('collapsed',
-                                          folder.type === 'localdrafts' ||
-                                          folder.type === 'outbox');
-    // You can't flag or change the read status of messages in the outbox.
-    this.toolbar.starBtn.classList.toggle('collapsed',
-                                          folder.type === 'outbox');
-    this.toolbar.readBtn.classList.toggle('collapsed',
-                                          folder.type === 'outbox');
+    // you can't refresh the localdrafts folder or move messages out of it.
+    if (folder.type === 'localdrafts') {
+      this.toolbar.refreshBtn.classList.add('collapsed');
+      this.toolbar.moveBtn.classList.add('collapsed');
+    }
+    else {
+      this.toolbar.refreshBtn.classList.remove('collapsed');
+      this.toolbar.moveBtn.classList.remove('collapsed');
+    }

     this.updateLastSynced(folder.lastSyncedAt);

@@ -752,15 +729,6 @@ MessageListCard.prototype = {
       return;
     }

-    // The outbox's refresh button is used for sending messages, so we
-    // ignore any syncing events generated by the slice. The outbox
-    // doesn't need to show many of these indicators (like the "Load
-    // More Messages..." node, etc.) and it has its own special
-    // "refreshing" display, as documented elsewhere in this file.
-    if (this.curFolder.type === 'outbox') {
-      return;
-    }
-
     if (newStatus === 'synchronizing' ||
        newStatus === 'syncblocked') {
         this.syncingNode.classList.remove('collapsed');
@@ -775,21 +743,13 @@ MessageListCard.prototype = {
         // provide a means to attempt to talk to the server again.  We have made
         // onRefresh pretty clever, so it can do all the legwork on
         // accomplishing this goal.
-        Toaster.toast({
-          text: mozL10n.get('toaster-retryable-syncfailed'),
-          actionLabel: mozL10n.get('toaster-retry'),
-          action: this.onRefresh.bind(this)
-        });
+        Toaster.logRetryable(newStatus, this.onRefresh.bind(this));
       }
       this.toolbar.refreshBtn.dataset.state = 'synchronized';
       this.syncingNode.classList.add('collapsed');
     }
   },

-  isEmpty: function() {
-    return headerCursor.messagesSlice.items.length === 0;
-  },
-
   /**
    * Hide buttons that are not appropriate if we have no messages and display
    * the appropriate l10n string in the message list proper.
@@ -804,14 +764,7 @@ MessageListCard.prototype = {
       mozL10n.get('messages-search-empty') :
       mozL10n.get('messages-folder-empty');
     this.messageEmptyContainer.classList.remove('collapsed');
-
     this.toolbar.editBtn.disabled = true;
-
-    // The outbox can't refresh anything if there are no messages.
-    if (this.curFolder.type === 'outbox') {
-      this.toolbar.refreshBtn.disabled = true;
-    }
-
     this._hideSearchBoxByScrolling();
   },
   /**
@@ -821,7 +774,6 @@ MessageListCard.prototype = {
   hideEmptyLayout: function() {
     this.messageEmptyContainer.classList.add('collapsed');
     this.toolbar.editBtn.disabled = false;
-    this.toolbar.refreshBtn.disabled = false;
   },


@@ -926,27 +878,6 @@ MessageListCard.prototype = {
     }
   },

-  // When an email is being sent from the app (and not from an outbox
-  // refresh), we'll receive notification here. Play a sound and
-  // raise a toast, if appropriate.
-  onBackgroundSendStatus: function(data) {
-    if (this.curFolder.type === 'outbox') {
-      if (data.state === 'sending') {
-        // If the message is now sending, make sure we're showing the
-        // outbox as "currently being synchronized".
-        this.toggleOutboxSyncingDisplay(true);
-      } else if (data.state === 'syncDone') {
-        this.toggleOutboxSyncingDisplay(false);
-      }
-    }
-
-    if (data.emitNotifications) {
-      Toaster.toast({
-        text: data.localizedDescription
-      });
-    }
-  },
-
   /**
    * Waits for scrolling to stop before fetching snippets.
    */
@@ -1257,6 +1188,8 @@ MessageListCard.prototype = {
     }
   },

+  // The funny name because it is auto-bound as a listener for
+  // messagesSlice events in headerCursor using a naming convention.
   onMessagesChange: function(message, index) {
     this.updateMessageDom(false, message);

@@ -1349,24 +1282,10 @@ MessageListCard.prototype = {

     // star
     var starNode = msgNode.getElementsByClassName('msg-header-star')[0];
-
     starNode.classList.toggle('msg-header-star-starred', message.isStarred);
     // subject needs to give space for star if it is visible
     subjectNode.classList.toggle('icon-short', message.isStarred);

-    // sync status
-    var syncNode =
-          msgNode.getElementsByClassName('msg-header-syncing-section')[0];
-
-    // sendState is only intended for outbox messages, so not all
-    // messages will have sendStatus defined.
-    var sendState = message.sendStatus && message.sendStatus.state;
-
-    syncNode.classList.toggle('msg-header-syncing-section-syncing',
-                              sendState === 'sending');
-    syncNode.classList.toggle('msg-header-syncing-section-error',
-                              sendState === 'error');
-
     // edit mode select state
     if (this.editMode) {
       var checkbox = msgNode.querySelector('input[type=checkbox]');
@@ -1495,11 +1414,6 @@ MessageListCard.prototype = {
   },

   onClickMessage: function(messageNode, event) {
-    // You cannot open a message if this is the outbox and it is syncing.
-    if (this.curFolder.type === 'outbox' && this.outboxSyncInProgress) {
-      return;
-    }
-
     var header = messageNode.message;

     // Skip nodes that are default/placeholder ones.
@@ -1530,30 +1444,6 @@ MessageListCard.prototype = {
       return;
     }

-    // When tapping a message in the outbox, don't open the message;
-    // instead, move it to localdrafts and edit the message as a
-    // draft.
-    if (this.curFolder && this.curFolder.type === 'outbox') {
-      // If the message is currently being sent, abort.
-      if (header.sendStatus.state === 'sending') {
-        return;
-      }
-      var draftsFolder =
-            model.foldersSlice.getFirstFolderWithType('localdrafts');
-
-      console.log('outbox: Moving message to localdrafts.');
-      model.api.moveMessages([header], draftsFolder, function(moveMap) {
-        header.id = moveMap[header.id];
-        console.log('outbox: Editing message in localdrafts.');
-        var composer = header.editAsDraft(function() {
-          Cards.pushCard('compose', 'default', 'animate',
-                         { composer: composer });
-        });
-      });
-
-      return;
-    }
-
     function pushMessageCard() {
       Cards.pushCard(
         'message_reader', 'default', 'animate',
@@ -1636,103 +1526,12 @@ MessageListCard.prototype = {
     }
   },

-  /**
-   * The outbox has a special role in the message_list, compared to
-   * other folders. We don't expect to synchronize the outbox with the
-   * server, but we do allow the user to use the refresh button to
-   * trigger all of the outbox messages to send.
-   *
-   * While they're sending, we need to display several spinny refresh
-   * icons: One next to each message while it's queued for sending,
-   * and also the main refresh button.
-   *
-   * However, the outbox send operation doesn't happen all in one go;
-   * the backend only fires one 'sendOutboxMessages' at a time,
-   * iterating through the pending messages. Fortunately, it notifies
-   * the frontend (via `onBackgroundSendStatus`) whenever the state of
-   * any message changes, and it provides a flag to let us know
-   * whether or not the outbox sync is fully complete.
-   *
-   * So the workflow for outbox's refresh UI display is as follows:
-   *
-   * 1. The user taps the "refresh" button. In response:
-   *
-   *    1a. Immediately make all visible refresh icons start spinning.
-   *
-   *    1b. Immediately kick off a 'sendOutboxMessages' job.
-   *
-   * 2. We will start to see send status notifications, in this
-   *    class's onBackgroundSendStatus notification. We listen to
-   *    these events as they come in, and wait until we see a
-   *    notification with state === 'syncDone'. We'll keep the main
-   *    refresh icon spinning throughout this process.
-   *
-   * 3. As messages send or error out, we will receive slice
-   *    notifications for each message (handled here in `messages_change`).
-   *    Since each message holds its own status as `header.sendStatus`,
-   *    we don't need to do anything special; the normal rendering logic
-   *    will reset each message's status icon to the appropriate state.
-   *
-   * But don't take my word for it; see `mailapi/jobs/outbox.js` and
-   * `mailapi/jobmixins.js` in GELAM for backend-centric descriptions
-   * of how the outbox sending process works.
-   */
-  toggleOutboxSyncingDisplay: function(syncing) {
-    // Use an internal guard so that we only trigger changes to the UI
-    // when necessary, rather than every time, which could break animations.
-    if (syncing === this._outboxSyncing) {
-      return;
-    }
-
-    this._outboxSyncing = syncing;
-
-    var i;
-    var items = this.messagesContainer.getElementsByClassName(
-      'msg-header-syncing-section');
-
-    if (syncing) {
-      // For maximum perceived responsiveness, show the spinning icons
-      // next to each message immediately, rather than waiting for the
-      // backend to actually start sending each message. When the
-      // backend reports back with message results, it'll update the
-      // icon to reflect the proper result.
-      for (i = 0; i < items.length; i++) {
-        items[i].classList.add('msg-header-syncing-section-syncing');
-        items[i].classList.remove('msg-header-syncing-section-error');
-      }
-
-      this.toolbar.editBtn.disabled = true;
-      this.toolbar.refreshBtn.dataset.state = 'synchronizing';
-    } else {
-      // After sync, the edit button should remain disabled only if
-      // the list is empty.
-      this.toolbar.editBtn.disabled = this.isEmpty();
-      this.toolbar.refreshBtn.dataset.state = 'synchronized';
-
-      // Similarly, we must stop the refresh icons for each message
-      // from rotating further. For instance, if we are offline, we
-      // won't actually attempt to send any of those messages, so
-      // they'll still have a spinny icon until we forcibly remove it.
-      for (i = 0; i < items.length; i++) {
-        items[i].classList.remove('msg-header-syncing-section-syncing');
-      }
-    }
-  },
-
   onRefresh: function() {
     if (!headerCursor.messagesSlice) {
       return;
     }

-    // If this is the outbox, refresh has a different meaning.
-    if (this.curFolder.type === 'outbox') {
-      // Rather than refreshing the folder, we'll send the pending
-      // outbox messages, and spin the refresh icon while doing so.
-      this.toggleOutboxSyncingDisplay(true);
-    }
-    // If this is a normal folder...
-    else {
-      switch (headerCursor.messagesSlice.status) {
+    switch (headerCursor.messagesSlice.status) {
       // If we're still synchronizing, then the user is not well served by
       // queueing a refresh yet, let's just squash this.
       case 'new':
@@ -1752,31 +1551,20 @@ MessageListCard.prototype = {
           this.showFolder(this.curFolder, /* force new slice */ true);
         }
         break;
-      }
     }
-
-    // Even if we're not actually viewing the outbox right now, we
-    // should still attempt to sync any pending messages. It's fairly
-    // harmless to kick off this job here, but it could also make
-    // sense to do this at the backend level. There are a number of
-    // cases where we might also want to  sendOutboxMessages() if
-    // we follow up with a more comprehensive sync setting -- e.g. on
-    // network change, on app startup, etc., so it's worth revisiting
-    // this and how coupled we want incoming vs outgoing sync to be.
-    model.api.sendOutboxMessages(model.account);
   },

   onStarMessages: function() {
     var op = model.api.markMessagesStarred(this.selectedMessages,
                                          this.setAsStarred);
     this.setEditMode(false);
-    Toaster.toastOperation(op);
+    Toaster.logMutation(op);
   },

   onMarkMessagesRead: function() {
     var op = model.api.markMessagesRead(this.selectedMessages, this.setAsRead);
     this.setEditMode(false);
-    Toaster.toastOperation(op);
+    Toaster.logMutation(op);
   },

   onDeleteMessages: function() {
@@ -1796,7 +1584,7 @@ MessageListCard.prototype = {
         id: 'msg-delete-ok',
         handler: function() {
           var op = model.api.deleteMessages(this.selectedMessages);
-          Toaster.toastOperation(op);
+          Toaster.logMutation(op);
           this.setEditMode(false);
         }.bind(this)
       },
@@ -1832,7 +1620,7 @@ MessageListCard.prototype = {
     //       Please verify this function when api landed.
     Cards.folderSelector(function(folder) {
       var op = model.api.moveMessages(this.selectedMessages, folder);
-      Toaster.toastOperation(op);
+      Toaster.logMutation(op);
       this.setEditMode(false);
     }.bind(this));
   },
diff --git a/apps/email/js/cards/message_reader.js b/apps/email/js/cards/message_reader.js
index e8618c2..9403c7b 100644
--- a/apps/email/js/cards/message_reader.js
+++ b/apps/email/js/cards/message_reader.js
@@ -12,7 +12,6 @@ var MimeMapper,
     msgAttachmentDisabledConfirmNode =
                          require('tmpl!./msg/attachment_disabled_confirm.html'),
     common = require('mail_common'),
-    Toaster = require('toaster'),
     model = require('model'),
     headerCursor = require('header_cursor').cursor,
     evt = require('evt'),
@@ -22,6 +21,7 @@ var MimeMapper,
     queryURI = require('query_uri'),

     Cards = common.Cards,
+    Toaster = common.Toaster,
     ConfirmDialog = common.ConfirmDialog,
     displaySubject = common.displaySubject,
     prettyDate = common.prettyDate,
@@ -360,8 +360,8 @@ MessageReaderCard.prototype = {
         id: 'msg-delete-ok',
         handler: function() {
           var op = this.header.deleteMessage();
+          Toaster.logMutation(op, true);
           Cards.removeCardAndSuccessors(this.domNode, 'animate');
-          Toaster.toastOperation(op);
         }.bind(this)
       },
       { // Cancel
@@ -384,8 +384,8 @@ MessageReaderCard.prototype = {
     //TODO: Please verify move functionality after api landed.
     Cards.folderSelector(function(folder) {
       var op = this.header.moveMessage(folder);
+      Toaster.logMutation(op, true);
       Cards.removeCardAndSuccessors(this.domNode, 'animate');
-      Toaster.toastOperation(op);
     }.bind(this));
   },

diff --git a/apps/email/js/cards/msg/header_item.html b/apps/email/js/cards/msg/header_item.html
index fcf8d43..f070190 100644
--- a/apps/email/js/cards/msg/header_item.html
+++ b/apps/email/js/cards/msg/header_item.html
@@ -2,7 +2,6 @@
   <label class="pack-checkbox negative">
     <input type="checkbox"><span></span>
   </label>
-  <div class="msg-header-syncing-section"></div>
   <div class="msg-header-unread-section"></div>
   <div class="msg-header-details-section">
     <span class="msg-header-author-and-date">
diff --git a/apps/email/js/cards/toaster.html b/apps/email/js/cards/toaster.html
index d16266d..b7ad593 100644
--- a/apps/email/js/cards/toaster.html
+++ b/apps/email/js/cards/toaster.html
@@ -1,4 +1,8 @@
-<section role="status" class="toaster collapsed">
-  <p class="toaster-text"></p>
-  <button class="toaster-action"></button>
-</section>
+<section role="status" class="banner customized collapsed">
+  <button class="toaster-cancel-btn header-left-btn">
+    <span class="icon icon-close"></span>
+  </button>
+  <p>Toaster Title</p>
+  <button data-l10n-id="toaster-undo" class="toaster-banner-undo"></button>
+  <button data-l10n-id="toaster-retry" class="toaster-banner-retry"></button>
+</section>
\ No newline at end of file
diff --git a/apps/email/js/ext/mailapi/activesync/configurator.js b/apps/email/js/ext/mailapi/activesync/configurator.js
index 83e4f65..9500765 100644
--- a/apps/email/js/ext/mailapi/activesync/configurator.js
+++ b/apps/email/js/ext/mailapi/activesync/configurator.js
@@ -1958,37 +1958,30 @@ ActiveSyncFolderSyncer.prototype = {
     // Expand the accuracy range to cover everybody.
     if (!err)
       storage.markSyncedToDawnOfTime();
+    // Always save state, although as an optimization, we could avoid saving state
+    // if we were sure that our state with the server did not advance.
+    this._account.__checkpointSyncCompleted();

-    // Always save state, although as an optimization, we could avoid saving
-    // state if we were sure that our state with the server did not advance.
-    // Do not call our callback until the save has completed.
-    this._account.__checkpointSyncCompleted(function() {
-      if (err) {
-        doneCallback(err);
-      }
-      else if (initialSync) {
-        storage._curSyncSlice.ignoreHeaders = false;
-        storage._curSyncSlice.waitingOnData = 'db';
-
-        // TODO: We could potentially shave some latency by doing the DB fetch
-        // but deferring the doneCallback until the checkpoint has notified.
-        // I'm copping out on this right now because there may be some nuances
-        // in there that I would like to think about more and this is also not
-        // a major slowdown concern.  We're already slow here and the more
-        // important thing for us to do would just be to trigger the initial
-        // sync much earlier in the UI process to save even more time.
-        storage.getMessagesInImapDateRange(
-          0, null, $sync.INITIAL_FILL_SIZE, $sync.INITIAL_FILL_SIZE,
-          // Don't trigger a refresh; we just synced.  Accordingly,
-          // releaseMutex can be null.
-          storage.onFetchDBHeaders.bind(storage, storage._curSyncSlice, false,
-                                        doneCallback, null)
-        );
-      }
-      else {
-        doneCallback(err);
-      }
-    });
+    if (err) {
+      doneCallback(err);
+      return;
+    }
+
+    if (initialSync) {
+      storage._curSyncSlice.ignoreHeaders = false;
+      storage._curSyncSlice.waitingOnData = 'db';
+
+      storage.getMessagesInImapDateRange(
+        0, null, $sync.INITIAL_FILL_SIZE, $sync.INITIAL_FILL_SIZE,
+        // Don't trigger a refresh; we just synced.  Accordingly, releaseMutex can
+        // be null.
+        storage.onFetchDBHeaders.bind(storage, storage._curSyncSlice, false,
+                                      doneCallback, null)
+      );
+    }
+    else {
+      doneCallback(err);
+    }
   },

   allConsumersDead: function() {
@@ -2507,15 +2500,6 @@ ActiveSyncJobDriver.prototype = {
   undo_download: $jobmixins.undo_download,

   //////////////////////////////////////////////////////////////////////////////
-
-  local_do_sendOutboxMessages: $jobmixins.local_do_sendOutboxMessages,
-  do_sendOutboxMessages: $jobmixins.do_sendOutboxMessages,
-  check_sendOutboxMessages: $jobmixins.check_sendOutboxMessages,
-  local_undo_sendOutboxMessages: $jobmixins.local_undo_sendOutboxMessages,
-  undo_sendOutboxMessages: $jobmixins.undo_sendOutboxMessages,
-  local_do_setOutboxSyncEnabled: $jobmixins.local_do_setOutboxSyncEnabled,
-
-  //////////////////////////////////////////////////////////////////////////////
   // purgeExcessMessages is a NOP for activesync

   local_do_purgeExcessMessages: function(op, doneCallback) {
@@ -2603,7 +2587,7 @@ define('mailapi/activesync/account',
 var $wbxml, $asproto, ASCP;

 var bsearchForInsert = $util.bsearchForInsert;
-var $FolderTypes = $FolderHierarchy.Enums.Type;
+
 var DEFAULT_TIMEOUT_MS = exports.DEFAULT_TIMEOUT_MS = 30 * 1000;

 /**
@@ -2709,15 +2693,16 @@ function ActiveSyncAccount(universe, accountDef, folderInfos, dbConn,
                           this,
                           this._folderInfos.$mutationState);

-  // Immediately ensure that we have any required local-only folders,
-  // as those can be created even while offline.
-  this.ensureEssentialOfflineFolders();
-
-  // Mix in any fields common to all accounts.
-  $acctmixins.accountConstructorMixin.call(
-    this, /* receivePiece = */ this, /* sendPiece = */ this);
+  // Ensure we have an inbox.  The server id cannot be magically known, so we
+  // create it with a null id.  When we actually sync the folder list, the
+  // server id will be updated.
+  var inboxFolder = this.getFirstFolderWithType('inbox');
+  if (!inboxFolder) {
+    // XXX localized Inbox string (bug 805834)
+    this._addedFolder(null, '0', 'Inbox',
+                      $FolderHierarchy.Enums.Type.DefaultInbox, null, true);
+  }
 }
-
 exports.Account = exports.ActiveSyncAccount = ActiveSyncAccount;
 ActiveSyncAccount.prototype = {
   type: 'activesync',
@@ -2929,8 +2914,8 @@ ActiveSyncAccount.prototype = {
    * We are being told that a synchronization pass completed, and that we may
    * want to consider persisting our state.
    */
-  __checkpointSyncCompleted: function(callback, betterReason) {
-    this.saveAccountState(null, callback, betterReason || 'checkpointSync');
+  __checkpointSyncCompleted: function() {
+    this.saveAccountState(null, null, 'checkpointSync');
   },

   shutdown: function asa_shutdown(callback) {
@@ -3026,16 +3011,39 @@ ActiveSyncAccount.prototype = {
         deferredAddedFolders = moreDeferredAddedFolders;
       }

-      // Once we've synchonized the folder list, kick off another job
-      // to check that we have all essential online folders. Once that
-      // completes, we'll check to make sure our offline-only folders
-      // (localdrafts, outbox) are in the right place according to
-      // where this server stores other built-in folders.
-      account.ensureEssentialOnlineFolders();
-      account.normalizeFolderHierarchy();
+      // - create local drafts folder (if needed)
+      var localDrafts = account.getFirstFolderWithType('localdrafts');
+      if (!localDrafts) {
+        // Try and add the folder next to the existing drafts folder, or the
+        // sent folder if there is no drafts folder.  Otherwise we must have an
+        // inbox and we want to live under that.
+        var sibling = account.getFirstFolderWithType('drafts') ||
+                      account.getFirstFolderWithType('sent');
+        // If we have a sibling, it can tell us our gelam parent folder id
+        // which is different from our parent server id.  From there, we can
+        // map to the serverId.  Note that top-level folders will not have a
+        // parentId, in which case we want to just go with the top level.
+        var parentServerId;
+        if (sibling) {
+          if (sibling.parentId)
+            parentServerId =
+              account._folderInfos[sibling.parentId].$meta.serverId;
+          else
+            parentServerId = '0';
+        }
+        // Otherwise try and make the Inbox our parent.
+        else {
+          parentServerId = account.getFirstFolderWithType('inbox').serverId;
+        }
+        // Since this is a synthetic folder; we just directly choose the name
+        // that our l10n mapping will transform.
+        account._addedFolder(null, parentServerId, 'localdrafts', null,
+                             'localdrafts');
+      }

       console.log('Synced folder list');
-      callback && callback(null);
+      if (callback)
+        callback(null);
     });
   }),

@@ -3074,6 +3082,7 @@ ActiveSyncAccount.prototype = {
     if (!forceType && !(typeNum in this._folderTypes))
       return true; // Not a folder type we care about.

+    var folderType = $FolderHierarchy.Enums.Type;

     var path = displayName;
     var parentFolderId = null;
@@ -3090,7 +3099,7 @@ ActiveSyncAccount.prototype = {
     }

     // Handle sentinel Inbox.
-    if (typeNum === $FolderTypes.DefaultInbox) {
+    if (typeNum === folderType.DefaultInbox) {
       var existingInboxMeta = this.getFirstFolderWithType('inbox');
       if (existingInboxMeta) {
         // Update the server ID to folder ID mapping.
@@ -3417,10 +3426,6 @@ ActiveSyncAccount.prototype = {
                           aResponse.dump());
             callback('unknown');
           }
-        }, /* aExtraParams = */ null, /* aExtraHeaders = */ null,
-          /* aProgressCallback = */ function() {
-          // Keep holding the wakelock as we continue sending.
-          composer.renewSmartWakeLock('ActiveSync XHR Progress');
         });
       }
       else { // ActiveSync 12.x and lower
@@ -3435,11 +3440,7 @@ ActiveSyncAccount.prototype = {

           console.log('Sent message successfully!');
           callback(null);
-        }, { SaveInSent: 'T' }, /* aExtraHeaders = */ null,
-          /* aProgressCallback = */ function() {
-          // Keep holding the wakelock as we continue sending.
-          composer.renewSmartWakeLock('ActiveSync XHR Progress');
-        });
+        }, { SaveInSent: 'T' });
       }
     }.bind(this));
   }),
@@ -3460,77 +3461,14 @@ ActiveSyncAccount.prototype = {
     return null;
   },

-  /**
-   * Ensure that local-only folders exist. This runs synchronously
-   * before we sync the folder list with the server. Ideally, these
-   * folders should reside in a proper place in the folder hierarchy,
-   * which may differ between servers depending on whether the
-   * account's other folders live underneath the inbox or as
-   * top-level-folders. But since moving folders is easy and doesn't
-   * really affect the backend, we'll just ensure they exist here, and
-   * fix up their hierarchical location when syncing the folder list.
-   */
-  ensureEssentialOfflineFolders: function() {
-    // On folder type numbers: While there are enum values for outbox
-    // and drafts, they represent server-side default folders, not the
-    // local folders we create for ourselves, so they must be created
-    // with an unknown typeNum.
-    [{
-      type: 'inbox',
-      displayName: 'Inbox', // Intentionally title-case.
-      typeNum: $FolderTypes.DefaultInbox,
-    }, {
-      type: 'outbox',
-      displayName: 'outbox',
-      typeNum: $FolderTypes.Unknown, // There is no "local outbox" typeNum.
-    }, {
-      type: 'localdrafts',
-      displayName: 'localdrafts',
-      typeNum: $FolderTypes.Unknown, // There is no "localdrafts" typeNum.
-    }].forEach(function(data) {
-      if (!this.getFirstFolderWithType(data.type)) {
-        this._addedFolder(
-          /* serverId: */ null,
-          /* parentServerId: */ '0',
-          /* displayName: */ data.displayName,
-          /* typeNum: */ data.typeNum,
-          /* forceType: */ data.type,
-          /* suppressNotification: */ true);
-      }
-    }, this);
-  },
-
-  /**
-   * Kick off jobs to create essential folders (sent, trash) if
-   * necessary. These folders should be created on both the client and
-   * the server; contrast with `ensureEssentialOfflineFolders`.
-   *
-   * TODO: Support localizing all automatically named e-mail folders
-   * regardless of the origin locale.
-   * Relevant bugs: <https://bugzil.la/905869>, <https://bugzil.la/905878>.
-   *
-   * @param {function} callback
-   *   Called when all ops have run.
-   */
-  ensureEssentialOnlineFolders: function(callback) {
-    // Our ActiveSync implementation currently assumes that all
-    // ActiveSync servers always come with Sent and Trash folders. If
-    // that assumption proves false, we'd add them here like IMAP.
-    callback && callback();
+  ensureEssentialFolders: function(callback) {
+    // XXX I am assuming ActiveSync servers are smart enough to already come
+    // with these folders.  If not, we should move IMAP's ensureEssentialFolders
+    // into the mixins class.
+    if (callback)
+      callback();
   },

-  /**
-   * Ensure that local-only folders live in a reasonable place in the
-   * folder hierarchy by moving them if necessary.
-   *
-   * We proactively create local-only folders at the root level before
-   * we synchronize with the server; if possible, we want these
-   * folders to reside as siblings to other system-level folders on
-   * the account. This is called at the end of syncFolderList, after
-   * we have learned about all existing server folders.
-   */
-  normalizeFolderHierarchy: $acctmixins.normalizeFolderHierarchy,
-
   scheduleMessagePurge: function(folderId, callback) {
     // ActiveSync servers have no incremental folder growth, so message purging
     // makes no sense for them.
@@ -3552,6 +3490,7 @@ var LOGFAB = exports.LOGFAB = $log.register($module, {
       createFolder: {},
       deleteFolder: {},
       recreateFolder: { id: false },
+      saveAccountState: { reason: false },
       /**
        * XXX: this is really an error/warning, but to make the logging less
        * confusing, treat it as an event.
@@ -3560,7 +3499,6 @@ var LOGFAB = exports.LOGFAB = $log.register($module, {
     },
     asyncJobs: {
       runOp: { mode: true, type: true, error: false, op: false },
-      saveAccountState: { reason: true, folderSaveCount: true },
     },
     errors: {
       opError: { mode: false, type: false, ex: $log.EXCEPTION },
diff --git a/apps/email/js/ext/mailapi/composite/configurator.js b/apps/email/js/ext/mailapi/composite/configurator.js
index 922e19e..90bfbbb 100644
--- a/apps/email/js/ext/mailapi/composite/configurator.js
+++ b/apps/email/js/ext/mailapi/composite/configurator.js
@@ -489,8 +489,8 @@ CompositeIncomingAccount.prototype = {
    * We are being told that a synchronization pass completed, and that we may
    * want to consider persisting our state.
    */
-  __checkpointSyncCompleted: function(callback, betterReason) {
-    this.saveAccountState(null, callback, betterReason || 'checkpointSync');
+  __checkpointSyncCompleted: function(callback) {
+    this.saveAccountState(null, callback, 'checkpointSync');
   },

   /**
@@ -593,6 +593,34 @@ CompositeIncomingAccount.prototype = {
   },

   /**
+   * Create the essential Sent and Trash folders if they do not already exist.
+   *
+   * XXX Our folder type detection logic probably needs to get more multilingual
+   * and us as well.  When we do this, we can steal the localized strings from
+   * Thunderbird to bootstrap.
+   */
+  ensureEssentialFolders: function(callback) {
+    var essentialFolders = {'trash': 'Trash', 'sent': 'Sent'};
+    var pendingCallbacks = 1;
+
+    function next() {
+      if (!--pendingCallbacks) {
+        callback && callback(null);
+      }
+    }
+
+    for (var type in essentialFolders) {
+      if (!this.getFirstFolderWithType(type)) {
+        pendingCallbacks++;
+        this.universe.createFolder(
+          this.id, null, essentialFolders[type], false, next);
+      }
+    }
+
+    next();
+  },
+
+  /**
    * We receive this notification from our _backoffEndpoint.
    */
   onEndpointStateChange: function(state) {
@@ -625,6 +653,7 @@ exports.LOGFAB_DEFINITION = {
       unknownDeadConnection: {},
       connectionMismatch: {},

+      saveAccountState: { reason: false },
       /**
        * XXX: this is really an error/warning, but to make the logging less
        * confusing, treat it as an event.
@@ -654,7 +683,6 @@ exports.LOGFAB_DEFINITION = {
     asyncJobs: {
       checkAccount: { err: null },
       runOp: { mode: true, type: true, error: false, op: false },
-      saveAccountState: { reason: true, folderSaveCount: true },
     },
     TEST_ONLY_asyncJobs: {
     },
@@ -1637,9 +1665,8 @@ ImapFolderSyncer.prototype = {
    * Can we grow this sync range?  IMAP always lets us do this.
    */
   get canGrowSync() {
-    // Some folders, like localdrafts and outbox, cannot be synced
-    // because they are local-only.
-    return !this.folderStorage.isLocalOnly;
+    // localdrafts is offline-only, so we can't ask the server for messages.
+    return this.folderStorage.folderMeta.type !== 'localdrafts';
   },

   /**
@@ -1779,24 +1806,21 @@ ImapFolderSyncer.prototype = {
     //
     this._syncSlice.desiredHeaders = this._syncSlice.headers.length;

+    if (this._curSyncDoneCallback)
+      this._curSyncDoneCallback(err);
+
     // Save our state even if there was an error because we may have accumulated
-    // some partial state.  Additionally, don't *actually* complete until the
-    // save has hit the disk.  This is beneficial for both tests and cronsync
-    // which has been trying to shut us down in a race with this save
-    // triggering.
-    this._account.__checkpointSyncCompleted(function () {
-      if (this._curSyncDoneCallback)
-        this._curSyncDoneCallback(err);
-
-      this._syncSlice = null;
-      this._curSyncAccuracyStamp = null;
-      this._curSyncDir = null;
-      this._nextSyncAnchorTS = null;
-      this._syncThroughTS = null;
-      this._curSyncDayStep = null;
-      this._curSyncDoNotGrowBoundary = null;
-      this._curSyncDoneCallback = null;
-    }.bind(this));
+    // some partial state.
+    this._account.__checkpointSyncCompleted();
+
+    this._syncSlice = null;
+    this._curSyncAccuracyStamp = null;
+    this._curSyncDir = null;
+    this._nextSyncAnchorTS = null;
+    this._syncThroughTS = null;
+    this._curSyncDayStep = null;
+    this._curSyncDoNotGrowBoundary = null;
+    this._curSyncDoneCallback = null;
   },

   /**
@@ -2340,10 +2364,10 @@ ImapJobDriver.prototype = {
         }
       };

-      // localdrafts and outbox are synthetic folders and so we never
-      // want a connection for them. This is a somewhat awkward place
-      // to make this decision, but it does work.
-      if (needConn && !storage.isLocalOnly) {
+      // localdrafts is a synthetic folder and so we never want a connection
+      // for it.  This is a somewhat awkward place to make this decision, but
+      // it does work.
+      if (needConn && storage.folderMeta.type !== 'localdrafts') {
         syncer.folderConn.withConnection(function () {
           // When we release the mutex, the folder may not
           // release its connection, so be sure to reset
@@ -2800,8 +2824,8 @@ ImapJobDriver.prototype = {
           return;
         }

-        // There is nothing to do on localdrafts or outbox folders, server-wise.
-        if (sourceStorage.isLocalOnly) {
+        // There is nothing to do on localdrafts folders, server-wise.
+        if (sourceStorage.folderMeta.type === 'localdrafts') {
           perFolderDone();
         }
         else if (sourceStorage.folderId === targetFolderId) {
@@ -3132,16 +3156,6 @@ ImapJobDriver.prototype = {
   },

   //////////////////////////////////////////////////////////////////////////////
-
-  local_do_sendOutboxMessages: $jobmixins.local_do_sendOutboxMessages,
-  do_sendOutboxMessages: $jobmixins.do_sendOutboxMessages,
-  check_sendOutboxMessages: $jobmixins.check_sendOutboxMessages,
-  local_undo_sendOutboxMessages: $jobmixins.local_undo_sendOutboxMessages,
-  undo_sendOutboxMessages: $jobmixins.undo_sendOutboxMessages,
-  local_do_setOutboxSyncEnabled: $jobmixins.local_do_setOutboxSyncEnabled
-
-  //////////////////////////////////////////////////////////////////////////////
-
 };

 function HighLevelJobDriver() {
@@ -3218,7 +3232,6 @@ define('mailapi/imap/account',
   [
     'rdcommon/log',
     '../a64',
-    '../accountmixins',
     '../allback',
     '../errbackoff',
     '../mailslice',
@@ -3234,7 +3247,6 @@ define('mailapi/imap/account',
   function(
     $log,
     $a64,
-    $acctmixins,
     $allback,
     $errbackoff,
     $mailslice,
@@ -3321,10 +3333,6 @@ function ImapAccount(universe, compositeAccount, accountId, credentials,
    * expunging deleted messages.
    */
   this._TEST_doNotCloseFolder = false;
-
-  // Immediately ensure that we have any required local-only folders,
-  // as those can be created even while offline.
-  this.ensureEssentialOfflineFolders();
 }

 exports.Account = exports.ImapAccount = ImapAccount;
@@ -3812,88 +3820,46 @@ var properties = {
       // (skip those we found above)
       if (folderPub === true)
         continue;
-      // Never delete our localdrafts or outbox folder.
-      if ($mailslice.FolderStorage.isTypeLocalOnly(folderPub.type))
+      // Never delete our localdrafts folder.
+      if (folderPub.type === 'localdrafts')
         continue;
       // It must have gotten deleted!
       this._forgetFolder(folderPub.id);
     }

-    // Once we've synchonized the folder list, kick off another job to
-    // check that we have all essential online folders. Once that
-    // completes, we'll check to make sure our offline-only folders
-    // (localdrafts, outbox) are in the right place according to where
-    // this server stores other built-in folders.
-    this.ensureEssentialOnlineFolders();
-    this.normalizeFolderHierarchy();
-
-    callback(null);
-  },
-
-  /**
-   * Ensure that local-only folders exist. This runs synchronously
-   * before we sync the folder list with the server. Ideally, these
-   * folders should reside in a proper place in the folder hierarchy,
-   * which may differ between servers depending on whether the
-   * account's other folders live underneath the inbox or as
-   * top-level-folders. But since moving folders is easy and doesn't
-   * really affect the backend, we'll just ensure they exist here, and
-   * fix up their hierarchical location when syncing the folder list.
-   */
-  ensureEssentialOfflineFolders: function() {
-    [ 'outbox', 'localdrafts' ].forEach(function(folderType) {
-      if (!this.getFirstFolderWithType(folderType)) {
-        this._learnAboutFolder(
-          /* name: */ folderType,
-          /* path: */ folderType,
-          /* parentId: */ null,
-          /* type: */ folderType,
-          /* delim: */ '',
-          /* depth: */ 0,
-          /* suppressNotification: */ true);
+    // Add a localdrafts folder if we don't have one.
+    var localDrafts = this.getFirstFolderWithType('localdrafts');
+    if (!localDrafts) {
+      // Try and add the folder next to the existing drafts folder, or the
+      // sent folder if there is no drafts folder.  Otherwise we must have an
+      // inbox and we want to live under that.
+      var sibling = this.getFirstFolderWithType('drafts') ||
+                    this.getFirstFolderWithType('sent');
+      var parentId = sibling ? sibling.parentId
+                             : this.getFirstFolderWithType('inbox').id;
+      // parentId will be null if we are already top-level
+      var parentFolder;
+      if (parentId) {
+        parentFolder = this._folderInfos[parentId].$meta;
       }
-    }, this);
-  },
-
-  /**
-   * Kick off jobs to create essential folders (sent, trash) if
-   * necessary. These folders should be created on both the client and
-   * the server; contrast with `ensureEssentialOfflineFolders`.
-   *
-   * TODO: Support localizing all automatically named e-mail folders
-   * regardless of the origin locale.
-   * Relevant bugs: <https://bugzil.la/905869>, <https://bugzil.la/905878>.
-   *
-   * @param {function} callback
-   *   Called when all ops have run.
-   */
-  ensureEssentialOnlineFolders: function(callback) {
-    var essentialFolders = { 'trash': 'Trash', 'sent': 'Sent' };
-    var latch = $allback.latch();
-
-    for (var type in essentialFolders) {
-      if (!this.getFirstFolderWithType(type)) {
-        this.universe.createFolder(
-          this.id, null, essentialFolders[type], false, latch.defer());
+      else {
+        parentFolder = {
+          path: '', delim: '', depth: -1
+        };
       }
+      var localDraftPath = parentFolder.path + parentFolder.delim +
+            'localdrafts';
+      // Since this is a synthetic folder; we just directly choose the name
+      // that our l10n mapping will transform.
+      this._learnAboutFolder('localdrafts', localDraftPath,  parentId,
+                             'localdrafts', parentFolder.delim,
+                             parentFolder.depth + 1);
     }

-    latch.then(callback);
+    callback(null);
   },

   /**
-   * Ensure that local-only folders live in a reasonable place in the
-   * folder hierarchy by moving them if necessary.
-   *
-   * We proactively create local-only folders at the root level before
-   * we synchronize with the server; if possible, we want these
-   * folders to reside as siblings to other system-level folders on
-   * the account. This is called at the end of syncFolderList, after
-   * we have learned about all existing server folders.
-   */
-  normalizeFolderHierarchy: $acctmixins.normalizeFolderHierarchy,
-
-  /**
    * Asynchronously save the sent message to the sent folder, if applicable.
    * This should only be called once the SMTP send has completed.
    *
@@ -4074,7 +4040,6 @@ function NetSocket(port, host, crypto) {
     onopen: this._onconnect.bind(this),
     onerror: this._onerror.bind(this),
     ondata: this._ondata.bind(this),
-    onprogress: this._onprogress.bind(this),
     onclose: this._onclose.bind(this)
   };
   var routerInfo = routerMaker.register(function(data) {
@@ -4158,9 +4123,6 @@ NetSocket.prototype._ondata = function(data) {
   var buffer = Buffer(data);
   this.emit('data', buffer);
 };
-NetSocket.prototype._onprogress = function() {
-  this.emit('progress');
-};
 NetSocket.prototype._onclose = function() {
   this.emit('close');
   this.emit('end');
@@ -8211,31 +8173,27 @@ Pop3FolderSyncer.prototype = {
    * sync, we queue up "server-only" modifications and execute them
    * upon sync. This allows us to reuse much of the existing tests for
    * certain folder operations, and becomes a no-op in production.
-   *
-   * @return {Boolean} true if a save is needed because we're actually doing
-   * something.
    */
-  _performTestAdditionsAndDeletions: function(cb) {
+  _performTestDeletions: function(cb) {
     var meta = this.storage.folderMeta;
+    var callbacksWaiting = 1;
     var numAdds = 0;
     var latch = allback.latch();
-    var saveNeeded = false;
     if (meta._TEST_pendingHeaderDeletes) {
       meta._TEST_pendingHeaderDeletes.forEach(function(header) {
-        saveNeeded = true;
+        callbacksWaiting++;
         this.storage.deleteMessageHeaderUsingHeader(header, latch.defer());
       }, this);
       meta._TEST_pendingHeaderDeletes = null;
     }
     if (meta._TEST_pendingAdds) {
       meta._TEST_pendingAdds.forEach(function(msg) {
-        saveNeeded = true;
+        callbacksWaiting++;
         this.storeMessage(msg.header, msg.bodyInfo, {}, latch.defer());
       }, this);
       meta._TEST_pendingAdds = null;
     }
     latch.then(function(results) { cb(); });
-    return saveNeeded;
   },

   /**
@@ -8311,6 +8269,7 @@ Pop3FolderSyncer.prototype = {
   function(conn, syncType, slice, doneCallback, progressCallback) {
     // if we could not establish a connection, abort the sync.
     var self = this;
+    this._LOG.sync_begin();

     // Only fetch info for messages we don't already know about.
     var filterFunc;
@@ -8329,19 +8288,12 @@ Pop3FolderSyncer.prototype = {
     var bytesStored = 0;
     var numMessagesSynced = 0;
     var latch = allback.latch();
-    // We only want to trigger a save if work is actually being done.  This is
-    // ugly/complicated because in order to let POP3 use the existing IMAP tests
-    // that did things in other folders, a test-only bypass route was created
-    // that has us actually add the messages
-    var saveNeeded;

     if (!this.isInbox) {
       slice.desiredHeaders = (this._TEST_pendingAdds &&
                               this._TEST_pendingAdds.length);
-      saveNeeded = this._performTestAdditionsAndDeletions(latch.defer());
+      this._performTestDeletions(latch.defer());
     } else {
-      saveNeeded = true;
-      this._LOG.sync_begin();
       var fetchDoneCb = latch.defer();

       // Fetch messages, ensuring that we don't actually store them all in
@@ -8354,7 +8306,7 @@ Pop3FolderSyncer.prototype = {
           // Every N messages, wait for everything to be stored to
           // disk and saved in the database. Then proceed.
           this.storage.runAfterDeferredCalls(function() {
-            this.account.__checkpointSyncCompleted(next, 'syncBatch');
+            this.account.__checkpointSyncCompleted(next);
           }.bind(this));
         }.bind(this),
         progress: function fetchProgress(evt) {
@@ -8401,6 +8353,8 @@ Pop3FolderSyncer.prototype = {
     }

     latch.then((function onSyncDone() {
+      this._LOG.sync_end();
+
       // Because POP3 has no concept of syncing discrete time ranges,
       // we have to trick the storage into marking everything synced
       // _except_ the dawn of time. This has to be slightly later than
@@ -8416,13 +8370,7 @@ Pop3FolderSyncer.prototype = {
         this.storage.markSyncedToDawnOfTime();
       }

-      if (this.isInbox) {
-        this._LOG.sync_end();
-      }
-      if (saveNeeded) {
-        this.account.__checkpointSyncCompleted(null, 'syncComplete');
-      }
-
+      this.account.__checkpointSyncCompleted();
       if (syncType === 'initial') {
         // If it's the first time we've synced, we've set
         // ignoreHeaders to true, which means that slices don't know
@@ -8665,13 +8613,6 @@ Pop3JobDriver.prototype = {
   do_downloadBodyReps: jobmixins.do_downloadBodyReps,
   local_do_downloadBodyReps: jobmixins.local_do_downloadBodyReps,

-  local_do_sendOutboxMessages: jobmixins.local_do_sendOutboxMessages,
-  do_sendOutboxMessages: jobmixins.do_sendOutboxMessages,
-  check_sendOutboxMessages: jobmixins.check_sendOutboxMessages,
-  local_undo_sendOutboxMessages: jobmixins.local_undo_sendOutboxMessages,
-  undo_sendOutboxMessages: jobmixins.undo_sendOutboxMessages,
-  local_do_setOutboxSyncEnabled: jobmixins.local_do_setOutboxSyncEnabled,
-
   // These utility functions are necessary.
   postJobCleanup: jobmixins.postJobCleanup,
   allJobsDone: jobmixins.allJobsDone,
@@ -8736,9 +8677,13 @@ function Pop3Account(universe, compositeAccount, accountId, credentials,
     this._conn = existingProtoConn;
   }

-  // Immediately ensure that we have any required local-only folders,
-  // as those can be created even while offline.
-  this.ensureEssentialOfflineFolders();
+  // Create required folders if necessary.
+  ['sent', 'localdrafts', 'trash'].forEach(function(name) {
+    var folder = this.getFirstFolderWithType(name);
+    if (!folder) {
+      this._learnAboutFolder(name, name, null, name, '/', 0, true);
+    }
+  }.bind(this));

   this._jobDriver = new pop3jobs.Pop3JobDriver(
       this, this._folderInfos.$mutationState, this._LOG);
@@ -8932,41 +8877,6 @@ var properties = {
   },

   /**
-   * Ensure that local-only folders exist. This is run immediately
-   * upon account initialization. Since POP3 doesn't support server
-   * folders, all folders are local-only, so this function does all
-   * the hard work.
-   */
-  ensureEssentialOfflineFolders: function() {
-    // Create required folders if necessary.
-    [ 'sent', 'localdrafts', 'trash', 'outbox' ].forEach(function(folderType) {
-      if (!this.getFirstFolderWithType(folderType)) {
-        this._learnAboutFolder(
-          /* name: */ folderType,
-          /* path: */ folderType,
-          /* parentId: */ null,
-          /* type: */ folderType,
-          /* delim: */ '',
-          /* depth: */ 0,
-          /* suppressNotification: */ true);
-      }
-    }, this);
-  },
-
-  /**
-   * POP3 doesn't support server folders, so all folder creation is
-   * done in `ensureEssentialOfflineFolders`.
-
-   * @param {function} callback
-   *   Called immediately, for homogeneity with other account types.
-   */
-  ensureEssentialOnlineFolders: function(callback) {
-    // All the important work is already done. Yay POP3!
-    callback && callback();
-  },
-
-
-  /**
    * Destroy the account when the account has been deleted.
    */
   accountDeleted: function() {
@@ -9123,12 +9033,6 @@ SmtpAccount.prototype = {
         console.log('smtp: idle reached, sending envelope');
         conn.useEnvelope(composer.getEnvelope());
       },
-
-      onProgress: function() {
-        // Keep the wake lock open as long as it looks like we're
-        // still communicating with the server.
-        composer.renewSmartWakeLock('SMTP XHR Progress');
-      },
       /**
        * Send the message body.
        */
@@ -9254,14 +9158,7 @@ SmtpAccount.prototype = {
         conn.close();
       }

-
       conn.once('idle', function() {
-        // Report progress so that we can hold a wakelock if we're still
-        // sending data to the server.
-        conn.socket.on('progress', function() {
-          callbacks.onProgress && callbacks.onProgress();
-        });
-
         callbacks.sendEnvelope(conn, bail);
       });
       conn.on('message', function() {
@@ -9272,16 +9169,10 @@ SmtpAccount.prototype = {
         callbacks.sendMessage(conn);
       });
       // And close the connection and be done once it has been sent
-      conn.on('ready', function(success, response) {
+      conn.on('ready', function() {
         bailed = true;
         conn.close();
-
-        if (success) {
-          callbacks.onSendComplete(conn);
-        } else {
-          console.error('SMTP: Send failed with response: "' + response + '"');
-          callbacks.onError('unknown', null);
-        }
+        callbacks.onSendComplete(conn);
       });

       // - Error cases
@@ -9458,12 +9349,7 @@ function CompositeAccount(universe, accountDef, folderInfo, dbConn,
   this.meta = this._receivePiece.meta;
   this.mutations = this._receivePiece.mutations;
   this.tzOffset = accountDef.tzOffset;
-
-  // Mix in any fields common to all accounts.
-  $acctmixins.accountConstructorMixin.call(
-    this, this._receivePiece, this._sendPiece);
 }
-
 exports.Account = exports.CompositeAccount = CompositeAccount;
 CompositeAccount.prototype = {
   toString: function() {
@@ -9614,15 +9500,8 @@ CompositeAccount.prototype = {
     return this._receivePiece.runOp(op, mode, callback);
   },

-  /**
-   * Kick off jobs to create required folders, both locally and on the
-   * server. See imap/account.js and activesync/account.js for documentation.
-   *
-   * @param {function} callback
-   *   Called when all jobs have run.
-   */
-  ensureEssentialOnlineFolders: function(callback) {
-    return this._receivePiece.ensureEssentialOnlineFolders(callback);
+  ensureEssentialFolders: function(callback) {
+    return this._receivePiece.ensureEssentialFolders(callback);
   },

   getFirstFolderWithType: $acctmixins.getFirstFolderWithType,
diff --git a/apps/email/js/ext/mailapi/drafts/composer.js b/apps/email/js/ext/mailapi/drafts/composer.js
index 5a8cb56..b37ed32 100644
--- a/apps/email/js/ext/mailapi/drafts/composer.js
+++ b/apps/email/js/ext/mailapi/drafts/composer.js
@@ -1991,8 +1991,6 @@ function Composer(newRecords, account, identity) {

   this._attachments = [];

-  this._smartWakeLock = null;
-
   // - fetch attachments if sending
   if (this.body.attachments.length) {
     this.body.attachments.forEach(function(attachment) {
@@ -2122,30 +2120,6 @@ Composer.prototype = {
     this._ensureBodyWithOpts(opts);
     callback(this._outputBlob);
   },
-
-  /**
-   * Call setSmartWakeLock to assign a SmartWakeLock instance.
-   * Accounts will call renewSmartWakeLock() during the sending
-   * process, so that the wake lock can continually be renewed during
-   * the sending process. This prevents the lock from expiring.
-   *
-   * @param {SmartWakeLock} wakeLock
-   */
-  setSmartWakeLock: function(wakeLock) {
-    this._smartWakeLock = wakeLock;
-  },
-
-  /**
-   * Renew the SmartWakeLock associated with this composer, if one has
-   * been set. Provide an optional reason, which will be logged.
-   *
-   * @param {String} reason
-   */
-  renewSmartWakeLock: function(reason) {
-    if (this._smartWakeLock) {
-      this._smartWakeLock.renew(reason);
-    }
-  }
 };

 }); // end define
diff --git a/apps/email/js/ext/mailapi/imap/probe.js b/apps/email/js/ext/mailapi/imap/probe.js
index 265e7fd..126ebe6 100644
--- a/apps/email/js/ext/mailapi/imap/probe.js
+++ b/apps/email/js/ext/mailapi/imap/probe.js
@@ -73,7 +73,6 @@ function NetSocket(port, host, crypto) {
     onopen: this._onconnect.bind(this),
     onerror: this._onerror.bind(this),
     ondata: this._ondata.bind(this),
-    onprogress: this._onprogress.bind(this),
     onclose: this._onclose.bind(this)
   };
   var routerInfo = routerMaker.register(function(data) {
@@ -157,9 +156,6 @@ NetSocket.prototype._ondata = function(data) {
   var buffer = Buffer(data);
   this.emit('data', buffer);
 };
-NetSocket.prototype._onprogress = function() {
-  this.emit('progress');
-};
 NetSocket.prototype._onclose = function() {
   this.emit('close');
   this.emit('end');
diff --git a/apps/email/js/ext/mailapi/main-frame-setup.js b/apps/email/js/ext/mailapi/main-frame-setup.js
index bd13305..7fd4a03 100644
--- a/apps/email/js/ext/mailapi/main-frame-setup.js
+++ b/apps/email/js/ext/mailapi/main-frame-setup.js
@@ -527,9 +527,63 @@ MailSenderIdentity.prototype = {

 function MailFolder(api, wireRep) {
   this._api = api;
+  this.id = wireRep.id;
+
+  // Hold on to wireRep for caching
+  this._wireRep = wireRep;
+
+  /**
+   * The human-readable name of the folder.  (As opposed to its path or the
+   * modified utf-7 encoded folder names.)
+   */
+  this.name = wireRep.name;
+  /**
+   * The full string of the path.
+   */
+  this.path = wireRep.path;
+  /**
+   * The hierarchical depth of this folder.
+   */
+  this.depth = wireRep.depth;
+  /**
+   * @oneof[
+   *   @case['account']{
+   *     It's not really a folder at all, just an account serving as hierarchy.
+   *   }
+   *   @case['nomail']{
+   *     A folder that exists only to provide hierarchy but which can't
+   *     contain messages.  An artifact of various mail backends that are
+   *     reflected in IMAP as NOSELECT.
+   *   }
+   *   @case['inbox']
+   *   @case['drafts']
+   *   @case['localdrafts']{
+   *     Local-only folder that stores drafts composed on this device.
+   *   }
+   *   @case['queue']
+   *   @case['sent']
+   *   @case['trash']
+   *   @case['archive']
+   *   @case['junk']
+   *   @case['starred']
+   *   @case['important']
+   *   @case['normal']{
+   *     A traditional mail folder with nothing special about it.
+   *   }
+   * ]{
+   *   Non-localized string indicating the type of folder this is, primarily
+   *   for styling purposes.
+   * }
+   */
+  this.type = wireRep.type;
+
+  // Exchange folder name with the localized version if available
+  this.name = this._api.l10n_folder_name(this.name, this.type);

   this.__update(wireRep);

+  this.selectable = (wireRep.type !== 'account') && (wireRep.type !== 'nomail');
+
   this.onchange = null;
   this.onremove = null;

@@ -549,64 +603,8 @@ MailFolder.prototype = {
   },

   __update: function(wireRep) {
-    // Hold on to wireRep for caching
-    this._wireRep = wireRep;
-
     this.lastSyncedAt = wireRep.lastSyncedAt ? new Date(wireRep.lastSyncedAt)
                                              : null;
-    this.path = wireRep.path;
-    this.id = wireRep.id;
-
-    /**
-     * The human-readable name of the folder.  (As opposed to its path or the
-     * modified utf-7 encoded folder names.)
-     */
-    this.name = wireRep.name;
-    /**
-     * The full string of the path.
-     */
-    this.path = wireRep.path;
-    /**
-     * The hierarchical depth of this folder.
-     */
-    this.depth = wireRep.depth;
-    /**
-     * @oneof[
-     *   @case['account']{
-     *     It's not really a folder at all, just an account serving as hierarchy
-     *   }
-     *   @case['nomail']{
-     *     A folder that exists only to provide hierarchy but which can't
-     *     contain messages.  An artifact of various mail backends that are
-     *     reflected in IMAP as NOSELECT.
-     *   }
-     *   @case['inbox']
-     *   @case['drafts']
-     *   @case['localdrafts']{
-     *     Local-only folder that stores drafts composed on this device.
-     *   }
-     *   @case['queue']
-     *   @case['sent']
-     *   @case['trash']
-     *   @case['archive']
-     *   @case['junk']
-     *   @case['starred']
-     *   @case['important']
-     *   @case['normal']{
-     *     A traditional mail folder with nothing special about it.
-     *   }
-     * ]{
-     *   Non-localized string indicating the type of folder this is, primarily
-     *   for styling purposes.
-     * }
-     */
-    this.type = wireRep.type;
-
-    // Exchange folder name with the localized version if available
-    this.name = this._api.l10n_folder_name(this.name, this.type);
-
-    this.selectable = ((wireRep.type !== 'account') &&
-                       (wireRep.type !== 'nomail'));
   },

   __die: function() {
@@ -1196,15 +1194,6 @@ MailHeader.prototype = {
     this.isForwarded = wireRep.flags.indexOf('$Forwarded') !== -1;
     this.isJunk = wireRep.flags.indexOf('$Junk') !== -1;
     this.tags = filterOutBuiltinFlags(wireRep.flags);
-
-    // Messages in the outbox will have `sendStatus` populated like so:
-    // {
-    //   state: 'pending', 'error', 'success', 'sending', or 'syncDone'
-    //   err: null,
-    //   badAddresses: null,
-    //   sendFailures: 2
-    // }
-    this.sendStatus = wireRep.sendStatus || {};
   },

   /**
@@ -1985,17 +1974,6 @@ FoldersViewSlice.prototype.getFirstFolderWithName = function(name, items) {
   return null;
 };

-FoldersViewSlice.prototype.getFirstFolderWithPath = function(path, items) {
-  if (!items)
-    items = this.items;
-  for (var i = 0; i < items.length; i++) {
-    var folder = items[i];
-    if (folder.path === path)
-      return folder;
-  }
-  return null;
-};
-
 function HeadersViewSlice(api, handle, ns) {
   BridgedViewSlice.call(this, api, ns || 'headers', handle);

@@ -2218,8 +2196,36 @@ MessageComposition.prototype = {
   },

   /**
-   * Enqueue the message for sending. When the callback fires, the
-   * message will be in the outbox, but will likely not have been sent yet.
+   * Finalize and send the message in its current state.
+   *
+   * @args[
+   *   @param[callback @func[
+   *     @args[
+   *       @param[state @oneof[
+   *         @case['sent']{
+   *           The message made it to the SMTP server and we believe it was sent
+   *           successfully.
+   *         }
+   *         @case['offline']{
+   *           We are known to be offline and so we can't send it right now.
+   *           We will attempt to send when we next get good network.
+   *         }
+   *         @case['will-retry']{
+   *           Something didn't work, but we will automatically retry again
+   *           at some point in the future.
+   *         }
+   *         @case['fatal']{
+   *           Something really bad happened, probably a bug in the program.
+   *           The error will be reported using console.error or internal
+   *           logging or something.
+   *         }
+   *       ]]
+   *       }
+   *     ]
+   *   ]]{
+   *     The callback to invoke on success/failure/deferral to later.
+   *   }
+   * ]
    */
   finishCompositionSendMessage: function(callback) {
     this._api._composeDone(this._handle, 'send', this._buildWireRep(),
@@ -3320,7 +3326,7 @@ MailAPI.prototype = {
   },
   */

-  moveMessages: function ma_moveMessages(messages, targetFolder, callback) {
+  moveMessages: function ma_moveMessages(messages, targetFolder) {
     // We allocate a handle that provides a temporary name for our undoable
     // operation until we hear back from the other side about it.
     var handle = this._nextHandle++;
@@ -3332,8 +3338,7 @@ MailAPI.prototype = {
     this._pendingRequests[handle] = {
       type: 'mutation',
       handle: handle,
-      undoableOp: undoableOp,
-      callback: callback
+      undoableOp: undoableOp
     };
     this.__bridgeSend({
       type: 'moveMessages',
@@ -3392,66 +3397,6 @@ MailAPI.prototype = {
     return undoableOp;
   },

-  /**
-   * Check the outbox for pending messages, and initiate a series of
-   * jobs to attempt to send them. The callback fires after the first
-   * message's send attempt completes; this job will then
-   * self-schedule further jobs to attempt to send the rest of the
-   * outbox.
-   *
-   * @param {MailAccount} account
-   * @param {function} callback
-   *   Called after the first message's send attempt finishes.
-   */
-  sendOutboxMessages: function (account, callback) {
-    var handle = this._nextHandle++;
-    this._pendingRequests[handle] = {
-      type: 'sendOutboxMessages',
-      callback: callback
-    };
-    this.__bridgeSend({
-      type: 'sendOutboxMessages',
-      accountId: account.id,
-      handle: handle
-    });
-  },
-
-  _recv_sendOutboxMessages: function(msg) {
-    var req = this._pendingRequests[msg.handle];
-    delete this._pendingRequests[msg.handle];
-    req.callback && req.callback();
-    return true;
-  },
-
-  /**
-   * Enable or disable outbox syncing for this account. This is
-   * generally a temporary measure, used when the user is actively
-   * editing the list of outbox messages and we don't want to
-   * inadvertently move something out from under them. This change
-   * does _not_ persist; it's meant to be used only for brief periods
-   * of time, not as a "sync schedule" coordinator.
-   */
-  setOutboxSyncEnabled: function (account, enabled, callback) {
-    var handle = this._nextHandle++;
-    this._pendingRequests[handle] = {
-      type: 'setOutboxSyncEnabled',
-      callback: callback
-    };
-    this.__bridgeSend({
-      type: 'setOutboxSyncEnabled',
-      accountId: account.id,
-      outboxSyncEnabled: enabled,
-      handle: handle
-    });
-  },
-
-  _recv_setOutboxSyncEnabled: function(msg) {
-    var req = this._pendingRequests[msg.handle];
-    delete this._pendingRequests[msg.handle];
-    req.callback && req.callback();
-    return true;
-  },
-
   createFolder: function(account, parentFolder, containOnlyOtherFolders) {
     this.__bridgeSend({
       type: 'createFolder',
@@ -3492,11 +3437,6 @@ MailAPI.prototype = {
     req.undoableOp._longtermIds = msg.longtermIds;
     if (req.undoableOp._undoRequested)
       req.undoableOp.undo();
-
-    if (req.callback) {
-      req.callback(msg.result);
-    }
-
     return true;
   },

@@ -3660,7 +3600,6 @@ MailAPI.prototype = {
     req.composer.bcc = msg.bcc;
     req.composer._references = msg.referencesStr;
     req.composer.attachments = msg.attachments;
-    req.composer.sendStatus = msg.sendStatus; // For displaying "Send failed".

     if (req.callback) {
       var callback = req.callback;
@@ -3769,11 +3708,8 @@ MailAPI.prototype = {
     if (req.type === 'die' || (!msg.err && (req.type !== 'save')))
       delete this._pendingRequests[msg.handle];
     if (req.callback) {
-      req.callback.call(null, {
-        sentDate: msg.sentDate,
-        messageId: msg.messageId,
-        sendStatus: msg.sendStatus
-      });
+      req.callback.call(null, msg.err, msg.badAddresses,
+                        { sentDate: msg.sentDate, messageId: msg.messageId });
       req.callback = null;
     }
     return true;
@@ -3807,12 +3743,6 @@ MailAPI.prototype = {
     return true;
   },

-  _recv_backgroundSendStatus: function(msg) {
-    if (this.onbackgroundsendstatus) {
-      this.onbackgroundsendstatus(msg.data);
-    }
-    return true;
-  },

   //////////////////////////////////////////////////////////////////////////////
   // Localization
@@ -5281,10 +5211,6 @@ function write(uid, data, offset, length) {
     return;
   }

-  // Fake an onprogress event so that we can delay wakelock expiration
-  // as long as data still flows to the server.
-  self.sendMessage(uid, 'onprogress', []);
-
   if (data instanceof Blob) {
     beginBlobSend(sockInfo, data);
   }
@@ -5333,53 +5259,6 @@ return self;
 });

 /**
- * The docs for this can be found in `mailapi/wakelocks.js`.
- *
- * This file runs on the main thread, receiving messages sent from a
- * SmartWakeLock instance -> through the router -> to this file.
- */
-define('mailapi/worker-support/wakelocks-main',[],function() {
-  'use strict';
-
-  function debug(str) {
-    dump('WakeLocks: ' + str + '\n');
-  }
-
-  var nextId = 1;
-  var locks = {};
-
-  function requestWakeLock(type) {
-    var lock = navigator.requestWakeLock(type);
-    var id = nextId++;
-    locks[id] = lock;
-    return id;
-  }
-
-  var self = {
-    name: 'wakelocks',
-    sendMessage: null,
-    process: function(uid, cmd, args) {
-      debug('process ' + cmd + ' ' + JSON.stringify(args));
-      switch (cmd) {
-      case 'requestWakeLock':
-        var type = args[0];
-        self.sendMessage(uid, cmd, [requestWakeLock(type)]);
-        break;
-      case 'unlock':
-        var id = args[0];
-        var lock = locks[id];
-        if (lock) {
-          lock.unlock();
-          delete locks[id];
-        }
-        self.sendMessage(uid, cmd, []);
-      }
-    }
-  };
-  return self;
-});
-
-/**
  * The startup process (which can be improved) looks like this:
  *
  * Main: Initializes worker support logic
@@ -5409,8 +5288,7 @@ define('mailapi/main-frame-setup',
     './worker-support/cronsync-main',
     './worker-support/devicestorage-main',
     './worker-support/maildb-main',
-    './worker-support/net-main',
-    './worker-support/wakelocks-main'
+    './worker-support/net-main'
   ],
   function(
     $shim_setup,
@@ -5420,8 +5298,7 @@ define('mailapi/main-frame-setup',
     $cronsync,
     $devicestorage,
     $maildb,
-    $net,
-    $wakelocks
+    $net
   ) {

   var control = {
@@ -5483,7 +5360,6 @@ define('mailapi/main-frame-setup',
   $router.register($devicestorage);
   $router.register($maildb);
   $router.register($net);
-  $router.register($wakelocks);

   return MailAPI;
 }); // end define
diff --git a/apps/email/js/ext/mailapi/pop3/probe.js b/apps/email/js/ext/mailapi/pop3/probe.js
index 9bf79ad..e2d414d 100644
--- a/apps/email/js/ext/mailapi/pop3/probe.js
+++ b/apps/email/js/ext/mailapi/pop3/probe.js
@@ -73,7 +73,6 @@ function NetSocket(port, host, crypto) {
     onopen: this._onconnect.bind(this),
     onerror: this._onerror.bind(this),
     ondata: this._ondata.bind(this),
-    onprogress: this._onprogress.bind(this),
     onclose: this._onclose.bind(this)
   };
   var routerInfo = routerMaker.register(function(data) {
@@ -157,9 +156,6 @@ NetSocket.prototype._ondata = function(data) {
   var buffer = Buffer(data);
   this.emit('data', buffer);
 };
-NetSocket.prototype._onprogress = function() {
-  this.emit('progress');
-};
 NetSocket.prototype._onclose = function() {
   this.emit('close');
   this.emit('end');
diff --git a/apps/email/js/ext/mailapi/smtp/probe.js b/apps/email/js/ext/mailapi/smtp/probe.js
index 654cfcf..9139734 100644
--- a/apps/email/js/ext/mailapi/smtp/probe.js
+++ b/apps/email/js/ext/mailapi/smtp/probe.js
@@ -73,7 +73,6 @@ function NetSocket(port, host, crypto) {
     onopen: this._onconnect.bind(this),
     onerror: this._onerror.bind(this),
     ondata: this._ondata.bind(this),
-    onprogress: this._onprogress.bind(this),
     onclose: this._onclose.bind(this)
   };
   var routerInfo = routerMaker.register(function(data) {
@@ -157,9 +156,6 @@ NetSocket.prototype._ondata = function(data) {
   var buffer = Buffer(data);
   this.emit('data', buffer);
 };
-NetSocket.prototype._onprogress = function() {
-  this.emit('progress');
-};
 NetSocket.prototype._onclose = function() {
   this.emit('close');
   this.emit('end');
diff --git a/apps/email/js/ext/mailapi/worker-bootstrap.js b/apps/email/js/ext/mailapi/worker-bootstrap.js
index b351e85..fdefc6d 100644
--- a/apps/email/js/ext/mailapi/worker-bootstrap.js
+++ b/apps/email/js/ext/mailapi/worker-bootstrap.js
@@ -2078,13 +2078,6 @@ if (!Error.captureStackTrace) {
   };
 }

-exports.gimmeStack = function() {
-  var obj = {};
-  Error.captureStackTrace(obj);
-  // pop off captureStackTrace and us.
-  return obj.stack.slice(2);
-}
-
 var SM_STACK_FORMAT = /^(.*)@(.+):(\d+)$/;

 // this is biased towards v8/chromium for now
@@ -2387,12 +2380,6 @@ define('rdcommon/log',
     exports
   ) {

-var rawGimmeStack = $extransform.gimmeStack;
-var gimmeStack = function() {
-  // Slice off the logger calling us and ourselves.
-  return rawGimmeStack().slice(2);
-};
-
 /**
  * Per-thread/process sequence identifier to provide unambiguous ordering of
  *  logging events in the hopeful event we go faster than the timestamps can
@@ -3166,12 +3153,12 @@ LoggestClassMaker.prototype = {
       if (this._resolved)
         throw new Error("Attempt to add expectations when already resolved!");

-      this._expectations.push([name, gimmeStack(), val]);
+      this._expectations.push([name, val]);
       return this;
     };
     this.testActorProto['ignore_' + name] = makeIgnoreFunc(name);
     this.testActorProto['_verify_' + name] = function(exp, entry) {
-      return smartCompareEquiv(exp[2], entry[1], COMPARE_DEPTH);
+      return smartCompareEquiv(exp[1], entry[1], COMPARE_DEPTH);
     };
   },
   /**
@@ -3271,7 +3258,7 @@ LoggestClassMaker.prototype = {
       if (this._resolved)
         throw new Error("Attempt to add expectations when already resolved!");

-      var exp = [name, gimmeStack()];
+      var exp = [name];
       for (var iArg = 0; iArg < arguments.length; iArg++) {
         if (useArgs[iArg] && useArgs[iArg] !== EXCEPTION) {
           exp.push(arguments[iArg]);
@@ -3283,8 +3270,8 @@ LoggestClassMaker.prototype = {
     this.testActorProto['ignore_' + name] = makeIgnoreFunc(name);
     this.testActorProto['_verify_' + name] = function(tupe, entry) {
       // only check arguments we had expectations for.
-      for (var iArg = 2; iArg < tupe.length; iArg++) {
-        if (!smartCompareEquiv(tupe[iArg], entry[iArg - 1], COMPARE_DEPTH))
+      for (var iArg = 1; iArg < tupe.length; iArg++) {
+        if (!smartCompareEquiv(tupe[iArg], entry[iArg], COMPARE_DEPTH))
           return false;
       }
       return true;
@@ -3404,7 +3391,7 @@ LoggestClassMaker.prototype = {
       if (this._resolved)
         throw new Error("Attempt to add expectations when already resolved!");

-      var exp = [name_begin, gimmeStack()];
+      var exp = [name_begin];
       for (var iArg = 0; iArg < arguments.length; iArg++) {
         if (useArgs[iArg] && useArgs[iArg] !== EXCEPTION)
           exp.push(arguments[iArg]);
@@ -3421,7 +3408,7 @@ LoggestClassMaker.prototype = {
       if (this._resolved)
         throw new Error("Attempt to add expectations when already resolved!");

-      var exp = [name_end, gimmeStack()];
+      var exp = [name_end];
       for (var iArg = 0; iArg < arguments.length; iArg++) {
         if (useArgs[iArg] && useArgs[iArg] !== EXCEPTION)
           exp.push(arguments[iArg]);
@@ -3433,8 +3420,8 @@ LoggestClassMaker.prototype = {
     this.testActorProto['_verify_' + name_begin] =
         this.testActorProto['_verify_' + name_end] = function(tupe, entry) {
       // only check arguments we had expectations for.
-      for (var iArg = 2; iArg < tupe.length; iArg++) {
-        if (!smartCompareEquiv(tupe[iArg], entry[iArg - 1], COMPARE_DEPTH))
+      for (var iArg = 1; iArg < tupe.length; iArg++) {
+        if (!smartCompareEquiv(tupe[iArg], entry[iArg], COMPARE_DEPTH))
           return false;
       }
       return true;
@@ -3576,7 +3563,7 @@ LoggestClassMaker.prototype = {
       if (this._resolved)
         throw new Error("Attempt to add expectations when already resolved!");

-      var exp = [name, gimmeStack()];
+      var exp = [name];
       for (var iArg = 0; iArg < arguments.length; iArg++) {
         if (useArgs[iArg])
           exp.push(arguments[iArg]);
@@ -3591,8 +3578,8 @@ LoggestClassMaker.prototype = {
         return false;
       }
       // only check arguments we had expectations for.
-      for (var iArg = 2; iArg < tupe.length; iArg++) {
-        if (!smartCompareEquiv(tupe[iArg], entry[iArg - 1], COMPARE_DEPTH))
+      for (var iArg = 1; iArg < tupe.length; iArg++) {
+        if (!smartCompareEquiv(tupe[iArg], entry[iArg], COMPARE_DEPTH))
           return false;
       }
       return true;
@@ -3649,8 +3636,8 @@ LoggestClassMaker.prototype = {
     this.testActorProto['ignore_' + name] = makeIgnoreFunc(name);
     this.testActorProto['_verify_' + name] = function(tupe, entry) {
       // only check arguments we had expectations for.
-      for (var iArg = 2; iArg < tupe.length; iArg++) {
-        if (!smartCompareEquiv(tupe[iArg], entry[iArg - 1], COMPARE_DEPTH))
+      for (var iArg = 1; iArg < tupe.length; iArg++) {
+        if (!smartCompareEquiv(tupe[iArg], entry[iArg], COMPARE_DEPTH))
           return false;
       }
       return true;
@@ -3866,7 +3853,7 @@ exports.register = function register(mod, defs) {
  * Provide schemas for every logger that has been registered.
  */
 exports.provideSchemaForAllKnownFabs = function schemaForAllKnownFabs() {
-  var schema = { $v: 2 };
+  var schema = {};
   for (var i = 0; i < ALL_KNOWN_FABS.length; i++) {
     var rawDefs = ALL_KNOWN_FABS[i]._rawDefs;
     for (var key in rawDefs) {
@@ -4460,10 +4447,7 @@ exports.latch = function() {
         throw err;
       }
       resolved = true;
-      // 'name' might be the integer zero (among other integers) if
-      // the callee is doing array processing, so we pass anything not
-      // equalling null and undefined, even the poor falsey zero.
-      if (name != null) {
+      if (name) {
         results[name] = Array.slice(arguments);
       }
       if (--count === 0) {
@@ -6113,30 +6097,11 @@ function FolderStorage(account, folderId, persistedFolderInfo, dbConn,
                                                        this._LOG);
 }
 exports.FolderStorage = FolderStorage;
-
-/**
- * Return true if the given folder type is local-only (i.e. we will
- * not try to sync this folder with the server).
- *
- * @param {String} type
- *   The type of the folderStorage, e.g. 'inbox' or 'localdrafts'.
- */
-FolderStorage.isTypeLocalOnly = function(type) {
-  if (typeof type !== 'string') {
-    throw new Error('isTypeLocalOnly() expects a string, not ' + type);
-  }
-  return (type === 'outbox' || type === 'localdrafts');
-}
-
 FolderStorage.prototype = {
   get hasActiveSlices() {
     return this._slices.length > 0;
   },

-  get isLocalOnly() {
-    return FolderStorage.isTypeLocalOnly(this.folderMeta.type);
-  },
-
   /**
    * Reset all active slices.
    */
@@ -7496,14 +7461,14 @@ FolderStorage.prototype = {

     // -- grab from database if we have ever synchronized this folder
     // OR if it's synthetic
-
-    if (this._accuracyRanges.length || this.isLocalOnly) {
+    if (this._accuracyRanges.length || this.folderMeta.type === 'localdrafts') {
       // We can only trigger a refresh if we are online.  Our caller may want to
       // force the refresh, ignoring recency data.  (This logic was too ugly as
       // a straight-up boolean/ternarny combo.)
       var triggerRefresh;
       if (this._account.universe.online && this.folderSyncer.syncable &&
-          !this.isLocalOnly) {
+          this.folderMeta.type !== 'localdrafts'
+         ) {
         if (forceRefresh)
           triggerRefresh = 'force';
         else
@@ -7526,7 +7491,7 @@ FolderStorage.prototype = {
     // (we have never synchronized this folder)

     // -- no work to do if we are offline or synthetic folder
-    if (!this._account.universe.online || this.isLocalOnly) {
+    if (!this._account.universe.online || this.folderMeta.type === 'localdrafts') {
       doneCallback();
       return;
     }
@@ -8355,10 +8320,6 @@ FolderStorage.prototype = {
    * Fetch up to `limit` messages chronologically before the given message
    * (in the direction of 'start').
    *
-   * If date/id do not point to a valid message, return messages as
-   * though it did point to a valid message (i.e. return messages past
-   * that point, as you would probably expect).
-   *
    * If date/id are null, it as if the date/id of the most recent message
    * are passed.
    */
@@ -8378,26 +8339,11 @@ FolderStorage.prototype = {
     }

     if (!headBlockInfo) {
-      // headBlockInfo will be null if this date/id pair does not fit
-      // properly into a block, but iHeadBlockInfo will still point to
-      // a location from which we can start looking, and that leads us
-      // to one of two cases: Either iHeadBlockInfo points to a valid
-      // block (the one immediately after this point), in which case
-      // we can just pretend that our targeted date/id resides
-      // immediately futureward of the current block; or we've reached
-      // the complete end of all blocks and iHeadBlockInfo points past
-      // the end of headerBlockInfos, indicating that there are no
-      // more messages pastward of our requested point.
-      if (iHeadBlockInfo < this._headerBlockInfos.length) {
-        // Search in this block.
-        headBlockInfo = this._headerBlockInfos[iHeadBlockInfo];
-      } else {
-        // If this message is older than all the existing blocks,
-        // there aren't any messages to return, period, since we're
-        // seeking pastward.
-        messageCallback([], false);
-        return;
-      }
+      // The iteration request is somehow not current; log an error and return
+      // an empty result set.
+      this._LOG.badIterationStart(date, id);
+      messageCallback([], false);
+      return;
     }

     var iHeader = null;
@@ -8412,29 +8358,15 @@ FolderStorage.prototype = {

         // Null means find it by id...
         if (iHeader === null) {
-          if (id != null) {
-            iHeader = bsearchForInsert(headerBlock.headers, {
-              date: date,
-              id: id
-            }, cmpHeaderYoungToOld);
-
-            if (headerBlock.ids[iHeader] === id) {
-              // If we landed exactly on the message we were searching
-              // for, we must skip _past_ it, as this method is not
-              // intended to return this message, but only ones past it.
-              iHeader++;
-            } else {
-              // If we didn't land on the exact header we sought, we
-              // can just start returning results from iHeader onward.
-              // since iHeader points to a message immediately beyond
-              // the message we sought.
-            }
-          } else {
-            // If we didn't specify an id to search for, we're
-            // supposed to pretend that the first message in the block
-            // was the one we wanted; in that case, start from index 1.
-            iHeader = 1;
+          if (id !== null)
+            iHeader = headerBlock.ids.indexOf(id);
+          else
+            iHeader = 0;
+          if (iHeader === -1) {
+            self._LOG.badIterationStart(date, id);
+            toFill = 0;
           }
+          iHeader++;
         }
         // otherwise we know we are starting at the front of the block.
         else {
@@ -8475,10 +8407,6 @@ FolderStorage.prototype = {
   /**
    * Fetch up to `limit` messages chronologically after the given message (in
    * the direction of 'end').
-   *
-   * NOTE: Unlike getMessagesBeforeMessage, this method currently
-   * expects date/id to point to a valid message, otherwise we'll
-   * raise a badIterationStart error.
    */
   getMessagesAfterMessage: function(date, id, limit, messageCallback) {
     var toFill = (limit != null) ? limit : $sync.TOO_MANY_MESSAGES, self = this;
@@ -13888,287 +13816,6 @@ var LOGFAB = exports.LOGFAB = $log.register($module, {

 }); // end define
 ;
-'use strict';
-/**
- * This module exposes a single helper method,
- * `sendNextAvailableOutboxMessage`, which is used by the
- * sendOutboxMessages job in jobmixins.js.
- */
-define('mailapi/jobs/outbox',['require'],function(require) {
-
-
-  /**
-   * Send the next available outbox message. Returns a promise that
-   * resolves to the following:
-   *
-   * {
-   *   moreExpected: (Boolean),
-   *   messageNamer: { date, suid }
-   * }
-   *
-   * If there might be more messages left to send after this one,
-   * moreExpected will be `true`.
-   *
-   * If we attempted to send a message, messageNamer will point to it.
-   * This can then be passed to a subsequent invocation of this, to
-   * send the next available message after the given messageNamer.
-   *
-   * @param {CompositeAccount|ActiveSyncAccount} account
-   * @param {FolderStorage} storage
-   * @param {MessageNamer|null} beforeMessage
-   *   Send the first message chronologically preceding `beforeMessage`.
-   * @param {Boolean} emitNotifications
-   *   If true, we will emit backgroundSendStatus notifications
-   *   for this message.
-   * @param {Boolean} outboxNeedsFreshSync
-   *   If true, ignore any potentially stale "sending" state,
-   *   as in when we restore the app from a crash.
-   * @param {SmartWakeLock} wakeLock
-   *   A SmartWakeLock to be held open during the sending process.
-   * @return {Promise}
-   * @public
-   */
-  function sendNextAvailableOutboxMessage(
-    account, storage, beforeMessage, emitNotifications,
-    outboxNeedsFreshSync, wakeLock) {
-
-    return getNextHeader(storage, beforeMessage).then(function(header) {
-      // If there are no more messages to send, resolve `null`. This
-      // should ordinarily not happen, because clients should pay
-      // attention to the `moreExpected` results from earlier sends;
-      // but job scheduling might introduce edge cases where this
-      // happens, so better to be safe.
-      if (!header) {
-        return {
-          moreExpected: false,
-          messageNamer: null
-        };
-      }
-
-      // Figure out if this is the last message to consider sending in the
-      // outbox.  (We are moving from newest to oldest, so this is the last one
-      // if it is the oldest.  We need to figure this out before the send
-      // process completes since we will delete the header once it's all sent.)
-      var moreExpected = !storage.headerIsOldestKnown(header.date,
-                                                      header.id);
-
-      if (!header.sendStatus) {
-        header.sendStatus = {};
-      }
-
-      // If the header has not been sent, or we've been instructed to
-      // ignore any existing sendStatus, clear it out.
-      if (header.sendStatus.state !== 'sending' || outboxNeedsFreshSync) {
-        // If this message is not already being sent, send it.
-        return constructComposer(account, storage, header, wakeLock)
-          .then(sendMessage.bind(null, account, storage, emitNotifications))
-          .then(function(header) {
-            return {
-              moreExpected: moreExpected,
-              messageNamer: {
-                suid: header.suid,
-                date: header.date
-              }
-            };
-          });
-      } else {
-        // If this message is currently being sent, advance to the
-        // next header.
-        return sendNextAvailableOutboxMessage(account, storage, {
-          suid: header.suid,
-          date: header.date
-        }, emitNotifications, outboxNeedsFreshSync, wakeLock);
-      }
-    });
-  }
-
-
-  ////////////////////////////////////////////////////////////////
-  // The following functions are internal helpers.
-
-  /**
-   * Resolve to the header immediately preceding `beforeMessage` in
-   * time. If beforeMessage is null, resolve the most recent message.
-   * If no message could be found, resolve `null`.
-   *
-   * @param {FolderStorage} storage
-   * @param {MessageNamer} beforeMessage
-   * @return {Promise(MailHeader)}
-   */
-  function getNextHeader(storage, /* optional */ beforeMessage) {
-    return new Promise(function(resolve) {
-      if (beforeMessage) {
-        // getMessagesBeforeMessage expects an 'id', not a 'suid'.
-        var id = parseInt(beforeMessage.suid.substring(
-          beforeMessage.suid.lastIndexOf('/') + 1));
-        storage.getMessagesBeforeMessage(
-          beforeMessage.date,
-          id,
-          /* limit = */ 1,
-          function(headers, moreExpected) {
-            // There may be no headers, and that's okay.
-            resolve(headers[0] || null);
-          });
-      } else {
-        storage.getMessagesInImapDateRange(
-          0,
-          null,
-          /* min */ 1,
-          /* max */ 1,
-          function(headers, moreExpected) {
-            resolve(headers[0]);
-          });
-      }
-    });
-  }
-
-  /**
-   * Build a Composer instance pointing to the given header.
-   *
-   * @param {MailAccount} account
-   * @param {FolderStorage} storage
-   * @param {MailHeader} header
-   * @param {SmartWakeLock} wakeLock
-   * @return {Promise(Composer)}
-   */
-  function constructComposer(account, storage, header, wakeLock) {
-    return new Promise(function(resolve, reject) {
-      storage.getMessage(header.suid, header.date, function(msg) {
-
-        // If for some reason the message doesn't have a body, we
-        // can't construct a composer for this header.
-        if (!msg || !msg.body) {
-          console.error('Failed to create composer; no body available.');
-          reject();
-          return;
-        }
-
-        require(['mailapi/drafts/composer'], function(cmp) {
-          var composer = new cmp.Composer(msg, account, account.identities[0]);
-          composer.setSmartWakeLock(wakeLock);
-
-          resolve(composer);
-        });
-      });
-    });
-  }
-
-  /**
-   * Attempt to send the given message from the outbox.
-   *
-   * During the sending process, post status updates to the universe,
-   * so that the frontend can display status notifications if it
-   * desires.
-   *
-   * If the message successfully sends, remove it from the outbox;
-   * otherwise, its `sendStatus.state` will equal 'error', with
-   * details about the failure.
-   *
-   * Resolves to the header; you can check `header.sendStatus` to see
-   * the result of this send attempt.
-   *
-   * @param {MailAccount} account
-   * @param {FolderStorage} storage
-   * @param {Composer} composer
-   * @return {Promise(MailHeader)}
-   */
-  function sendMessage(account, storage, emitNotifications, composer) {
-    var header = composer.header;
-    var progress = publishStatus.bind(
-      null, account, storage, composer, header, emitNotifications);
-
-    // As part of the progress notification, the client would like to
-    // know whether or not they can expect us to immediately send more
-    // messages after this one. If there are messages in the outbox
-    // older than this one, the answer is yes.
-    var oldestDate = storage.getOldestMessageTimestamp();
-    var willSendMore = oldestDate > 0 && oldestDate < header.date.valueOf();
-
-    // Send the initial progress information.
-    progress({
-      state: 'sending',
-      err: null,
-      badAddresses: null,
-      sendFailures: header.sendStatus && header.sendStatus.sendFailures || 0
-    });
-
-    return new Promise(function(resolve) {
-      account.sendMessage(composer, function(err, badAddresses) {
-        if (err) {
-          console.log('Message failed to send (' + err + ')');
-
-          progress({
-            state: 'error',
-            err: err,
-            badAddresses: badAddresses,
-            sendFailures: (header.sendStatus.sendFailures || 0) + 1
-          });
-
-          resolve(composer.header);
-        } else {
-          console.log('Message sent; deleting from outbox.');
-
-          progress({
-            state: 'success',
-            err: null,
-            badAddresses: null
-          });
-          storage.deleteMessageHeaderAndBodyUsingHeader(header, function() {
-            resolve(composer.header);
-          });
-        }
-      });
-    });
-  }
-
-  /**
-   * Publish a universe notification with the message's current send
-   * status, and queue it for persistence in the database.
-   *
-   * NOTE: Currently, we do not checkpoint our state, so the
-   * intermediary "sending" steps will not actually get written to
-   * disk. That is generally fine, since sendStatus is invalid upon a
-   * restart. However, when we address bug 1032451 (sendMessage is not
-   * actually atomic), we will want to checkpoint state during the
-   * sending process.
-   */
-  function publishStatus(account, storage, composer,
-                         header, emitNotifications, status) {
-    header.sendStatus = {
-      state: status.state,
-      err: status.err,
-      badAddresses: status.badAddresses,
-      sendFailures: status.sendFailures
-    };
-
-    account.universe.__notifyBackgroundSendStatus({
-      // Status information (also stored on the header):
-      state: status.state,
-      err: status.err,
-      badAddresses: status.badAddresses,
-      sendFailures: status.sendFailures,
-      // Message/Account Information (for notifications):
-      accountId: account.id,
-      suid: header.suid,
-      emitNotifications: emitNotifications,
-      // Unit test support:
-      messageId: composer.messageId,
-      sentDate: composer.sentDate
-    });
-
-    storage.updateMessageHeader(
-      header.date,
-      header.id,
-      /* partOfSync */ false,
-      header,
-      /* body hint */ null);
-  }
-
-  return {
-    sendNextAvailableOutboxMessage: sendNextAvailableOutboxMessage
-  };
-});
-
 define('mailapi/worker-router',[],function() {

 var listeners = {};
@@ -14281,145 +13928,6 @@ return {

 }); // end define
 ;
-define('mailapi/wakelocks',['require','./worker-router'],function(require) {
-  'use strict';
-
-  var $router = require('./worker-router');
-  var sendMessage = $router.registerCallbackType('wakelocks');
-
-  /**
-   * SmartWakeLock: A renewable, failsafe Wake Lock manager.
-   *
-   * Example:
-   *   var lock = new SmartWakeLock({ locks: ['cpu', 'screen'] });
-   *   // do things; if we do nothing, the lock expires eventually.
-   *   lock.renew(); // Keep the lock around for a while longer.
-   *   // Some time later...
-   *   lock.unlock();
-   *
-   * Grab a set of wake locks, holding on to them until either a
-   * failsafe timeout expires, or you release them.
-   *
-   * @param {int} opts.timeout
-   *   Timeout, in millseconds, to hold the lock if you fail to call
-   *   .unlock().
-   * @param {String[]} opts.locks
-   *   Array of strings, e.g. ['cpu', 'wifi'], representing the locks
-   *   you wish to acquire.
-   */
-  function SmartWakeLock(opts) {
-    this.timeoutMs = opts.timeout || SmartWakeLock.DEFAULT_TIMEOUT_MS;
-    var locks = this.locks = {}; // map of lockType -> wakeLockInstance
-
-    this._timeout = null; // The ID returned from our setTimeout.
-
-    // Since we have to fling things over the bridge, requesting a
-    // wake lock here is asynchronous. Using a Promise to track when
-    // we've successfully acquired the locks (and blocking on it in
-    // the methods on this class) ensures that folks can ignore the
-    // ugly asynchronous parts and not worry about when things happen
-    // under the hood.
-    this._readyPromise = Promise.all(opts.locks.map(function(type) {
-      return new Promise(function(resolve, reject) {
-        sendMessage('requestWakeLock', [type], function(lockId) {
-          locks[type] = lockId;
-          resolve();
-        });
-      });
-    })).then(function() {
-      this._debug('Acquired', this, 'for', this.timeoutMs + 'ms');
-      // For simplicity of implementation, we reuse the `renew` method
-      // here to add the initial `opts.timeout` to the unlock clock.
-      this.renew(); // Start the initial timeout.
-    }.bind(this));
-  }
-
-  SmartWakeLock.DEFAULT_TIMEOUT_MS = 45000;
-
-  SmartWakeLock.prototype = {
-    /**
-     * Renew the timeout, if you're certain that you still need to hold
-     * the locks longer.
-     */
-    renew: function(/* optional */ reason, callback) {
-      if (typeof reason === 'function') {
-        callback = reason;
-        reason = null;
-      }
-
-      // Wait until we've successfully acquired the wakelocks, then...
-      this._readyPromise.then(function() {
-        // If we've already set a timeout, we'll clear that first.
-        // (Otherwise, we're just loading time on for the first time,
-        // and don't need to clear or log anything.)
-        if (this._timeout) {
-          clearTimeout(this._timeout);
-          this._debug('Renewing', this, 'for another', this.timeoutMs + 'ms' +
-                      (reason ? ' (reason: ' + reason + ')' : '') + ',',
-                      'would have expired in ' +
-                      (this.timeoutMs - (Date.now() - this._timeLastRenewed)) +
-                      'ms if not renewed.');
-        }
-
-        this._timeLastRenewed = Date.now(); // Solely for debugging.
-
-        this._timeout = setTimeout(function() {
-          this._debug('*** Unlocking', this,
-                      'due to a TIMEOUT. Did you remember to unlock? ***');
-          this.unlock.bind(this);
-        }.bind(this), this.timeoutMs);
-
-        callback && callback();
-      }.bind(this));
-    },
-
-    /**
-     * Unlock all the locks. This happens asynchronously behind the
-     * scenes; if you want to block on completion, hook onto the
-     * Promise returned from this function.
-     */
-    unlock: function(/* optional */ reason) {
-      // Make sure weve been locked before we try to unlock. Also,
-      // return the promise, throughout the chain of calls here, so
-      // that listeners can listen for completion if they need to.
-      return this._readyPromise.then(function() {
-        var desc = this.toString();
-
-        var locks = this.locks;
-        this.locks = {}; // Clear the locks.
-        clearTimeout(this._timeout);
-
-        // Wait for all of them to successfully unlock.
-        return Promise.all(Object.keys(locks).map(function(type) {
-          return new Promise(function(resolve, reject) {
-            sendMessage('unlock', [locks[type]], function(lockId) {
-              resolve();
-            });
-          });
-        })).then(function() {
-          this._debug('Unlocked', desc + '.',
-                      (reason ? 'Reason: ' + reason : ''));
-        }.bind(this));
-
-      }.bind(this));
-    },
-
-    toString: function() {
-      return Object.keys(this.locks).join('+') || '(no locks)';
-    },
-
-    _debug: function() {
-      var args = Array.slice(arguments);
-      console.log.apply(console, ['SmartWakeLock:'].concat(args));
-    }
-  };
-
-  return {
-    SmartWakeLock: SmartWakeLock
-  };
-
-});
-
 /**
  * Mix-ins for account job functionality where the code is reused.
  **/
@@ -14428,19 +13936,11 @@ define('mailapi/jobmixins',
   [
     './worker-router',
     './util',
-    './allback',
-    './wakelocks',
-    './date',
-    './syncbase',
     'exports'
   ],
   function(
     $router,
     $util,
-    $allback,
-    $wakelocks,
-    $date,
-    $sync,
     exports
   ) {

@@ -14545,13 +14045,9 @@ exports.local_do_move = function(op, doneCallback, targetFolderId) {
           stateDelta.serverIdMap[header.suid] = header.srvid;

         if (sourceStorage === targetStorage ||
-            // localdraft messages aren't real, and so must not be
-            // moved and are only eligible for nuke deletion. But they
-            // _can_ be moved to the outbox, and vice versa!
-            (sourceStorage.folderMeta.type === 'localdrafts' &&
-             targetStorage.folderMeta.type !== 'outbox') ||
-            (sourceStorage.folderMeta.type === 'outbox' &&
-             targetStorage.folderMeta.type !== 'localdrafts')) {
+            // localdraft messages aren't real, and so must not be moved and
+            // are only eligible for nuke deletion.
+            sourceStorage.folderMeta.type === 'localdrafts') {
           if (op.type === 'move') {
             // A move from a folder to itself is a no-op.
             processNext();
@@ -14604,12 +14100,7 @@ exports.local_do_move = function(op, doneCallback, targetFolderId) {
       }
     },
     function() {
-      // Pass along the moveMap as the move's result, so that the
-      // frontend can directly obtain a reference to the moved
-      // message. This is used when tapping a message in the outbox
-      // folder (wherein we expect it to be moved to localdrafts and
-      // immediately edited).
-      doneCallback(null, stateDelta.moveMap, true);
+      doneCallback(null, null, true);
     },
     null, // connection loss does not happen for local-only ops
     false,
@@ -14624,7 +14115,7 @@ exports.local_undo_move = function(op, doneCallback, targetFolderId) {
 exports.local_do_delete = function(op, doneCallback) {
   var trashFolder = this.account.getFirstFolderWithType('trash');
   if (!trashFolder) {
-    this.account.ensureEssentialOnlineFolders();
+    this.account.ensureEssentialFolders();
     doneCallback('defer');
     return;
   }
@@ -14907,141 +14398,6 @@ exports.local_do_downloadBodyReps = function(op, callback) {
 };


-////////////////////////////////////////////////////////////////////////////////
-// sendOutboxMessages
-
-/**
- * Send some messages from the outbox. At a high level, you can
- * pretend that "sendOutboxMessages" just kicks off a process to send
- * all the messages in the outbox.
- *
- * As an implementation detail, to keep memory requirements low, this
- * job is designed to send only one message at a time; it
- * self-schedules future jobs to walk through the list of outbox
- * messages, one at a time.
- *
- * In pseudocode:
- *
- *         CLIENT: "Hey, please kick off a sendOutboxMessages job."
- *   OUTBOX JOB 1: "Okay, I'll send the first message."
- *         CLIENT: "thanks"
- *   OUTBOX JOB 1: "Okay, done. Oh, there are more messages. Scheduling
- *                  a future job to send the next message."
- *         CLIENT: "ok"
- *   OUTBOX JOB 1: *dies*
- *         CLIENT: *goes off to do other things*
- *   OUTBOX JOB 2: "on it, sending another message"
- *
- * This allows other jobs to interleave the sending process, to avoid
- * introducing long delays in a world where we only run one job
- * concurrently.
- *
- * This job accepts a `beforeMessage` parameter; if that parameter is
- * null (the normal case), we'll attempt to send the newest message.
- * After the first message has been sent, we will _self-schedule_ a
- * second sendOutboxMessages job to continue sending the rest of the
- * available messages (one per job).
- *
- * We set `header.sendStatus` to an object representing the current
- * state of the send operation. If the send fails, we'll remove the
- * flag and indicate that there was an error sending, unless the app
- * crashes, in which case we'll try to resend upon startup again (see
- * `outboxNeedsFreshSync`).
- */
-exports.do_sendOutboxMessages = function(op, callback) {
-  var account = this.account;
-  var outboxFolder = account.getFirstFolderWithType('outbox');
-  if (!outboxFolder) {
-    callback('moot'); // This shouldn't happen, we should always have an outbox.
-    return;
-  }
-
-  // If we temporarily paused outbox syncing, don't do anything.
-  if (!account.outboxSyncEnabled) {
-    console.log('outbox: Outbox syncing temporarily disabled; not syncing.');
-    callback(null);
-    return;
-  }
-
-  var outboxNeedsFreshSync = account.outboxNeedsFreshSync;
-  if (outboxNeedsFreshSync) {
-    console.log('outbox: This is the first outbox sync for this account.');
-    account.outboxNeedsFreshSync = false;
-  }
-
-  // Hold both a CPU and WiFi wake lock for the duration of the send
-  // operation. We'll pass this in to the Composer instance for each
-  // message, so that the SMTP/ActiveSync sending process can renew
-  // the wake lock from time to time as the send continues.
-  var wakeLock = new $wakelocks.SmartWakeLock({
-    locks: ['cpu', 'wifi']
-  });
-
-  this._accessFolderForMutation(
-    outboxFolder.id, /* needConn = */ false,
-    function(nullFolderConn, folderStorage) {
-      require(['mailapi/jobs/outbox'], function ($outbox) {
-        $outbox.sendNextAvailableOutboxMessage(
-          account.compositeAccount || account, // Requires the main account.
-          folderStorage,
-          op.beforeMessage,
-          op.emitNotifications,
-          outboxNeedsFreshSync,
-          wakeLock
-        ).then(function(result) {
-          var moreExpected = result.moreExpected;
-          var messageNamer = result.messageNamer;
-
-          wakeLock.unlock('send complete');
-
-          // If there may be more messages to send, schedule another
-          // sync to send the next available message.
-          if (moreExpected) {
-            account.universe.sendOutboxMessages(account, {
-              beforeMessage: messageNamer
-            });
-          }
-          // Otherwise, we're done. Mark the outbox as "synced".
-          else {
-            account.universe.notifyOutboxSyncDone(account);
-            folderStorage.markSyncRange(
-              $sync.OLDEST_SYNC_DATE, null, 'XXX', $date.NOW());
-          }
-          // Since we modified the folders, save the account.
-          callback(null, /* result = */ null, /* save = */ true);
-        }).catch(function(e) {
-          console.error('Exception while sending a message.',
-                        'Send failure: ' + e, e.stack);
-          wakeLock.unlock(e);
-          callback('aborted-retry');
-        });
-
-      });
-    },
-    /* no conn => no deathback required */ null,
-    'sendOutboxMessages');
-};
-
-exports.check_sendOutboxMessages = function(op, callback) {
-  callback(null, 'moot');
-};
-
-exports.local_undo_sendOutboxMessages = function(op, callback) {
-  callback(null); // You cannot undo sendOutboxMessages.
-};
-
-exports.local_do_setOutboxSyncEnabled = function(op, callback) {
-  // Set a flag on the account to prevent us from kicking off further
-  // sends while the outbox is being edited on the client. The account
-  // referenced by `this.account` is actually the receive piece in a
-  // composite account; this flag is initialized in accountmixins.js.
-  this.account.outboxSyncEnabled = op.outboxSyncEnabled;
-  callback(null);
-};
-
-////////////////////////////////////////////////////////////////
-
-
 exports.postJobCleanup = function(passed) {
   if (passed) {
     var deltaMap, fullMap;
@@ -16069,29 +15425,7 @@ function unimplementedJobOperation(op, callback) {
   });
 }

-/**
- * Account Mixins:
- *
- * This mixin function is executed from the constructor of the
- * CompositeAccount and ActiveSyncAccount, with 'this' being bound to
- * the main account instance. If the account has separate receive/send
- * parts, they are passed as arguments. (ActiveSync's receive and send
- * pieces merely reference the root account.)
- */
-exports.accountConstructorMixin = function(receivePiece, sendPiece) {
-  // The following flags are set on the receivePiece, because the
-  // receiving side is what manages the job operations (and sending
-  // messages from the outbox is a job).
-
-  // On startup, we need to ignore any stale sendStatus information
-  // from messages in the outbox. See `sendOutboxMessages` in
-  // jobmixins.js.
-  receivePiece.outboxNeedsFreshSync = true;
-  // This is a runtime flag, used to temporarily prevent
-  // `sendOutboxMessages` from executing, such as when the user is
-  // actively trying to edit the list of messages in the Outbox.
-  receivePiece.outboxSyncEnabled = true;
-};
+

 /**
  * @args[
@@ -16181,71 +15515,7 @@ exports.getFolderByPath = function(folderPath) {
  return null;
 };

-/**
- * Ensure that local-only folders live in a reasonable place in the
- * folder hierarchy by moving them if necessary.
- *
- * We proactively create local-only folders at the root level before
- * we synchronize with the server; if possible, we want these
- * folders to reside as siblings to other system-level folders on
- * the account. This is called at the end of syncFolderList, after
- * we have learned about all existing server folders.
- */
-exports.normalizeFolderHierarchy = function() {
-  // Find a folder for which we'd like to become a sibling.
-  var sibling =
-        this.getFirstFolderWithType('drafts') ||
-        this.getFirstFolderWithType('sent');
-
-  // If for some reason we can't find those folders yet, that's
-  // okay, we will try this again after the next folder sync.
-  if (!sibling) {
-    return;
-  }
-
-  var parent = this.getFolderMetaForFolderId(sibling.parentId);
-
-  // NOTE: `parent` may be null if `sibling` is a top-level folder.
-  var foldersToMove = [this.getFirstFolderWithType('localdrafts'),
-                       this.getFirstFolderWithType('outbox')];
-
-  foldersToMove.forEach(function(folder) {
-    // These folders should always exist, but we double-check here
-    // for safety. Also, if the folder is already in the right
-    // place, we're done.
-    if (!folder || folder.parentId === sibling.parentId) {
-      return;
-    }
-
-    console.log('Moving folder', folder.name,
-                'underneath', parent && parent.name || '(root)');
-

-    this.universe.__notifyRemovedFolder(this, folder);
-
-    // On `delim`: IMAP specifies `account.meta.rootDelim` based on
-    // server-specific settings. ActiveSync hard-codes "/". POP3
-    // doesn't even go that far. An empty delimiter would be
-    // incorrect, as it could cause folder paths to smush into one
-    // another. Thus, it should be safe to fall back to "/" when
-    // `account.meta.rootDelim` is undefined.
-    if (parent) {
-      folder.path = parent.path + (parent.delim || '/') + folder.name;
-      folder.delim = parent.delim || this.meta.rootDelim || '/';
-      folder.parentId = parent.id;
-      folder.depth = parent.depth + 1;
-    } else {
-      folder.path = folder.name;
-      folder.delim = this.meta.rootDelim || '/';
-      folder.parentId = null;
-      folder.depth = 0;
-    }
-
-    this.universe.__notifyAddedFolder(this, folder);
-
-  }, this);
-
-};

 /**
  * Save the state of this account to the database.  This entails updating all
@@ -16263,8 +15533,6 @@ exports.saveAccountState = function(reuseTrans, callback, reason) {
     return null;
   }

-  this._LOG.saveAccountState_begin(reason, null);
-
   // Indicate save is active, in case something, like
   // signaling the end of a sync, needs to run after
   // a save, via runAfterSaves.
@@ -16284,13 +15552,12 @@ exports.saveAccountState = function(reuseTrans, callback, reason) {
     if (folderStuff)
       perFolderStuff.push(folderStuff);
   }
-  var folderSaveCount = perFolderStuff.length;
+  this._LOG.saveAccountState(reason);
   var trans = this._db.saveAccountFolderStates(
     this.id, this._folderInfos, perFolderStuff,
     this._deadFolderIds,
     function stateSaved() {
       this._saveAccountStateActive = false;
-      this._LOG.saveAccountState_end(reason, folderSaveCount);

       // NB: we used to log when the save completed, but it ended up being
       // annoying to the unit tests since we don't block our actions on
@@ -16303,8 +15570,6 @@ exports.saveAccountState = function(reuseTrans, callback, reason) {
       });
     }.bind(this),
     reuseTrans);
-  // Reduce the length of time perFolderStuff and its contents are kept alive.
-  perFolderStuff = null;
   this._deadFolderIds = null;
   return trans;
 };
@@ -17481,12 +16746,11 @@ var FOLDER_TYPE_TO_SORT_PRIORITY = {
   important: 'f',
   drafts: 'g',
   localdrafts: 'h',
-  outbox: 'i',
-  queue: 'j',
-  sent: 'k',
-  junk: 'l',
-  trash: 'n',
-  archive: 'p',
+  queue: 'i',
+  sent: 'j',
+  junk: 'k',
+  trash: 'm',
+  archive: 'o',
   normal: 'z',
   // nomail folders are annoying since they are basically just hierarchy,
   //  but they are also rare and should only happen amongst normal folders.
@@ -18243,37 +17507,12 @@ MailBridge.prototype = {

   _cmd_moveMessages: function mb__cmd_moveMessages(msg) {
     var longtermIds = this.universe.moveMessages(
-      msg.messages, msg.targetFolder, function(err, moveMap) {
-        this.__sendMessage({
-          type: 'mutationConfirmed',
-          handle: msg.handle,
-          longtermIds: longtermIds,
-          result: moveMap
-        });
-      }.bind(this));
-  },
-
-  _cmd_sendOutboxMessages: function(msg) {
-    var account = this.universe.getAccountForAccountId(msg.accountId);
-    this.universe.sendOutboxMessages(account, {
-      reason: 'api request'
-    }, function(err) {
-      this.__sendMessage({
-        type: 'sendOutboxMessages',
-        handle: msg.handle
-      });
-    }.bind(this));
-  },
-
-  _cmd_setOutboxSyncEnabled: function(msg) {
-    var account = this.universe.getAccountForAccountId(msg.accountId);
-    this.universe.setOutboxSyncEnabled(
-      account, msg.outboxSyncEnabled, function() {
-        this.__sendMessage({
-          type: 'setOutboxSyncEnabled',
-          handle: msg.handle
-        });
-      }.bind(this));
+      msg.messages, msg.targetFolder);
+    this.__sendMessage({
+      type: 'mutationConfirmed',
+      handle: msg.handle,
+      longtermIds: longtermIds,
+    });
   },

   _cmd_undo: function mb__cmd_undo(msg) {
@@ -18574,8 +17813,7 @@ MailBridge.prototype = {
             cc: header.cc,
             bcc: header.bcc,
             referencesStr: body.references,
-            attachments: attachments,
-            sendStatus: header.sendStatus
+            attachments: attachments
           });
           callWhenDone();
         }
@@ -18612,7 +17850,11 @@ MailBridge.prototype = {
         function sendDeleted() {
           self.__sendMessage({
             type: 'doneCompose',
-            handle: msg.handle
+            handle: msg.handle,
+            err: null,
+            badAddresses: null,
+            messageId: null,
+            sentDate: null
           });
         }
         if (req.persistedNamer) {
@@ -18633,55 +17875,34 @@ MailBridge.prototype = {
       account = this.universe.getAccountForSenderIdentityId(wireRep.senderId);
       var identity = this.universe.getIdentityForSenderIdentityId(
                        wireRep.senderId);
-
       if (msg.command === 'send') {
-        // To enqueue a message for sending:
-        //   1. Save the draft.
-        //   2. Move the draft to the outbox.
-        //   3. Fire off a job to send pending outbox messages.
-
+        // For a send, we first save the state of the draft, then we send it.
         req.persistedNamer = this.universe.saveDraft(
           account, req.persistedNamer, wireRep,
           function(err, newRecords) {
+            var composer = new $composer.Composer(newRecords, account,
+                                                  identity);
+
             req.active = null;
-            if (req.die) {
+            if (req.die)
               delete this._pendingRequests[msg.handle];
-            }
-
-            var outboxFolder = account.getFirstFolderWithType('outbox');
-            this.universe.moveMessages([req.persistedNamer], outboxFolder.id);
-
-            // We only want to display notifications if the universe
-            // is online, i.e. we expect this sendOutboxMessages
-            // invocation to actually fire immediately. If we're in
-            // airplane mode, for instance, this job won't actually
-            // run until we're online, in which case it no longer
-            // makes sense to emit notifications for this job.
-            this.universe.sendOutboxMessages(account, {
-              reason: 'moved to outbox',
-              emitNotifications: this.universe.online
-            });
+            account.sendMessage(composer, function(err, badAddresses) {
+              if (!err) {
+              // Now that we're all successfully sent, nuke the draft
+                this.universe.deleteDraft(account, req.persistedNamer);
+              }
+              // And report success without waiting for the draft to be
+              // deleted.
+              this.__sendMessage({
+                type: 'doneCompose',
+                handle: msg.handle,
+                err: err,
+                badAddresses: badAddresses,
+                messageId: composer.messageId,
+                sentDate: composer.sentDate.valueOf(),
+              });
+            }.bind(this));
           }.bind(this));
-
-        var initialSendStatus = {
-          accountId: account.id,
-          suid: req.persistedNamer.suid,
-          state: (this.universe.online ? 'sending' : 'pending'),
-          emitNotifications: true
-        };
-
-        // Send 'doneCompose' nearly immediately, as saveDraft might
-        // take a while to complete if other stuff is going on. We'll
-        // pass along the initialSendStatus so that we can immediately
-        // display status information.
-        this.__sendMessage({
-          type: 'doneCompose',
-          handle: msg.handle,
-          sendStatus: initialSendStatus
-        });
-
-        // Broadcast the send status immediately here as well.
-        this.universe.__notifyBackgroundSendStatus(initialSendStatus);
       }
       else if (msg.command === 'save') {
         // Save the draft, updating our persisted namer.
@@ -18693,7 +17914,11 @@ MailBridge.prototype = {
               delete self._pendingRequests[msg.handle];
             self.__sendMessage({
               type: 'doneCompose',
-              handle: msg.handle
+              handle: msg.handle,
+              err: null,
+              badAddresses: null,
+              messageId: null,
+              sentDate: null,
             });
           });
       }
@@ -18712,19 +17937,9 @@ MailBridge.prototype = {
       type: 'cronSyncStop',
       accountsResults: accountsResults
     });
-  },
-
-  /**
-   * Notify the frontend about the status of message sends. Data has
-   * keys like 'state', 'error', etc, per the sendOutboxMessages job.
-   */
-  notifyBackgroundSendStatus: function(data) {
-    this.__sendMessage({
-      type: 'backgroundSendStatus',
-      data: data
-    });
   }

+  //////////////////////////////////////////////////////////////////////////////
 };

 var LOGFAB = exports.LOGFAB = $log.register($module, {
@@ -19029,7 +18244,6 @@ define('mailapi/cronsync',
     './worker-router',
     './slice_bridge_proxy',
     './mailslice',
-    './allback',
     'prim',
     'module',
     'exports'
@@ -19039,7 +18253,6 @@ define('mailapi/cronsync',
     $router,
     $sliceBridgeProxy,
     $mailslice,
-    $allback,
     $prim,
     $module,
     exports
@@ -19192,10 +18405,18 @@ CronSync.prototype = {
   },

   /**
-   * Synchronize the given account. This fetches new messages for the
-   * inbox, and attempts to send pending outbox messages (if
-   * applicable). The callback occurs after both of those operations
-   * have completed.
+   * Synchronize the given account.  Right now this is just the Inbox for the
+   * account.
+   *
+   * XXX For IMAP, we really want to use the standard iterative growth logic
+   * but generally ignoring the number of headers in the slice and instead
+   * just doing things by date.  Since making that correct without breaking
+   * things or making things really ugly will take a fair bit of work, we are
+   * initially just using the UI-focused logic for this.
+   *
+   * XXX because of this, we totally ignore IMAP's number of days synced
+   * value.  ActiveSync handles that itself, so our ignoring it makes no
+   * difference for it.
    */
   syncAccount: function(account, doneCallback) {
     // - Skip syncing if we are offline or the account is disabled
@@ -19206,8 +18427,19 @@ CronSync.prototype = {
       return;
     }

-    var latch = $allback.latch();
-    var inboxDone = latch.defer('inbox');
+    var done = function(result) {
+      // Wait for any in-process job operations to complete, so
+      // that the app is not killed in the middle of a sync.
+      this._universe.waitForAccountOps(account, function() {
+        // Also wait for any account save to finish. Most
+        // likely failure will be new message headers not
+        // getting saved if the callback is not fired
+        // until after account saves.
+        account.runAfterSaves(function() {
+          doneCallback(result);
+        });
+      });
+    }.bind(this);

     var inboxFolder = account.getFirstFolderWithType('inbox');
     var storage = account.getFolderStorageForFolderId(inboxFolder.id);
@@ -19246,50 +18478,21 @@ CronSync.prototype = {
               maximumBytesToFetch: MAX_SNIPPET_BYTES
             }, function() {
               debug('Notifying for ' + newHeaders.length + ' headers');
-              inboxDone([newHeaders.length, notifyHeaders]);
+              done([newHeaders.length, notifyHeaders]);
           }.bind(this));
         } else {
           debug('UNIVERSE OFFLINE. Notifying for ' + newHeaders.length +
                 ' headers');
-          inboxDone([newHeaders.length, notifyHeaders]);
+          done([newHeaders.length, notifyHeaders]);
         }
       } else {
-        inboxDone();
+        done();
       }
     }.bind(this), this._LOG);

     this._activeSlices.push(slice);
     // Pass true to force contacting the server.
     storage.sliceOpenMostRecent(slice, true);
-
-    // Check the outbox; if it has pending messages, attempt to send them.
-    var outboxFolder = account.getFirstFolderWithType('outbox');
-    if (outboxFolder) {
-      var outboxStorage = account.getFolderStorageForFolderId(outboxFolder.id);
-      if (outboxStorage.getKnownMessageCount() > 0) {
-        this._universe.sendOutboxMessages(account, {
-          reason: 'syncAccount'
-        }, latch.defer('outbox'));
-      }
-    }
-
-    // After both inbox and outbox syncing are algorithmically done,
-    // wait for any ongoing job operations to complete so that the app
-    // is not killed in the middle of a sync.
-    latch.then(function(latchResults) {
-      // Right now, we ignore the outbox sync's results; we only care
-      // about the inbox.
-      var inboxResult = latchResults.inbox[0];
-      this._universe.waitForAccountOps(account, function() {
-        // Also wait for any account save to finish. Most
-        // likely failure will be new message headers not
-        // getting saved if the callback is not fired
-        // until after account saves.
-        account.runAfterSaves(function() {
-          doneCallback(inboxResult);
-        });
-      });
-    }.bind(this));
   },

   onAlarm: function(accountIds) {
@@ -20129,7 +19332,6 @@ define('mailapi/mailuniverse',
     './maildb',
     './cronsync',
     './accountcommon',
-    './allback',
     'module',
     'exports'
   ],
@@ -20143,7 +19345,6 @@ define('mailapi/mailuniverse',
     $maildb,
     $cronsync,
     $acctcommon,
-    $allback,
     $module,
     exports
   ) {
@@ -20561,28 +19762,20 @@ function MailUniverse(callAfterBigBang, online, testOptions) {

       // - Try to re-create any accounts using old account infos.
       if (lazyCarryover) {
-        this._LOG.configMigrating_begin(lazyCarryover);
+        self._LOG.configMigrating(lazyCarryover);
         var waitingCount = lazyCarryover.accountInfos.length;
         var oldVersion = lazyCarryover.oldVersion;
-
-        var accountRecreated = function(accountInfo, err) {
-          this._LOG.recreateAccount_end(accountInfo.type, accountInfo.id, err);
-          // We don't care how they turn out, just that they get a chance
-          // to run to completion before we call our bootstrap complete.
-          if (--waitingCount === 0) {
-            this._LOG.configMigrating_end(null);
-            this._initFromConfig();
-            callAfterBigBang();
-          }
-        };
-
         for (i = 0; i < lazyCarryover.accountInfos.length; i++) {
           var accountInfo = lazyCarryover.accountInfos[i];
-          this._LOG.recreateAccount_begin(accountInfo.type, accountInfo.id,
-                                          null);
-          $acctcommon.recreateAccount(
-            self, oldVersion, accountInfo,
-            accountRecreated.bind(this, accountInfo));
+          $acctcommon.recreateAccount(self, oldVersion, accountInfo,
+                                      function() {
+            // We don't care how they turn out, just that they get a chance
+            // to run to completion before we call our bootstrap complete.
+            if (--waitingCount === 0) {
+              self._initFromConfig();
+              callAfterBigBang();
+            }
+          });
         }
         // Do not let callAfterBigBang get called.
         return;
@@ -20593,7 +19786,7 @@ function MailUniverse(callAfterBigBang, online, testOptions) {
     }
     self._initFromConfig();
     callAfterBigBang();
-  }.bind(this));
+  });
 }
 exports.MailUniverse = MailUniverse;
 MailUniverse.prototype = {
@@ -21042,39 +20235,19 @@ MailUniverse.prototype = {
   // expects (accountsResults)
   __notifyStoppedCronSync: makeBridgeFn('notifyCronSyncStop'),

-  // __notifyBackgroundSendStatus expects {
-  //   suid: messageSuid,
-  //   accountId: accountId,
-  //   sendFailures: (integer),
-  //   state: 'pending', 'sending', 'error', 'success', or 'syncDone'
-  //   emitNotifications: Boolean,
-  //   err: (if applicable),
-  //   badAddresses: (if applicable)
-  // }
-  __notifyBackgroundSendStatus: makeBridgeFn('notifyBackgroundSendStatus'),
-
   //////////////////////////////////////////////////////////////////////////////
   // Lifetime Stuff

   /**
    * Write the current state of the universe to the database.
    */
-  saveUniverseState: function(callback) {
+  saveUniverseState: function() {
     var curTrans = null;
-    var latch = $allback.latch();

-    this._LOG.saveUniverseState_begin();
     for (var iAcct = 0; iAcct < this.accounts.length; iAcct++) {
       var account = this.accounts[iAcct];
-      curTrans = account.saveAccountState(curTrans, latch.defer(account.id),
-                                          'saveUniverse');
+      curTrans = account.saveAccountState(curTrans, null, 'saveUniverse');
     }
-    latch.then(function() {
-      this._LOG.saveUniverseState_end();
-      if (callback) {
-        callback();
-      };
-    }.bind(this));
   },

   /**
@@ -21241,17 +20414,13 @@ MailUniverse.prototype = {
     }
   },

-  /**
-   * A local op finished; figure out what the error means, perform any requested
-   * saves, and *only after the saves complete*, issue any appropriate callback
-   * and only then start the next op.
-   */
   _localOpCompleted: function(account, op, err, resultIfAny,
                               accountSaveSuggested) {

     var queues = this._opsByAccount[account.id],
         serverQueue = queues.server,
         localQueue = queues.local;
+    queues.active = false;

     var removeFromServerQueue = false,
         completeOp = false;
@@ -21276,9 +20445,6 @@ MailUniverse.prototype = {
           completeOp = true;
           break;
       }
-
-      // Do not save if this was an error.
-      accountSaveSuggested = false;
     }
     else {
       switch (op.localStatus) {
@@ -21297,6 +20463,11 @@ MailUniverse.prototype = {
           }
           break;
       }
+
+      // This is a suggestion; in the event of high-throughput on operations,
+      // we probably don't want to save the account every tick, etc.
+      if (accountSaveSuggested)
+        account.saveAccountState(null, null, 'localOp');
     }

     if (removeFromServerQueue) {
@@ -21306,30 +20477,35 @@ MailUniverse.prototype = {
     }
     localQueue.shift();

-    var callback;
     if (completeOp) {
       if (this._opCallbacks.hasOwnProperty(op.longtermId)) {
-        callback = this._opCallbacks[op.longtermId];
+        var callback = this._opCallbacks[op.longtermId];
         delete this._opCallbacks[op.longtermId];
+        try {
+          callback(err, resultIfAny, account, op);
+        }
+        catch(ex) {
+          console.log(ex.message, ex.stack);
+          this._LOG.opCallbackErr(op.type);
+        }
       }
     }

-    if (accountSaveSuggested) {
-      account.saveAccountState(
-        null,
-        this._startNextOp.bind(this, account, callback, op, err, resultIfAny),
-        'localOp:' + op.type);
-      return;
+    if (localQueue.length) {
+      op = localQueue[0];
+      this._dispatchLocalOpForAccount(account, op);
+    }
+    else if (serverQueue.length && this.online && account.enabled) {
+      op = serverQueue[0];
+      this._dispatchServerOpForAccount(account, op);
+    }
+    else if (this._opCompletionListenersByAccount[account.id]) {
+      this._opCompletionListenersByAccount[account.id](account);
+      this._opCompletionListenersByAccount[account.id] = null;
     }
-
-    this._startNextOp(account, callback, op, err, resultIfAny);
   },

   /**
-   * A server op finished; figure out what the error means, perform any
-   * requested saves, and *only after the saves complete*, issue any appropriate
-   * callback and only then start the next op.
-   *
    * @args[
    *   @param[account[
    *   @param[op]{
@@ -21390,6 +20566,7 @@ MailUniverse.prototype = {
     var queues = this._opsByAccount[account.id],
         serverQueue = queues.server,
         localQueue = queues.local;
+    queues.active = false;

     if (serverQueue[0] !== op)
       this._LOG.opInvariantFailure();
@@ -21514,76 +20691,27 @@ MailUniverse.prototype = {
     if (accountSaveSuggested)
       account._saveAccountIsImminent = true;

-    var callback;
     if (completeOp) {
       if (this._opCallbacks.hasOwnProperty(op.longtermId)) {
-        callback = this._opCallbacks[op.longtermId];
+        var callback = this._opCallbacks[op.longtermId];
         delete this._opCallbacks[op.longtermId];
+        try {
+          callback(err, resultIfAny, account, op);
+        }
+        catch(ex) {
+          console.log(ex.message, ex.stack);
+          this._LOG.opCallbackErr(op.type);
+        }
       }

       // This is a suggestion; in the event of high-throughput on operations,
       // we probably don't want to save the account every tick, etc.
       if (accountSaveSuggested) {
         account._saveAccountIsImminent = false;
-        account.saveAccountState(
-          null,
-          this._startNextOp.bind(this, account, callback, op, err, resultIfAny),
-          'serverOp:' + op.type);
-        return;
-      }
-    }
-
-    this._startNextOp(account, callback, op, err, resultIfAny);
-  },
-
-  /**
-   * Shared code for _localOpCompleted and _serverOpCompleted to figure out what
-   * to do next *after* any account save has completed, including invoking
-   * callbacks.  See bug https://bugzil.la/1039007 for rationale as to why we
-   * think it makes sense to defer the callbacks or to provide new reasons why
-   * we should change this behaviour.
-   *
-   * It used to be that we would trigger saves without waiting for them to
-   * complete with the theory that this would allow us to generally be more
-   * efficient without losing correctness since the IndexedDB transaction model
-   * is strong and takes care of data dependency issues for us.  However, for
-   * both testing purposes and with some new concerns over correctness issues,
-   * it's now making sense to wait on the transaction to commit.  There are
-   * potentially some memory-use wins from waiting for the transaction to
-   * complete, especially if we imagine some particularly pathological
-   * situations.
-   *
-   * @param account
-   * @param {Function} [callback]
-   *   The callback associated with the last operation.  May be omitted.  If
-   *    provided then all of the following arguments must also be provided.
-   * @param [lastOp]
-   * @param [err]
-   * @param [result]
-   */
-  _startNextOp: function(account, callback, lastOp, err, result) {
-    var queues = this._opsByAccount[account.id],
-        serverQueue = queues.server,
-        localQueue = queues.local;
-    var op;
-
-    if (callback) {
-      try {
-        callback(err, result, account, lastOp);
-      }
-      catch(ex) {
-        console.log(ex.message, ex.stack);
-        this._LOG.opCallbackErr(lastOp.type);
+        account.saveAccountState(null, null, 'serverOp');
       }
     }

-    // We must hold off on freeing up queue.active until after we have
-    // completed processing and called the callback, just as we do in
-    // _localOpCompleted. This allows `callback` to safely schedule
-    // new jobs without interfering with the scheduling we're going to
-    // do immediately below.
-    queues.active = false;
-
     if (localQueue.length) {
       op = localQueue[0];
       this._dispatchLocalOpForAccount(account, op);
@@ -21676,9 +20804,8 @@ MailUniverse.prototype = {

   waitForAccountOps: function(account, callback) {
     var queues = this._opsByAccount[account.id];
-    if (!queues.active &&
-        queues.local.length === 0 &&
-        (queues.server.length === 0 || !this.online || !account.enabled))
+    if (queues.local.length === 0 &&
+       (queues.server.length === 0 || !this.online || !account.enabled))
       callback();
     else
       this._opCompletionListenersByAccount[account.id] = callback;
@@ -21832,46 +20959,14 @@ MailUniverse.prototype = {
     return longtermIds;
   },

-  moveMessages: function(messageSuids, targetFolderId, callback) {
+  moveMessages: function(messageSuids, targetFolderId) {
     var self = this, longtermIds = [],
         targetFolderAccount = this.getAccountForFolderId(targetFolderId);
-    var latch = $allback.latch();
-    this._partitionMessagesByAccount(messageSuids, null).forEach(function(x,i) {
+    this._partitionMessagesByAccount(messageSuids, null).forEach(function(x) {
       // TODO: implement cross-account moves and then remove this constraint
       // and instead schedule the cross-account move.
       if (x.account !== targetFolderAccount)
         throw new Error('cross-account moves not currently supported!');
-
-      // If the move is entirely local-only (i.e. folders that will
-      // never be synced to the server), we don't need to run the
-      // server side of the job.
-      //
-      // When we're moving a message between an outbox and
-      // localdrafts, we need the operation to succeed even if we're
-      // offline, and we also need to receive the "moveMap" returned
-      // by the local side of the operation, so that the client can
-      // call "editAsDraft" on the moved message.
-      //
-      // TODO: When we have server-side 'draft' folder support, we
-      // actually still want to run the server side of the operation,
-      // but we won't want to wait for it to complete. Maybe modify
-      // the job system to pass back localResult and serverResult
-      // independently, or restructure the way we move outbox messages
-      // back to the drafts folder.
-      var targetStorage =
-            targetFolderAccount.getFolderStorageForFolderId(targetFolderId);
-
-      // If any of the sourceStorages (or targetStorage) is not
-      // local-only, we can stop looking.
-      var isLocalOnly = targetStorage.isLocalOnly;
-      for (var j = 0; j < x.messages.length && isLocalOnly; j++) {
-        var sourceStorage =
-              self.getFolderStorageForMessageSuid(x.messages[j].suid);
-        if (!sourceStorage.isLocalOnly) {
-          isLocalOnly = false;
-        }
-      }
-
       var longtermId = self._queueAccountOp(
         x.account,
         {
@@ -21879,32 +20974,14 @@ MailUniverse.prototype = {
           longtermId: null,
           lifecycle: 'do',
           localStatus: null,
-          serverStatus: isLocalOnly ? 'n/a' : null,
+          serverStatus: null,
           tryCount: 0,
           humanOp: 'move',
           messages: x.messages,
           targetFolder: targetFolderId,
-        }, latch.defer(i));
+        });
       longtermIds.push(longtermId);
     });
-
-    // When the moves finish, they'll each pass back results of the
-    // form [err, moveMap]. The moveMaps provide a mapping of
-    // sourceSuid => targetSuid, allowing the client to point itself
-    // to the moved messages. Since multiple moves would result in
-    // multiple moveMap results, we combine them here into a single
-    // result map.
-    latch.then(function(results) {
-      // results === [[err, moveMap], [err, moveMap], ...]
-      var combinedMoveMap = {};
-      for (var key in results) {
-        var moveMap = results[key][1];
-        for (var k in moveMap) {
-          combinedMoveMap[k] = moveMap[k];
-        }
-      }
-      callback(/* err = */ null, /* result = */ combinedMoveMap);
-    });
     return longtermIds;
   },

@@ -21989,8 +21066,7 @@ MailUniverse.prototype = {
         folderId: folderId,
         headerInfo: sentSafeHeader,
         bodyInfo: sentSafeBody
-      },
-      callback);
+      });
     return [longtermId];
   },

@@ -22108,85 +21184,6 @@ MailUniverse.prototype = {
   },

   /**
-   * Kick off a job to send pending outgoing messages. See the job
-   * documentation regarding "sendOutboxMessages" for more details.
-   *
-   * @param {MailAccount} account
-   * @param {MessageNamer} opts.beforeMessage
-   *   If provided, start with the first message older than this one.
-   *   (This is only used internally within the job itself.)
-   * @param {string} opts.reason
-   *   Optional description, used for debugging.
-   * @param {Boolean} opts.emitNotifications
-   *   True to pass along send status notifications to the model.
-   */
-  sendOutboxMessages: function(account, opts, callback) {
-    opts = opts || {};
-
-    console.log('outbox: sendOutboxMessages(', JSON.stringify(opts), ')');
-
-    // If we are not online, we won't actually kick off a job until we
-    // come back online. Immediately fire a status notification
-    // indicating that we are done attempting to sync for now.
-    if (!this.online) {
-      this.notifyOutboxSyncDone(account);
-      // Fall through; we still want to queue the op.
-    }
-
-    // Do not attempt to check if the outbox is empty here. This op is
-    // queued immediately after the client moves a message to the
-    // outbox. The outbox may be empty here, but it might be filled
-    // when the op runs.
-    this._queueAccountOp(
-      account,
-      {
-        type: 'sendOutboxMessages',
-        longtermId: 'session', // Does not need to be persisted.
-        lifecycle: 'do',
-        localStatus: 'n/a',
-        serverStatus: null,
-        tryCount: 0,
-        beforeMessage: opts.beforeMessage,
-        emitNotifications: opts.emitNotifications,
-        humanOp: 'sendOutboxMessages'
-      },
-      callback);
-  },
-
-  /**
-   * Dispatch a notification to the frontend, indicating that we're
-   * done trying to send messages from the outbox for now.
-   */
-  notifyOutboxSyncDone: function(account) {
-    this.__notifyBackgroundSendStatus({
-      accountId: account.id,
-      state: 'syncDone'
-    });
-  },
-
-  /**
-   * Enable or disable Outbox syncing temporarily. For instance, you
-   * will want to disable outbox syncing if the user is in "edit mode"
-   * for the list of messages in the outbox folder. This setting does
-   * not persist.
-   */
-  setOutboxSyncEnabled: function(account, enabled, callback) {
-    this._queueAccountOp(
-      account,
-      {
-        type: 'setOutboxSyncEnabled',
-        longtermId: 'session', // Does not need to be persisted.
-        lifecycle: 'do',
-        localStatus: null,
-        serverStatus: 'n/a', // Local-only.
-        outboxSyncEnabled: enabled,
-        tryCount: 0,
-        humanOp: 'setOutboxSyncEnabled'
-      },
-      callback);
-  },
-
-  /**
    * Delete an existing (local) draft.
    *
    * This function is implemented as a job/operation so it is inherently ordered
@@ -22326,6 +21323,7 @@ var LOGFAB = exports.LOGFAB = $log.register($module, {
     type: $log.ACCOUNT,
     events: {
       configCreated: {},
+      configMigrating: {},
       configLoaded: {},
       createAccount: { type: true, id: false },
       reportProblem: { type: true, suppressed: true, id: false },
@@ -22341,11 +21339,6 @@ var LOGFAB = exports.LOGFAB = $log.register($module, {
       configLoaded: { config: false, accounts: false },
       createAccount: { name: false },
     },
-    asyncJobs: {
-      configMigrating: {},
-      recreateAccount: { type: true, id: false, err: false },
-      saveUniverseState: {}
-    },
     errors: {
       badAccountType: { type: true },
       opCallbackErr: { type: false },
diff --git a/apps/email/js/ext/pop3/pop3.js b/apps/email/js/ext/pop3/pop3.js
index 9a968c9..19ad57d 100644
--- a/apps/email/js/ext/pop3/pop3.js
+++ b/apps/email/js/ext/pop3/pop3.js
@@ -73,7 +73,6 @@ function NetSocket(port, host, crypto) {
     onopen: this._onconnect.bind(this),
     onerror: this._onerror.bind(this),
     ondata: this._ondata.bind(this),
-    onprogress: this._onprogress.bind(this),
     onclose: this._onclose.bind(this)
   };
   var routerInfo = routerMaker.register(function(data) {
@@ -157,9 +156,6 @@ NetSocket.prototype._ondata = function(data) {
   var buffer = Buffer(data);
   this.emit('data', buffer);
 };
-NetSocket.prototype._onprogress = function() {
-  this.emit('progress');
-};
 NetSocket.prototype._onclose = function() {
   this.emit('close');
   this.emit('end');
diff --git a/apps/email/js/mail_app.js b/apps/email/js/mail_app.js
index 9b8137d..9daa2e1 100644
--- a/apps/email/js/mail_app.js
+++ b/apps/email/js/mail_app.js
@@ -117,7 +117,6 @@ model.latestOnce('api', function(api) {
     },
     folderNames: {
       inbox: mozL10n.get('folder-inbox'),
-      outbox: mozL10n.get('folder-outbox'),
       sent: mozL10n.get('folder-sent'),
       drafts: mozL10n.get('folder-drafts'),
       trash: mozL10n.get('folder-trash'),
@@ -493,9 +492,7 @@ appMessages.on('activity', gateEntry(function(type, data, rawActivity) {
 }));

 appMessages.on('notification', gateEntry(function(data) {
-  data = data || {};
-  var type = data.type || '';
-  var folderType = data.folderType || 'inbox';
+  var type = data ? data.type : '';

   model.latestOnce('foldersSlice', function latestFolderSlice() {
     function onCorrectFolder() {
@@ -536,10 +533,7 @@ appMessages.on('notification', gateEntry(function(data) {
         accountId = data.accountId;

     if (model.account.id === accountId) {
-      // folderType will often be 'inbox' (in the case of a new message
-      // notification) or 'outbox' (in the case of a "failed send"
-      // notification).
-      return model.selectFirstFolderWithType(folderType, onCorrectFolder);
+      return model.selectInbox(onCorrectFolder);
     } else {
       var newAccount;
       acctsSlice.items.some(function(account) {
@@ -550,9 +544,7 @@ appMessages.on('notification', gateEntry(function(data) {
       });

       if (newAccount) {
-        model.changeAccount(newAccount, function() {
-          model.selectFirstFolderWithType(folderType, onCorrectFolder);
-        });
+        model.changeAccount(newAccount, onCorrectFolder);
       }
     }
   });
diff --git a/apps/email/js/mail_common.js b/apps/email/js/mail_common.js
index c2b7082..1f0896e 100644
--- a/apps/email/js/mail_common.js
+++ b/apps/email/js/mail_common.js
@@ -6,10 +6,10 @@
 'use strict';
 define(function(require, exports) {

-var Cards,
-    Toaster = require('./toaster'),
+var Cards, Toaster,
     evt = require('evt'),
     mozL10n = require('l10n!'),
+    toasterNode = require('tmpl!./cards/toaster.html'),
     confirmDialogTemplateNode = require('tmpl!./cards/confirm_dialog.html'),
     ValueSelector = require('value_selector');

@@ -209,7 +209,7 @@ Cards = {
     this._containerNode = document.getElementById('cardContainer');
     this._cardsNode = document.getElementById('cards');

-    Toaster.init(this._containerNode);
+    this._containerNode.appendChild(toasterNode);

     this._containerNode.addEventListener('click',
                                          this._onMaybeIntercept.bind(this),
@@ -241,7 +241,7 @@ Cards = {

     // Find the card containing the event target.
     var cardNode = event.target;
-    for (cardNode = event.target; cardNode; cardNode = cardNode.parentElement) {
+    for (cardNode = event.target; cardNode; cardNode = cardNode.parentNode) {
       if (cardNode.classList.contains('card'))
         break;
     }
@@ -909,6 +909,13 @@ Cards = {
         addClass(endNode, 'anim-fade');
       }

+      // Popup toaster that pended for previous card view.
+      var pendingToaster = Toaster.pendingStack.slice(-1)[0];
+      if (pendingToaster) {
+        pendingToaster();
+        Toaster.pendingStack.pop();
+      }
+
       // If any action to do at the end of transition trigger now.
       if (this._afterTransitionAction) {
         var afterTransitionAction = this._afterTransitionAction;
@@ -1010,6 +1017,166 @@ Cards = {
   }
 };

+/**
+ * Central tracker of poptart messages; specifically, ongoing message sends,
+ * failed sends, and recently performed undoable mutations.
+ */
+Toaster = {
+  get body() {
+    delete this.body;
+    return this.body =
+           document.querySelector('section[role="status"]');
+  },
+  get text() {
+    delete this.text;
+    return this.text =
+           document.querySelector('section[role="status"] p');
+  },
+  get undoBtn() {
+    delete this.undoBtn;
+    return this.undoBtn =
+           document.querySelector('.toaster-banner-undo');
+  },
+  get retryBtn() {
+    delete this.retryBtn;
+    return this.retryBtn =
+           document.querySelector('.toaster-banner-retry');
+  },
+
+  undoableOp: null,
+  retryCallback: null,
+
+  /**
+   * Toaster timeout setting.
+   */
+  _timeout: 5000,
+  /**
+   * Toaster fadeout animation event handling.
+   */
+  _animationHandler: function() {
+    this.body.addEventListener('transitionend', this, false);
+    this.body.classList.add('fadeout');
+  },
+  /**
+   * The list of cards that want to hear about what's up with the toaster.  For
+   * now this will just be the message-list, but it might also be the
+   * message-search card as well.  If it ends up being more, then we probably
+   * want to rejigger things so we can just overlay stuff on most cards...
+   */
+  _listeners: [],
+
+  pendingStack: [],
+
+  /**
+   * Tell toaster listeners about a mutation we just made.
+   *
+   * @param {Object} undoableOp undoable operation.
+   * @param {Boolean} pending
+   *   If true, indicates that we should wait to display this banner until we
+   *   transition to the next card.  This is appropriate for things like
+   *   deleting the message that is displayed on the current card (and which
+   *   will be imminently closed).
+   */
+  logMutation: function(undoableOp, pending) {
+    if (pending) {
+      this.pendingStack.push(this.show.bind(this, 'undo', undoableOp));
+    } else {
+      this.show('undo', undoableOp);
+    }
+  },
+
+  /**
+   * Something failed that it makes sense to let the user explicitly trigger
+   * a retry of!  For example, failure to synchronize.
+   */
+  logRetryable: function(retryStringId, retryCallback) {
+    this.show('retry', retryStringId, retryCallback);
+  },
+
+  handleEvent: function(evt) {
+    switch (evt.type) {
+      case 'click' :
+        var classList = evt.target.classList;
+        if (classList.contains('toaster-banner-undo')) {
+          this.undoableOp.undo();
+          this.hide();
+        } else if (classList.contains('toaster-banner-retry')) {
+          if (this.retryCallback)
+            this.retryCallback();
+          this.hide();
+        } else if (classList.contains('toaster-cancel-btn')) {
+          this.hide();
+        }
+        break;
+      case 'transitionend' :
+        this.hide();
+        break;
+    }
+  },
+
+  show: function(type, operation, callback) {
+    // Close previous toaster before showing the new one.
+    if (!this.body.classList.contains('collapsed')) {
+      this.hide();
+    }
+
+    var text, textId, showUndo = false;
+    if (type === 'undo') {
+      this.undoableOp = operation;
+      // There is no need to show toaster if affected message count < 1
+      if (!this.undoableOp || this.undoableOp.affectedCount < 1) {
+        return;
+      }
+      textId = 'toaster-message-' + this.undoableOp.operation;
+      text = mozL10n.get(textId, { n: this.undoableOp.affectedCount });
+      // https://bugzilla.mozilla.org/show_bug.cgi?id=804916
+      // Remove undo email move/delete UI for V1.
+      showUndo = (this.undoableOp.operation !== 'move' &&
+                  this.undoableOp.operation !== 'delete');
+    } else if (type === 'retry') {
+      textId = 'toaster-retryable-' + operation;
+      text = mozL10n.get(textId);
+      this.retryCallback = callback;
+    // XXX I assume this is for debug purposes?
+    } else if (type === 'text') {
+      text = operation;
+    }
+
+    if (type === 'undo' && showUndo)
+      this.undoBtn.classList.remove('collapsed');
+    else
+      this.undoBtn.classList.add('collapsed');
+    if (type === 'retry')
+      this.retryBtn.classList.remove('collapsed');
+    else
+      this.retryBtn.classList.add('collapsed');
+
+    this.body.title = type;
+    this.text.textContent = text;
+    this.body.addEventListener('click', this, false);
+    this.body.classList.remove('collapsed');
+    this.fadeTimeout = window.setTimeout(this._animationHandler.bind(this),
+                                         this._timeout);
+  },
+
+  isShowing: function() {
+    return !this.body.classList.contains('collapsed');
+  },
+
+  hide: function() {
+    this.body.classList.add('collapsed');
+    this.body.classList.remove('fadeout');
+    window.clearTimeout(this.fadeTimeout);
+    this.fadeTimeout = null;
+    this.body.removeEventListener('click', this);
+    this.body.removeEventListener('transitionend', this);
+
+    // Clear operations:
+    this.undoableOp = null;
+    this.retryCallback = null;
+  }
+};
+
 ////////////////////////////////////////////////////////////////////////////////
 // ConfirmDialog: defined inline with mail_common because of a cycle
 // with Cards. When Cards is split out of mail_common, this card
@@ -1283,6 +1450,7 @@ function mimeToClass(mimeType) {
 }

 exports.Cards = Cards;
+exports.Toaster = Toaster;
 exports.ConfirmDialog = ConfirmDialog;
 exports.FormNavigation = FormNavigation;
 exports.prettyDate = prettyDate;
diff --git a/apps/email/js/model.js b/apps/email/js/model.js
index a3e42c1..f2d615a 100644
--- a/apps/email/js/model.js
+++ b/apps/email/js/model.js
@@ -239,34 +239,22 @@ define(function(require) {
      * has been selected.
      */
     selectInbox: function(callback) {
-      this.selectFirstFolderWithType('inbox', callback);
-    },
-
-    /**
-     * For the already loaded account and associated foldersSlice, set
-     * the given folder as the tracked folder. The account MUST have a
-     * folder with the given type, or a fatal error will occur.
-     */
-    selectFirstFolderWithType: function(folderType, callback) {
-      if (!this.foldersSlice) {
+      if (!this.foldersSlice)
         throw new Error('No foldersSlice available');
-      }

-      var folder = this.foldersSlice.getFirstFolderWithType(folderType);
-      if (!folder) {
-        dieOnFatalError('We have an account without a folderType ' +
-                        folderType + '!', this.foldersSlice.items);
-      }
+      var inboxFolder = this.foldersSlice.getFirstFolderWithType('inbox');
+      if (!inboxFolder)
+        dieOnFatalError('We have an account without an inbox!',
+                        this.foldersSlice.items);

-      if (this.folder && this.folder.id === folder.id) {
-        if (callback) {
+      if (this.folder && this.folder.id === inboxFolder.id) {
+        if (callback)
           callback();
-        }
       } else {
-        if (callback) {
+        if (callback)
           this.once('folder', callback);
-        }
-        this.changeFolder(folder);
+
+        this.changeFolder(inboxFolder);
       }
     },

@@ -290,12 +278,6 @@ define(function(require) {
       model.emit('foldersSliceOnChange', folder);
     },

-    notifyBackgroundSendStatus: function(data) {
-      model.emit('backgroundSendStatus', data);
-    },
-
-    // Lifecycle
-
     _dieFolders: function() {
       if (this.foldersSlice)
         this.foldersSlice.die();
diff --git a/apps/email/js/sync.js b/apps/email/js/sync.js
index 057dc01..6f880fe 100644
--- a/apps/email/js/sync.js
+++ b/apps/email/js/sync.js
@@ -225,145 +225,5 @@ define(function(require) {
       });
     };

-
-    // Background Send Notifications
-
-    var BACKGROUND_SEND_NOTIFICATION_ID = 'backgroundSendFailed';
-    var sentAudio = null; // Lazy-loaded when first needed
-
-    /**
-     * The API passes through background send notifications with the
-     * following data (see the "sendOutboxMessages" job and/or
-     * `mailapi/jobs/outbox.js`):
-     *
-     * @param {int} accountId
-     * @param {string} suid
-     *   SUID of the message
-     * @param {string} state
-     *   'pending', 'syncing', 'success', or 'error'
-     * @param {string} err
-     *   (if applicable, otherwise null)
-     * @param {array} badAddresses
-     *   (if applicable)
-     * @param {int} sendFailures
-     *   Count of the number of times the message failed to send.
-     * @param {Boolean} emitNotifications
-     *   True if this message is being sent as a direct result of
-     *   the user sending a message from the compose window. False
-     *   otherwise, as in when the user "refreshes" the outbox.
-     * @param {Boolean} willSendMore
-     *   True if we will send a subsequent message from the outbox
-     *   immediately after sending this message.
-     *
-     * Additionally, this function appends the following to that
-     * structured data:
-     *
-     * @param {string} localizedDescription Notification text.
-     *
-     * If the application is in the foreground, we notify the user on
-     * both success and failure. If the application is in the
-     * background, we only post a system notifiaction on failure.
-     */
-    api.onbackgroundsendstatus = function(data) {
-      console.log('outbox: Message', data.suid, 'status =', JSON.stringify({
-        state: data.state,
-        err: data.err,
-        sendFailures: data.sendFailures,
-        emitNotifications: data.emitNotifications
-      }));
-
-      // Grab an appropriate localized string here. This description
-      // may be displayed in a number of different places, so it's
-      // cleaner to do the localization here.
-
-      var descId;
-      switch (data.state) {
-      case 'pending': descId = 'background-send-pending'; break;
-      case 'sending': descId = 'background-send-sending'; break;
-      case 'success': descId = 'background-send-success'; break;
-      case 'error':
-        if ((data.badAddresses && data.badAddresses.length) ||
-            data.err === 'bad-recipient') {
-          descId = 'background-send-error-recipients';
-        } else {
-          descId = 'background-send-error';
-        }
-        break;
-      case 'syncDone':
-        // We will not display any notification for a 'syncDone'
-        // message, except to stop refresh icons from spinning. No
-        // need to attempt to populate a description.
-        break;
-      default:
-        console.error('No state description for background send state "' +
-                      data.state + '"');
-        return;
-      }
-
-      data.localizedDescription = mozL10n.get(descId);
-
-      // If the message sent successfuly, and we're sending this as a
-      // side-effect of the user hitting "send" on the compose screen,
-      // (i.e. emitNotifications is true), we may need to play a sound.
-      if (data.state === 'success') {
-        // Grab an up-to-date reading of the "play sound on send"
-        // preference to decide if we're going to play a sound or not.
-        model.latestOnce('acctsSlice', function() {
-          var account = model.getAccount(data.accountId);
-          if (!account) {
-            console.error('Invalid account ID', data.accountId,
-                          'for a background send notification.');
-            return;
-          }
-
-          // If email is in the background, we should still be able to
-          // play audio due to having the 'audio-channel-notification'
-          // permission (unless higher priority audio is playing).
-
-          // TODO: As of June 2014, this behavior is still in limbo;
-          // see the following links for relevant discussion. We may
-          // need to follow up to ensure we get the behavior we want
-          // (which is to play a sound when possible, even if we're in
-          // the background).
-          //   Thread on dev-gaia: http://goo.gl/l6REZy
-          //   AUDIO_COMPETING bugs: https://bugzil.la/911238
-          if (account.playSoundOnSend) {
-            if (!sentAudio) {
-              sentAudio = new Audio('/sounds/sent.ogg');
-              sentAudio.mozAudioChannelType = 'notification';
-            }
-            sentAudio.play();
-          }
-        }.bind(this));
-      }
-
-      // If we are in the foreground, notify through the model, which
-      // will display an in-app toast notification when appropriate.
-      if (!document.hidden) {
-        model.notifyBackgroundSendStatus(data);
-      }
-      // Otherwise, notify with a system notification in the case of
-      // an error. By design, we don't use system-level notifications
-      // to notify the user on success, lest they get inundated with
-      // notifications.
-      else if (data.state === 'error' && data.emitNotifications) {
-        appSelf.latest('self', function(app) {
-          var iconUrl = notificationHelper.getIconURI(app);
-          var dataString = fromObject({
-            type: 'message_reader',
-            folderType: 'outbox',
-            accountId: data.accountId,
-            messageSuid: data.suid
-          });
-
-          sendNotification(
-            BACKGROUND_SEND_NOTIFICATION_ID,
-            mozL10n.get('background-send-error-title'),
-            data.localizedDescription,
-            iconUrl + '#' + dataString
-          );
-        });
-      }
-    };
   });
 });
diff --git a/apps/email/js/toaster.js b/apps/email/js/toaster.js
deleted file mode 100644
index cdb3fac..0000000
--- a/apps/email/js/toaster.js
+++ /dev/null
@@ -1,126 +0,0 @@
-'use strict';
-define(function(require) {
-  var mozL10n = require('l10n!');
-  var toasterNode = require('tmpl!./cards/toaster.html');
-
-  /**
-   * Manages the display of short status notifications, or 'toasts'.
-   * Each toast may optionally include an action button. Common uses
-   * may include:
-   *
-   * - Displaying notifications about message sending status
-   * - Allowing the user to undo flags/moves/deletes
-   * - Allowing the user to retry a failed operation, if applicable
-   *
-   * This class is a singleton, because there is only room for one
-   * toaster on the screen at a time. Subsequent 'toasts' will remove
-   * any previously-displaying toast.
-   */
-  var Toaster = {
-
-    defaultTimeout: 5000,
-
-    /**
-     * Initialize the Toaster, adding things to the DOM and setting up
-     * event handlers. The toaster starts out invisible.
-     */
-    init: function(parentEl) {
-      this.el = toasterNode;
-      parentEl.appendChild(this.el);
-      this.text = this.el.querySelector('.toaster-text');
-      this.actionButton = this.el.querySelector('.toaster-action');
-
-      this.el.addEventListener('click', this.hide.bind(this));
-      this.el.addEventListener('transitionend', this.hide.bind(this));
-      this.actionButton.addEventListener('click', this.onAction.bind(this));
-
-      this.currentToast = null; // The data for the currently-displayed toast.
-    },
-
-    /**
-     * Toast a potentially-undoable mail operation. If the operation
-     * is undoable, an 'Undo' button will be shown, allowing the user
-     * to undo the action, with one exception: The 'move' and 'delete'
-     * operations currently do not allow 'undo' per bug 804916, so
-     * those undo buttons are disabled.
-     */
-    toastOperation: function(op) {
-      if (!op || !op.affectedCount) {
-        return; // Nothing to do if no messages were affected.
-      }
-
-      // No undo for move/delete yet. <https://bugzil.la/804916>
-      var type = op.operation;
-      var canUndo = (op.undo && type !== 'move' && type !== 'delete');
-
-      this.toast({
-        text: mozL10n.get('toaster-message-' + type, { n: op.affectedCount }),
-        actionLabel: mozL10n.get('toaster-undo'),
-        action: canUndo && op.undo.bind(op)
-      });
-    },
-
-    /**
-     * Called when the user taps the action button (Undo, Retry, etc).
-     */
-    onAction: function() {
-      var actionFunction = (this.currentToast && this.currentToast.action);
-      this.hide();
-      if (actionFunction) {
-        actionFunction();
-      }
-    },
-
-    /**
-     * Display a transient message as a 'toast', with an optional
-     * action button. The toast dismisses automatically, unless the
-     * user taps the action button or the toast itself.
-     *
-     * @param {object} opts opts
-     * @param {string} opts.text Localized status text to display.
-     * @param {function} opts.action Optional function to call when the user
-     *                               clicks the action button. If not provided,
-     *                               the action button will not be visible.
-     * @param {string} opts.actionLabel Label to display for the action button.
-     *                                  Required only if `opts.action` is
-     *                                  provided.
-     */
-    toast: function(opts) {
-      opts = opts || {};
-      console.log('Showing toast:', JSON.stringify(opts));
-
-      this.hide(); // Hide in case there was a previous toast already displayed.
-
-      this.currentToast = opts;
-
-      this.text.textContent = opts.text;
-      this.actionButton.textContent = opts.actionLabel;
-
-      this.el.classList.toggle('actionable', !opts.action);
-      this.actionButton.disabled = !opts.action;
-      this.el.classList.remove('collapsed');
-
-      this._fadeTimeout = setTimeout(function() {
-        // This will hide when the 'fadeout' is complete in 'transitionend'.
-        this.el.classList.add('fadeout');
-      }.bind(this), opts.timeout || this.defaultTimeout);
-    },
-
-    isShowing: function() {
-      return !this.el.classList.contains('collapsed');
-    },
-
-    /**
-     * Hide the current toast, if one was visible. Idempotent.
-     */
-    hide: function() {
-      this.currentToast = null;
-      this.el.classList.add('collapsed');
-      this.el.classList.remove('fadeout');
-      window.clearTimeout(this._fadeTimeout);
-      this._fadeTimeout = null;
-    }
-  };
-
-  return Toaster;
-});
diff --git a/apps/email/locales/email.en-US.properties b/apps/email/locales/email.en-US.properties
index 67ae8d5..2a98e33 100644
--- a/apps/email/locales/email.en-US.properties
+++ b/apps/email/locales/email.en-US.properties
@@ -284,6 +284,7 @@ compose-subject=Subject
 compose-draft-save=Save to Local Drafts
 compose-discard-message=Discard email?
 compose-discard-confirm=Discard
+compose-sending-message=Sending email
 compose-send-message-failed=Sending email failed
 composer-attachment-large=Attachment too large
 composer-attachments-large=Attachments too large
@@ -305,10 +306,6 @@ message-attachment-too-large=This file is too large to download.

 message-no-subject=(no subject)

-
-# LOCALIZATION NOTE(message-edit-menu-edit):
-# Displayed in a menu; tapping this item will cause the user to edit the given item.
-message-edit-menu-edit=Edit
 message-edit-menu-delete=Delete
 message-edit-delete-confirm=Delete email message?

@@ -401,7 +398,6 @@ folder-queue=Unsent
 folder-junk=Junk
 folder-archives=Archives
 folder-localdrafts=Local Drafts
-folder-outbox=Outbox

 # In the folder picker drawer, there is a transparent area for the header,
 # and a tap region to take the user back to the message list. So this text is
@@ -464,52 +460,6 @@ toaster-message-delete[many]={{ n }} messages deleted
 toaster-message-delete[other]={{ n }} messages deleted
 toaster-retryable-syncfailed=Unable to connect to server

-# LOCALIZATION NOTE(compose-invalid-addresses-title):
-# A title to be displayed on a warning screen, warning users that
-# some of the email addresses they typed were incorrect.
-compose-invalid-addresses-title=Invalid Addresses
-# LOCALIZATION NOTE(compose-invalid-addresses-description):
-# A description to be displayed on a warning screen, warning users that
-# some of the email addresses they typed were incorrect, and that they
-# must correct the email addresses before sending.
-compose-invalid-addresses-description=Your message contains one or more invalid email addresses. Please correct them before sending.
-
-# LOCALIZATION NOTE(background-send-pending):
-# Brief message to be displayed in a popup, saying that the phone has
-# no network connection, and that the email has been saved to the outbox.
-background-send-pending=Network unavailable. Email saved to outbox.
-# LOCALIZATION NOTE(background-send-sending):
-# Displayed in a toaster popup message, saying that the email
-# is currently being sent.
-background-send-sending=Sending mail…
-# LOCALIZATION NOTE(background-send-success):
-# Displayed in a toaster popup message, saying that the email
-# sent successfully.
-background-send-success=Email sent.
-# LOCALIZATION NOTE(background-send-error):
-# Description to be displayed in a notification, saying that an error
-# occured while attempting to send an email, and that the email has
-# been saved to the outbox.
-background-send-error=Error occurred. Email saved to outbox.
-# LOCALIZATION NOTE(background-send-error-recipients):
-# Description to be displayed in a notification, saying that the email
-# could not be sent because the server rejected one or more of the
-# email recipients, and that the email has been saved to the outbox.
-background-send-error-recipients=Recipient error. Email saved to outbox.
-# LOCALIZATION NOTE(background-send-error-title):
-# Title to be displayed in a notification, indicating that the
-# email failed to send for some reason.
-background-send-error-title=Mail failed to send
-# LOCALIZATION NOTE(send-failure-recipients):
-# Message to be displayed when editing a message that failed to send due
-# to invalid recipients. It should instruct the user to check the addresses
-# above for spelling.
-send-failure-recipients=Check the spelling of the addresses above. Your mail server indicated one or more of the addresses above are incorrect.
-# LOCALIZATION NOTE(send-failure-unknown):
-# Message to be displayed when editing a message that failed to send for an
-# unknown reason.
-send-failure-unknown=The message could not be sent.
-
 form-clear-input=Remove text
 confirm-dialog-title=Confirmation

diff --git a/apps/email/style/common.css b/apps/email/style/common.css
index 35adf1d..8427add 100755
--- a/apps/email/style/common.css
+++ b/apps/email/style/common.css
@@ -225,25 +225,39 @@ section[role="region"] > header:first-child menu[type="toolbar"] a[aria-disabled
   pointer-events: none;
 }

-/* Toaster */
-section[role="status"].toaster {
+/* Toaset banner extend class */
+section[role="status"].customized {
   bottom: 4.8rem;
   opacity: 1;
+  padding-left: 3.2rem;
 }

-section[role="status"].toaster button {
-  display: inline-block;
-  width: auto;
-  margin-left: 3rem;
-}
-section[role="status"].toaster button:disabled {
-  display: none;
-}
 section[role="status"].fadeout {
   transition: opacity 500ms ease;
   opacity: 0;
 }

+section[role="status"][title="undo"] p,
+section[role="status"][title="retry"] p {
+  max-width: 65% !important;
+}
+
+section[role="status"] .toaster-cancel-btn {
+  height: 8rem;
+}
+
+section[role="status"] .toaster-banner-undo,
+section[role="status"] .toaster-banner-retry {
+  display: none;
+  margin: 1rem;
+  width: auto;
+}
+
+section[role="status"][title="undo"] .toaster-banner-undo,
+section[role="status"][title="retry"] .toaster-banner-retry {
+  display: inline;
+}
+
 /* General helpers for opacity transition */
 .anim-opacity {
   transition-property: opacity;
diff --git a/apps/email/style/compose_cards.css b/apps/email/style/compose_cards.css
index c29f01f..52e945d 100755
--- a/apps/email/style/compose_cards.css
+++ b/apps/email/style/compose_cards.css
@@ -226,10 +226,3 @@ section[role="region"] .cmp-attachment-btn .icon.icon-attachment {
   text-align: center;
 }

-.cmp-error-message {
-  background-color: black;
-  color: #fff;
-  padding: 0.8rem;
-  font-size: 120%;
-  text-align: center;
-}
diff --git a/apps/email/style/images/icons/actionicon_email_addrecipient_press.png b/apps/email/style/images/icons/actionicon_email_addrecipient_press.png
new file mode 100644
index 0000000..3c1e3f9
Binary files /dev/null and b/apps/email/style/images/icons/actionicon_email_addrecipient_press.png differ
diff --git a/apps/email/style/images/icons/actionicon_email_addrecipient_press@1.5x.png b/apps/email/style/images/icons/actionicon_email_addrecipient_press@1.5x.png
new file mode 100644
index 0000000..197c84c
Binary files /dev/null and b/apps/email/style/images/icons/actionicon_email_addrecipient_press@1.5x.png differ
diff --git a/apps/email/style/images/icons/actionicon_email_addrecipient_press@2.25x.png b/apps/email/style/images/icons/actionicon_email_addrecipient_press@2.25x.png
new file mode 100644
index 0000000..29fe80d
Binary files /dev/null and b/apps/email/style/images/icons/actionicon_email_addrecipient_press@2.25x.png differ
diff --git a/apps/email/style/images/icons/actionicon_email_addrecipient_press@2x.png b/apps/email/style/images/icons/actionicon_email_addrecipient_press@2x.png
new file mode 100644
index 0000000..ee3473f
Binary files /dev/null and b/apps/email/style/images/icons/actionicon_email_addrecipient_press@2x.png differ
diff --git a/apps/email/style/images/icons/icon_outbox_pending@2x.png b/apps/email/style/images/icons/icon_outbox_pending@2x.png
index c301789..ee36e7d 100644
Binary files a/apps/email/style/images/icons/icon_outbox_pending@2x.png and b/apps/email/style/images/icons/icon_outbox_pending@2x.png differ
diff --git a/apps/email/style/images/icons/icon_outbox_sending@2x.png b/apps/email/style/images/icons/icon_outbox_sending@2x.png
index 2438d58..9e0ba78 100644
Binary files a/apps/email/style/images/icons/icon_outbox_sending@2x.png and b/apps/email/style/images/icons/icon_outbox_sending@2x.png differ
diff --git a/apps/email/style/images/icons/remove_message.png b/apps/email/style/images/icons/remove_message.png
new file mode 100644
index 0000000..fb7bbd9
Binary files /dev/null and b/apps/email/style/images/icons/remove_message.png differ
diff --git a/apps/email/style/images/icons/remove_message@1.5x.png b/apps/email/style/images/icons/remove_message@1.5x.png
new file mode 100644
index 0000000..651e824
Binary files /dev/null and b/apps/email/style/images/icons/remove_message@1.5x.png differ
diff --git a/apps/email/style/images/icons/remove_message@2.25x.png b/apps/email/style/images/icons/remove_message@2.25x.png
new file mode 100644
index 0000000..dee4ab4
Binary files /dev/null and b/apps/email/style/images/icons/remove_message@2.25x.png differ
diff --git a/apps/email/style/images/icons/remove_message@2x.png b/apps/email/style/images/icons/remove_message@2x.png
new file mode 100644
index 0000000..2a25750
Binary files /dev/null and b/apps/email/style/images/icons/remove_message@2x.png differ
diff --git a/apps/email/style/images/icons/reply-all.png b/apps/email/style/images/icons/reply-all.png
new file mode 100644
index 0000000..1f24e78
Binary files /dev/null and b/apps/email/style/images/icons/reply-all.png differ
diff --git a/apps/email/style/images/icons/reply-all@1.5x.png b/apps/email/style/images/icons/reply-all@1.5x.png
new file mode 100644
index 0000000..ed5dcba
Binary files /dev/null and b/apps/email/style/images/icons/reply-all@1.5x.png differ
diff --git a/apps/email/style/images/icons/reply-all@2.25x.png b/apps/email/style/images/icons/reply-all@2.25x.png
new file mode 100644
index 0000000..7ff146a
Binary files /dev/null and b/apps/email/style/images/icons/reply-all@2.25x.png differ
diff --git a/apps/email/style/images/icons/reply-all@2x.png b/apps/email/style/images/icons/reply-all@2x.png
new file mode 100644
index 0000000..187dd56
Binary files /dev/null and b/apps/email/style/images/icons/reply-all@2x.png differ
diff --git a/apps/email/style/images/icons/search.png b/apps/email/style/images/icons/search.png
new file mode 100644
index 0000000..1aa1c94
Binary files /dev/null and b/apps/email/style/images/icons/search.png differ
diff --git a/apps/email/style/images/icons/search@1.5x.png b/apps/email/style/images/icons/search@1.5x.png
new file mode 100644
index 0000000..9cfa3e8
Binary files /dev/null and b/apps/email/style/images/icons/search@1.5x.png differ
diff --git a/apps/email/style/images/icons/search@2.25x.png b/apps/email/style/images/icons/search@2.25x.png
new file mode 100644
index 0000000..34c9ef5
Binary files /dev/null and b/apps/email/style/images/icons/search@2.25x.png differ
diff --git a/apps/email/style/images/icons/search@2x.png b/apps/email/style/images/icons/search@2x.png
new file mode 100644
index 0000000..0616080
Binary files /dev/null and b/apps/email/style/images/icons/search@2x.png differ
diff --git a/apps/email/style/images/icons/settings.png b/apps/email/style/images/icons/settings.png
new file mode 100644
index 0000000..a560241
Binary files /dev/null and b/apps/email/style/images/icons/settings.png differ
diff --git a/apps/email/style/images/icons/settings@1.5x.png b/apps/email/style/images/icons/settings@1.5x.png
new file mode 100644
index 0000000..32dc2d3
Binary files /dev/null and b/apps/email/style/images/icons/settings@1.5x.png differ
diff --git a/apps/email/style/images/icons/settings@2x.png b/apps/email/style/images/icons/settings@2x.png
new file mode 100644
index 0000000..0ea8d87
Binary files /dev/null and b/apps/email/style/images/icons/settings@2x.png differ
diff --git a/apps/email/style/images/icons/undo.png b/apps/email/style/images/icons/undo.png
new file mode 100644
index 0000000..b7273ff
Binary files /dev/null and b/apps/email/style/images/icons/undo.png differ
diff --git a/apps/email/style/images/icons/undo@1.5x.png b/apps/email/style/images/icons/undo@1.5x.png
new file mode 100644
index 0000000..c428ec0
Binary files /dev/null and b/apps/email/style/images/icons/undo@1.5x.png differ
diff --git a/apps/email/style/images/icons/undo@2.25x.png b/apps/email/style/images/icons/undo@2.25x.png
new file mode 100644
index 0000000..a276146
Binary files /dev/null and b/apps/email/style/images/icons/undo@2.25x.png differ
diff --git a/apps/email/style/images/icons/undo@2x.png b/apps/email/style/images/icons/undo@2x.png
new file mode 100644
index 0000000..d26727f
Binary files /dev/null and b/apps/email/style/images/icons/undo@2x.png differ
diff --git a/apps/email/style/message_cards.css b/apps/email/style/message_cards.css
index 6b6ab83..9f86e90 100755
--- a/apps/email/style/message_cards.css
+++ b/apps/email/style/message_cards.css
@@ -102,38 +102,6 @@ reflows. Foreground/background colors should be safe.
   background-color: #2fc9ec;
 }

-.msg-header-syncing-section {
-  position: absolute;
-  top: 50%;
-  display: inline-block;
-  height: 3rem;
-  width: 3rem;
-  margin-top: -1.5rem;
-  border-radius: 50%;
-  visibility: hidden;
-}
-
-@keyframes syncing-rotation {
-  from { transform: rotate(0deg); }
-  to { transform: rotate(360deg); }
-}
-.msg-header-syncing-section-syncing {
-  animation: syncing-rotation 1s linear infinite;
-  visibility: visible;
-  background: url("images/icons/icon_outbox_sending.png") no-repeat center / contain;
-}
-
-/* The syncing status supercedes the unread icon. */
-.unread .msg-header-syncing-section-error + .msg-header-unread-section,
-.unread .msg-header-syncing-section-syncing + .msg-header-unread-section {
-  display: none;
-}
-
-.msg-header-syncing-section-error {
-  visibility: visible;
-  background: url("images/icons/icon_outbox_pending.png") no-repeat center / contain;
-}
-
 .msg-header-details-section {
   -moz-box-sizing: border-box;
   position: absolute;
@@ -623,9 +591,6 @@ reflows. Foreground/background colors should be safe.
 .msg-messages-container.show-edit .msg-header-unread-section {
   left: 3.9rem;
 }
-.msg-messages-container.show-edit .msg-header-syncing-section {
-  left: 3.5rem;
-}
 .msg-messages-container.show-edit .msg-header-details-section {
   padding-left: 4.5rem;
 }
diff --git a/apps/email/test/marionette/lib/email.js b/apps/email/test/marionette/lib/email.js
index 7e6e2e4..a4fc531 100644
--- a/apps/email/test/marionette/lib/email.js
+++ b/apps/email/test/marionette/lib/email.js
@@ -49,7 +49,6 @@ var Selector = {
   composeBackButton: '.card-compose .cmp-back-btn',
   composeDraftDiscard: '#cmp-draft-discard',
   composeDraftSave: '#cmp-draft-save',
-  composeErrorMessage: '.card-compose .cmp-error-message',
   refreshButton: '.card.center .msg-refresh-btn',
   messageHeaderItem:
   '.msg-messages-container .msg-header-item',
@@ -77,9 +76,6 @@ var Selector = {
   notifyEmailCheckbox: '.tng-notify-mail-label',
   accountSettingsBackButton: '.card-settings-account .tng-back-btn',
   localDraftsItem: '.fld-folders-container a[data-type=localdrafts]',
-  outboxItem: '.fld-folders-container a[data-type=outbox]',
-  outboxItemSyncIcon: '.msg-header-syncing-section',
-  msgLastSync: '.msg-last-synced-value',
   toaster: 'section[role="status"]'
 };

@@ -152,18 +148,6 @@ Email.prototype = {
     return text;
   },

-  getComposeErrorMessage: function() {
-    return this.client.helper
-      .waitForElement(Selector.composeErrorMessage)
-      .text();
-  },
-
-  getLastSyncText: function() {
-    return this.client.helper
-      .waitForElement(Selector.msgLastSync)
-      .text();
-  },
-
   manualSetupImapEmail: function(server, finalActionName) {
     // setup a IMAP email account
     var email = server.imap.username + '@' + server.imap.hostname;
@@ -246,24 +230,6 @@ Email.prototype = {
     this._waitForTransitionEnd('message_list');
   },

-  tapOutboxItem: function() {
-    this._waitForElementNoTransition(Selector.outboxItem).tap();
-    this._waitForTransitionEnd('message_list');
-  },
-
-  getOutboxItemSyncIconForIndex: function(index) {
-    var header = this.getHeaderAtIndex(index);
-    var iconEl = header.findElement(Selector.outboxItemSyncIcon);
-    var className = iconEl.getAttribute('className');
-    if (/-syncing$/.test(className)) {
-      return 'syncing';
-    } else if (/-error$/.test(className)) {
-      return 'error';
-    } else {
-      return '';
-    }
-  },
-
   switchAccount: function(number) {
     var accountSelector = '.fld-accountlist-container ' +
                           'a:nth-child(' + number + ')';
@@ -517,10 +483,6 @@ Email.prototype = {
     }.bind(this));
   },

-  getMessageCount: function() {
-    return this.client.findElements(Selector.messageHeaderItem).length;
-  },
-
   getEmailBySubject: function(subject) {
     var messageHeaders = this.client.findElements(Selector.messageHeaderItem),
         messageHeadersLength = messageHeaders.length,
diff --git a/apps/email/test/marionette/manifest.ini b/apps/email/test/marionette/manifest.ini
deleted file mode 100644
index 73cfb03..0000000
--- a/apps/email/test/marionette/manifest.ini
+++ /dev/null
@@ -1,13 +0,0 @@
-[outbox_test.js]
-[search_test.js]
-[manual_setup_outgoing_credentials_test.js]
-[notification_disable_test.js]
-[send_imap_email_test.js]
-[next_previous_test.js]
-[local_drafts_test.js]
-[reply_imap_email_test.js]
-[notification_click_test.js]
-[message_list_test.js]
-[activity_create_email_account_complete_test.js]
-[notification_foreground_test.js]
-[notification_set_interval_test.js]
diff --git a/apps/email/test/marionette/outbox_test.js b/apps/email/test/marionette/outbox_test.js
deleted file mode 100644
index ec44d3b..0000000
--- a/apps/email/test/marionette/outbox_test.js
+++ /dev/null
@@ -1,63 +0,0 @@
-'use strict';
-var Email = require('./lib/email');
-var assert = require('assert');
-var serverHelper = require('./lib/server_helper');
-
-/**
- * Other tests cover simple sending and receiving. Thus these outbox
- * tests focus on handling of the outbox itself -- messages pending in
- * the queue, refreshing them, etc.
- */
-marionette('outbox', function() {
-  var client = marionette.client({
-    settings: {
-      // disable keyboard ftu because it blocks our display
-      'keyboard.ftu.enabled': false
-    }
-  });
-
-  var INVALID_EMAIL = 'invalid@@';
-  var app;
-  var server = serverHelper.use(null, this);
-
-  suite('bad recipient', function() {
-    setup(function() {
-      app = new Email(client);
-      app.launch();
-      app.manualSetupImapEmail(server);
-      for (var i = 0; i < 2; i++) {
-        app.tapCompose();
-        app.typeTo(INVALID_EMAIL);
-        app.tapSend();
-        app.waitForToaster();
-      }
-
-      // Navigate to the outbox.
-      app.tapFolderListButton();
-      app.tapOutboxItem();
-    });
-
-    test('a failed message should end up in the outbox', function() {
-      app.getHeaderAtIndex(0).tap();
-      // This should take us to the compose screen, where we see the
-      // outbox message, along with a warning telling us why the send
-      // failed.
-      assert.equal(app.getComposeTo(), INVALID_EMAIL);
-      assert(app.getComposeErrorMessage().length > 0);
-    });
-
-    test('refresh the outbox, message still fails', function() {
-      assert.equal(app.getOutboxItemSyncIconForIndex(0), 'error');
-      app.tapRefreshButton();
-      // It should then finish syncing at some point; do to test timing
-      // it would be unwise to try to test for the 'syncing' icon's
-      // presence while refreshing, but we can at least check to ensure
-      // the sync happened.
-      client.waitFor(function() {
-        return /just now/.test(app.getLastSyncText());
-      });
-      assert.equal(app.getOutboxItemSyncIconForIndex(0), 'error');
-    });
-  });
-
-});
diff --git a/apps/findmydevice/index.html b/apps/findmydevice/index.html
index ea0e06c..d435c4f 100644
--- a/apps/findmydevice/index.html
+++ b/apps/findmydevice/index.html
@@ -11,7 +11,6 @@
     <script defer src="shared/js/settings_helper.js"></script>
     <script defer src="shared/js/async_storage.js"></script>
     <script defer src="shared/js/settings_url.js"></script>
-    <script defer src="shared/js/findmydevice_iac_api.js"></script>

     <script defer src="js/lib/hawk.js"></script>
     <script defer src="js/config.js"></script>
diff --git a/apps/findmydevice/js/commands.js b/apps/findmydevice/js/commands.js
index 6d939e9..ff3cd98 100644
--- a/apps/findmydevice/js/commands.js
+++ b/apps/findmydevice/js/commands.js
@@ -1,4 +1,4 @@
-/* global DUMP, SettingsHelper, SettingsListener, SettingsURL, FindMyDevice */
+/* global DUMP, Promise, SettingsHelper, SettingsListener, SettingsURL */

 'use strict';

@@ -58,7 +58,6 @@ var Commands = {
   },

   invokeCommand: function fmdc_get_command(name, args) {
-    FindMyDevice.beginHighPriority('command');
     this._commands[name].apply(this, args);
   },

@@ -99,10 +98,9 @@ var Commands = {
       function stop() {
         clearInterval(self._trackIntervalId);
         self._trackIntervalId = null;
-        clearTimeout(self._trackTimeoutId);
+        clearInterval(self._trackTimeoutId);
         self._trackTimeoutId = null;
         SettingsHelper('findmydevice.tracking').set(false);
-        FindMyDevice.endHighPriority('command');
       }

       if (this._trackIntervalId !== null || this._trackTimeoutId !== null) {
@@ -115,11 +113,19 @@ var Commands = {
         return;
       }

+      if (!navigator.mozPermissionSettings) {
+        reply(false, 'mozPermissionSettings is missing');
+        return;
+      }
+
       // set geolocation permission to true, and start requesting
       // the current position every TRACK_UPDATE_INTERVAL_MS milliseconds
       this._setGeolocationPermission(function fmdc_permission_success() {
         SettingsHelper('findmydevice.tracking').set(true);
         self._trackIntervalId = setInterval(function fmdc_track_interval() {
+          duration = (isNaN(duration) || duration < 0) ? 1 : duration;
+          self._trackTimeoutId = setTimeout(stop, duration * 1000);
+
           navigator.geolocation.getCurrentPosition(
             function fmdc_gcp_success(position) {
               DUMP('updating location to (' +
@@ -133,21 +139,186 @@ var Commands = {
             });
         }, self.TRACK_UPDATE_INTERVAL_MS);
       }, function fmdc_permission_error() {
-        FindMyDevice.endHighPriority('command');
         reply(false, 'failed to set geolocation permission!');
       });
-
-      duration = (isNaN(duration) || duration < 0) ? 1 : duration;
-      self._trackTimeoutId = setTimeout(stop, duration * 1000);
     },

+    // TODO: extract utils out to a separate file
     erase: function fmdc_erase(reply) {
-      navigator.mozPower.factoryReset('wipe');
+      // storage that doesn't live on an sdcard
+      var storageTypes = ['apps', 'crashes'];
+      var processed = [];
+
+      var sdcards = navigator.getDeviceStorages('sdcard');
+      sdcards.forEach(function(card, i) {
+        var donePromise = new Promise(function(resolve, reject) {
+          formatCard(card, resolve);
+        });
+        processed.push(donePromise);
+      });

-      // factoryReset() won't return, unless we're testing,
-      // in which case mozPower is a mock. The reply() below
-      // is thus only used for testing.
-      reply(true);
+      storageTypes.forEach(function(storage) {
+        // some of the returned deviceStorages will be pictures or videos on
+        // an sdcard. we are separately formatting the sdcards, so here
+        // we want to ignore those. if storage is on an sdcard, then
+        // storage.canBeFormatted == true.
+        var deviceStorages = navigator.getDeviceStorages(storage);
+        deviceStorages.forEach(function(ds, i) {
+          if (ds === null || ds.canBeFormatted) {
+            return;
+          }
+          var id = storage + i;
+          var donePromise = new Promise(function(resolve, reject) {
+            var cursor = ds.enumerate();
+            cursor.onsuccess = cursor_onsuccess(id, ds, resolve);
+            cursor.onerror = cursor_onerror(id, resolve);
+          });
+          processed.push(donePromise);
+        });
+      });
+
+      Promise.all(processed).then(resetDevice);
+
+      function resetDevice(messages) {
+        // Promise.all will pass in an array of messages, one per resolved
+        // promise - we use this to pass back error responses
+        messages.forEach(function(msg) {
+          if (msg) {
+            DUMP(msg);
+          }
+        });
+
+        DUMP('all storages processed, starting factory reset!');
+        navigator.mozPower.factoryReset();
+
+        // factoryReset() won't return, unless we're testing,
+        // in which case mozPower is a mock. The reply() below
+        // is thus only used for testing.
+        reply(true);
+      }
+
+      /* the utils. to be extracted into a separate file. */
+
+      // state transitions: from gonk DeviceStorage / the brain of dhylands
+      //
+      // There are 4 final states, and they are all handled by formatCard.
+      // We implicitly handle the 4 temporary states by just continuing to
+      // poll if we encounter them.
+      //
+      // Handling the final states:
+      //
+      // Shared:
+      // When a card is Shared, that means USB is connected. For now, bail.
+      // (We *could* wait a really long time for the status to change.)
+      //
+      // NoMedia:
+      // Similarly, if no card is found, NoMedia is the state we get. Bail.
+      //
+      // Mounted:
+      // If a card is Mounted, we want to unmount it, then wait for it to
+      // transition Mounted -> Unmounting -> Idle. So we will call unmount(),
+      // then just poll until it goes Idle. The AutoMounter detects that we
+      // asked to unmount this volume, so it will leave it alone (compare the
+      // notes for the on_format_success method).
+      //
+      // Idle:
+      // Finally, if a card is Idle, then there are no open files, and we can
+      // safely format it. We use the on_format_success method to handle the
+      // post-format() states.
+      function formatCard(card, cb) {
+        var count = 0;
+        // 30 rounds of 1 second each = 30 seconds
+        var interval = 1000;
+        var maxCount = 30;
+        function _poll() {
+          var statusReq = card.storageStatus();
+          statusReq.onerror =
+          statusReq.onsuccess = function on_storage_status() {
+            var status = this.result;
+            count++;
+            if (count > maxCount) {
+              return cb('Error: timeout waiting to format card ' +
+                        card.storageName);
+            } else if (status === 'Idle') {
+              var formatReq = card.format();
+              formatReq.onsuccess =
+                on_format_success.bind(null, card, cb);
+              // give up if formatting fails to start
+              formatReq.onerror = function sdcard_format_error() {
+                cb('Unable to format card ' + card.storageName);
+              };
+              return;
+            } else if (status === 'Shared' || status === 'NoMedia') {
+              return cb('Unable to format ' + card.storageName +
+                        ', status is ' + status);
+            } else if (status === 'Mounted') {
+              card.unmount();
+              // restart the timer to give the card plenty of time to unmount
+              count = 0;
+            }
+            // either we just unmounted, or we are in a temporary state
+            setTimeout(_poll, interval);
+          };
+        }
+        _poll();
+      }
+
+      // state transitions: after format() is called, if this callback is
+      // fired, we know the device is being formatted, but isn't necessarily
+      // done yet. The device.status state goes from Idle to Formatting, and
+      // when it's done formatting, from Formatting to Idle, but the
+      // AutoMounter will detect the Idle and rapidly mount the device. This
+      // means the device will change states again - but we know the state will
+      // no longer be Formatting, so, if status !== 'Formatting', we're done.
+      function on_format_success(c, cb) {
+        var count = 0;
+        // 120 rounds of 30 seconds = 60 minutes
+        var interval = 30 * 1000;
+        var maxCount = 120;
+        function _poll() {
+          var req = c.storageStatus();
+          req.onerror =
+          req.onsuccess = function on_storage_status() {
+            var status = this.result;
+            count++;
+            if (count > maxCount) {
+              return cb('Timeout: formatting ' + c.storageName +
+                        ' took over 1 hour');
+            } else if (status !== 'Formatting') {
+              return cb();
+            }
+            setTimeout(_poll, interval);
+          };
+        }
+        _poll();
+      }
+
+      function cursor_onsuccess(target, ds, cb) {
+        return function() {
+          var cursor = this;
+          var file = cursor.result;
+
+          if (!file) {
+            return cb('onsuccess called with null file, done enumerating ' +
+                 target);
+          }
+
+          DUMP('deleting: ' + file.name);
+
+          var request = ds.delete(file.name);
+          request.onsuccess =
+          request.onerror = function fmdc_delete_complete() {
+            DUMP('done deleting ' + file.name);
+            cursor.continue();
+          };
+        };
+      }
+
+      function cursor_onerror(target, cb) {
+        return function() {
+          cb('wipe failed to acquire cursor for ' + target);
+        };
+      }
     },

     lock: function fmdc_lock(message, passcode, reply) {
@@ -174,8 +345,6 @@ var Commands = {
       request.onerror = function() {
         reply(false, 'failed to set settings');
       };
-
-      FindMyDevice.endHighPriority('command');
     },

     ring: function fmdc_ring(duration, reply) {
@@ -193,7 +362,6 @@ var Commands = {
         }

         reply(true);
-        FindMyDevice.endHighPriority('command');
         return;
       }

@@ -214,10 +382,7 @@ var Commands = {

       // use a minimum duration if the value we received is invalid
       duration = (isNaN(duration) || duration <= 0) ? 1 : duration;
-      setTimeout(function() {
-        FindMyDevice.endHighPriority('command');
-        stop();
-      }, duration * 1000);
+      setTimeout(stop, duration * 1000);
     }
   }
 };
diff --git a/apps/findmydevice/js/findmydevice.js b/apps/findmydevice/js/findmydevice.js
index 937c98d..f979f9f 100644
--- a/apps/findmydevice/js/findmydevice.js
+++ b/apps/findmydevice/js/findmydevice.js
@@ -4,95 +4,59 @@
 /* global Commands */
 /* global Config */
 /* global DUMP */
-/* global IAC_API_WAKEUP_REASON_ENABLED */
-/* global IAC_API_WAKEUP_REASON_LOGIN */
-/* global IAC_API_WAKEUP_REASON_LOGOUT */
-/* global IAC_API_WAKEUP_REASON_STALE_REGISTRATION */
-/* global IAC_API_WAKEUP_REASON_TRY_DISABLE */

 'use strict';

+// XXX keep this in sync with apps/system/js/findmydevice_launcher.js
+const IAC_API_WAKEUP_REASON_ENABLED = 0;
+const IAC_API_WAKEUP_REASON_STALE_REGISTRATION = 1;
+
 var FindMyDevice = {
   _state: null,

   _registering: false,

-  _refreshingClientID: false,
-
   _reply: {},

   _registered: false,

-  _registeredHelper: null,
+  _registeredHelper: SettingsHelper('findmydevice.registered'),

   _enabled: false,

-  _enabledHelper: null,
+  _enabledHelper: SettingsHelper('findmydevice.enabled'),

   _loggedIn: false,

-  _currentClientID: '',
-
-  _currentClientIDHelper: null,
-
-  _canDisable: false,
-
-  _canDisableHelper: null,
-
-  _disableAttempt: false,
-
-  // There are two situations in which we want to make sure
-  // FMD is alive:
-  // - when it is running client logic that accesses the network;
-  // - when it is executing a command with a duration.
-  // Command wakelocks are managed by individual commands.
-  // For client logic wakelocks, we use the fact that when a network
-  // request succeeds, we'll either update 'findmydevice.registered',
-  // or 'findmydevice.can-disable', or process a command and set
-  // a 'ping' timer, and when it fails, we'll set a timer to retry.
-  // Since each network transaction finishes with either a change
-  // in one of these settings or with a timer, we release the locks
-  // in the observers for the settings and in _scheduleAlarm.
-  _highPriorityWakeLocks: {
-    clientLogic: [],
-    command: []
-  },
-
-  _fxaReady: false,
-
   init: function fmd_init() {
     var self = this;
+    var settings = navigator.mozSettings;

     navigator.mozId.watch({
       wantIssuer: 'firefox-accounts',
       audience: Config.audience_url,
       onready: self._onReady.bind(self),
       onlogin: self._onLogin.bind(self),
-      onlogout: self._onLogout.bind(self),
-      onerror: self._onFxAError.bind(self)
+      onlogout: self._onLogout.bind(self)
     });

-    this._observeSettings();
-  },
+    settings.addObserver('findmydevice.registered', function(event) {
+      self._registered = event.settingValue;

-  _observeSettings: function fmd_observe_settings() {
-    var settings = navigator.mozSettings;
+      if (self._registered === false) {
+        self._contactServerIfEnabled();
+      } else {
+        self._loadState(self._contactServerIfEnabled.bind(self));
+      }
+    });
+
+    settings.addObserver('findmydevice.enabled', function(event) {
+      self._enabled = event.settingValue;

-    settings.addObserver('findmydevice.registered',
-      this._onRegisteredChanged.bind(this));
-    settings.addObserver('findmydevice.enabled',
-      this._onEnabledChanged.bind(this));
-    settings.addObserver('findmydevice.current-clientid',
-      this._onClientIDChanged.bind(this));
-
-    // We only allow disabling Find My Device if the same person
-    // who first enabled it is logged in to FxA, and in that case
-    // 'findmydevice.can-disable' is true.
-    // However, note that FMD doesn't store the user's email address,
-    // but rather a client ID that is derived from the FxA assertion
-    // and stored in this._state.clientid.
-    settings.addObserver('findmydevice.can-disable',
-      this._onCanDisableChanged.bind(this));
+      // No need to contact the server here if we've been enabled,
+      // since that means we'll get a wake up request from the System
+      // app
+    });
   },

   _onReady: function fmd_fxa_onready() {
@@ -100,8 +64,6 @@ var FindMyDevice = {
     this._loadState(function() {
       self._initSettings(self._initMessageHandlers.bind(self));
     });
-
-    this._fxaReady = true;
   },

   _loadState: function fmd_load_state(callback) {
@@ -117,78 +79,52 @@ var FindMyDevice = {
   },

   _initSettings: function fmd_init_settings(callback) {
-    // for each setting we're interested in, create a SettingsHelper,
-    // cache its initial value in a property (e.g., _enabled), and
-    // store the SettingsHelper as another property (e.g., _enabledHelper).
-    var settingsToProperties = {
-      // setting name : property name for cached value
-      'findmydevice.enabled': '_enabled',
-      'findmydevice.registered': '_registered',
-      'findmydevice.current-clientid': '_currentClientID',
-      'findmydevice.can-disable': '_canDisable'
-    };
-    var settings = Object.keys(settingsToProperties);
-
-    var loaded = 0;
-    var totalSettings = Object.keys(settingsToProperties).length;
-    settings.forEach(function(s) {
-      var prop = settingsToProperties[s];
-      var helper = this[prop + 'Helper'] = SettingsHelper(s);
-      helper.get((function(value) {
-        this[prop] = value;
-        if (++loaded === totalSettings) {
-          callback && callback();
-        }
-      }).bind(this));
-    }, this);
+    var self = this;
+
+    this._registeredHelper.get(function fmd_get_registered(value) {
+      self._registered = value;
+      loadEnabledSetting();
+    });
+
+    function loadEnabledSetting() {
+      self._enabledHelper.get(function fmd_get_enabled(value) {
+        self._enabled = value;
+        callback && callback();
+      });
+    }
   },

   _initMessageHandlers: function fmd_init_message_handlers() {
-    navigator.mozSetMessageHandler('push', (function(message) {
+    var self = this;
+
+    navigator.mozSetMessageHandler('push', function(message) {
       DUMP('findmydevice got push notification!');
-      this._contactServerIfEnabled();
-    }).bind(this));
+      self._contactServerIfEnabled();
+    });

-    navigator.mozSetMessageHandler('push-register', (function(message) {
+    navigator.mozSetMessageHandler('push-register', function(message) {
       DUMP('findmydevice lost push endpoint, re-registering');
-      this.beginHighPriority('clientLogic');
-      this._registeredHelper.set(false);
-    }).bind(this));
+      self._registeredHelper.set(false);
+    });

-    navigator.mozSetMessageHandler('alarm', (function(alarm) {
+    navigator.mozSetMessageHandler('alarm', function(alarm) {
       DUMP('findmydevice alarm!');
-      this._contactServerIfEnabled();
-      this._refreshClientIDIfRegistered(false);
-    }).bind(this));
+      self._contactServerIfEnabled();
+    });

-    navigator.mozSetMessageHandler('connection', (function(request) {
+    navigator.mozSetMessageHandler('connection', function(request) {
       var port = request.port;
-      port.onmessage = (function(event) {
+      port.onmessage = function(event) {
         if (request.keyword === 'findmydevice-wakeup') {
           DUMP('got wake up request');

           var reason = event.data;
           if (reason === IAC_API_WAKEUP_REASON_ENABLED) {
             DUMP('enabled, trying to reach the server');
-            this._contactServerIfEnabled();
+            self._contactServerIfEnabled();
           } else if (reason === IAC_API_WAKEUP_REASON_STALE_REGISTRATION) {
             DUMP('stale registration, re-registering');
-            this.beginHighPriority('clientLogic');
-            this._registeredHelper.set(false);
-          } else if (reason === IAC_API_WAKEUP_REASON_LOGIN) {
-            DUMP('new login, invalidating client id');
-            this.beginHighPriority('clientLogic');
-            this._loggedIn = true;
-            this._currentClientIDHelper.set('');
-          } else if (reason === IAC_API_WAKEUP_REASON_LOGOUT) {
-            DUMP('logout, invalidating client id');
-            this.beginHighPriority('clientLogic');
-            this._loggedIn = false;
-            this._currentClientIDHelper.set('');
-          } else if (reason === IAC_API_WAKEUP_REASON_TRY_DISABLE) {
-            DUMP('refreshing client id and attempting to disable');
-            this._disableAttempt = true;
-            this._refreshClientIDIfRegistered(true);
+            self._registeredHelper.set(false);
           }

           return;
@@ -197,10 +133,10 @@ var FindMyDevice = {
         if (request.keyword === 'findmydevice-test') {
             DUMP('got request for test command!');
             event.data.testing = true;
-            this._processCommands(event.data);
+            self._processCommands(event.data);
         }
-      }).bind(this);
-    }).bind(this));
+      };
+    });
   },

   _contactServerIfEnabled: function fmd_contact_server() {
@@ -208,7 +144,6 @@ var FindMyDevice = {
       return;
     }

-    this.beginHighPriority('clientLogic');
     if (this._registered) {
       this._replyAndFetchCommands();
     } else {
@@ -239,7 +174,6 @@ var FindMyDevice = {
         // out while we slept before this attempt), but it's a very unlikely
         // corner case. For now, just give up if this happens, but we still
         // need to notify the user somehow (bug 1013423).
-        this._registering = false;
         return;
       }

@@ -253,22 +187,8 @@ var FindMyDevice = {
   },

   _onLogin: function fmd_on_login(assertion) {
-    DUMP('logged in to FxA');
-
-    // XXX(ggp) When initializing, we'll process FxA's automatic invocation
-    // of onlogin/onlogout before any IAC message, so use these calls to
-    // initialize _loggedIn. However, when FMD is already running, there's
-    // no guaranteee that onlogin/onlogout will fire before the IAC handler,
-    // so we have dedicated IAC messages (IAC_API_WAKEUP_REASON_LOGIN and
-    // IAC_API_WAKEUP_REASON_LOGOUT) to cover login state changes, and we
-    // use the handlers for these messages to update _loggedIn.
     this._loggedIn = true;

-    if (this._refreshingClientID) {
-      DUMP('resuming client id refresh');
-      this._fetchClientID(assertion);
-    }
-
     if (!this._enabled || !this._registering) {
       return;
     }
@@ -330,43 +250,9 @@ var FindMyDevice = {
   },

   _onLogout: function fmd_fxa_onlogout() {
-    DUMP('logged out of FxA');
     this._loggedIn = false;
   },

-  _onFxAError: function fmd_on_error(error) {
-    DUMP('FxA error: ' + error);
-
-    if (!this._fxaReady) {
-      // FIXME(ggp) workaround for bug 1040935, if FxA errors out
-      // while we are initializing (usually due to an unverified
-      // account), just give up for now.
-      window.close();
-    }
-
-    if (this._refreshingClientID) {
-      this._cancelClientIDRefresh();
-    }
-
-    this._scheduleAlarm('retry');
-  },
-
-  _cancelClientIDRefresh: function fmd_cancel_clientid_refresh() {
-    this._disableAttempt = false;
-    this._refreshingClientID = false;
-
-    // If we've been woken up by the Settings app because of a disable
-    // attempt, it expects us to change these two settings at the end
-    // of the operation, so set them to their current values if we're
-    // canceling to make sure the state in the Settings is updated
-    // properly.
-    this._enabledHelper.set(this._enabled);
-    this._currentClientIDHelper.set(this._currentClientID);
-
-    // XXX(ggp) no need to unlock the 'currentClient' lock here, let
-    // _onClientIDChanged do it for us
-  },
-
   _scheduleAlarm: function fmd_schedule_alarm(mode) {
     var nextAlarm = new Date();

@@ -384,7 +270,6 @@ var FindMyDevice = {
       return;
     }

-    var self = this;
     var request = navigator.mozAlarms.getAll();
     request.onsuccess = function fmd_alarms_get_all() {
       this.result.forEach(function(alarm) {
@@ -392,10 +277,7 @@ var FindMyDevice = {
       });

       var data = {type: 'findmydevice-alarm'};
-      var request = navigator.mozAlarms.add(nextAlarm, 'honorTimezone', data);
-      request.onsuccess = function() {
-        self.endHighPriority('clientLogic');
-      };
+      navigator.mozAlarms.add(nextAlarm, 'honorTimezone', data);
     };
   },

@@ -410,102 +292,6 @@ var FindMyDevice = {
     this._reply = {};
   },

-  _onRegisteredChanged: function fmd_registered_changed(event) {
-    this._registered = event.settingValue;
-    DUMP('registered: ' + this._registered);
-
-    if (!this._registered) {
-      this._contactServerIfEnabled();
-      this.endHighPriority('clientLogic');
-    } else {
-      this._loadState((function() {
-        this._contactServerIfEnabled();
-        this._currentClientIDHelper.set(this._state.clientid);
-        // XXX(ggp) since every re-registration causes a change in the
-        // client id, we don't need to release the 'clientLogic' lock
-        // here, let _onCanDisableChanged do it
-      }).bind(this));
-    }
-  },
-
-  _onEnabledChanged: function fmd_enabled_changed(event) {
-    // No need to contact the server here if we've been enabled,
-    // since that means we'll get a wake up request from the System
-    // app
-    this._enabled = event.settingValue;
-    DUMP('enabled: ' + this._enabled);
-  },
-
-  _onClientIDChanged: function fmd_client_id_changed(event) {
-    this._currentClientID = event.settingValue;
-    DUMP('current id set to: ', this._currentClientID);
-
-    if (this._loggedIn && this._currentClientID === '') {
-      this._refreshClientIDIfRegistered(false);
-      this.endHighPriority('clientLogic');
-    } else if (this._registered) {
-      this._canDisableHelper.set(
-        this._loggedIn &&
-        this._currentClientID === this._state.clientid);
-    }
-  },
-
-  _onCanDisableChanged: function fmd_can_disable_changed(event) {
-    if (event.settingValue === true && this._disableAttempt) {
-      this._enabledHelper.set(false);
-    }
-
-    this._disableAttempt = false;
-    this.endHighPriority('clientLogic');
-  },
-
-  _refreshClientIDIfRegistered: function fmd_refresh_client_id(forceReauth) {
-    DUMP('refreshing client id if registered and logged in: ',
-      {registered: this._registered, loggedIn: this._loggedIn});
-
-    if (!this._registered || !this._loggedIn) {
-      return;
-    }
-
-    DUMP('requesting assertion to refresh client id, forceReauth: ' +
-         forceReauth);
-    this.beginHighPriority('clientLogic');
-
-    this._refreshingClientID = true;
-    var mozIdRequestOptions = {};
-    if (forceReauth) {
-      mozIdRequestOptions.refreshAuthentication = 0;
-      mozIdRequestOptions.oncancel = this._cancelClientIDRefresh.bind(this);
-    }
-
-    navigator.mozId.request(mozIdRequestOptions);
-  },
-
-  _fetchClientID: function fmd_fetch_client_id(assertion) {
-    Requester.post('/validate/', {assert: assertion},
-      this._onClientIDResponse.bind(this),
-      this._onClientIDServerError.bind(this));
-    this._refreshingClientID = false;
-  },
-
-  _onClientIDResponse: function fmd_on_client_id(response) {
-    DUMP('got clientid reponse: ', response);
-
-    if (response.valid) {
-      this._currentClientIDHelper.set(response.uid);
-      return;
-    }
-
-    DUMP('failed to verify assertion for client id!');
-    this._scheduleAlarm('retry');
-  },
-
-  _onClientIDServerError: function fmd_on_client_id_error(err) {
-    DUMP('failed to fetch client id with status: ' + err.status);
-    this._scheduleAlarm('retry');
-    this._disableAttempt = false;
-  },
-
   _processCommands: function fmd_process_commands(cmdobj) {
     if (cmdobj === null) {
       return;
@@ -575,7 +361,6 @@ var FindMyDevice = {
     if (cmd === 't' && ok === true && retval !== undefined) {
       value.la = retval.coords.latitude;
       value.lo = retval.coords.longitude;
-      value.acc = retval.coords.accuracy;
       value.ti = retval.timestamp;
     } else if (ok === false) {
       value.error = retval;
@@ -583,30 +368,6 @@ var FindMyDevice = {

     this._reply[cmd] = value;
     this._contactServerIfEnabled();
-  },
-
-  beginHighPriority: function(reason) {
-    DUMP('begin high priority section, reason: ', reason);
-    if (Object.keys(this._highPriorityWakeLocks).indexOf(reason) === -1) {
-      DUMP('unknown reason for high priority section?!');
-      return;
-    }
-
-    DUMP('acquiring one wakelock, wakelocks are: ',
-      this._highPriorityWakeLocks);
-    this._highPriorityWakeLocks[reason].push(
-      navigator.requestWakeLock('high-priority'));
-  },
-
-  endHighPriority: function(reason) {
-    DUMP('end high priority section, reason: ', reason);
-    if (!this._highPriorityWakeLocks[reason]) {
-      return;
-    }
-
-    DUMP('releasing one wakelock, wakelocks are: ',
-      this._highPriorityWakeLocks);
-    this._highPriorityWakeLocks[reason].pop().unlock();
   }
 };

diff --git a/apps/findmydevice/manifest.webapp b/apps/findmydevice/manifest.webapp
index 5fc3ce2..6222000 100644
--- a/apps/findmydevice/manifest.webapp
+++ b/apps/findmydevice/manifest.webapp
@@ -16,7 +16,6 @@
     "device-storage:videos":{ "access": "readwrite" },
     "device-storage:music":{ "access": "readwrite" },
     "device-storage:crashes":{ "access": "readwrite" },
-    "firefox-accounts": {},
     "geolocation":{},
     "permissions": {},
     "power":{},
@@ -30,13 +29,6 @@
       "description": "Find My Device helps find, lock and erase a lost phone"
     }
   },
-  "icons": {
-    "84": "/style/icons/find_my_device_84.png",
-    "126": "/style/icons/find_my_device_126.png",
-    "142": "/style/icons/find_my_device_142.png",
-    "189": "/style/icons/find_my_device_189.png",
-    "284": "/style/icons/find_my_device_284.png"
-  },
   "messages": [
     { "alarm": "/index.html" },
     { "push": "/index.html" },
@@ -47,8 +39,7 @@
       "description": "Wake up Find My Device from the System app",
       "rules": {
         "manifestURLs": [
-          "app://system.gaiamobile.org/manifest.webapp",
-          "app://settings.gaiamobile.org/manifest.webapp"
+          "app://system.gaiamobile.org/manifest.webapp"
         ]
       }
     },
diff --git a/apps/findmydevice/style/icons/find_my_device_126.png b/apps/findmydevice/style/icons/find_my_device_126.png
deleted file mode 100644
index c784135..0000000
Binary files a/apps/findmydevice/style/icons/find_my_device_126.png and /dev/null differ
diff --git a/apps/findmydevice/style/icons/find_my_device_142.png b/apps/findmydevice/style/icons/find_my_device_142.png
deleted file mode 100644
index ce7ee36..0000000
Binary files a/apps/findmydevice/style/icons/find_my_device_142.png and /dev/null differ
diff --git a/apps/findmydevice/style/icons/find_my_device_189.png b/apps/findmydevice/style/icons/find_my_device_189.png
deleted file mode 100644
index e3cc8d2..0000000
Binary files a/apps/findmydevice/style/icons/find_my_device_189.png and /dev/null differ
diff --git a/apps/findmydevice/style/icons/find_my_device_284.png b/apps/findmydevice/style/icons/find_my_device_284.png
deleted file mode 100644
index 6e23bef..0000000
Binary files a/apps/findmydevice/style/icons/find_my_device_284.png and /dev/null differ
diff --git a/apps/findmydevice/style/icons/find_my_device_84.png b/apps/findmydevice/style/icons/find_my_device_84.png
deleted file mode 100644
index 26987e6..0000000
Binary files a/apps/findmydevice/style/icons/find_my_device_84.png and /dev/null differ
diff --git a/apps/findmydevice/test/marionette/manifest.ini b/apps/findmydevice/test/marionette/manifest.ini
deleted file mode 100644
index 4ad781c..0000000
--- a/apps/findmydevice/test/marionette/manifest.ini
+++ /dev/null
@@ -1 +0,0 @@
-[findmydevice_test.js]
diff --git a/apps/findmydevice/test/unit/findmydevice_commands_test.js b/apps/findmydevice/test/unit/findmydevice_commands_test.js
deleted file mode 100644
index dedee43..0000000
--- a/apps/findmydevice/test/unit/findmydevice_commands_test.js
+++ /dev/null
@@ -1,273 +0,0 @@
-/* global MocksHelper */
-/* global MockPermissionSettings */
-/* global MockSettingsListener */
-/* global MockGeolocation */
-/* global Commands */
-/* global FindMyDevice */
-
-'use strict';
-
-require('/shared/test/unit/mocks/mocks_helper.js');
-require('/shared/test/unit/mocks/mock_settings_url.js');
-require('/shared/test/unit/mocks/mock_settings_listener.js');
-require('/shared/test/unit/mocks/mock_settings_helper.js');
-require('/shared/test/unit/mocks/mock_audio.js');
-require('/shared/test/unit/mocks/mock_device_storage.js');
-require('/shared/test/unit/mocks/mock_geolocation.js');
-require('/shared/test/unit/mocks/mock_permission_settings.js');
-
-var mocksForFindMyDevice = new MocksHelper([
-  'SettingsListener', 'SettingsURL', 'SettingsHelper', 'Audio',
-  'DeviceStorage', 'Geolocation'
-]).init();
-
-suite('FindMyDevice >', function() {
-  var realL10n;
-  var realPermissionSettings;
-  var realMozPower;
-  var realMozApps;
-  var fakeClock;
-
-  mocksForFindMyDevice.attachTestHelpers();
-
-  var subject;
-  setup(function(done) {
-    realL10n = navigator.mozL10n;
-    navigator.mozL10n = {
-      once: function(callback) {
-        callback();
-      }
-    };
-
-    realPermissionSettings = navigator.mozPermissionSettings;
-    navigator.mozPermissionSettings = MockPermissionSettings;
-    MockPermissionSettings.mSetup();
-
-    realMozPower = navigator.mozPower;
-    navigator.mozPower = {
-      factoryReset:function(reason) {}
-    };
-    sinon.stub(navigator.mozPower, 'factoryReset');
-
-    realMozApps = navigator.mozApps;
-    navigator.mozApps = {
-      getSelf: function() {
-        var app = {
-          manifestURL: 'app://findmydevice.gaiamobile.org/manifest.webapp',
-          origin: 'app://findmydevice.gaiamobile.org/'
-        };
-
-        var request = {result: app};
-        setTimeout(function() {
-          request.onsuccess.call(request);
-        });
-
-        return request;
-      }
-    };
-
-    // replace shared/js/dump.js
-    window.DUMP = function() {};
-
-    fakeClock = this.sinon.useFakeTimers();
-
-    window.FindMyDevice = {
-      beginHighPriority: this.sinon.stub(),
-      endHighPriority: this.sinon.stub()
-    };
-
-    require('/js/commands.js', function() {
-      subject = Commands;
-      done();
-    });
-  });
-
-  test('Lock command', function(done) {
-    var code = '1234', message = 'locked!';
-
-    subject.invokeCommand('lock', [message, code, function(retval) {
-      assert.equal(retval, true);
-    sinon.assert.calledWith(FindMyDevice.beginHighPriority, 'command');
-    sinon.assert.calledWith(FindMyDevice.endHighPriority, 'command');
-
-      var lock = MockSettingsListener.getSettingsLock().locks.pop();
-      assert.deepEqual({
-        'lockscreen.enabled': true,
-        'lockscreen.notifications-preview.enabled': false,
-        'lockscreen.passcode-lock.enabled': true,
-        'lockscreen.lock-message': message,
-        'lockscreen.passcode-lock.code': code,
-        'lockscreen.lock-immediately': true
-      }, lock, 'check that the correct settings were set');
-
-      done();
-    }]);
-
-    fakeClock.tick();
-  });
-
-  test('Ring command', function(done) {
-    var duration = 2;
-    var ringtone = 'user selected ringtone';
-
-    MockSettingsListener.mCallbacks['dialer.ringtone'](ringtone);
-
-    subject.invokeCommand('ring', [duration, function(retval) {
-      var lock = MockSettingsListener.getSettingsLock().locks.pop();
-
-      var ringer = subject._ringer;
-      var channel = ringer.mozAudioChannelType;
-      assert.equal(channel, 'content', 'use content channel');
-      assert.equal(lock['audio.volume.content'], 15, 'volume set to maximum');
-      assert.equal(ringer.paused, false, 'must be playing');
-      assert.equal(ringer.src, ringtone, 'must use ringtone');
-      sinon.assert.calledWith(FindMyDevice.beginHighPriority, 'command');
-
-      setTimeout(function() {
-        assert.equal(ringer.paused, true, 'must have stopped');
-        sinon.assert.calledWith(FindMyDevice.endHighPriority, 'command');
-        done();
-      }, duration * 1000);
-
-      fakeClock.tick(duration * 1000);
-    }]);
-
-    fakeClock.tick();
-  });
-
-  test('Erase: ensure factoryReset is called with "wipe"', function(done) {
-    subject.invokeCommand('erase', [function(retval, error) {
-      assert.equal(navigator.mozPower.factoryReset.calledWith('wipe'), true);
-      done();
-    }]);
-  });
-
-  test('Track command', function(done) {
-    // we want to make sure this is set to 'allow'
-    MockPermissionSettings.permissions.geolocation = 'deny';
-
-    var times = 0;
-    var duration = (5 * subject.TRACK_UPDATE_INTERVAL_MS) / 1000;
-    subject.invokeCommand('track', [duration, function(retval, position) {
-      assert.equal(retval, true);
-      assert.equal(MockPermissionSettings.permissions.geolocation, 'allow');
-      assert.deepEqual(position, MockGeolocation.fakePosition);
-
-      if (times++ === 3) {
-        assert.notEqual(subject._trackIntervalId, null);
-        assert.notEqual(subject._trackTimeoutId, null);
-        fakeClock.tick(subject.TRACK_UPDATE_INTERVAL_MS);
-        assert.equal(retval, true);
-        assert.equal(subject._trackTimeoutId, null);
-        assert.equal(subject._trackIntervalId, null);
-        sinon.assert.calledWith(FindMyDevice.endHighPriority, 'command');
-        done();
-      }
-
-      fakeClock.tick(subject.TRACK_UPDATE_INTERVAL_MS);
-    }]);
-
-    sinon.assert.calledWith(FindMyDevice.beginHighPriority, 'command');
-    fakeClock.tick(subject.TRACK_UPDATE_INTERVAL_MS);
-  });
-
-  test('Track command should update its duration if invoked while running',
-    function(done) {
-      var duration = 10 * subject.TRACK_UPDATE_INTERVAL_MS / 1000;
-
-      var positions = 0;
-      subject.invokeCommand('track', [duration, function(retval, position) {
-        positions++;
-      }]);
-
-      fakeClock.tick(subject.TRACK_UPDATE_INTERVAL_MS);
-
-      duration = 2 * subject.TRACK_UPDATE_INTERVAL_MS / 1000;
-      subject.invokeCommand('track', [duration, function(retval, position) {
-        positions++;
-      }]);
-
-      fakeClock.tick(5 * subject.TRACK_UPDATE_INTERVAL_MS);
-
-      assert.equal(positions, 2);
-      assert.equal(subject._trackTimeoutId, null);
-      assert.equal(subject._trackIntervalId, null);
-      done();
-  });
-
-  test('Track command should stop if duration is zero',
-    function(done) {
-      var duration = 10 * subject.TRACK_UPDATE_INTERVAL_MS / 1000;
-
-      var positions = 0;
-      subject.invokeCommand('track', [duration, function(retval, position) {
-        positions++;
-      }]);
-
-      fakeClock.tick(subject.TRACK_UPDATE_INTERVAL_MS);
-
-      subject.invokeCommand('track', [0, function(retval) {
-        assert.equal(retval, true);
-        fakeClock.tick(2 * subject.TRACK_UPDATE_INTERVAL_MS);
-        assert.equal(positions, 1);
-        assert.equal(subject._trackTimeoutId, null);
-        assert.equal(subject._trackIntervalId, null);
-        done();
-      }]);
-  });
-
-  test('Bug 1027325 - correctly check that passcode lock is set', function() {
-    MockSettingsListener.mTriggerCallback('lockscreen.enabled', true);
-    MockSettingsListener.mTriggerCallback('lockscreen.passcode-lock.enabled',
-      '1234');
-    assert.equal(true, subject.deviceHasPasscode());
-  });
-
-  test('Bug 1027325 - correctly check that passcode lock is unset', function() {
-    MockSettingsListener.mTriggerCallback('lockscreen.enabled', false);
-    MockSettingsListener.mTriggerCallback('lockscreen.passcode-lock.enabled',
-      false);
-    assert.equal(false, subject.deviceHasPasscode());
-  });
-
-  test('Bug 1027325 - correctly check that lockscreen is set, but passcode ' +
-       'lock is unset', function() {
-    MockSettingsListener.mTriggerCallback('lockscreen.enabled', true);
-    MockSettingsListener.mTriggerCallback('lockscreen.passcode-lock.enabled',
-      false);
-    assert.equal(false, subject.deviceHasPasscode());
-  });
-
-  test('List of accepted commands', function() {
-    MockSettingsListener.mTriggerCallback('geolocation.enabled', true);
-
-    var allCommands = ['track', 'erase', 'ring', 'lock'];
-    var enabledCommands = subject.getEnabledCommands();
-    assert.deepEqual(enabledCommands.sort(), allCommands.sort());
-
-    // track should be disabled when geolocation is disabled
-    MockSettingsListener.mTriggerCallback('geolocation.enabled', false);
-    allCommands = ['erase', 'ring', 'lock'];
-    enabledCommands = subject.getEnabledCommands();
-    assert.deepEqual(enabledCommands.sort(), allCommands.sort());
-  });
-
-  teardown(function() {
-    navigator.mozL10n = realL10n;
-
-    MockPermissionSettings.mTeardown();
-    navigator.mozPermissionSettings = realPermissionSettings;
-
-    // clean up sinon.js stubs
-    navigator.mozPower.factoryReset.restore();
-
-    navigator.mozPower = realMozPower;
-    navigator.mozApps = realMozApps;
-
-    delete window.DUMP;
-
-    fakeClock.restore();
-
-    delete window.FindMyDevice;
-  });
-});
diff --git a/apps/findmydevice/test/unit/findmydevice_test.js b/apps/findmydevice/test/unit/findmydevice_test.js
index 1468da1..f99839c 100644
--- a/apps/findmydevice/test/unit/findmydevice_test.js
+++ b/apps/findmydevice/test/unit/findmydevice_test.js
@@ -1,219 +1,299 @@
-/* global MocksHelper, MockGeolocation, MockNavigatormozSetMessageHandler,
-   MockNavigatorSettings, FindMyDevice,
-   IAC_API_WAKEUP_REASON_LOGIN, IAC_API_WAKEUP_REASON_LOGOUT,
-   IAC_API_WAKEUP_REASON_TRY_DISABLE
-*/
+/* global MocksHelper */
+/* global MockPermissionSettings */
+/* global MockSettingsListener */
+/* global MockGeolocation */
+/* global Commands */

 'use strict';

-require('/shared/test/unit/mocks/mock_dump.js');
 require('/shared/test/unit/mocks/mocks_helper.js');
-require('/shared/test/unit/mocks/mock_navigator_moz_settings.js');
+require('/shared/test/unit/mocks/mock_settings_url.js');
+require('/shared/test/unit/mocks/mock_settings_listener.js');
 require('/shared/test/unit/mocks/mock_settings_helper.js');
+require('/shared/test/unit/mocks/mock_audio.js');
+require('/shared/test/unit/mocks/mock_device_storage.js');
 require('/shared/test/unit/mocks/mock_geolocation.js');
-require('/shared/test/unit/mocks/mock_navigator_moz_set_message_handler.js');
-require('/shared/js/findmydevice_iac_api.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+require('/shared/test/unit/mocks/mock_permission_settings.js');

 var mocksForFindMyDevice = new MocksHelper([
-  'Geolocation', 'Dump', 'SettingsHelper'
+  'SettingsListener', 'SettingsURL', 'SettingsHelper', 'Audio',
+  'DeviceStorage', 'Geolocation'
 ]).init();

 suite('FindMyDevice >', function() {
   var realL10n;
-  var realMozId;
-  var realMozSettings;
-  var realMozSetMessageHandler;
+  var realPermissionSettings;
+  var realMozPower;
+  var realMozApps;
+  var fakeClock;

   mocksForFindMyDevice.attachTestHelpers();

-  suiteSetup(function(done) {
+  var subject;
+  setup(function(done) {
     realL10n = navigator.mozL10n;
-    navigator.mozL10n = window.MockL10n;
-    sinon.stub(navigator.mozL10n, 'once', function(callback) {
-      // we don't need to actually initialize FMD
-      // for these unit tests, and it saves us from
-      // mocking many objects
-    });
+    navigator.mozL10n = {
+      once: function(callback) {
+        callback();
+      }
+    };
+
+    realPermissionSettings = navigator.mozPermissionSettings;
+    navigator.mozPermissionSettings = MockPermissionSettings;
+    MockPermissionSettings.mSetup();
+
+    realMozPower = navigator.mozPower;
+    navigator.mozPower = {
+      factoryResetCalled: false,
+      factoryReset: function() {
+        this.factoryResetCalled = true;
+      }
+    };

-    realMozId = navigator.mozId;
-    // attempting to stub only the request method of mozId,
-    // as in |sinon.stub(navigator.mozId, 'request', ...)|,
-    // causes an exception to be raised, so we replace the
-    // entire mozId object.
-    navigator.mozId = {
-      request: sinon.stub()
+    realMozApps = navigator.mozApps;
+    navigator.mozApps = {
+      getSelf: function() {
+        var app = {
+          manifestURL: 'app://findmydevice.gaiamobile.org/manifest.webapp',
+          origin: 'app://findmydevice.gaiamobile.org/'
+        };
+
+        var request = {result: app};
+        setTimeout(function() {
+          request.onsuccess.call(request);
+        });
+
+        return request;
+      }
     };

-    realMozSettings = navigator.mozSettings;
-    navigator.mozSettings = MockNavigatorSettings;
-    MockNavigatorSettings.mSetup();
+    // replace shared/js/dump.js
+    window.DUMP = function() {};

-    realMozSetMessageHandler = navigator.mozSetMessageHandler;
-    navigator.mozSetMessageHandler = MockNavigatormozSetMessageHandler;
-    MockNavigatormozSetMessageHandler.mSetup();
+    fakeClock = this.sinon.useFakeTimers();

-    // We require findmydevice.js here and not above because
-    // we want to make sure all of our dependencies have already
-    // been loaded.
-    require('/js/findmydevice.js', function() {
-      FindMyDevice._observeSettings();
-      FindMyDevice._initMessageHandlers();
+    require('/js/commands.js', function() {
+      subject = Commands;
       done();
     });
   });

-  suiteTeardown(function() {
-    navigator.mozL10n.once.restore();
-    navigator.mozL10n = realL10n;
+  test('Lock command', function(done) {
+    var code = '1234', message = 'locked!';

-    navigator.mozId = realMozId;
+    subject.invokeCommand('lock', [message, code, function(retval) {
+      assert.equal(retval, true);

-    navigator.mozSettings = realMozSettings;
-    MockNavigatorSettings.mTeardown();
+      var lock = MockSettingsListener.getSettingsLock().locks.pop();
+      assert.deepEqual({
+        'lockscreen.enabled': true,
+        'lockscreen.notifications-preview.enabled': false,
+        'lockscreen.passcode-lock.enabled': true,
+        'lockscreen.lock-message': message,
+        'lockscreen.passcode-lock.code': code,
+        'lockscreen.lock-immediately': true
+      }, lock, 'check that the correct settings were set');

-    navigator.mozSetMessageHandler = realMozSetMessageHandler;
-    MockNavigatormozSetMessageHandler.mTeardown();
-  });
+      done();
+    }]);

-  setup(function(done) {
-    this.sinon.stub(FindMyDevice, '_contactServerIfEnabled');
-    // XXX(ggp) force re-creation of the SettingsHelper objects
-    // used by FMD, since MockSettingsHelper invalidates all objects
-    // in its mTeardown.
-    FindMyDevice._initSettings(done);
+    fakeClock.tick();
   });

-  teardown(function() {
-    FindMyDevice._enabled = false;
-    FindMyDevice._registered = false;
-    FindMyDevice._loggedIn = false;
-    FindMyDevice._state = null;
-  });
+  test('Ring command', function(done) {
+    var duration = 2;
+    var ringtone = 'user selected ringtone';

-  function sendWakeUpMessage(reason) {
-    var port = {};
-    MockNavigatormozSetMessageHandler.mTrigger('connection',
-      {port: port, keyword: 'findmydevice-wakeup'});
-    port.onmessage({data: reason});
-  }
-
-  test('fields from coordinates are included in server response', function() {
-    FindMyDevice._replyCallback('t', true, MockGeolocation.fakePosition);
-    assert.isTrue(FindMyDevice._contactServerIfEnabled.called);
-    assert.deepEqual(FindMyDevice._reply.t, {
-      ok: true,
-      la: MockGeolocation.fakePosition.coords.latitude,
-      lo: MockGeolocation.fakePosition.coords.longitude,
-      acc: MockGeolocation.fakePosition.coords.accuracy,
-      ti: MockGeolocation.fakePosition.timestamp
-    });
+    MockSettingsListener.mCallbacks['dialer.ringtone'](ringtone);
+
+    subject.invokeCommand('ring', [duration, function(retval) {
+      var lock = MockSettingsListener.getSettingsLock().locks.pop();
+
+      var ringer = subject._ringer;
+      var channel = ringer.mozAudioChannelType;
+      assert.equal(channel, 'content', 'use content channel');
+      assert.equal(lock['audio.volume.content'], 15, 'volume set to maximum');
+      assert.equal(ringer.paused, false, 'must be playing');
+      assert.equal(ringer.src, ringtone, 'must use ringtone');
+
+      setTimeout(function() {
+        assert.equal(ringer.paused, true, 'must have stopped');
+        done();
+      }, duration * 1000);
+
+      fakeClock.tick(duration * 1000);
+    }]);
+
+    fakeClock.tick();
   });

-  test('error message is included in the server response', function() {
-    var message = 'error message';
-    FindMyDevice._replyCallback('t', false, message);
-    assert.isTrue(FindMyDevice._contactServerIfEnabled.called);
-    assert.equal(FindMyDevice._reply.t.error, message);
+  /* TODO re-enable erase tests after fixing the mock: bug 1032617
+  test('Erase command', function(done) {
+    // Meta-mock the mock getDeviceStorage so it returns null
+    // for some storage types
+    var mockGetDeviceStorage = navigator.getDeviceStorage;
+    navigator.getDeviceStorage = function(storage) {
+      if (storage === 'apps' || storage == 'sdcard') {
+        return null;
+      }
+
+      return mockGetDeviceStorage(storage);
+    };
+
+    subject.invokeCommand('erase', [function(retval, error) {
+      var instances = MockDeviceStorage.instances;
+      for (var i = 0; i < instances.length; i++) {
+        // check that we deleted everything on the device storage
+        assert.deepEqual(instances[i].entries, []);
+      }
+
+      assert.equal(navigator.mozPower.factoryResetCalled, true);
+      navigator.getDeviceStorage = mockGetDeviceStorage;
+      done();
+    }]);
+
+    fakeClock.tick();
   });

-  suite('findmydevice.current-clientid behavior', function() {
-    setup(function() {
-      this.sinon.spy(FindMyDevice._currentClientIDHelper, 'set');
-    });
+  test('Erase command with no device storages', function(done) {
+    // Meta-mock the mock getDeviceStorage so it returns null
+    // for all storage types. We must still factory reset in this case.
+    var mockGetDeviceStorage = navigator.getDeviceStorage;
+    navigator.getDeviceStorage = function(storage) {
+      return null;
+    };

-    test('invalidate client id when logged in', function() {
-      sendWakeUpMessage(IAC_API_WAKEUP_REASON_LOGIN);
-      assert.isTrue(FindMyDevice._loggedIn, 'not logged in after login event');
-      sinon.assert.calledWith(FindMyDevice._currentClientIDHelper.set, '');
-    });
+    subject.invokeCommand('erase', [function(retval, error) {
+      assert.deepEqual(MockDeviceStorage.instances, []);
+      assert.equal(navigator.mozPower.factoryResetCalled, true);
+      navigator.getDeviceStorage = mockGetDeviceStorage;
+      done();
+    }]);

-    test('invalidate client id when logged out', function() {
-      sendWakeUpMessage(IAC_API_WAKEUP_REASON_LOGOUT);
-      assert.isFalse(FindMyDevice._loggedIn, 'logged in after logout event');
-      sinon.assert.calledWith(FindMyDevice._currentClientIDHelper.set, '');
-    });
+    fakeClock.tick();
+  });
+  */
+
+  test('Track command', function(done) {
+    // we want to make sure this is set to 'allow'
+    MockPermissionSettings.permissions.geolocation = 'deny';
+
+    var times = 0;
+    var duration = (3 * subject.TRACK_UPDATE_INTERVAL_MS)/ 1000;
+    subject.invokeCommand('track', [duration, function(retval, position) {
+      assert.equal(retval, true);
+      assert.equal(MockPermissionSettings.permissions.geolocation, 'allow');
+      assert.equal(position.coords.latitude, MockGeolocation.latitude);
+      assert.equal(position.coords.longitude, MockGeolocation.longitude);
+
+      if (times++ === 3) {
+        assert.notEqual(subject._trackIntervalId, null);
+        assert.notEqual(subject._trackTimeoutId, null);
+        fakeClock.tick(subject.TRACK_UPDATE_INTERVAL_MS);
+        assert.equal(retval, true);
+        assert.equal(subject._trackTimeoutId, null);
+        assert.equal(subject._trackIntervalId, null);
+        done();
+      }
+
+      fakeClock.tick(subject.TRACK_UPDATE_INTERVAL_MS);
+    }]);
+
+    fakeClock.tick(subject.TRACK_UPDATE_INTERVAL_MS);
   });

-  suite('findmydevice.can-disable behavior', function() {
-    setup(function() {
-      this.sinon.spy(FindMyDevice._canDisableHelper, 'set');
-    });
+  test('Track command should update its duration if invoked while running',
+    function(done) {
+      var duration = 10 * subject.TRACK_UPDATE_INTERVAL_MS / 1000;

-    test('set findmydevice.can-disable to false when logged out', function() {
-      FindMyDevice._registered = true;
-      FindMyDevice._loggedIn = false;
-      MockNavigatorSettings.mTriggerObservers('findmydevice.current-clientid',
-        {settingValue: ''});
-      sinon.assert.calledWith(FindMyDevice._canDisableHelper.set, false);
-    });
+      var positions = 0;
+      subject.invokeCommand('track', [duration, function(retval, position) {
+        positions++;
+      }]);

-    test('don\'t set findmydevice.can-disable on logout if not registered',
-    function() {
-      FindMyDevice._loggedIn = false;
-      FindMyDevice._registered = false;
-      MockNavigatorSettings.mTriggerObservers('findmydevice.current-clientid',
-        {settingValue: ''});
-      sinon.assert.notCalled(FindMyDevice._canDisableHelper.set);
-    });
+      fakeClock.tick(subject.TRACK_UPDATE_INTERVAL_MS);

-    test('allow disabling when clientid matches the state', function() {
-      FindMyDevice._loggedIn = true;
-      FindMyDevice._registered = true;
-      FindMyDevice._state = {clientid: 'clientid'};
+      duration = (subject.TRACK_UPDATE_INTERVAL_MS - 1000)/ 1000;
+      subject.invokeCommand('track', [duration, function(retval, position) {
+        positions++;
+      }]);

-      MockNavigatorSettings.mTriggerObservers('findmydevice.current-clientid',
-        {settingValue: 'clientid'});
-      sinon.assert.calledWith(FindMyDevice._canDisableHelper.set, true);
-    });
+      fakeClock.tick(2 * subject.TRACK_UPDATE_INTERVAL_MS);

-    test('disallow disabling when clientid doesn\'t match the state',
-    function() {
-      FindMyDevice._loggedIn = true;
-      FindMyDevice._registered = true;
-      FindMyDevice._state = {clientid: 'wrong clientid'};
+      assert.equal(positions, 2);
+      assert.equal(subject._trackTimeoutId, null);
+      assert.equal(subject._trackIntervalId, null);
+      done();
+  });

-      MockNavigatorSettings.mTriggerObservers('findmydevice.current-clientid',
-        {settingValue: 'clientid'});
-      sinon.assert.calledWith(FindMyDevice._canDisableHelper.set, false);
-    });
+  test('Track command should stop if duration is zero',
+    function(done) {
+      var duration = 10 * subject.TRACK_UPDATE_INTERVAL_MS / 1000;
+
+      var positions = 0;
+      subject.invokeCommand('track', [duration, function(retval, position) {
+        positions++;
+      }]);
+
+      fakeClock.tick(subject.TRACK_UPDATE_INTERVAL_MS);
+
+      subject.invokeCommand('track', [0, function(retval) {
+        assert.equal(retval, true);
+        fakeClock.tick(2 * subject.TRACK_UPDATE_INTERVAL_MS);
+        assert.equal(positions, 1);
+        assert.equal(subject._trackTimeoutId, null);
+        assert.equal(subject._trackIntervalId, null);
+        done();
+      }]);
   });

-  test('request client id when invalidated', function() {
-    FindMyDevice._loggedIn = true;
-    FindMyDevice._registered = true;
-    FindMyDevice._state = {clientid: 'clientid'};
-
-    this.sinon.stub(FindMyDevice, 'beginHighPriority');
-    this.sinon.stub(FindMyDevice, 'endHighPriority');
-    this.sinon.spy(FindMyDevice, '_refreshClientIDIfRegistered');
-    MockNavigatorSettings.mTriggerObservers('findmydevice.current-clientid',
-      {settingValue: ''});
-    sinon.assert.calledWith(FindMyDevice._refreshClientIDIfRegistered, false);
-    sinon.assert.calledWith(navigator.mozId.request, {});
-    sinon.assert.calledOnce(FindMyDevice.beginHighPriority);
-    sinon.assert.calledWith(FindMyDevice.beginHighPriority, 'clientLogic');
-    sinon.assert.calledOnce(FindMyDevice.endHighPriority);
-    sinon.assert.calledWith(FindMyDevice.endHighPriority, 'clientLogic');
+  test('Bug 1027325 - correctly check that passcode lock is set', function() {
+    MockSettingsListener.mTriggerCallback('lockscreen.enabled', true);
+    MockSettingsListener.mTriggerCallback('lockscreen.passcode-lock.enabled',
+      '1234');
+    assert.equal(true, subject.deviceHasPasscode());
   });

-  test('refresh authentication when attempting to disable', function() {
-    FindMyDevice._loggedIn = true;
-    FindMyDevice._registered = true;
-
-    this.sinon.spy(FindMyDevice, '_refreshClientIDIfRegistered');
-    sendWakeUpMessage(IAC_API_WAKEUP_REASON_TRY_DISABLE);
-    assert.isTrue(FindMyDevice._disableAttempt);
-    sinon.assert.calledWith(FindMyDevice._refreshClientIDIfRegistered, true);
-    assert.isTrue(
-      navigator.mozId.request.calledWithMatch(
-        {refreshAuthentication: 0}));
+  test('Bug 1027325 - correctly check that passcode lock is unset', function() {
+    MockSettingsListener.mTriggerCallback('lockscreen.enabled', false);
+    MockSettingsListener.mTriggerCallback('lockscreen.passcode-lock.enabled',
+      false);
+    assert.equal(false, subject.deviceHasPasscode());
   });

-  test('contact the server on alarm', function() {
-    this.sinon.stub(FindMyDevice, '_refreshClientIDIfRegistered');
-    MockNavigatormozSetMessageHandler.mTrigger('alarm');
-    sinon.assert.calledWith(FindMyDevice._refreshClientIDIfRegistered, false);
-    sinon.assert.called(FindMyDevice._contactServerIfEnabled);
+  test('Bug 1027325 - correctly check that lockscreen is set, but passcode ' +
+       'lock is unset', function() {
+    MockSettingsListener.mTriggerCallback('lockscreen.enabled', true);
+    MockSettingsListener.mTriggerCallback('lockscreen.passcode-lock.enabled',
+      false);
+    assert.equal(false, subject.deviceHasPasscode());
+  });
+
+  test('List of accepted commands', function() {
+    MockSettingsListener.mTriggerCallback('geolocation.enabled', true);
+
+    var allCommands = ['track', 'erase', 'ring', 'lock'];
+    var enabledCommands = subject.getEnabledCommands();
+    assert.deepEqual(enabledCommands.sort(), allCommands.sort());
+
+    // track should be disabled when geolocation is disabled
+    MockSettingsListener.mTriggerCallback('geolocation.enabled', false);
+    allCommands = ['erase', 'ring', 'lock'];
+    enabledCommands = subject.getEnabledCommands();
+    assert.deepEqual(enabledCommands.sort(), allCommands.sort());
+  });
+
+  teardown(function() {
+    navigator.mozL10n = realL10n;
+
+    MockPermissionSettings.mTeardown();
+    navigator.mozPermissionSettings = realPermissionSettings;
+
+    navigator.mozPower = realMozPower;
+    navigator.mozApps = realMozApps;
+
+    delete window.DUMP;
+
+    fakeClock.restore();
   });
 });
diff --git a/apps/fl/js/download.js b/apps/fl/js/download.js
index d153e84..0148940 100644
--- a/apps/fl/js/download.js
+++ b/apps/fl/js/download.js
@@ -112,7 +112,7 @@ function view(activity) {

   function askSongOrRingtone(aCallback) {
     showDialog({
-      message: _('ringtone-or-song-question'),
+      message: _('ringtone-or-song-query'),
       okText: _('ringtone-response'),
       cancelText: _('song-response'),
       okCallback: aCallback.bind(undefined, RINGTONE),
diff --git a/apps/fl/locales/download.en-US.properties b/apps/fl/locales/download.en-US.properties
index 79ad273..d657ddf 100644
--- a/apps/fl/locales/download.en-US.properties
+++ b/apps/fl/locales/download.en-US.properties
@@ -25,7 +25,7 @@ success_song = Song downloaded and installed. Use the Music app to play it.
 success_ringtone = Ringtone downloaded and installed.
 success_wallpaper = Wallpaper downloaded and installed.

-ringtone-or-song-question = Do you want to install this audio file as a song or as a ringtone?
+ringtone-or-song-query = Do you want to download and install this audio file as a song or as a ringtone?
 ringtone-response = Ringtone
 song-response = Song

diff --git a/apps/fm/js/fm.js b/apps/fm/js/fm.js
index 2be388a..ea4eeaa 100644
--- a/apps/fm/js/fm.js
+++ b/apps/fm/js/fm.js
@@ -837,48 +837,6 @@ function init() {
     // required startup background processing should be complete.
     window.dispatchEvent(new CustomEvent('moz-app-loaded'));
   });
-
-  //
-  // If the system app is opening an attention screen (because
-  // of an incoming call or an alarm, e.g.) and if we are
-  // currently playing the radio then we need to stop the radio
-  // before the ringer or alarm starts sounding. See bugs 995540
-  // and 1006200.
-  //
-  // XXX We're abusing the settings API here to allow the system app
-  // to broadcast a message to any certified apps that care. There
-  // ought to be a better way, but this is a quick and easy way to
-  // fix a last-minute release blocker.
-  //
-  navigator.mozSettings.addObserver(
-    'private.broadcast.attention_screen_opening',
-    function(event) {
-      // An attention screen is in the process of opening. Save the
-      // current state of the radio and disable.
-      if (event.settingValue) {
-        window._previousFMRadioState = mozFMRadio.enabled;
-        window._previousEnablingState = enabling;
-        window._previousSpeakerForcedState = speakerManager.speakerforced;
-        mozFMRadio.disable();
-      }
-
-      // An attention screen is closing.
-      else {
-        // If the radio was previously enabled or was in the process
-        // of becoming enabled, re-enable the radio.
-        if (!!window._previousFMRadioState || !!window._previousEnablingState) {
-          // Ensure the antenna is still available before re-starting
-          // the radio.
-          if (mozFMRadio.antennaAvailable) {
-            enableFMRadio(frequencyDialer.getFrequency());
-          }
-
-          // Re-enable the speaker if it was previously forced.
-          speakerManager.forcespeaker = !!window._previousSpeakerForcedState;
-        }
-      }
-    }
-  );
 }

 window.addEventListener('load', function(e) {
diff --git a/apps/fm/style/images/app-texture.png b/apps/fm/style/images/app-texture.png
new file mode 100644
index 0000000..2e62f8d
Binary files /dev/null and b/apps/fm/style/images/app-texture.png differ
diff --git a/apps/fm/style/images/app-texture@1.5x.png b/apps/fm/style/images/app-texture@1.5x.png
new file mode 100644
index 0000000..53d4fcd
Binary files /dev/null and b/apps/fm/style/images/app-texture@1.5x.png differ
diff --git a/apps/fm/style/images/app-texture@2.25x.png b/apps/fm/style/images/app-texture@2.25x.png
new file mode 100644
index 0000000..72e1077
Binary files /dev/null and b/apps/fm/style/images/app-texture@2.25x.png differ
diff --git a/apps/fm/style/images/app-texture@2x.png b/apps/fm/style/images/app-texture@2x.png
new file mode 100644
index 0000000..f54e028
Binary files /dev/null and b/apps/fm/style/images/app-texture@2x.png differ
diff --git a/apps/fm/test/unit/fm_test.js b/apps/fm/test/unit/fm_test.js
index fde04ca..3e2a763 100644
--- a/apps/fm/test/unit/fm_test.js
+++ b/apps/fm/test/unit/fm_test.js
@@ -22,6 +22,7 @@ suite('FM', function() {
   suite('frequency dialer', function() {

     suiteSetup(function() {
+
       tempNode = document.createElement('div');
       tempNode.id = 'test';
       tempNode.innerHTML =
@@ -42,6 +43,7 @@ suite('FM', function() {

       document.body.appendChild(tempNode);
       frequencyDialer.init();
+
     });

     suiteTeardown(function() {
@@ -273,116 +275,4 @@ suite('FM', function() {
       });
     });
   });
-
-  suite('update radio status based on incoming attention screen status',
-    function() {
-      suiteSetup(function() {
-
-        // Stub AirplaneModeHelper
-        window.AirplaneModeHelper = {
-          addEventListener: sinon.stub(),
-          ready: sinon.stub()
-        };
-
-        // Stub asyncStorage
-        window.asyncStorage = {
-          getItem: sinon.stub(),
-          setItem: sinon.stub()
-        };
-
-        // Stub enableFMRadio
-        window.enableFMRadio = sinon.stub();
-
-        // Stub mozSettings
-        navigator.mozSettings = {
-          addObserver: function(key, callback) {
-            this.callback = callback;
-          }
-        };
-
-        tempNode = document.createElement('div');
-        tempNode.id = 'test';
-        tempNode.innerHTML =
-          '<div id="frequency-bar">' +
-          '  <div id="frequency-display">' +
-          '    <a id="speaker-switch" href="#speaker" ' +
-                'data-speaker-on="false"></a>' +
-          '    <a id="bookmark-button" href="#bookmark"' +
-          '      data-bookmarked="false"></a>' +
-          '    <div id="frequency">0</div>' +
-          '  </div>' +
-          '</div>' +
-          '<div id="dialer-bar">' +
-          '  <div id="dialer-container">' +
-          '    <div id="frequency-indicator"></div>' +
-          '    <div id="frequency-dialer" class="animation-on"></div>' +
-          '  </div>' +
-          '</div>' +
-          '<a id="frequency-op-seekdown" href="#seekdown"></a>' +
-          '<a id="power-switch" href="#power-switch" data-enabled="false" ' +
-            'data-enabling="false"></a>' +
-          '<a id="frequency-op-seekup" href="#seekup"></a>' +
-          '<div id="antenna-warning" hidden="hidden"></div>' +
-          '<div id="airplane-mode-warning" class="warning" hidden>';
-
-        document.body.appendChild(tempNode);
-        init();
-      });
-
-      suiteTeardown(function() {
-        tempNode.parentNode.removeChild(tempNode);
-        tempNode = null;
-      });
-
-      test('disabled powered-on radio for incoming attention screen',
-        function() {
-          mozFMRadio.enabled = true;
-          mozFMRadio.antennaAvailable = true;
-          navigator.mozSettings.callback({
-            settingValue: true
-          });
-
-          assert.equal(mozFMRadio.enabled, false);
-        }
-      );
-
-      test('enabled previously powered-on radio for outgoing attention screen',
-        function() {
-          mozFMRadio.enabled = true;
-          mozFMRadio.antennaAvailable = true;
-          navigator.mozSettings.callback({
-            settingValue: false
-          });
-
-          assert.ok(window.enableFMRadio.called);
-        }
-      );
-
-      test('did nothing for powered-off radio for incoming attention screen',
-        function() {
-          mozFMRadio.enabled = false;
-          mozFMRadio.antennaAvailable = true;
-          navigator.mozSettings.callback({
-            settingValue: true
-          });
-
-          assert.equal(window._previousFMRadioState, false);
-        }
-      );
-
-      test('did nothing for previously powered-off radio for outgoing ' +
-        'attention screen',
-        function() {
-          mozFMRadio.antennaAvailable = true;
-          window._previousFMRadioState = false;
-          window._previousEnablingState = false;
-          navigator.mozSettings.callback({
-            settingValue: false
-          });
-
-          assert.equal(mozFMRadio.enabled, false);
-        }
-      );
-    }
-  );
 });
diff --git a/apps/ftu/js/app.js b/apps/ftu/js/app.js
index c3655d8..2ee99e6 100644
--- a/apps/ftu/js/app.js
+++ b/apps/ftu/js/app.js
@@ -31,16 +31,9 @@ function notifyCollection() {

 var AppManager = {

-  init: function init(isUpgrade) {
+  init: function init() {
     this.isInitialized = true;

-    UIManager.init();
-    Navigation.init();
-
-    if(isUpgrade) {
-      return;
-    }
-
     // Send message to populate preinstalled collections
     notifyCollection();

@@ -48,8 +41,9 @@ var AppManager = {
     WifiManager.init();
     ImportIntegration.init();
     TimeManager.init();
+    UIManager.init();
+    Navigation.init();
     DataMobile.init();
-
     var kSplashTimeout = 700;
     // Retrieve mobile connection if available
     // this is used to keep all tests passing while introducing multi-sim APIs
@@ -91,7 +85,7 @@ navigator.mozL10n.ready(function showBody() {
   ]).then(function() {

     if (!AppManager.isInitialized) {
-      AppManager.init(versionInfo.isUpgrade());
+      AppManager.init();
     }

     if (versionInfo.isUpgrade()) {
diff --git a/apps/ftu/js/wifi.js b/apps/ftu/js/wifi.js
index 0811863..f97f273 100644
--- a/apps/ftu/js/wifi.js
+++ b/apps/ftu/js/wifi.js
@@ -109,9 +109,7 @@ var WifiManager = {
   connect: function wn_connect(ssid, password, user) {
     var network = this.getNetwork(ssid);
     this.ssid = ssid;
-    // TODO: Hardcoded for resolving bug 1019146, replace hardcoded eap
-    //       method with user selected eap method after bug 1036829.
-    WifiHelper.setPassword(network, password, user, 'PEAP');
+    WifiHelper.setPassword(network, password, user);
     this.gCurrentNetwork = network;
     this.api.associate(network);
   },
diff --git a/apps/ftu/style/images/next.png b/apps/ftu/style/images/next.png
new file mode 100644
index 0000000..0d77817
Binary files /dev/null and b/apps/ftu/style/images/next.png differ
diff --git a/apps/ftu/style/images/next@1.5x.png b/apps/ftu/style/images/next@1.5x.png
new file mode 100644
index 0000000..1da5864
Binary files /dev/null and b/apps/ftu/style/images/next@1.5x.png differ
diff --git a/apps/ftu/style/images/next@2.25x.png b/apps/ftu/style/images/next@2.25x.png
new file mode 100644
index 0000000..a799aa5
Binary files /dev/null and b/apps/ftu/style/images/next@2.25x.png differ
diff --git a/apps/ftu/style/images/next@2x.png b/apps/ftu/style/images/next@2x.png
new file mode 100644
index 0000000..dacadc5
Binary files /dev/null and b/apps/ftu/style/images/next@2x.png differ
diff --git a/apps/ftu/style/images/prev.png b/apps/ftu/style/images/prev.png
new file mode 100644
index 0000000..b33773d
Binary files /dev/null and b/apps/ftu/style/images/prev.png differ
diff --git a/apps/ftu/style/images/prev@1.5x.png b/apps/ftu/style/images/prev@1.5x.png
new file mode 100644
index 0000000..96a6cf8
Binary files /dev/null and b/apps/ftu/style/images/prev@1.5x.png differ
diff --git a/apps/ftu/style/images/prev@2.25x.png b/apps/ftu/style/images/prev@2.25x.png
new file mode 100644
index 0000000..613515b
Binary files /dev/null and b/apps/ftu/style/images/prev@2.25x.png differ
diff --git a/apps/ftu/style/images/prev@2x.png b/apps/ftu/style/images/prev@2x.png
new file mode 100644
index 0000000..2de964e
Binary files /dev/null and b/apps/ftu/style/images/prev@2x.png differ
diff --git a/apps/ftu/style/images/tutorial/Notifications.mp4 b/apps/ftu/style/images/tutorial/Notifications.mp4
index 0e81124..77ceeba 100644
Binary files a/apps/ftu/style/images/tutorial/Notifications.mp4 and b/apps/ftu/style/images/tutorial/Notifications.mp4 differ
diff --git a/apps/ftu/style/images/tutorial/Notifications@1.5x.mp4 b/apps/ftu/style/images/tutorial/Notifications@1.5x.mp4
index a9607c8..be2eac4 100644
Binary files a/apps/ftu/style/images/tutorial/Notifications@1.5x.mp4 and b/apps/ftu/style/images/tutorial/Notifications@1.5x.mp4 differ
diff --git a/apps/ftu/style/images/tutorial/Notifications@2.25x.mp4 b/apps/ftu/style/images/tutorial/Notifications@2.25x.mp4
deleted file mode 100644
index 6f87da1..0000000
Binary files a/apps/ftu/style/images/tutorial/Notifications@2.25x.mp4 and /dev/null differ
diff --git a/apps/ftu/style/images/tutorial/Notifications@2x.mp4 b/apps/ftu/style/images/tutorial/Notifications@2x.mp4
index 80e08e9..7e7f4d8 100644
Binary files a/apps/ftu/style/images/tutorial/Notifications@2x.mp4 and b/apps/ftu/style/images/tutorial/Notifications@2x.mp4 differ
diff --git a/apps/ftu/style/images/tutorial/Sheets.mp4 b/apps/ftu/style/images/tutorial/Sheets.mp4
index 2ab1b24..c61f198 100644
Binary files a/apps/ftu/style/images/tutorial/Sheets.mp4 and b/apps/ftu/style/images/tutorial/Sheets.mp4 differ
diff --git a/apps/ftu/style/images/tutorial/Sheets@1.5x.mp4 b/apps/ftu/style/images/tutorial/Sheets@1.5x.mp4
index 501d842..61f75c3 100644
Binary files a/apps/ftu/style/images/tutorial/Sheets@1.5x.mp4 and b/apps/ftu/style/images/tutorial/Sheets@1.5x.mp4 differ
diff --git a/apps/ftu/style/images/tutorial/Sheets@2.25x.mp4 b/apps/ftu/style/images/tutorial/Sheets@2.25x.mp4
deleted file mode 100644
index 423c75a..0000000
Binary files a/apps/ftu/style/images/tutorial/Sheets@2.25x.mp4 and /dev/null differ
diff --git a/apps/ftu/style/images/tutorial/Sheets@2x.mp4 b/apps/ftu/style/images/tutorial/Sheets@2x.mp4
index 1e472c7..01a82a3 100644
Binary files a/apps/ftu/style/images/tutorial/Sheets@2x.mp4 and b/apps/ftu/style/images/tutorial/Sheets@2x.mp4 differ
diff --git a/apps/ftu/style/images/tutorial/VerticalScroll.mp4 b/apps/ftu/style/images/tutorial/VerticalScroll.mp4
index 606a6d7..7ce6e69 100644
Binary files a/apps/ftu/style/images/tutorial/VerticalScroll.mp4 and b/apps/ftu/style/images/tutorial/VerticalScroll.mp4 differ
diff --git a/apps/ftu/style/images/tutorial/VerticalScroll@1.5x.mp4 b/apps/ftu/style/images/tutorial/VerticalScroll@1.5x.mp4
index fa89c91..9b7cdd8 100644
Binary files a/apps/ftu/style/images/tutorial/VerticalScroll@1.5x.mp4 and b/apps/ftu/style/images/tutorial/VerticalScroll@1.5x.mp4 differ
diff --git a/apps/ftu/style/images/tutorial/VerticalScroll@2.25x.mp4 b/apps/ftu/style/images/tutorial/VerticalScroll@2.25x.mp4
deleted file mode 100644
index 917bd94..0000000
Binary files a/apps/ftu/style/images/tutorial/VerticalScroll@2.25x.mp4 and /dev/null differ
diff --git a/apps/ftu/style/images/tutorial/VerticalScroll@2x.mp4 b/apps/ftu/style/images/tutorial/VerticalScroll@2x.mp4
index 3ad5392..2040894 100644
Binary files a/apps/ftu/style/images/tutorial/VerticalScroll@2x.mp4 and b/apps/ftu/style/images/tutorial/VerticalScroll@2x.mp4 differ
diff --git a/apps/ftu/style/style.css b/apps/ftu/style/style.css
index ae65c62..62b5d67 100644
--- a/apps/ftu/style/style.css
+++ b/apps/ftu/style/style.css
@@ -727,7 +727,8 @@ aside.connecting {
 }

 #import_contacts li button.icon {
-  padding-left: 4rem;
+  padding-left: 3rem;
+  text-indent: 1rem;
 }

 #import_contacts li button.icon:before {
@@ -766,7 +767,6 @@ aside.connecting {
 #welcome_browser {
   padding: 1.5rem 3rem 0 3rem;
   width: calc(100% - 6rem);
-  overflow: hidden;
 }

 #welcome_browser p {
diff --git a/apps/ftu/test/marionette/manifest.ini b/apps/ftu/test/marionette/manifest.ini
deleted file mode 100644
index a78699b..0000000
--- a/apps/ftu/test/marionette/manifest.ini
+++ /dev/null
@@ -1 +0,0 @@
-[ftu_test.js]
diff --git a/apps/ftu/test/unit/timezone_test.js b/apps/ftu/test/unit/timezone_test.js
deleted file mode 100644
index 52606a9..0000000
--- a/apps/ftu/test/unit/timezone_test.js
+++ /dev/null
@@ -1,357 +0,0 @@
-/* global MocksHelper, MockNavigatorSettings,
-          MockL10n, MockNavigatorMozMobileConnections,
-          IccHelper, tzSelect
-*/
-
-'use strict';
-
-require('/shared/test/unit/mocks/mock_navigator_moz_mobile_connections.js');
-require('/shared/test/unit/mocks/mock_navigator_moz_settings.js');
-require('/shared/test/unit/mocks/mock_icc_helper.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
-
-require('/shared/test/unit/load_body_html_helper.js');
-
-var mocksHelperForTimezones = new MocksHelper([
-  'IccHelper'
-]).init();
-
-suite('timezones >', function() {
-  var realMozMobileConnections,
-      realMozSettings,
-      realXHR,
-      realL10n;
-
-  var regionSelector, citySelector;
-
-  var TIMEZONES = {
-    'Africa': [
-      {'cc':'NA', 'offset':'+01:00,+02:00', 'city':'Windhoek'}
-    ],
-    'America': [
-      {'cc':'VE', 'offset':'-04:30,-04:30', 'city':'Caracas'},
-      {'cc':'US', 'offset':'-05:00,-04:00', 'city':'New_York'}
-    ],
-    'Asia': [
-      {'cc':'TW', 'offset':'+08:00,+08:00', 'city':'Taipei'}
-    ],
-    'Australia': [
-      {'cc':'AU', 'offset':'+10:00,+11:00', 'city':'Sydney'}
-    ],
-    'Europe': [
-      {'cc':'ES', 'offset':'+01:00,+02:00', 'city':'Madrid'},
-      {'cc':'GB', 'offset':'+00:00,+01:00', 'city':'London'}
-    ],
-    'Indian': [
-      {'cc':'RE', 'offset':'+04:00,+04:00', 'city':'Reunion'}
-    ]
-  };
-  var APN_TZ = {
-    '649': 'Africa/Windhoek',
-    '734': 'America/Caracas',
-    '310': 'America/New_York',
-    '311': 'America/New_York',
-    '466': 'Asia/Taipei',
-    '505': 'Australia/Sydney',
-    '647': 'Indian/Reunion',
-    '214': 'Europe/Madrid',
-    '234': {
-      '00': 'Europe/London',
-      '02': 'Europe/London',
-      '03': 'Europe/Jersey',
-      '10': 'Europe/London',
-      '11': 'Europe/London',
-      '15': 'Europe/London',
-      '20': 'Europe/London',
-      '30': 'Europe/London',
-      '31': 'Europe/London',
-      '32': 'Europe/London',
-      '33': 'Europe/London',
-      '34': 'Europe/London',
-      '36': 'Europe/Isle_of_Man',
-      '50': 'Europe/Jersey',
-      '55': 'Europe/Jersey',
-      '58': 'Europe/Isle_of_Man'
-    }
-  };
-
-  function getTextFromSelectors() {
-    // Careful with the text transformations for the lists
-    // we add 'tzRegion-' to mapped regions
-    var mRegion = regionSelector.querySelectorAll('option')
-      [regionSelector.selectedIndex].textContent.split('-')[1];
-    var mCity = citySelector.querySelectorAll('option')
-      [citySelector.selectedIndex].textContent;
-    return {
-      region: mRegion,
-      city: mCity
-    };
-  }
-
-  function MockXMLHttpRequest() {
-    var mResponse = MockXMLHttpRequest.mResponse;
-    this.open = function(method, url) {
-      if (url) {
-        var urlArray = url.split('/');
-        var file = urlArray[urlArray.length - 1].split('.')[0];
-        switch (file) {
-          case 'tz':
-            mResponse = TIMEZONES;
-            break;
-          case 'apn_tz':
-            mResponse = APN_TZ;
-            break;
-        }
-      }
-    };
-    this.send = function() {
-      this.response = mResponse;
-      this.timeout = setTimeout(this.onload.bind(this));
-    };
-    this.abort = function() {
-      if (this.timeout) {
-        clearTimeout(this.clearTimeout);
-      }
-    };
-  }
-  mocksHelperForTimezones.attachTestHelpers();
-
-  suiteSetup(function(done) {
-    // we use the real XHR here, and mock it for the rest of the tests
-    loadBodyHTML('/index.html');
-
-    realMozSettings = navigator.mozSettings;
-    navigator.mozSettings = MockNavigatorSettings;
-    MockNavigatorSettings.mSettings['time.timezone'] = 'America/New_York';
-    MockNavigatorSettings.mSettings['time.timezone.user-selected'] = null;
-
-    realL10n = navigator.mozL10n;
-    navigator.mozL10n = MockL10n;
-
-    realMozMobileConnections = navigator.mozMobileConnections;
-    navigator.mozMobileConnections = MockNavigatorMozMobileConnections;
-
-    realXHR = window.XMLHttpRequest;
-    window.XMLHttpRequest = MockXMLHttpRequest;
-
-    require('/shared/js/tz_select.js', done);
-
-    regionSelector = document.getElementById('tz-region');
-    citySelector = document.getElementById('tz-city');
-  });
-
-  suiteTeardown(function() {
-    navigator.mozMobileConnections = realMozMobileConnections;
-    navigator.mozSettings = realMozSettings;
-    navigator.mozL10n = realL10n;
-    window.XMLHttpRequest = realXHR;
-  });
-
-  test('> observing changes on time.timezone', function() {
-    assert.isNotNull(navigator.mozSettings.mObservers['time.timezone']);
-  });
-
-  test('> no previous user interaction, use DEFAULT timezone', function() {
-    assert.equal(navigator.mozSettings.mSettings['time.timezone'],
-                'America/New_York');
-  });
-
-  suite('> very first run, no user interaction', function() {
-    suite('> no SIM card', function() {
-      setup(function() {
-        IccHelper.setProperty('iccInfo', null);
-      });
-
-      test('we use DEFAULT value', function(done) {
-        function tzLoaded() {
-          var currentValues = getTextFromSelectors();
-          assert.equal(currentValues.region, 'America');
-          assert.equal(currentValues.city, 'New York');
-          done();
-        }
-
-        tzSelect(regionSelector, citySelector, tzLoaded, tzLoaded);
-      });
-    });
-
-    suite('> SIM ready, connection avaiable', function() {
-      var conn;
-
-      suiteSetup(function() {
-        // we need a live connection for this test (network)
-        conn = new window.MockMobileconnection();
-        conn.voice = {
-          network: {
-            connected: true,
-            mcc: 466, // Asia / Taipei
-            mnc: 2
-          }
-        };
-
-        MockNavigatorMozMobileConnections.mAddMobileConnection(conn, 0);
-      });
-
-      suiteTeardown(function() {
-        conn = null;
-        MockNavigatorMozMobileConnections.mRemoveMobileConnection();
-      });
-
-      test('get timezone from the connection', function(done) {
-        function tzLoaded() {
-          var currentValues = getTextFromSelectors();
-          assert.equal(currentValues.region, 'Australia');
-          assert.equal(currentValues.city, 'Sydney');
-          done();
-        }
-
-        conn.voice.network.mcc = 505; // Australia/Sydney
-        tzSelect(regionSelector, citySelector, tzLoaded, tzLoaded);
-      });
-
-      test('if unknown MCC/MNC, use default', function(done) {
-        function tzLoaded() {
-          var currentValues = getTextFromSelectors();
-          // DEFAULT is America/New_York
-          assert.equal(currentValues.region, 'America');
-          assert.equal(currentValues.city, 'New York');
-          done();
-        }
-
-        conn.voice.network.mcc = 1; // unknown
-        conn.voice.network.mnc = 1; // unknown
-        tzSelect(regionSelector, citySelector, tzLoaded, tzLoaded);
-      });
-    });
-
-    suite('> SIM ready, no connection', function() {
-      var conn;
-
-      setup(function() {
-        // no connection
-        conn = new window.MockMobileconnection();
-        conn.voice = null;
-        MockNavigatorMozMobileConnections.mAddMobileConnection(conn, 0);
-        // but access to the SIM data
-        IccHelper.setProperty('cardstate', 'ready');
-      });
-
-     teardown(function() {
-        conn = null;
-        MockNavigatorMozMobileConnections.mRemoveMobileConnection();
-        IccHelper.mSuiteSetup(); // reset the object properties
-      });
-
-      test('get timezone from SIM', function(done) {
-        function tzLoaded() {
-          var currentValues = getTextFromSelectors();
-          assert.equal(currentValues.region, 'Europe');
-          assert.equal(currentValues.city, 'London');
-          done();
-        }
-
-        IccHelper.setProperty('iccInfo',{
-          mcc: 234, // Europe/London
-          mnc: 32
-        });
-
-        tzSelect(regionSelector, citySelector, tzLoaded, tzLoaded);
-      });
-
-      test('if unknown MCC/MNC, use default', function(done) {
-        function tzLoaded() {
-          var currentValues = getTextFromSelectors();
-          assert.equal(currentValues.region, 'America');
-          assert.equal(currentValues.city, 'New York');
-          done();
-        }
-
-        IccHelper.setProperty('iccInfo',{
-          mcc: 0, // unknown
-          mnc: 0  // unknown
-        });
-        tzSelect(regionSelector, citySelector, tzLoaded, tzLoaded);
-      });
-    });
-
-    suite('> protected SIM card', function() {
-      var conn;
-
-      setup(function() {
-        // no connection
-        conn = new window.MockMobileconnection();
-        conn.voice = null;
-        MockNavigatorMozMobileConnections.mAddMobileConnection(conn, 0);
-
-        // but access to the SIM data
-        IccHelper.setProperty('cardstate', 'pin_required');
-      });
-
-      teardown(function() {
-        MockNavigatorMozMobileConnections.mRemoveMobileConnection();
-        IccHelper.mSuiteSetup(); // reset the object properties
-      });
-
-      test('> default is used while waiting for access', function(done) {
-        function tzLoaded() {
-          var currentValues = getTextFromSelectors();
-          assert.lengthOf(IccHelper.mEventListeners.iccinfochange, 1);
-          assert.equal(currentValues.region, 'America');
-          assert.equal(currentValues.city, 'New York');
-
-          done();
-        }
-
-        tzSelect(regionSelector, citySelector, tzLoaded, tzLoaded);
-      });
-
-      test('> reload when granted access to SIM info', function(done) {
-        var calls = 0;
-        function tzLoaded() {
-          calls++;
-          IccHelper.mTriggerEventListeners('iccinfochange', {});
-          var currentValues = getTextFromSelectors();
-          assert.equal(currentValues.region, 'Europe');
-          assert.equal(currentValues.city, 'London');
-          // we expect 2 calls before finishing
-          if (calls === 2) {
-            done();
-          }
-        }
-
-        IccHelper.setProperty('iccInfo',{
-          mcc: 234, // Europe
-          mnc: 20  // London
-        });
-        tzSelect(regionSelector, citySelector, tzLoaded, tzLoaded);
-      });
-    });
-  });
-
-  suite('> user chose previously', function() {
-    // var addEventListenerSpy;
-
-    suiteSetup(function() {
-      MockNavigatorSettings.mSettings['time.timezone.user-selected'] =
-        'Europe/Madrid';
-    });
-    suiteTeardown(function() {
-      MockNavigatorSettings.mSettings['time.timezone.user-selected'] = null;
-    });
-
-    // setup(function() {
-    //   addEventListenerSpy = this.sinon.spy(window, 'addEventListener');
-    // });
-
-    test('> previous selection prevails', function(done) {
-      function tzLoaded() {
-        var currentValues = getTextFromSelectors();
-        assert.equal(currentValues.region, 'Europe');
-        assert.equal(currentValues.city, 'Madrid');
-        done();
-      }
-
-      tzSelect(regionSelector, citySelector, tzLoaded, tzLoaded);
-      // addEventListenerSpy.yield({target: window});
-    });
-  });
-});
diff --git a/apps/gallery/index.html b/apps/gallery/index.html
index e2ce19b..f4dccc7 100644
--- a/apps/gallery/index.html
+++ b/apps/gallery/index.html
@@ -30,7 +30,6 @@
     <script defer src="shared/js/screen_layout.js"></script>
     <script defer src="shared/js/scroll_detector.js"></script>
     <script defer src="shared/js/media/downsample.js"></script>
-    <script defer src="shared/js/dialogs.js"></script>

     <!-- This script is lazy loaded, but listed here so it gets packaged -->
     <!-- <script defer src="shared/js/media/crop_resize_rotate.js"></script> -->
@@ -40,6 +39,7 @@
     <script defer src="js/thumbnail_item.js"></script>
     <script defer src="js/thumbnail_date_group.js"></script>
     <script defer src="js/thumbnail_list.js"></script>
+    <script defer src="js/dialogs.js"></script>
     <script defer src="js/gallery.js"></script>
   </head>

diff --git a/apps/gallery/js/ImageEditor.js b/apps/gallery/js/ImageEditor.js
index 4f4727c..3a84d0f 100644
--- a/apps/gallery/js/ImageEditor.js
+++ b/apps/gallery/js/ImageEditor.js
@@ -107,16 +107,7 @@ function editPhoto(n) {

     // Set the background for all of the image buttons
     editedPhotoURL = URL.createObjectURL(blob);
-
-    // Use #-moz-samplesize media fragment to downsample images
-    // so the resulting images are smaller and fits 5 image buttons
-    // Here we assume image buttons are 50px high
-    var scale = window.innerWidth / 5 * window.devicePixelRatio *
-                window.devicePixelRatio * 50 /
-                (metadata.width * metadata.height);
-    var sampleSize = Downsample.areaNoMoreThan(scale);
-
-    var backgroundImage = 'url(' + editedPhotoURL + sampleSize + ')';
+    var backgroundImage = 'url(' + editedPhotoURL + ')';
     editBgImageButtons.forEach(function(b) {
       b.style.backgroundImage = backgroundImage;
     });
diff --git a/apps/gallery/js/dialogs.js b/apps/gallery/js/dialogs.js
new file mode 100644
index 0000000..51b0cd7
--- /dev/null
+++ b/apps/gallery/js/dialogs.js
@@ -0,0 +1,137 @@
+var Dialogs = {
+  // show a confirm dialog
+  confirm: function(options, onConfirm, onCancel) {
+    LazyLoader.load('shared/style/confirm.css', function() {
+      var dialog = $('confirm-dialog');
+      var msgEle = $('confirm-msg');
+      var cancelButton = $('confirm-cancel');
+      var confirmButton = $('confirm-ok');
+
+      // set up the dialog based on the options
+      msgEle.textContent = options.message;
+      cancelButton.textContent = options.cancelText ||
+                                 navigator.mozL10n.get('cancel');
+      confirmButton.textContent = options.confirmText ||
+                                  navigator.mozL10n.get('ok');
+
+      if (options.danger) {
+        confirmButton.classList.add('danger');
+      } else {
+        confirmButton.classList.remove('danger');
+      }
+
+      // show the confirm dialog
+      dialog.classList.remove('hidden');
+
+      // attach event handlers
+      var onCancelClick = function(ev) {
+        close(ev);
+        if (onCancel) {
+          onCancel();
+        }
+        return false;
+      };
+      var onConfirmClick = function(ev) {
+        close(ev);
+        if (onConfirm) {
+          onConfirm();
+        }
+        return false;
+      };
+      cancelButton.addEventListener('click', onCancelClick);
+      confirmButton.addEventListener('click', onConfirmClick);
+
+      function close(ev) {
+        dialog.classList.add('hidden');
+        cancelButton.removeEventListener('click', onCancelClick);
+        confirmButton.removeEventListener('click', onConfirmClick);
+        ev.preventDefault();
+        ev.stopPropagation();
+        return false;
+      }
+    });
+  },
+  //
+  // If id is null then hide the overlay. Otherwise, look up the localized
+  // text for the specified id and display the overlay with that text.
+  // Supported ids include:
+  //
+  //   nocard: no sdcard is installed in the phone
+  //   pluggedin: the sdcard is being used by USB mass storage
+  //   emptygallery: no pictures found
+  //   scanning: scanning the sdcard for photo's, but none found yet
+  //
+  // Localization is done using the specified id with "-title" and "-text"
+  // suffixes.
+  //
+  showOverlay: function(id) {
+    LazyLoader.load('shared/style/confirm.css', function() {
+
+      // hide any special elements
+      $('overlay-camera-button').classList.add('hidden');
+      $('overlay-cancel-button').classList.add('hidden');
+      $('overlay-menu').classList.add('hidden');
+      var title, text;
+      var _ = navigator.mozL10n.get;
+      switch (id) {
+        case null:
+          $('overlay').classList.add('hidden');
+          return;
+        case 'nocard':
+          title = _('nocard3-title');
+          text = _('nocard4-text');
+          if (pendingPick) {
+            $('overlay-cancel-button').classList.remove('hidden');
+            $('overlay-menu').classList.remove('hidden');
+          }
+          break;
+        case 'pluggedin':
+          title = _('pluggedin2-title');
+          text = _('pluggedin2-text');
+          if (pendingPick) {
+            $('overlay-cancel-button').classList.remove('hidden');
+            $('overlay-menu').classList.remove('hidden');
+          }
+          break;
+        case 'scanning':
+          title = _('scanning-title');
+          text = _('scanning-text');
+          if (pendingPick) {
+            $('overlay-cancel-button').classList.remove('hidden');
+            $('overlay-menu').classList.remove('hidden');
+          }
+          break;
+        case 'emptygallery':
+          title = _(pendingPick ? 'emptygallery2-title-pick' :
+                                  'emptygallery2-title');
+          text = _('emptygallery2-text');
+          $('overlay-menu').classList.remove('hidden');
+          if (pendingPick) {
+            $('overlay-cancel-button').classList.remove('hidden');
+          } else {
+            $('overlay-camera-button').classList.remove('hidden');
+          }
+          break;
+        case 'upgrade':
+          title = _('upgrade-title');
+          text = _('upgrade-text');
+          if (pendingPick) {
+            $('overlay-cancel-button').classList.remove('hidden');
+            $('overlay-menu').classList.remove('hidden');
+          }
+          break;
+        default:
+          console.warn('Reference to undefined overlay', id);
+          if (pendingPick) {
+            $('overlay-cancel-button').classList.remove('hidden');
+            $('overlay-menu').classList.remove('hidden');
+          }
+          return;
+      }
+
+      $('overlay-title').textContent = title;
+      $('overlay-text').textContent = text;
+      $('overlay').classList.remove('hidden');
+    });
+  }
+};
diff --git a/apps/gallery/manifest.webapp b/apps/gallery/manifest.webapp
index 0e7b922..3800c88 100644
--- a/apps/gallery/manifest.webapp
+++ b/apps/gallery/manifest.webapp
@@ -14,8 +14,8 @@
     "device-storage:videos":{ "access": "readwrite" },
     "deprecated-hwvideo":{},
     "audio-channel-content":{},
-    "nfc": { "access": "readwrite" },
-    "feature-detection": {}
+    "settings":{ "access": "readonly" },
+    "nfc": { "access": "readwrite" }
   },
   "activities": {
     "browse": {
diff --git a/apps/gallery/style/images/actionicon_gallery_edit_rotate_30x30.png b/apps/gallery/style/images/actionicon_gallery_edit_rotate_30x30.png
new file mode 100644
index 0000000..fa8ccbf
Binary files /dev/null and b/apps/gallery/style/images/actionicon_gallery_edit_rotate_30x30.png differ
diff --git a/apps/gallery/style/images/handle_pressed.png b/apps/gallery/style/images/handle_pressed.png
new file mode 100644
index 0000000..7727cfc
Binary files /dev/null and b/apps/gallery/style/images/handle_pressed.png differ
diff --git a/apps/gallery/style/images/iconaction_camera_gridview_30x30.png b/apps/gallery/style/images/iconaction_camera_gridview_30x30.png
new file mode 100644
index 0000000..b12eba2
Binary files /dev/null and b/apps/gallery/style/images/iconaction_camera_gridview_30x30.png differ
diff --git a/apps/gallery/style/images/iconaction_camera_gridview_30x30@1.5x.png b/apps/gallery/style/images/iconaction_camera_gridview_30x30@1.5x.png
new file mode 100644
index 0000000..f35b056
Binary files /dev/null and b/apps/gallery/style/images/iconaction_camera_gridview_30x30@1.5x.png differ
diff --git a/apps/gallery/style/images/iconaction_camera_gridview_30x30@2.25x.png b/apps/gallery/style/images/iconaction_camera_gridview_30x30@2.25x.png
new file mode 100644
index 0000000..7910ce6
Binary files /dev/null and b/apps/gallery/style/images/iconaction_camera_gridview_30x30@2.25x.png differ
diff --git a/apps/gallery/style/images/iconaction_camera_gridview_30x30@2x.png b/apps/gallery/style/images/iconaction_camera_gridview_30x30@2x.png
new file mode 100644
index 0000000..5dd19a5
Binary files /dev/null and b/apps/gallery/style/images/iconaction_camera_gridview_30x30@2x.png differ
diff --git a/apps/gallery/style/images/play.png b/apps/gallery/style/images/play.png
new file mode 100644
index 0000000..69aac54
Binary files /dev/null and b/apps/gallery/style/images/play.png differ
diff --git a/apps/gallery/style/images/play@1.5x.png b/apps/gallery/style/images/play@1.5x.png
new file mode 100644
index 0000000..ea7e301
Binary files /dev/null and b/apps/gallery/style/images/play@1.5x.png differ
diff --git a/apps/gallery/style/images/play@2.25x.png b/apps/gallery/style/images/play@2.25x.png
new file mode 100644
index 0000000..220f7ed
Binary files /dev/null and b/apps/gallery/style/images/play@2.25x.png differ
diff --git a/apps/gallery/style/images/play@2x.png b/apps/gallery/style/images/play@2x.png
new file mode 100644
index 0000000..f6ad2be
Binary files /dev/null and b/apps/gallery/style/images/play@2x.png differ
diff --git a/apps/gallery/style/images/spinner.png b/apps/gallery/style/images/spinner.png
new file mode 100644
index 0000000..3381a58
Binary files /dev/null and b/apps/gallery/style/images/spinner.png differ
diff --git a/apps/gallery/style/images/spinner@1.5x.png b/apps/gallery/style/images/spinner@1.5x.png
new file mode 100644
index 0000000..abecebd
Binary files /dev/null and b/apps/gallery/style/images/spinner@1.5x.png differ
diff --git a/apps/gallery/style/images/spinner@2.25x.png b/apps/gallery/style/images/spinner@2.25x.png
new file mode 100644
index 0000000..d583ba1
Binary files /dev/null and b/apps/gallery/style/images/spinner@2.25x.png differ
diff --git a/apps/gallery/style/images/spinner@2x.png b/apps/gallery/style/images/spinner@2x.png
new file mode 100644
index 0000000..02bfdbc
Binary files /dev/null and b/apps/gallery/style/images/spinner@2x.png differ
diff --git a/apps/gallery/test/marionette/manifest.ini b/apps/gallery/test/marionette/manifest.ini
deleted file mode 100644
index 678cc99..0000000
--- a/apps/gallery/test/marionette/manifest.ini
+++ /dev/null
@@ -1,3 +0,0 @@
-[edit_image_test.js]
-[fullscreen_image_test.js]
-[delete_image_test.js]
diff --git a/apps/homescreen/elements/search_page.html b/apps/homescreen/elements/search_page.html
index 72739e7..03b09b2 100644
--- a/apps/homescreen/elements/search_page.html
+++ b/apps/homescreen/elements/search_page.html
@@ -5,8 +5,8 @@
       <div id="collection">
         <div class="header" role="heading" aria-level="1">
           <div class="header-content">
-            <button class="close" data-l10n-id="evme-close"></button>
             <h2 role="button" class="title"></h2>
+            <button class="close" data-l10n-id="evme-close"></button>
           </div>
         </div>
         <div class="content">
diff --git a/apps/homescreen/everything.me/css/everything.me.css b/apps/homescreen/everything.me/css/everything.me.css
index 28256d2..8214653 100644
--- a/apps/homescreen/everything.me/css/everything.me.css
+++ b/apps/homescreen/everything.me/css/everything.me.css
@@ -59,7 +59,6 @@
   margin-top: 5.3rem;
 }

-.evme-has-history:not(.evme-has-query) .evmeScope,
 .evme-has-query .evmeScope {
     height: 100%;
 }
@@ -70,7 +69,6 @@
 }

 .evme-keyboard-visible .apps > div.evmePage ol,
-.evme-has-history:not(.evme-has-query) .apps > div.evmePage ol,
 .evme-has-query .apps > div.evmePage ol {
     opacity: 0;
 }
@@ -89,7 +87,6 @@
     visibility: visible;
 }
 .evme-displayed.evme-keyboard-visible #footer,
-.evme-displayed.evme-has-history:not(.evme-has-query) #footer,
 .evme-displayed.evme-has-query #footer,
 .evme-collection-visible ~ #footer{
     transform: translateY(100%);
@@ -98,7 +95,6 @@

 .evme-loading-from-input #bg-overlay,
 .evme-displayed.evme-keyboard-visible #bg-overlay,
-.evme-displayed.evme-has-history:not(.evme-has-query) #bg-overlay,
 .evme-displayed.evme-has-query #bg-overlay{
   transform: translateY(0);
 }
diff --git a/apps/homescreen/everything.me/images/add.png b/apps/homescreen/everything.me/images/add.png
new file mode 100644
index 0000000..1c0b49d
Binary files /dev/null and b/apps/homescreen/everything.me/images/add.png differ
diff --git a/apps/homescreen/everything.me/images/add@1.5x.png b/apps/homescreen/everything.me/images/add@1.5x.png
new file mode 100644
index 0000000..0073498
Binary files /dev/null and b/apps/homescreen/everything.me/images/add@1.5x.png differ
diff --git a/apps/homescreen/everything.me/images/add@2x.png b/apps/homescreen/everything.me/images/add@2x.png
new file mode 100644
index 0000000..63154a7
Binary files /dev/null and b/apps/homescreen/everything.me/images/add@2x.png differ
diff --git a/apps/homescreen/everything.me/images/clouds.jpg b/apps/homescreen/everything.me/images/clouds.jpg
new file mode 100644
index 0000000..c13e591
Binary files /dev/null and b/apps/homescreen/everything.me/images/clouds.jpg differ
diff --git a/apps/homescreen/everything.me/images/connection.png b/apps/homescreen/everything.me/images/connection.png
new file mode 100644
index 0000000..73b12ca
Binary files /dev/null and b/apps/homescreen/everything.me/images/connection.png differ
diff --git a/apps/homescreen/everything.me/images/empty-collection.png b/apps/homescreen/everything.me/images/empty-collection.png
new file mode 100644
index 0000000..8f99569
Binary files /dev/null and b/apps/homescreen/everything.me/images/empty-collection.png differ
diff --git a/apps/homescreen/everything.me/images/location/location_sprite.png b/apps/homescreen/everything.me/images/location/location_sprite.png
new file mode 100644
index 0000000..83d5fd5
Binary files /dev/null and b/apps/homescreen/everything.me/images/location/location_sprite.png differ
diff --git a/apps/homescreen/everything.me/images/separator.png b/apps/homescreen/everything.me/images/separator.png
new file mode 100644
index 0000000..257dfcd
Binary files /dev/null and b/apps/homescreen/everything.me/images/separator.png differ
diff --git a/apps/homescreen/everything.me/images/shared/gradient.png b/apps/homescreen/everything.me/images/shared/gradient.png
new file mode 100644
index 0000000..d2e6f5b
Binary files /dev/null and b/apps/homescreen/everything.me/images/shared/gradient.png differ
diff --git a/apps/homescreen/everything.me/images/shared/pattern.png b/apps/homescreen/everything.me/images/shared/pattern.png
new file mode 100644
index 0000000..af03f56
Binary files /dev/null and b/apps/homescreen/everything.me/images/shared/pattern.png differ
diff --git a/apps/homescreen/everything.me/images/spin.png b/apps/homescreen/everything.me/images/spin.png
new file mode 100644
index 0000000..1c4e195
Binary files /dev/null and b/apps/homescreen/everything.me/images/spin.png differ
diff --git a/apps/homescreen/everything.me/js/Brain.js b/apps/homescreen/everything.me/js/Brain.js
index 08a2be8..05e3166 100644
--- a/apps/homescreen/everything.me/js/Brain.js
+++ b/apps/homescreen/everything.me/js/Brain.js
@@ -29,8 +29,6 @@

       CLASS_WHEN_EVME_READY = 'evme-ready',
       CLASS_WHEN_HAS_QUERY = 'evme-has-query',
-      CLASS_WHEN_HAS_HISTORY = 'evme-has-history',
-      CLASS_WHEN_HAS_NO_HISTORY = 'empty-history',
       CLASS_WHEN_COLLECTION_VISIBLE = 'evme-collection-visible',
       CLASS_WHEN_LOADING_SHORTCUTS_SUGGESTIONS =
                                             'evme-suggest-collections-loading',
@@ -146,7 +144,6 @@
       Searcher.empty();
       Evme.Searchbar.clear();
       Brain.Searchbar.setEmptyClass();
-      Brain.Helper.setHistoryClass();
       document.body.classList.add(CLASS_WHEN_EVME_READY);
     };
   };
@@ -168,26 +165,6 @@
       } else {
         Brain.Helper.showDefault();
       }
-
-      // A custom event fired by everything.me to capture clicks within the
-      // homescreen page grip.
-      window.addEventListener('gridclicked', self.handleContainerClick);
-    };
-
-    this.handleContainerClick = function handleContainerClick(e) {
-      if (Evme.Searchbar.getValue() !== '' ||
-        Evme.Helper.getCurrentDisplayType() !== 'history') {
-        return;
-      }
-      var parent = e.detail.data.explicitOriginalTarget;
-      while (parent) {
-        if (parent === elContainer) {
-          return;
-        }
-        parent = parent.parentNode;
-      }
-      Brain.Helper.setHistoryClass();
-      window.removeEventListener('gridclicked', self.handleContainerClick);
     };

     // Searchbar blurred. Keyboard hides.
@@ -215,13 +192,8 @@

       var searchbarValue = Evme.Searchbar.getValue();
       if (searchbarValue === '') {
-        if (Evme.Helper.getCurrentDisplayType() !== 'history') {
-          Evme.Helper.setTitle();
-          Evme.Helper.showTitle();
-        } else if (elClicked === elContainer) {
-          Brain.Helper.setHistoryClass();
-          window.removeEventListener('gridclicked', self.handleContainerClick);
-        }
+        Evme.Helper.setTitle();
+        Evme.Helper.showTitle();
       } else if (didClickApp) {
         Evme.Searchbar.setValue(searchbarValue);
         Evme.Helper.setTitle(searchbarValue);
@@ -332,10 +304,6 @@
     this.populate = function populate() {
       Evme.Brain.Helper.showDefault();
     };
-
-    this.clear = function() {
-      Brain.Helper.setHistoryClass();
-    };
   };

   // modules/Helper/
@@ -439,22 +407,11 @@
       }
     };

-    this.setHistoryClass = function setHistoryClass(length) {
-      if (length && length > 0) {
-        elContainer.classList.remove(CLASS_WHEN_HAS_NO_HISTORY);
-        document.body.classList.add(CLASS_WHEN_HAS_HISTORY);
-      } else {
-        elContainer.classList.add(CLASS_WHEN_HAS_NO_HISTORY);
-        document.body.classList.remove(CLASS_WHEN_HAS_HISTORY);
-      }
-    };
-
     // load history items
     this.loadHistory = function loadHistory(history) {
       history = history || Evme.SearchHistory.get();

       if (history && history.length > 0) {
-        self.setHistoryClass(history.length);
         var items = [];
         for (var i = 0, l = history.length; i < l; i++) {
           items.push({
@@ -466,8 +423,6 @@

         Evme.Helper.loadHistory(items);
         Evme.Helper.showHistory();
-      } else {
-        self.setHistoryClass();
       }
     };

diff --git a/apps/homescreen/everything.me/js/everything.me.js b/apps/homescreen/everything.me/js/everything.me.js
index 3dc250c..bc2e6f2 100644
--- a/apps/homescreen/everything.me/js/everything.me.js
+++ b/apps/homescreen/everything.me/js/everything.me.js
@@ -41,9 +41,6 @@ var EverythingME = {

     // insert into first page
     gridPage.insertBefore(activationIcon, gridPage.firstChild);
-    // Capture clicks on the gridPage and handle everything.me's searchbar's and
-    // helper's visibility.
-    gridPage.addEventListener('click', gridClicked);

     // Append appropriate placeholder translation to pseudo searchbar
     navigator.mozL10n.ready(function loadSearchbarValue() {
@@ -109,12 +106,6 @@ var EverythingME = {
       }
     }

-    function gridClicked(e) {
-      window.dispatchEvent(new CustomEvent('gridclicked', {
-        detail: { data: e }
-      }));
-    }
-
     function loadCollectionAssets() {
       var e = EverythingME.pendingEvent;

diff --git a/apps/homescreen/everything.me/modules/Collection/Collection.css b/apps/homescreen/everything.me/modules/Collection/Collection.css
index 463f407..257c45e 100644
--- a/apps/homescreen/everything.me/modules/Collection/Collection.css
+++ b/apps/homescreen/everything.me/modules/Collection/Collection.css
@@ -144,6 +144,9 @@ body:not(.evme-loading):not(.evme-ready) #collection .evme-apps {
         cursor: pointer;
         z-index: 100;
     }
+    .evmeScope #collection.renaming .header .close {
+      pointer-events: none;
+    }
     .evmeScope #collection .header .done {
         background: transparent url('/everything.me/images/done_icon.png') no-repeat 1.7rem 50%/3rem;
         position: absolute;
diff --git a/apps/homescreen/everything.me/modules/Collection/Collection.js b/apps/homescreen/everything.me/modules/Collection/Collection.js
index 747ba4b..9869b95 100644
--- a/apps/homescreen/everything.me/modules/Collection/Collection.js
+++ b/apps/homescreen/everything.me/modules/Collection/Collection.js
@@ -75,11 +75,7 @@ void function() {
             elInput, elDone;

         el.classList.add(CLASS_WHEN_EDITING_NAME);
-        // Make the collection container invisible to the screen reader when
-        // renaming.
-        elAppsContainer.setAttribute('aria-hidden', true);

-        elTitle.setAttribute('role', 'presentation');
         elTitle.innerHTML = '<input type="text" ' +
                                     'autocorrect="off" ' +
                                     'x-inputmode="verbatim" />' +
@@ -92,17 +88,11 @@ void function() {
         elInput.focus();
         elInput.value = currentTitle;

-        elTitle.addEventListener('blur', self.Rename.cancel, true);
+        elInput.addEventListener('blur', self.Rename.cancel);
         elInput.addEventListener('keyup', self.Rename.onKeyUp);
-        elDone.addEventListener('click', self.Rename.save);
-        // If the click comes from within the collection container - cancel
-        // renaming.
-        elAppsContainer.addEventListener('click', self.Rename.cancel);
+        elDone.addEventListener('touchstart', self.Rename.save);

         elTitle.removeEventListener('click', self.Rename.start);
-        // When renaming close button is used to cancel renaming.
-        elClose.removeEventListener('click', self.onCloseClick);
-        elClose.addEventListener('click', self.Rename.cancel);

         self.isRenaming = true;
       },
@@ -118,10 +108,7 @@ void function() {
         self.Rename.done(true);
       },

-      cancel: function renameCancel(e) {
-        if (e.explicitOriginalTarget.parentNode === elTitle) {
-          return;
-        }
+      cancel: function renameCancel() {
         self.Rename.done(false);
       },

@@ -141,10 +128,9 @@ void function() {
             newName = elInput.value,
             nameChanged = newName && newName !== oldName;

-        elTitle.removeEventListener('blur', self.Rename.cancel, true);
+        elInput.removeEventListener('blur', self.Rename.cancel);
         elInput.removeEventListener('keyup', self.Rename.onKeyUp);
-        elDone.removeEventListener('click', self.Rename.save);
-        elAppsContainer.removeEventListener('click', self.Rename.cancel);
+        elDone.removeEventListener('touchstart', self.Rename.save);

         elInput.blur();

@@ -170,7 +156,6 @@ void function() {

         function exitDoneState() {
           el.classList.remove(CLASS_WHEN_EDITING_NAME);
-          elAppsContainer.setAttribute('aria-hidden', false);

           self.isRenaming = false;

@@ -179,8 +164,6 @@ void function() {
           // the user in the rename mode
           window.setTimeout(function() {
             elTitle.addEventListener('click', self.Rename.start);
-            elClose.removeEventListener('click', self.Rename.cancel);
-            elClose.addEventListener('click', self.onCloseClick);
           }, 0);
         }
       }
@@ -451,7 +434,7 @@ void function() {

     this.setTitle = function setTitle(newTitle) {
       title = newTitle;
-      elTitle.setAttribute('role', 'button');
+
       elTitle.innerHTML =
               '<span>' + title + '</span>';
     };
diff --git a/apps/homescreen/everything.me/modules/Helper/Helper.css b/apps/homescreen/everything.me/modules/Helper/Helper.css
index 1c662cd..a37629d 100644
--- a/apps/homescreen/everything.me/modules/Helper/Helper.css
+++ b/apps/homescreen/everything.me/modules/Helper/Helper.css
@@ -4,7 +4,7 @@
     top: 5rem;
     right: 0;
 }
-body:not(.evme-keyboard-visible):not(.evme-has-history) .empty-query #helper-header {
+body:not(.evme-keyboard-visible) .empty-query #helper-header {
     display: none;
 }

diff --git a/apps/homescreen/everything.me/modules/Helper/Helper.js b/apps/homescreen/everything.me/modules/Helper/Helper.js
index e1227c5..abb8c5c 100644
--- a/apps/homescreen/everything.me/modules/Helper/Helper.js
+++ b/apps/homescreen/everything.me/modules/Helper/Helper.js
@@ -99,9 +99,6 @@ Evme.Helper = new function Evme_Helper() {
   this.getList = function getList() {
     return elList;
   };
-  this.getCurrentDisplayType = function getCurrentDisplayType() {
-    return currentDisplayedType;
-  };

   this.enableCloseAnimation = function enableCloseAnimation() {
     elWrapper.classList.add('animate');
diff --git a/apps/homescreen/everything.me/modules/Searchbar/Searchbar.css b/apps/homescreen/everything.me/modules/Searchbar/Searchbar.css
index dc326a7..bbb05c8 100644
--- a/apps/homescreen/everything.me/modules/Searchbar/Searchbar.css
+++ b/apps/homescreen/everything.me/modules/Searchbar/Searchbar.css
@@ -7,7 +7,6 @@
     transform: translateY(-3rem);
 }

-#evmeContainer.empty-query:not(.empty-history) #header,
 #evmeContainer:not(.empty-query) #header,
 .evme-keyboard-visible #header {
     background: rgba(0, 0, 0, 0.8) !important;
diff --git a/apps/homescreen/js/grid_components.js b/apps/homescreen/js/grid_components.js
index a7bc1e4..273184a 100644
--- a/apps/homescreen/js/grid_components.js
+++ b/apps/homescreen/js/grid_components.js
@@ -92,8 +92,7 @@ GridItem.prototype = {
       name: this.getName(),
       icon: this.getIcon(),
       iconable: this.iconable,
-      useAsyncPanZoom: this.useAsyncPanZoom,
-      type: this.type
+      useAsyncPanZoom: this.useAsyncPanZoom
     };

     if (typeof cb === 'function') {
@@ -134,75 +133,26 @@ Collection.prototype = {
     }
   },

-  // returns a v2.0 vertical homescreen descriptor for a collection
   getDescriptor: function sc_getDescriptor(cb) {
     var descriptor = GridItem.prototype.getDescriptor.call(this);
+    descriptor.categoryId = this.providerId;
     descriptor.pinned = this.manifest.apps || [];
-    if (this.id.startsWith(document.location.protocol)) {
-      // The id for preinstalled-SCs is the manifest URL. We have to set the
-      // default icon instead of the updated one (data:image/png;base64,...)
-      descriptor.icon = this.migrateURL(this.id).
-                             replace('/manifest.collection', '/icon.png');
-    }
+    descriptor.icon = this.migrateURL(descriptor.icon);

     asyncStorage.getItem('evme-collectionsettings_' + this.id, function(data) {
       if (data && data.value) {
         data = data.value;
-
-        descriptor.name = data.name || descriptor.name || '';
-
-        // category collection
-        if (data.experienceId) {
-          descriptor.categoryId = data.experienceId;
-          descriptor.cName = descriptor.name.toLowerCase();
-        }
-        // query collection
-        else {
-          descriptor.query = data.query;
-        }
-
-        // reset background, vertical uses blobs
-        descriptor.background = {};
+        descriptor.name = data.name;
+        descriptor.cName = data.name.toLowerCase();
+        descriptor.background = data.bg;
+        descriptor.categoryId = data.experienceId || descriptor.categoryId;
+        descriptor.query = data.query;
         descriptor.defaultIcon = this.migrateURL(data.defaultIcon);
-        descriptor.webicons = data.extraIconsData || [];
-        descriptor.pinned = data.apps.map(function _each(item) {
-          // cf. WebResult and PinnedHomeIcon classes in collection/objects.js
-
-          if (item.bookmarkURL) {
-            // homescreen bookmark -> PinnedHomeIcon
-            return {
-              identifier: item.appUrl,
-              type: 'homeIcon'
-            };
-          } else if (item.manifestURL) {
-            // homescreen mozapp (+ entry point) -> PinnedHomeIcon
-            var identifier = item.manifestURL;
-            if (item.entry_point) {
-              identifier = identifier + '-' + item.entry_point;
-            }
-
-            return {
-              identifier: identifier,
-              type: 'homeIcon'
-            };
-          } else if (item.staticType === 'cloud') {
-            // E.me web result -> WebResult
-            var data = item;
-            data.emeId = item.id;
-            data.url = data.id = data.appUrl;
-            data.renderer = 'clip';
-
-            return {
-              identifier: data.appUrl,
-              type: 'webResult',
-              data: data
-            };
-          }
-        });
+        descriptor.webicons = data.extraIconsData;
+        descriptor.pinned = data.apps;
       }
-      var categoryId = descriptor.categoryId || this.providerId;
-      var id = parseInt(categoryId);
-      descriptor.id = isNaN(id) ? categoryId : id;
+      var id = parseInt(descriptor.categoryId);
+      descriptor.id = isNaN(id) ? descriptor.categoryId : id;
       cb(descriptor);
     }.bind(this));
   }
diff --git a/apps/homescreen/js/migrator.js b/apps/homescreen/js/migrator.js
index ca326b8..0e77529 100644
--- a/apps/homescreen/js/migrator.js
+++ b/apps/homescreen/js/migrator.js
@@ -19,23 +19,14 @@
         return;
       }

-      this.migrating = true;
-
-      verticalPreferences.get('grid.layout').then((gridLayout) => {
-        if (gridLayout) {
-          // Migration was performed
-          return;
-        }
-
-        this.grid = [];
-        this.iterating = true;
-        this.pendingItems = 0;
-        HomeState.openDB(HomeState.getGrid.bind(undefined,
-                         this.iteratePage.bind(this),
-                         this.onHomeStateSuccess.bind(this),
-                         this.onHomeStateError.bind(this)),
-                         this.onHomeStateError.bind(this));
-      });
+      this.grid = [];
+      this.migrating = this.iterating = true;
+      this.pendingItems = 0;
+      HomeState.openDB(HomeState.getGrid.bind(undefined,
+                          this.iteratePage.bind(this),
+                          this.onHomeStateSuccess.bind(this),
+                          this.onHomeStateError.bind(this)),
+                          this.onHomeStateError.bind(this));
     },

     /**
@@ -64,12 +55,8 @@
           database = BookmarksDatabase;
         }

-        var record = {
-          role: type
-        };
-
         if (!database) {
-          record = {
+          var record = {
             name: icon.name,
             manifestURL: icon.manifestURL,
             icon: icon.icon
@@ -83,15 +70,16 @@
           return;
         }

-        icon.record = record;
-        section.push(icon.record);
-
         ++this.pendingItems;
         // We are going to propagate the bookmark/collection to datastore
         GridItemsFactory.create(icon).getDescriptor(function(descriptor) {
-          icon.record.id = descriptor.type === types.COLLECTION ?
-                           descriptor.id : descriptor.url;
-          console.debug('Migrated to datastore', JSON.stringify(descriptor));
+          section.push({
+            // categoryId for collections and url for bookmarks
+            id: descriptor.categoryId !== undefined ?
+                  descriptor.id :
+                  descriptor.url,
+            role: type
+          });
           database.add(descriptor).then(onItemMigrated, onItemMigrated);
         });
       }.bind(this));
diff --git a/apps/homescreen/style/images/rocketbar.png b/apps/homescreen/style/images/rocketbar.png
new file mode 100644
index 0000000..b1a1bfc
Binary files /dev/null and b/apps/homescreen/style/images/rocketbar.png differ
diff --git a/apps/homescreen/test/marionette/manifest.ini b/apps/homescreen/test/marionette/manifest.ini
deleted file mode 100644
index 982bbdf..0000000
--- a/apps/homescreen/test/marionette/manifest.ini
+++ /dev/null
@@ -1,4 +0,0 @@
-[update_bookmark_test.js]
-[remove_bookmark_test.js]
-[install_bookmark_test.js]
-[active_icons_test.js]
diff --git a/apps/homescreen/test/unit/migrator_test.js b/apps/homescreen/test/unit/migrator_test.js
index 082342d..9779dde 100644
--- a/apps/homescreen/test/unit/migrator_test.js
+++ b/apps/homescreen/test/unit/migrator_test.js
@@ -25,7 +25,6 @@ suite('migrator.js >', function() {
       bdAddStub = null,
       cdAddStub = null,
       vpPutStub = null,
-      vpGetStub = null,
       bookmarks = [],
       collections = [],
       layout = null,
@@ -46,20 +45,12 @@ suite('migrator.js >', function() {
     navigator.mozSetMessageHandler = MockNavigatormozSetMessageHandler;
     MockNavigatormozSetMessageHandler.mSetup();
     requireApp('homescreen/js/migrator.js', done);
-    vpGetStub = sinon.stub(verticalPreferences, 'get', function(id) {
-      return {
-        then: function(resolve) {
-          resolve();
-        }
-      };
-    });
   });

   suiteTeardown(function() {
     window.asyncStorage = realAsyncStorage;
     MockNavigatormozSetMessageHandler.mTeardown();
     navigator.mozSetMessageHandler = realSetMessageHandler;
-    vpGetStub.restore();
   });

   setup(function() {
diff --git a/apps/keyboard/index.html b/apps/keyboard/index.html
index 1bc489c..b3fc95c 100644
--- a/apps/keyboard/index.html
+++ b/apps/keyboard/index.html
@@ -8,8 +8,6 @@
   <script defer type="text/javascript" src="js/keyboard/user_press_manager.js"></script>
   <script defer type="text/javascript" src="js/keyboard/alternatives_char_menu_manager.js"></script>
   <script defer type="text/javascript" src="js/keyboard/visual_highlight_manager.js"></script>
-  <script defer type="text/javascript" src="js/keyboard/target_handlers.js"></script>
-  <script defer type="text/javascript" src="js/keyboard/target_handlers_manager.js"></script>
   <script defer type="text/javascript" src="js/keyboard/active_targets_manager.js"></script>
   <script defer type="text/javascript" src="js/keyboard/layout_loader.js"></script>
   <script defer type="text/javascript" src="js/keyboard/layout_manager.js"></script>
@@ -18,10 +16,6 @@
   <script defer type="text/javascript" src="js/keyboard/input_method_manager.js"></script>
   <script defer type="text/javascript" src="js/keyboard/settings.js"></script>
   <script defer type="text/javascript" src="js/keyboard/feedback_manager.js"></script>
-  <script defer type="text/javascript" src="js/keyboard/upper_case_state_manager.js"></script>
-  <script defer type="text/javascript" src="js/keyboard/candidate_panel_manager.js"></script>
-  <script defer type="text/javascript" src="js/keyboard/keyboard_app.js"></script>
-  <script defer type="text/javascript" src="js/keyboard/bootstrap.js"></script>
   <script defer type="text/javascript" src="js/keyboard.js"></script>

   <!-- Shared code -->
@@ -36,9 +30,7 @@

   <link rel="stylesheet" type="text/css" href="style/keyboard.css" />
 </head>
-
-<!-- The keyboard itself should be "ltr", to override the attribute set at documentElement by l10n.js -->
-<body dir="ltr">
+<body>
   <div id="keyboard" data-hidden="true">
     <span id="keyboard-accent-char-menu-out">
       <span id="keyboard-accent-char-menu"></span>
diff --git a/apps/keyboard/js/imes/jspinyin/jspinyin.js b/apps/keyboard/js/imes/jspinyin/jspinyin.js
index f1a3826..ff7a371 100644
--- a/apps/keyboard/js/imes/jspinyin/jspinyin.js
+++ b/apps/keyboard/js/imes/jspinyin/jspinyin.js
@@ -702,7 +702,12 @@ IMEngine.prototype = {
     var inputType = state.type;
     debug('Activate. Input type: ' + inputType);

-    this._keyboard = 'zh-Hans-Pinyin';
+    var keyboard = 'zh-Hans-Pinyin';
+    if (inputType == '' || inputType == 'text' || inputType == 'textarea') {
+      keyboard = this._keyboard;
+    }
+
+    this._glue.alterKeyboard(keyboard);

     if (!emEngineWrapper.isReady()) {
       var self = this;
diff --git a/apps/keyboard/js/imes/latin/latin.js b/apps/keyboard/js/imes/latin/latin.js
index 9e223b9..d4f3579 100644
--- a/apps/keyboard/js/imes/latin/latin.js
+++ b/apps/keyboard/js/imes/latin/latin.js
@@ -130,11 +130,11 @@
    */
   var inputSequencePromise = Promise.resolve();

+
   // Flag to stop updating suggestions for selectionchange when we're going
   // to do some actions that will cause selectionchange, such as sendKey()
   // or replaceSurroundingText().
   var pendingSelectionChange = 0;
-  var inputContext = null;

   // keyboard.js calls this to pass us the interface object we need
   // to communicate with it
@@ -199,8 +199,7 @@
     correcting = (options.correct && inputMode !== 'verbatim');

     if (state.inputContext) {
-      inputContext = state.inputContext;
-      inputContext.addEventListener('selectionchange', this);
+      state.inputContext.addEventListener('selectionchange', this);
     }

     // Reset our state
@@ -231,10 +230,6 @@
   }

   function deactivate() {
-    if (inputContext) {
-      inputContext.removeEventListener('selectionchange', this);
-    }
-
     if (!worker || idleTimer)
       return;
     idleTimer = setTimeout(terminateWorker, workerTimeout);
@@ -427,6 +422,7 @@

       lastSpaceTimestamp = (keyCode === SPACE) ? Date.now() : 0;
       pendingSelectionChange--;
+
     }, function() {
       // the previous sendKey or replaceSurroundingText has been rejected,
       // No need to update the state.
@@ -705,8 +701,6 @@

     // Replace the current word with the selected suggestion plus space
     var newWord = data += ' ';
-
-    pendingSelectionChange++;
     return replaceBeforeCursor(oldWord, newWord).then(function() {
       // Remember the change we just made so we can revert it if the
       // next key is a backspace. Note that it is not an autocorrection
@@ -725,7 +719,6 @@

       // And update the keyboard capitalization state, if necessary
       updateCapitalization();
-      pendingSelectionChange--;
     });
   }

@@ -889,12 +882,8 @@
   function updateCapitalization() {
     // If either the input mode or the input type is one that doesn't
     // want capitalization, then don't alter the state of the keyboard.
-    // We however want to reset the shift key state triggered by the user,
-    // regardless of the layout page the user is currently on.
     if (!capitalizing) {
-      keyboard.setUpperCase({
-        isUpperCase: false
-      });
+      keyboard.resetUpperCase();
       return;
     }

@@ -914,30 +903,20 @@
     // 5) Otherwise: lowercase
     //
     if (cursor === 0) {
-      keyboard.setUpperCase({
-        isUpperCase: true
-      });
+      keyboard.setUpperCase(true);
     }
     else if (cursor >= 2 &&
              isUpperCase(inputText.substring(cursor - 2, cursor))) {
-      keyboard.setUpperCase({
-        isUpperCase: true
-      });
+      keyboard.setUpperCase(true);
     }
     else if (!isWhiteSpace(inputText.substring(cursor - 1, cursor))) {
-      keyboard.setUpperCase({
-        isUpperCase: false
-      });
+      keyboard.setUpperCase(false);
     }
     else if (atSentenceStart()) {
-      keyboard.setUpperCase({
-        isUpperCase: true
-      });
+      keyboard.setUpperCase(true);
     }
     else {
-      keyboard.setUpperCase({
-        isUpperCase: false
-      });
+      keyboard.setUpperCase(false);
     }
   }

@@ -1020,15 +999,15 @@
     switch (type) {
       case 'selectionchange':
       // We would get selectionchange event when the user type each char,
-      // or accept a word suggestion, so don't update suggestions in these
+      // or accept a word suggestion,so don't update suggestions in these
       // cases.
       if (cursor === evt.target.selectionStart ||
           pendingSelectionChange > 0) {
         return;
       }

-      //XXX: Don't update inputText here, since textBeforeCursor would only
-      // contain 100 chars at most.
+      var newText = evt.target.textBeforeCursor + evt.target.textAfterCursor;
+      inputText = newText;
       cursor = evt.target.selectionStart;
       if (evt.target.selectionEnd > evt.target.selectionStart) {
         selection = evt.target.selectionEnd;
diff --git a/apps/keyboard/js/keyboard.js b/apps/keyboard/js/keyboard.js
index 58c66fa..8178c07 100644
--- a/apps/keyboard/js/keyboard.js
+++ b/apps/keyboard/js/keyboard.js
@@ -1,20 +1,216 @@
-'use strict';
+/* -*- Mode: js; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /
+/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */
+
+/**
+ * @fileoverview Keyboard Overview.
+ *
+ * **keyboard.js**:
+ *
+ * This is the main module of the Gaia keyboard app. It does these things:
+ *
+ * - Hides and shows the keyboard in response to focuschange events from
+ *   navigator.mozInputMethod.inputcontext
+ *
+ * - Loads the input method (from imes/) module required by a keyboard
+ *
+ * - Handles settings changes for the user's language, keyboard layouts, and
+ *   preferences for word suggestions, and updates the keyboard accordingly.
+ *
+ * - Handles resize events (caused by orientation changes) and updates
+ *   the keyboard accordingly.
+ *
+ * - Handles (using code that was formerly in a separate controller.js module)
+ *   mouse events over the keyboard and passes them to the input method.
+ *
+ * - When the input method sends value back to the keyboard, it turns
+ *   them into synthetic key events using the inputmethod API.
+ *
+ * This module includes code that was formerly in the controller.js and
+ * feedback.js modules. Other modules handle other parts of the keyboard:
+ *
+ *  * **layout.js**: defines data structures that represent keyboard layouts
+ *  * **render.js**: creates the on-screen keyboard with HTML and CSS
+ *
+ */

-/* global app, IMERender, Promise */
+'use strict';

-// |app| is considered created and started at this point.
-// It was intentionally exposed from bootstrap.js to allow lagency code access
-// here. Eventually this file should be factor out and removed.
+// A timer for time measurement
+// XXX: render.js is using this variable from other script.
+var perfTimer = new PerformanceTimer();
+perfTimer.start();
+perfTimer.printTime('keyboard.js');

+var isWaitingForSecondTap = false;
+var isContinousSpacePressed = false;
+var isUpperCase = false;
+var isUpperCaseLocked = false;
 var isKeyboardRendered = false;
+var currentCandidates = [];
+var candidatePanelScrollTimer = null;
+
+// Backspace repeat delay and repeat rate
+const REPEAT_RATE = 75;
+const REPEAT_TIMEOUT = 700;
+
+// How long to wait for more focuschange events before processing
+const FOCUS_CHANGE_DELAY = 100;
+
+// Taps the shift key twice within CAPS_LOCK_TIMEOUT
+// to lock the keyboard at upper case state.
+const CAPS_LOCK_TIMEOUT = 450;

 // Time we wait after blur to hide the keyboard
 // in case we get a focus event right after
 const HIDE_KEYBOARD_TIMEOUT = 500;

+// timeout and interval for delete, they could be cancelled on mouse over
+var deleteTimeout = 0;
+var deleteInterval = 0;
 var hideKeyboardTimeout = 0;

-app.upperCaseStateManager.onstatechange = handleUpperCaseStateChange;
+// XXX: For now let's pass a fake app object,
+// in the future this should be wired to a KeyboardApp instance.
+var fakeAppObject = {
+  inputMethodManager: null,
+  layoutManager: null,
+  settingsPromiseManager: null,
+  l10nLoader: null,
+  activeTargetsManager: null,
+
+  inputContext: null,
+
+  getMenuContainer: function() {
+    // This is equal to IMERender.menu.
+    return document.getElementById('keyboard-accent-char-menu');
+  },
+
+  getContainer: function() {
+    // This is equal to IMERender.ime.
+    return document.getElementById('keyboard');
+  },
+
+  getBasicInputType: function() {
+    if (!this.inputContext) {
+      return 'text';
+    }
+
+    var type = this.inputContext.inputType;
+    switch (type) {
+      // basic types
+      case 'url':
+      case 'tel':
+      case 'email':
+      case 'text':
+        return type;
+
+        break;
+
+      // default fallback and textual types
+      case 'password':
+      case 'search':
+      default:
+        return 'text';
+
+        break;
+
+      case 'number':
+      case 'range': // XXX: should be different from number
+        return 'number';
+
+        break;
+    }
+  },
+
+  supportsSwitching: function() {
+    return navigator.mozInputMethod.mgmt.supportsSwitching();
+  },
+
+  sendCandidates: function kc_glue_sendCandidates(candidates) {
+    perfTimer.printTime('glue.sendCandidates');
+    currentCandidates = candidates;
+    IMERender.showCandidates(candidates);
+  },
+  setComposition: function kc_glue_setComposition(symbols, cursor) {
+    perfTimer.printTime('glue.setComposition');
+    cursor = cursor || symbols.length;
+    this.inputContext.setComposition(symbols, cursor);
+  },
+  endComposition: function kc_glue_endComposition(text) {
+    perfTimer.printTime('glue.endComposition');
+    text = text || '';
+    this.inputContext.endComposition(text);
+  },
+  sendKey: sendKey,
+  setForcedModifiedLayout: function(layoutName) {
+    layoutManager.updateForcedModifiedLayout(layoutName);
+    renderKeyboard();
+  },
+  setLayoutPage: function setLayoutPage(page) {
+    if (page === this.layoutManager.currentLayoutPage) {
+      return;
+    }
+
+    this.layoutManager.updateLayoutPage(page);
+    renderKeyboard();
+
+    if (inputMethodManager.currentIMEngine.setLayoutPage) {
+      inputMethodManager.currentIMEngine.
+        setLayoutPage(layoutManager.currentLayoutPage);
+    }
+  },
+  setUpperCase: setUpperCase,
+  resetUpperCase: resetUpperCase,
+  isCapitalized: function isCapitalized() {
+    return (isUpperCase || isUpperCaseLocked);
+  },
+  isCapitalizeLocked: function isCapitalizeLocked() {
+    return isUpperCaseLocked;
+  },
+  replaceSurroundingText: replaceSurroundingText,
+  getNumberOfCandidatesPerRow:
+    IMERender.getNumberOfCandidatesPerRow.bind(IMERender)
+};
+
+// InputMethodManager is responsible of loading/activating input methods.
+var inputMethodManager =
+  fakeAppObject.inputMethodManager = new InputMethodManager(fakeAppObject);
+inputMethodManager.start();
+
+// LayoutManager loads and holds layout layouts for us.
+// It also help us ensure there is only one current layout at the time.
+var layoutManager =
+  fakeAppObject.layoutManager = new LayoutManager(fakeAppObject);
+layoutManager.start();
+var layoutLoader = layoutManager.loader;
+
+// SettingsPromiseManager wraps Settings DB methods into promises.
+var settingsPromiseManager =
+  fakeAppObject.settingsPromiseManager = new SettingsPromiseManager();
+
+// L10nLoader loads l10n.js. We call it's one and only load() method
+// only after we have run everything in the critical cold launch path.
+var l10nLoader = fakeAppObject.l10nLoader = new L10nLoader();
+
+// ActiveTargetsManager run these callbacks when keys are interacted.
+var activeTargetsManager =
+  fakeAppObject.activeTargetsManager = new ActiveTargetsManager(fakeAppObject);
+activeTargetsManager.ontargetactivated = handleTargetActivated;
+activeTargetsManager.ontargetlongpressed = handleTargetLongPressed;
+activeTargetsManager.ontargetmovedout = handleTargetMovedOut;
+activeTargetsManager.ontargetmovedin = handleTargetMovedIn;
+activeTargetsManager.ontargetcommitted = handleTargetCommitted;
+activeTargetsManager.ontargetcancelled = handleTargetCancelled;
+activeTargetsManager.start();
+
+var feedbackManager = new FeedbackManager(fakeAppObject);
+feedbackManager.start();
+
+var visualHighlightManager = new VisualHighlightManager(fakeAppObject);
+visualHighlightManager.start();
+
+// User settings (in Settings database) are tracked within these modules
+var imEngineSettings;

 // We keep this promise in the global scope for the time being,
 // so they can be called as soon as we need it to.
@@ -23,26 +219,36 @@ var inputContextGetTextPromise;
 // A MutationObserver we use to spy on the renderer module
 var dimensionsObserver;

+// For tracking "scrolling the full candidate panel".
+var touchStartCoordinate;
+
 initKeyboard();

 // We cannot listen to resize event right at start because of
 // https://bugzil.la/1007595 ;
 // only attach the event listener after 600ms.
 setTimeout(function attachResizeListener() {
-  app.perfTimer.printTime('attachResizeListener');
+  perfTimer.printTime('attachResizeListener');
   // Handle resize events
   window.addEventListener('resize', onResize);
 }, 2000);

 function initKeyboard() {
-  app.perfTimer.startTimer('initKeyboard');
-  app.perfTimer.printTime('initKeyboard');
+  perfTimer.startTimer('initKeyboard');
+  perfTimer.printTime('initKeyboard');
+
+  imEngineSettings = new IMEngineSettings();
+  imEngineSettings.promiseManager = settingsPromiseManager;
+  var imEngineSettingsInitPromise = imEngineSettings.initSettings();
+  imEngineSettingsInitPromise.catch(function rejected() {
+    console.error('Fatal Error! Failed to get initial imEngine settings.');
+  });

   // Initialize the rendering module
   IMERender.init();

   dimensionsObserver = new MutationObserver(function() {
-    app.perfTimer.printTime('dimensionsObserver:callback');
+    perfTimer.printTime('dimensionsObserver:callback');
     updateTargetWindowHeight();
   });

@@ -53,14 +259,14 @@ function initKeyboard() {
   });

   window.addEventListener('hashchange', function() {
-    app.perfTimer.printTime('hashchange');
+    perfTimer.printTime('hashchange');
     var layoutName = window.location.hash.substring(1);

-    if (app.inputContext && !inputContextGetTextPromise) {
-      inputContextGetTextPromise = app.inputContext.getText();
+    if (fakeAppObject.inputContext && !inputContextGetTextPromise) {
+      inputContextGetTextPromise = fakeAppObject.inputContext.getText();
     }

-    app.layoutManager.loader.getLayoutAsync(layoutName);
+    layoutLoader.getLayoutAsync(layoutName);
     updateCurrentLayout(layoutName);
   }, false);

@@ -68,8 +274,8 @@ function initKeyboard() {
   // because we are not sure which will happen first and we will call
   // showKeyboard() when mozHidden is false and we got inputContext
   window.addEventListener('mozvisibilitychange', function visibilityHandler() {
-    app.perfTimer.printTime('mozvisibilitychange');
-    if (document.mozHidden && !app.inputContext) {
+    perfTimer.printTime('mozvisibilitychange');
+    if (document.mozHidden && !fakeAppObject.inputContext) {
       hideKeyboard();

       return;
@@ -80,12 +286,12 @@ function initKeyboard() {
   });

   window.navigator.mozInputMethod.oninputcontextchange = function() {
-    app.perfTimer.printTime('inputcontextchange');
-    app.inputContext = navigator.mozInputMethod.inputcontext;
-    if (app.inputContext && !inputContextGetTextPromise) {
-      inputContextGetTextPromise = app.inputContext.getText();
+    perfTimer.printTime('inputcontextchange');
+    fakeAppObject.inputContext = navigator.mozInputMethod.inputcontext;
+    if (fakeAppObject.inputContext && !inputContextGetTextPromise) {
+      inputContextGetTextPromise = fakeAppObject.inputContext.getText();
     }
-    if (document.mozHidden && !app.inputContext) {
+    if (document.mozHidden && !fakeAppObject.inputContext) {
       hideKeyboard();

       return;
@@ -100,56 +306,54 @@ function initKeyboard() {
   var layoutName = '';
   if (window.location.hash !== '') {
     layoutName = window.location.hash.substring(1);
-    app.layoutManager.loader.getLayoutAsync(layoutName);
+    layoutLoader.getLayoutAsync(layoutName);
   } else {
     console.error('This page should never be loaded without an URL hash.');

     return;
   }

-  // fill inputContextGetTextPromise and app.inputContext
-  app.inputContext = navigator.mozInputMethod.inputcontext;
-  if (app.inputContext) {
-    inputContextGetTextPromise = app.inputContext.getText();
+  // fill inputContextGetTextPromise and fakeAppObject.inputContext
+  fakeAppObject.inputContext = navigator.mozInputMethod.inputcontext;
+  if (fakeAppObject.inputContext) {
+    inputContextGetTextPromise = fakeAppObject.inputContext.getText();
   }

   // Finally, if we are only loaded by keyboard manager when the user
   // have already focused, the keyboard should show right away.
   updateCurrentLayout(layoutName);
-
-  app.perfTimer.printTime('BLOCKING initKeyboard', 'initKeyboard');
 }

 function deactivateInputMethod() {
   // Switching to default IMEngine makes the current IMEngine deactivate.
   // The currentIMEngine will be set and activates again in
   // showKeyboard() (specifically, switchIMEngine()).
-  app.inputMethodManager.switchCurrentIMEngine('default');
+  inputMethodManager.switchCurrentIMEngine('default');
 }

 function updateCurrentLayout(name) {
-  app.perfTimer.printTime('updateCurrentLayout');
+  perfTimer.printTime('updateCurrentLayout');

-  app.layoutManager.switchCurrentLayout(name).then(function() {
-    app.perfTimer.printTime('updateCurrentLayout:promise resolved');
+  layoutManager.switchCurrentLayout(name).then(function() {
+    perfTimer.printTime('updateCurrentLayout:promise resolved');

     // Ask the loader to start loading IMEngine
-    var imEngineloader = app.inputMethodManager.loader;
-    var imEngineName = app.layoutManager.currentLayout.imEngine;
+    var imEngineloader = inputMethodManager.loader;
+    var imEngineName = keyboard.imEngine;
     if (imEngineName && !imEngineloader.getInputMethod(imEngineName)) {
       imEngineloader.getInputMethodAsync(imEngineName);
     }

     // Now the that we have the layout ready,
     // we should either show or hide the keyboard.
-    if (!document.mozHidden && app.inputContext) {
+    if (!document.mozHidden && fakeAppObject.inputContext) {
       showKeyboard();
     } else {
       hideKeyboard();

       // Load l10n library here, there is nothing more to do left
       // in the critical path.
-      app.l10nLoader.load();
+      l10nLoader.load();
     }
   }, function(error) {
     console.warn('Failed to switch layout for ' + name + '.' +
@@ -166,105 +370,501 @@ function updateCurrentLayout(name) {
 // changes in order to actually render the layout.
 //
 function renderKeyboard() {
-  app.perfTimer.printTime('renderKeyboard');
-  app.perfTimer.startTimer('renderKeyboard');
+  perfTimer.printTime('renderKeyboard');
+  perfTimer.startTimer('renderKeyboard');

   IMERender.ime.classList.remove('full-candidate-panel');

   // Rule of thumb: always render uppercase, unless secondLayout has been
   // specified (for e.g. arabic, then depending on shift key)
-  var needsUpperCase =
-    app.layoutManager.currentModifiedLayout.secondLayout ?
-      app.upperCaseStateManager.isUpperCase : true;
+  var needsUpperCase = layoutManager.currentModifiedLayout.secondLayout ?
+    (isUpperCaseLocked || isUpperCase) : true;

   // And draw the layout
-  IMERender.draw(app.layoutManager.currentModifiedLayout, {
+  IMERender.draw(layoutManager.currentModifiedLayout, {
     uppercase: needsUpperCase,
-    inputType: app.getBasicInputType(),
+    inputType: fakeAppObject.getBasicInputType(),
     showCandidatePanel: needsCandidatePanel()
   }, function() {
-    app.perfTimer.printTime('IMERender.draw:callback');
-    app.perfTimer.startTimer('IMERender.draw:callback');
+    perfTimer.printTime('IMERender.draw:callback');
+    perfTimer.startTimer('IMERender.draw:callback');
     // So there are a couple of things that we want don't want to block
     // on here, so we can do it if resizeUI is fully finished
-    IMERender.setUpperCaseLock(app.upperCaseStateManager);
+    IMERender.setUpperCaseLock(isUpperCaseLocked ? 'locked' : isUpperCase);

     // Tell the input method about the new keyboard layout
     updateLayoutParams();

-    app.candidatePanelManager.showCandidates();
-    app.perfTimer.printTime(
+    IMERender.showCandidates(currentCandidates);
+    perfTimer.printTime(
       'BLOCKING IMERender.draw:callback', 'IMERender.draw:callback');
   });

   // Tell the renderer what input method we're using. This will set a CSS
   // classname that can be used to style the keyboards differently
   IMERender.setInputMethodName(
-    app.layoutManager.currentModifiedLayout.imEngine || 'default');
+    layoutManager.currentModifiedLayout.imEngine || 'default');

   // If needed, empty the candidate panel
-  if (app.inputMethodManager.currentIMEngine.empty) {
-    app.inputMethodManager.currentIMEngine.empty();
+  if (inputMethodManager.currentIMEngine.empty) {
+    inputMethodManager.currentIMEngine.empty();
   }

   isKeyboardRendered = true;

-  app.perfTimer.printTime('BLOCKING renderKeyboard', 'renderKeyboard');
+  perfTimer.printTime('BLOCKING renderKeyboard', 'renderKeyboard');
 }

-function handleUpperCaseStateChange() {
-  if (!isKeyboardRendered) {
+function setUpperCase(upperCase, upperCaseLocked) {
+  upperCaseLocked = (typeof upperCaseLocked == 'undefined') ?
+                     isUpperCaseLocked : upperCaseLocked;
+
+  // Do nothing if the states are not changed
+  if (isUpperCase == upperCase &&
+      isUpperCaseLocked == upperCaseLocked)
+    return;
+
+  isUpperCaseLocked = upperCaseLocked;
+  isUpperCase = upperCase;
+
+  if (!isKeyboardRendered)
     return;
-  }

   // When we have secondLayout, we need to force re-render on uppercase switch
-  if (app.layoutManager.currentModifiedLayout.secondLayout) {
+  if (layoutManager.currentModifiedLayout.secondLayout) {
     return renderKeyboard();
   }

   // Otherwise we can just update only the keys we need...
   // Try to block the event loop as little as possible
-  window.requestAnimationFrame(function() {
-    app.perfTimer.startTimer('setUpperCase:requestAnimationFrame:callback');
+  requestAnimationFrame(function() {
+    perfTimer.startTimer('setUpperCase:requestAnimationFrame:callback');
     // And make sure the caps lock key is highlighted correctly
-    IMERender.setUpperCaseLock(app.upperCaseStateManager);
+    IMERender.setUpperCaseLock(isUpperCaseLocked ? 'locked' : isUpperCase);

     //restore the previous candidates
-    app.candidatePanelManager.showCandidates();
+    IMERender.showCandidates(currentCandidates);

-    app.perfTimer.printTime(
+    perfTimer.printTime(
       'BLOCKING setUpperCase:requestAnimationFrame:callback',
       'setUpperCase:requestAnimationFrame:callback');
   });
 }

+function resetUpperCase() {
+  if (isUpperCase &&
+      !isUpperCaseLocked &&
+      layoutManager.currentLayoutPage === LAYOUT_PAGE_DEFAULT) {
+    setUpperCase(false);
+  }
+}
+
 // Inform about a change in the displayed application via mutation observer
-// http://hacks.mozilla.org/2012/05/dom-mutationobserver
+// http://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/
 function updateTargetWindowHeight(hide) {
-  app.perfTimer.printTime('updateTargetWindowHeight');
+  perfTimer.printTime('updateTargetWindowHeight');
   // height of the current active IME + 1px for the borderTop
   var imeHeight = IMERender.getHeight() + 1;
   var imeWidth = IMERender.getWidth();
   window.resizeTo(imeWidth, imeHeight);
 }

+// Sends a delete code to remove last character
+// The argument specifies whether this is an auto repeat or not.
+// Repeat does not trigger and sound/vibration feedback.
+function sendDelete(isRepeat) {
+  // Pass the isRepeat argument to the input method. It may not want
+  // to compute suggestions, for example, if this is just one in a series
+  // of repeating events.
+  inputMethodManager.currentIMEngine.click(KeyboardEvent.DOM_VK_BACK_SPACE,
+                                           null,
+                                           isRepeat);
+}
+
+function getKeyCodeFromTarget(target) {
+  return isUpperCase || isUpperCaseLocked ?
+    parseInt(target.dataset.keycodeUpper, 10) :
+    parseInt(target.dataset.keycode, 10);
+}
+
+function handleTargetActivated(target) {
+  // Ignore non-key targets
+  if (!('keycode' in target.dataset) &&
+      !('selection' in target.dataset) &&
+      !('compositeKey' in target.dataset)) {
+    return;
+  }
+
+  var keyCode = getKeyCodeFromTarget(target);
+
+  // Feedback
+  feedbackManager.triggerFeedback(target);
+  visualHighlightManager.show(target);
+
+  // Special keys (such as delete) response when pressing (not releasing)
+  // Furthermore, delete key has a repetition behavior
+  if (keyCode === KeyEvent.DOM_VK_BACK_SPACE) {
+    // First repetition, after a delay (with feedback)
+    deleteTimeout = window.setTimeout(function() {
+      sendDelete(true);
+
+      // Second, after shorter delay (with feedback too)
+      deleteInterval = setInterval(function() {
+        sendDelete(true);
+      }, REPEAT_RATE);
+
+    }, REPEAT_TIMEOUT);
+  }
+}
+
+function handleTargetLongPressed(target) {
+  // Does the key have an long press value?
+  if (target.dataset.longPressValue) {
+    // Attach a dataset property that will be used to ignore
+    // keypress in endPress
+    target.dataset.ignoreEndPress = true;
+
+    var keyCode = parseInt(target.dataset.longPressKeyCode, 10);
+    sendKey(keyCode);
+
+    return;
+  }
+
+  var keyCode = getKeyCodeFromTarget(target);
+
+  // Handle languages alternatives
+  if (keyCode === SWITCH_KEYBOARD) {
+    showIMEList();
+    return;
+  }
+
+  // Hide the keyboard
+  if (keyCode === KeyEvent.DOM_VK_SPACE) {
+    dismissKeyboard();
+    return;
+  }
+}
+
+function handleTargetMovedOut(target) {
+  // Ignore non-key targets
+  if (!('keycode' in target.dataset) &&
+      !('selection' in target.dataset) &&
+      !('compositeKey' in target.dataset)) {
+    return;
+  }
+
+  visualHighlightManager.hide(target);
+
+  clearTimeout(deleteTimeout);
+  clearInterval(deleteInterval);
+}
+
+function handleTargetMovedIn(target) {
+  // Ignore non-key targets
+  if (!('keycode' in target.dataset) &&
+      !('selection' in target.dataset) &&
+      !('compositeKey' in target.dataset)) {
+    return;
+  }
+
+  var keyCode = getKeyCodeFromTarget(target);
+
+  // Update highlight: add to the new (Ignore if moving over delete key)
+  if (keyCode != KeyEvent.DOM_VK_BACK_SPACE) {
+    visualHighlightManager.show(target);
+  }
+}
+
+function handleTargetCommitted(target) {
+  clearTimeout(deleteTimeout);
+  clearInterval(deleteInterval);
+
+  if (target.classList.contains('dismiss-suggestions-button')) {
+    if (inputMethodManager.currentIMEngine.dismissSuggestions) {
+      inputMethodManager.currentIMEngine.dismissSuggestions();
+    }
+    return;
+  }
+
+  // IME candidate selected
+  var dataset = target.dataset;
+  if (dataset.selection) {
+    IMERender.toggleCandidatePanel(false, true);
+
+    if (inputMethodManager.currentIMEngine.select) {
+      // We use dataset.data instead of target.textContent because the
+      // text actually displayed to the user might have an ellipsis in it
+      // to make it fit.
+      inputMethodManager.currentIMEngine
+        .select(target.textContent, dataset.data);
+    }
+
+    visualHighlightManager.hide(target);
+    return;
+  }
+
+  visualHighlightManager.hide(target);
+
+  // The alternate keys of telLayout and numberLayout do not
+  // trigger keypress on key release.
+  if (target.dataset.ignoreEndPress) {
+    delete target.dataset.ignoreEndPress;
+    return;
+  }
+
+  var keyCode = getKeyCodeFromTarget(target);
+
+  // Delete is a special key, it reacts when pressed not released
+  if (keyCode == KeyEvent.DOM_VK_BACK_SPACE) {
+    // The backspace key pressing is regarded as non-repetitive behavior.
+    sendDelete(false);
+    return;
+  }
+
+  // Reset the flag when a non-space key is pressed,
+  // used in space key double tap handling
+  if (keyCode != KeyEvent.DOM_VK_SPACE)
+    isContinousSpacePressed = false;
+
+  var keyStyle = getComputedStyle(target);
+  if (keyStyle.display == 'none' || keyStyle.visibility == 'hidden')
+    return;
+
+  // Handle normal key
+  switch (keyCode) {
+
+  case BASIC_LAYOUT:
+    // Return to default page
+    fakeAppObject.setLayoutPage(layoutManager.LAYOUT_PAGE_DEFAULT);
+    break;
+
+  case ALTERNATE_LAYOUT:
+    // Switch to numbers+symbols page
+    fakeAppObject.setLayoutPage(layoutManager.LAYOUT_PAGE_SYMBOLS_I);
+    break;
+
+  case KeyEvent.DOM_VK_ALT:
+    // alternate between pages 1 and 2 of SYMBOLS
+    if (layoutManager.currentLayoutPage ===
+        layoutManager.LAYOUT_PAGE_SYMBOLS_I) {
+      fakeAppObject.setLayoutPage(layoutManager.LAYOUT_PAGE_SYMBOLS_II);
+    } else {
+      fakeAppObject.setLayoutPage(layoutManager.LAYOUT_PAGE_SYMBOLS_I);
+    }
+    break;
+
+    // Switch language (keyboard)
+  case SWITCH_KEYBOARD:
+    switchToNextIME();
+    break;
+
+    // Expand / shrink the candidate panel
+  case TOGGLE_CANDIDATE_PANEL:
+    var candidatePanel = IMERender.candidatePanel;
+
+    if (IMERender.ime.classList.contains('candidate-panel')) {
+      var doToggleCandidatePanel = function doToggleCandidatePanel() {
+        if (candidatePanel.dataset.truncated) {
+          if (candidatePanelScrollTimer) {
+            clearTimeout(candidatePanelScrollTimer);
+            candidatePanelScrollTimer = null;
+          }
+          candidatePanel.addEventListener('scroll', candidatePanelOnScroll);
+        }
+
+        IMERender.toggleCandidatePanel(true, true);
+      };
+
+      if (candidatePanel.dataset.rowCount == 1) {
+        var firstPageRows = 11;
+        var numberOfCandidatesPerRow = IMERender.getNumberOfCandidatesPerRow();
+        var candidateIndicator =
+          parseInt(candidatePanel.dataset.candidateIndicator);
+
+        if (inputMethodManager.currentIMEngine.getMoreCandidates) {
+          inputMethodManager.currentIMEngine.getMoreCandidates(
+            candidateIndicator,
+            firstPageRows * numberOfCandidatesPerRow + 1,
+            function getMoreCandidatesCallbackOnToggle(list) {
+              if (candidatePanel.dataset.rowCount == 1) {
+                IMERender.showMoreCandidates(firstPageRows, list);
+                doToggleCandidatePanel();
+              }
+            }
+          );
+        } else {
+          var list = currentCandidates.slice(candidateIndicator,
+            candidateIndicator + firstPageRows * numberOfCandidatesPerRow + 1);
+
+          IMERender.showMoreCandidates(firstPageRows, list);
+          doToggleCandidatePanel();
+        }
+      } else {
+        doToggleCandidatePanel();
+      }
+    } else {
+      if (inputMethodManager.currentIMEngine.getMoreCandidates) {
+        candidatePanel.removeEventListener('scroll', candidatePanelOnScroll);
+        if (candidatePanelScrollTimer) {
+          clearTimeout(candidatePanelScrollTimer);
+          candidatePanelScrollTimer = null;
+        }
+      }
+
+      IMERender.toggleCandidatePanel(false, true);
+    }
+    break;
+
+    // Shift or caps lock
+  case KeyEvent.DOM_VK_CAPS_LOCK:
+
+    // Already waiting for caps lock
+    if (isWaitingForSecondTap) {
+      isWaitingForSecondTap = false;
+
+      setUpperCase(true, true);
+
+      // Normal behavior: set timeout for second tap and toggle caps
+    } else {
+
+      isWaitingForSecondTap = true;
+      window.setTimeout(
+        function() {
+          isWaitingForSecondTap = false;
+        },
+        CAPS_LOCK_TIMEOUT
+      );
+
+      // Toggle caps
+      setUpperCase(!isUpperCase, false);
+    }
+    break;
+
+    // Normal key
+  default:
+    if (target.dataset.compositeKey) {
+      // Keys with this attribute set send more than a single character
+      // Like ".com" or "2nd" or (in Catalan) "l·l".
+      var compositeKey = target.dataset.compositeKey;
+      for (var i = 0; i < compositeKey.length; i++) {
+        inputMethodManager.currentIMEngine.click(compositeKey.charCodeAt(i));
+      }
+    }
+    else {
+      inputMethodManager.currentIMEngine.click(
+        parseInt(target.dataset.keycode, 10),
+        parseInt(target.dataset.keycodeUpper, 10));
+    }
+    break;
+  }
+}
+
+function handleTargetCancelled(target) {
+  visualHighlightManager.hide(target);
+
+  clearTimeout(deleteTimeout);
+  clearInterval(deleteInterval);
+}
+
+function candidatePanelOnScroll() {
+  if (candidatePanelScrollTimer) {
+    clearTimeout(candidatePanelScrollTimer);
+    candidatePanelScrollTimer = null;
+  }
+
+  if (this.scrollTop != 0 &&
+      this.scrollHeight - this.clientHeight - this.scrollTop < 5) {
+
+    candidatePanelScrollTimer = setTimeout(function() {
+      var pageRows = 12;
+      var numberOfCandidatesPerRow = IMERender.getNumberOfCandidatesPerRow();
+      var candidatePanel = IMERender.candidatePanel;
+      var candidateIndicator =
+        parseInt(candidatePanel.dataset.candidateIndicator);
+
+      if (inputMethodManager.currentIMEngine.getMoreCandidates) {
+        inputMethodManager.currentIMEngine.getMoreCandidates(
+          candidateIndicator,
+          pageRows * numberOfCandidatesPerRow + 1,
+          IMERender.showMoreCandidates.bind(IMERender, pageRows)
+        );
+      } else {
+        var list = currentCandidates.slice(candidateIndicator,
+          candidateIndicator + pageRows * numberOfCandidatesPerRow + 1);
+
+        IMERender.showMoreCandidates(pageRows, list);
+      }
+    }, 200);
+  }
+}
+
 function getKeyCoordinateY(y) {
   var candidatePanel = IMERender.candidatePanel;

   var yBias = 0;
-  if (candidatePanel) {
+  if (candidatePanel)
     yBias = candidatePanel.clientHeight;
-  }

   return y - yBias;
 }

+function switchToNextIME() {
+  deactivateInputMethod();
+  var mgmt = navigator.mozInputMethod.mgmt;
+  mgmt.next();
+}
+
+function showIMEList() {
+  activeTargetsManager.clearAllTargets();
+  var mgmt = navigator.mozInputMethod.mgmt;
+  mgmt.showAll();
+}
+
 // Turn to default values
 function resetKeyboard() {
-  app.layoutManager.updateLayoutPage(
-    app.layoutManager.LAYOUT_PAGE_DEFAULT);
+  layoutManager.updateLayoutPage(layoutManager.LAYOUT_PAGE_DEFAULT);

-  app.upperCaseStateManager.reset();
+  // Don't call setUpperCase because renderKeyboard() should be invoked
+  // separately after this function
+  isUpperCase = false;
+  isUpperCaseLocked = false;
+}
+
+// This is a wrapper around fakeAppObject.inputContext.sendKey()
+// We use it in the defaultInputMethod and in the interface object
+// we pass to real input methods
+function sendKey(keyCode, isRepeat) {
+  var inputContext = fakeAppObject.inputContext;
+
+  switch (keyCode) {
+  case KeyEvent.DOM_VK_BACK_SPACE:
+    if (inputContext) {
+      return inputContext.sendKey(keyCode, 0, 0, isRepeat);
+    }
+    break;
+  case KeyEvent.DOM_VK_RETURN:
+    if (inputContext) {
+      return inputContext.sendKey(keyCode, 0, 0);
+    }
+    break;
+
+  default:
+    if (inputContext) {
+      return inputContext.sendKey(0, keyCode, 0);
+    }
+    break;
+  }
+}
+
+function replaceSurroundingText(text, offset, length) {
+  var inputContext = fakeAppObject.inputContext;
+
+  if (inputContext) {
+    return inputContext.replaceSurroundingText(text, offset, length);
+  } else {
+    console.warn('no inputContext for replaceSurroudingText');
+    return new Promise(function(res, rej) { rej(); });
+  }
 }

 // Set up the keyboard and its input method.
@@ -272,21 +872,21 @@ function resetKeyboard() {
 // The state argument is the data passed with that event, and includes
 // the input field type, its inputmode, its content, and the cursor position.
 function showKeyboard() {
-  app.perfTimer.printTime('showKeyboard');
+  perfTimer.printTime('showKeyboard');
   clearTimeout(hideKeyboardTimeout);

-  app.inputContext = navigator.mozInputMethod.inputcontext;
+  fakeAppObject.inputContext = navigator.mozInputMethod.inputcontext;

   resetKeyboard();

-  if (!app.inputContext) {
+  if (!fakeAppObject.inputContext) {
     return;
   }

   // everything.me uses this setting to improve searches,
   // but they really shouldn't.
-  app.settingsPromiseManager.set({
-    'keyboard.current': app.layoutManager.currentLayoutName
+  settingsPromiseManager.set({
+    'keyboard.current': layoutManager.currentLayoutName
   });

   // If we are already visible,
@@ -305,9 +905,8 @@ function showKeyboard() {

 // Hide keyboard
 function hideKeyboard() {
-  if (!isKeyboardRendered) {
+  if (!isKeyboardRendered)
     return;
-  }

   deactivateInputMethod();

@@ -322,21 +921,21 @@ function hideKeyboard() {

   // everything.me uses this setting to improve searches,
   // but they really shouldn't.
-  app.settingsPromiseManager.set({
+  settingsPromiseManager.set({
     'keyboard.current': undefined
   });

-  app.targetHandlersManager.activeTargetsManager.clearAllTargets();
+  activeTargetsManager.clearAllTargets();
 }

 // Resize event handler
 function onResize() {
-  app.perfTimer.printTime('onResize');
+  perfTimer.printTime('onResize');
   if (document.mozHidden) {
     return;
   }

-  IMERender.resizeUI(app.layoutManager.currentModifiedLayout);
+  IMERender.resizeUI(layoutManager.currentModifiedLayout);
   updateTargetWindowHeight(); // this case is not captured by the mutation
   // observer so we handle it apart

@@ -346,42 +945,50 @@ function onResize() {
 }

 function switchIMEngine(mustRender) {
-  app.perfTimer.printTime('switchIMEngine');
+  perfTimer.printTime('switchIMEngine');

-  var layout = app.layoutManager.currentModifiedLayout;
+  var layout = layoutManager.currentModifiedLayout;
   var imEngineName = layout.imEngine || 'default';

   // dataPromise resolves to an array of data to be sent to imEngine.activate()
-  var dataPromise = inputContextGetTextPromise.then(function(value) {
-    app.perfTimer.printTime('switchIMEngine:dataPromise resolved');
-    var inputContext = app.inputContext;
-
-    // Resolve to this object containing information of inputContext
-    return {
-      type: inputContext.inputType,
-      inputmode: inputContext.inputMode,
-      selectionStart: inputContext.selectionStart,
-      selectionEnd: inputContext.selectionEnd,
-      value: value,
-      inputContext: inputContext
-    };
+  var dataPromise = Promise.all(
+    [inputContextGetTextPromise, imEngineSettings.initSettings()])
+  .then(function(values) {
+    perfTimer.printTime('switchIMEngine:dataPromise resolved');
+    var inputContext = fakeAppObject.inputContext;
+
+    // Resolve to this array
+    return [
+      layout.autoCorrectLanguage,
+      {
+        type: inputContext.inputType,
+        inputmode: inputContext.inputMode,
+        selectionStart: inputContext.selectionStart,
+        selectionEnd: inputContext.selectionEnd,
+        value: values[0],
+        inputContext: inputContext
+      },
+      {
+        suggest: values[1].suggestionsEnabled && !isGreekSMS(),
+        correct: values[1].correctionsEnabled && !isGreekSMS()
+      }
+    ];
   }, function(error) {
     return Promise.reject(error);
   });

   inputContextGetTextPromise = null;

-  var p = app.inputMethodManager
-    .switchCurrentIMEngine(imEngineName, dataPromise);
+  var p = inputMethodManager.switchCurrentIMEngine(imEngineName, dataPromise);
   p.then(function() {
-    app.perfTimer.printTime('switchIMEngine:promise resolved');
+    perfTimer.printTime('switchIMEngine:promise resolved');
     // Render keyboard again to get updated info from imEngine
     if (mustRender || imEngineName !== 'default') {
       renderKeyboard();
     }

     // Load l10n library after IMEngine is loaded (if it's not loaded yet).
-    app.l10nLoader.load();
+    l10nLoader.load();
   }, function() {
     console.warn('Failed to switch imEngine for ' + layout.layoutName + '.' +
       ' It might possible because we were called more than once.');
@@ -395,10 +1002,9 @@ function switchIMEngine(mustRender) {
 // the default, since the input methods we support don't do anything special
 // for symbols
 function updateLayoutParams() {
-  if (app.inputMethodManager.currentIMEngine.setLayoutParams &&
-      app.layoutManager.currentLayoutPage ===
-      app.layoutManager.LAYOUT_PAGE_DEFAULT) {
-    app.inputMethodManager.currentIMEngine.setLayoutParams({
+  if (inputMethodManager.currentIMEngine.setLayoutParams &&
+      layoutManager.currentLayoutPage === LAYOUT_PAGE_DEFAULT) {
+    inputMethodManager.currentIMEngine.setLayoutParams({
       keyboardWidth: IMERender.getWidth(),
       keyboardHeight: getKeyCoordinateY(IMERender.getHeight()),
       keyArray: IMERender.getKeyArray(),
@@ -417,14 +1023,21 @@ function needsCandidatePanel() {
     return false;
   }

-  return !!((app.layoutManager.currentLayout.autoCorrectLanguage ||
-           app.layoutManager.currentLayout.needsCandidatePanel) &&
-          (!app.inputMethodManager.currentIMEngine.displaysCandidates ||
-            app.inputMethodManager.currentIMEngine.displaysCandidates()));
+  return !!((layoutManager.currentLayout.autoCorrectLanguage ||
+           layoutManager.currentLayout.needsCandidatePanel) &&
+          (!inputMethodManager.currentIMEngine.displaysCandidates ||
+           inputMethodManager.currentIMEngine.displaysCandidates()));
 }

 // To determine if we need to show a "all uppercase layout" for Greek SMS
 function isGreekSMS() {
-  return (app.inputContext.inputMode === '-moz-sms' &&
-          app.layoutManager.currentLayoutName === 'el');
+  return (fakeAppObject.inputContext.inputMode === '-moz-sms' &&
+          layoutManager.currentLayoutName === 'el');
+}
+
+// Hide the keyboard via input method API
+function dismissKeyboard() {
+  activeTargetsManager.clearAllTargets();
+
+  navigator.mozInputMethod.mgmt.hide();
 }
diff --git a/apps/keyboard/js/keyboard/active_targets_manager.js b/apps/keyboard/js/keyboard/active_targets_manager.js
index f97d182..e208a1a 100644
--- a/apps/keyboard/js/keyboard/active_targets_manager.js
+++ b/apps/keyboard/js/keyboard/active_targets_manager.js
@@ -22,8 +22,6 @@ var ActiveTargetsManager = function(app) {
   this.alternativesCharMenuManager = null;

   this.longPressTimer = undefined;
-
-  this.doubleTapTimers = null;
 };

 ActiveTargetsManager.prototype.ontargetactivated = null;
@@ -32,19 +30,13 @@ ActiveTargetsManager.prototype.ontargetmovedout = null;
 ActiveTargetsManager.prototype.ontargetmovedin = null;
 ActiveTargetsManager.prototype.ontargetcommitted = null;
 ActiveTargetsManager.prototype.ontargetcancelled = null;
-ActiveTargetsManager.prototype.ontargetdoubletapped = null;

 // Show accent char menu (if there is one) or do other stuff
 // after LONG_PRESS_TIMEOUT
 ActiveTargetsManager.prototype.LONG_PRESS_TIMEOUT = 700;

-// Taps the shift key twice within DOUBLE_TAP_TIMEOUT
-// to lock the keyboard at upper case state.
-ActiveTargetsManager.prototype.DOUBLE_TAP_TIMEOUT = 450;
-
 ActiveTargetsManager.prototype.start = function() {
   this.activeTargets = new Map();
-  this.doubleTapTimers = new WeakMap();

   var userPressManager =
     this.userPressManager = new UserPressManager(this.app);
@@ -85,20 +77,14 @@ ActiveTargetsManager.prototype.clearAllTargets = function() {
 };

 ActiveTargetsManager.prototype._handlePressStart = function(press, id) {
+  var target = press.target;
+  this.activeTargets.set(id, target);
+
   // Ignore new touches if menu is shown
   if (this.alternativesCharMenuManager.isShown) {
     return;
   }

-  // All targets before the new touch need to be committed,
-  // according to UX requirement.
-  this.activeTargets.forEach(function(target, id) {
-    this._handlePressEnd(press, id);
-  }, this);
-
-  var target = press.target;
-  this.activeTargets.set(id, target);
-
   if (typeof this.ontargetactivated === 'function') {
     this.ontargetactivated(target);
   }
@@ -124,6 +110,13 @@ ActiveTargetsManager.prototype._handlePressMove = function(press, id) {
     target = this.alternativesCharMenuManager.getMenuTarget(press);
   }

+  // Ignore moment of new touches if the menu is shown and
+  // this is not the touch bind to the menu.
+  if (this.alternativesCharMenuManager.isShown &&
+      !this.alternativesCharMenuManager.isMenuTouch(id)) {
+    return;
+  }
+
   // Do nothing if press reports we have moved to empty space.
   if (!target) {
     return;
@@ -131,18 +124,6 @@ ActiveTargetsManager.prototype._handlePressMove = function(press, id) {

   var oldTarget = this.activeTargets.get(id);

-  // Special handling for selection: since selections are scrollable,
-  // if the press is moved, the press is consider ended and should be ignored.
-  if (press.moved && ('selection' in oldTarget.dataset)) {
-    this.activeTargets.delete(id);
-    this.ontargetcancelled(oldTarget);
-
-    this.alternativesCharMenuManager.hide();
-    clearTimeout(this.longPressTimer);
-
-    return;
-  }
-
   // Do nothing if the element is unchanged.
   if (target === oldTarget) {
     return;
@@ -183,7 +164,7 @@ ActiveTargetsManager.prototype._handleLongPress = function(press, id) {
     this.ontargetlongpressed(target);
   }

-  this.alternativesCharMenuManager.show(target);
+  this.alternativesCharMenuManager.show(target, id);
   // Press is considered "moved" after menu is shown
   if (this.alternativesCharMenuManager.isShown) {
     this._handlePressMove(press, id);
@@ -198,28 +179,26 @@ ActiveTargetsManager.prototype._handlePressEnd = function(press, id) {
   var target = this.activeTargets.get(id);
   this.activeTargets.delete(id);

+  // Ignore press end of new touches if the menu is shown and
+  // this is not the touch bind to the menu.
+  if (this.alternativesCharMenuManager.isShown &&
+      !this.alternativesCharMenuManager.isMenuTouch(id)) {
+    return;
+  }
+
   this.alternativesCharMenuManager.hide();
   clearTimeout(this.longPressTimer);

-  // Target should be either committed or doubled tapped here.
-  var timer;
-  if (this.doubleTapTimers.has(target)) {
-    timer = this.doubleTapTimers.get(target);
-    clearTimeout(timer);
-    this.doubleTapTimers.delete(target);
+  // selections on candidate panel should not be committed if the
+  // press is moved because the user might simply just want to scroll the panel.
+  if (press.moved && ('selection' in target.dataset)) {
+    this.ontargetcancelled(target);

-    if (typeof this.ontargetdoubletapped === 'function') {
-      this.ontargetdoubletapped(target);
-    }
-  } else {
-    timer = setTimeout(function() {
-      this.doubleTapTimers.delete(target);
-    }.bind(this), this.DOUBLE_TAP_TIMEOUT);
-    this.doubleTapTimers.set(target, timer);
-
-    if (typeof this.ontargetcommitted === 'function') {
-      this.ontargetcommitted(target);
-    }
+    return;
+  }
+
+  if (typeof this.ontargetcommitted === 'function') {
+    this.ontargetcommitted(target);
   }
 };

diff --git a/apps/keyboard/js/keyboard/alternatives_char_menu_manager.js b/apps/keyboard/js/keyboard/alternatives_char_menu_manager.js
index 897b8965..f5bf3ec 100644
--- a/apps/keyboard/js/keyboard/alternatives_char_menu_manager.js
+++ b/apps/keyboard/js/keyboard/alternatives_char_menu_manager.js
@@ -13,6 +13,7 @@ var AlternativesCharMenuManager = function(app) {
   this.app = app;

   this.isShown = false;
+  this.menuTouchId = undefined;

   this._originalTarget = null;
   this._hasMovedAwayFromOriginalTarget = false;
@@ -30,7 +31,7 @@ AlternativesCharMenuManager.prototype.stop = function() {
   this._menuContainer = null;
 };

-AlternativesCharMenuManager.prototype.show = function(target) {
+AlternativesCharMenuManager.prototype.show = function(target, touchId) {
   var alternatives = this._getAlternativesForTarget(target);
   if (!alternatives) {
     return;
@@ -42,6 +43,7 @@ AlternativesCharMenuManager.prototype.show = function(target) {
   // XXX: Remove reference to IMERender in the global in the future.
   IMERender.showAlternativesCharMenu(target, alternatives);
   this.isShown = true;
+  this.menuTouchId = touchId;

   this._originalTarget = target;
   this._hasMovedAwayFromOriginalTarget = false;
@@ -68,11 +70,11 @@ function _getAlternativesForTarget(target) {
   var alternatives;
   var altMap = this.app.layoutManager.currentModifiedLayout.alt;

-  if (this.app.upperCaseStateManager.isUpperCaseLocked) {
+  if (this.app.isCapitalizeLocked()) {
     alternatives = (altMap[target.dataset.uppercaseValue].upperCaseLocked) ?
       altMap[target.dataset.uppercaseValue].upperCaseLocked :
       altMap[target.dataset.uppercaseValue];
-  } else if (this.app.upperCaseStateManager.isUpperCase) {
+  } else if (this.app.isCapitalized()) {
     alternatives = altMap[target.dataset.uppercaseValue];
   } else {
     alternatives = altMap[target.dataset.lowercaseValue];
@@ -93,6 +95,7 @@ AlternativesCharMenuManager.prototype.hide = function() {
   // XXX: Remove reference to IMERender in the global in the future.
   IMERender.hideAlternativesCharMenu();
   this.isShown = false;
+  this.menuTouchId = undefined;

   this._originalTarget = null;
   this._hasMovedAwayFromOriginalTarget = false;
@@ -102,6 +105,10 @@ AlternativesCharMenuManager.prototype.hide = function() {
     this._menuAreaBottom = 0;
 };

+AlternativesCharMenuManager.prototype.isMenuTouch = function(touchId) {
+  return (this.menuTouchId === touchId);
+};
+
 AlternativesCharMenuManager.prototype.isMenuTarget = function(target) {
   return (target.parentNode === this._menuContainer);
 };
diff --git a/apps/keyboard/js/keyboard/bootstrap.js b/apps/keyboard/js/keyboard/bootstrap.js
deleted file mode 100644
index 200fc10..0000000
--- a/apps/keyboard/js/keyboard/bootstrap.js
+++ /dev/null
@@ -1,19 +0,0 @@
-'use strict';
-
-/* global KeyboardApp */
-
-// This file should be considered frozen and nothing should be added here,
-// ever. It's also intentionally not covered in unit test suites.
-(function(exports) {
-
-var app = new KeyboardApp();
-app.start();
-
-// Ideally we shouldn't be exposing the instance to the world, however
-// we still need to work with legacy keyboard.js code and
-// allow incorrect access of Gaia UI tests for getting our states.
-//
-// JS Console is probably the only valid use case to access this.
-exports.app = app;
-
-})(window);
diff --git a/apps/keyboard/js/keyboard/candidate_panel_manager.js b/apps/keyboard/js/keyboard/candidate_panel_manager.js
deleted file mode 100644
index 82aaceb..0000000
--- a/apps/keyboard/js/keyboard/candidate_panel_manager.js
+++ /dev/null
@@ -1,187 +0,0 @@
-'use strict';
-
-/* global IMERender */
-
-(function(exports) {
-
-var CandidatePanelScrollingMonitor = function(app) {
-  this.app = app;
-
-  this.scrollTimer = undefined;
-};
-
-CandidatePanelScrollingMonitor.prototype.SCROLL_END_WAIT_MS = 200;
-
-CandidatePanelScrollingMonitor.prototype.onneedcandidates = null;
-
-CandidatePanelScrollingMonitor.prototype.start = function() {
-};
-
-CandidatePanelScrollingMonitor.prototype.stop = function() {
-  clearTimeout(this.scrollTimer);
-  if (IMERender.candidatePanel) {
-    IMERender.candidatePanel.removeEventListener('scroll', this);
-  }
-};
-
-CandidatePanelScrollingMonitor.prototype.handleEvent = function(evt) {
-  var panel = evt.target;
-  clearTimeout(this.scrollTimer);
-
-  // If the user have not scrolled all the way to the buttom,
-  // no need to start the timer.
-  if (panel.scrollTop === 0 ||
-      (panel.scrollHeight - panel.clientHeight - panel.scrollTop) >= 5) {
-    return;
-  }
-  this.scrollTimer = setTimeout(function() {
-    if (typeof this.onneedcandidates === 'function') {
-      this.onneedcandidates();
-    }
-  }.bind(this), this.SCROLL_END_WAIT_MS);
-};
-
-CandidatePanelScrollingMonitor.prototype.startMonitoring = function() {
-  // If the candidates list was not truncated,
-  // we don't really need to monitor the scroll event.
-  if ('truncated' in IMERender.candidatePanel.dataset) {
-    IMERender.candidatePanel.addEventListener('scroll', this);
-  }
-};
-
-CandidatePanelScrollingMonitor.prototype.stopMonitoring = function() {
-  clearTimeout(this.scrollTimer);
-  IMERender.candidatePanel.removeEventListener('scroll', this);
-};
-
-var CandidatePanelManager = function(app) {
-  this.app = app;
-
-  this.currentCandidates = null;
-  this.isFullPanelShown = undefined;
-
-  this.scrollingMonitor = null;
-};
-
-CandidatePanelManager.prototype.FIRST_PAGE_ROWS = 11;
-CandidatePanelManager.prototype.PAGE_ROWS = 12;
-
-CandidatePanelManager.prototype.start = function() {
-  this.currentCandidates = [];
-  this.isFullPanelShown = false;
-
-  this.scrollingMonitor = new CandidatePanelScrollingMonitor(this.app);
-  this.scrollingMonitor.start();
-  this.scrollingMonitor.onneedcandidates =
-    this.showNextCandidatePage.bind(this);
-};
-
-CandidatePanelManager.prototype.stop = function() {
-  this.scrollingMonitor.stop();
-  this.scrollingMonitor = null;
-  this.isFullPanelShown = undefined;
-};
-
-CandidatePanelManager.prototype.showNextCandidatePage = function() {
-  var numberOfCandidatesPerRow = IMERender.getNumberOfCandidatesPerRow();
-  var candidatePanel = IMERender.candidatePanel;
-  var candidateIndicator =
-    parseInt(candidatePanel.dataset.candidateIndicator, 10);
-
-  // If the engine supports getting more candidate, get these candidates.
-  var engine = this.app.inputMethodManager.currentIMEngine;
-  if (typeof engine.getMoreCandidates === 'function') {
-    // XXX: We are not protecting ourselves againest any races but this is
-    // what the original script do in keyboard.js
-    engine.getMoreCandidates(
-      candidateIndicator,
-      this.PAGE_ROWS * numberOfCandidatesPerRow + 1,
-      IMERender.showMoreCandidates.bind(IMERender, this.PAGE_ROWS)
-    );
-  } else {
-    var list = this.currentCandidates.slice(candidateIndicator,
-      candidateIndicator + this.PAGE_ROWS * numberOfCandidatesPerRow + 1);
-
-    IMERender.showMoreCandidates(this.PAGE_ROWS, list);
-  }
-};
-
-CandidatePanelManager.prototype.toggleFullPanel = function(fullPanel) {
-  if (this.isFullPanelShown) {
-    this.hideFullPanel();
-  } else {
-    this.showFullPanel();
-  }
-};
-
-CandidatePanelManager.prototype.showFullPanel = function() {
-  if (this.isFullPanelShown) {
-    return;
-  }
-
-  this.isFullPanelShown = true;
-
-  var candidatePanel = IMERender.candidatePanel;
-  // Decide if we need the second page now
-  if (candidatePanel.dataset.rowCount == 1) {
-    var numberOfCandidatesPerRow = IMERender.getNumberOfCandidatesPerRow();
-    var candidateIndicator =
-      parseInt(candidatePanel.dataset.candidateIndicator, 10);
-
-    // If the engine supports getting more candidate, get these candidates.
-    var engine = this.app.inputMethodManager.currentIMEngine;
-    if (typeof engine.getMoreCandidates === 'function') {
-      // XXX: We are not protecting ourselves againest any races but this is
-      // what the original script do in keyboard.js
-      engine.getMoreCandidates(candidateIndicator,
-        this.FIRST_PAGE_ROWS * numberOfCandidatesPerRow + 1,
-        function gotMoreCandidates(list) {
-          if (candidatePanel.dataset.rowCount != 1) {
-            return;
-          }
-
-          IMERender.showMoreCandidates(this.FIRST_PAGE_ROWS, list);
-          this.scrollingMonitor.startMonitoring();
-          IMERender.toggleCandidatePanel(true);
-        }.bind(this)
-      );
-    } else { // No engine.getMoreCandidates
-      var list = this.currentCandidates.slice(candidateIndicator,
-        candidateIndicator +
-        this.FIRST_PAGE_ROWS * numberOfCandidatesPerRow + 1);
-
-      IMERender.showMoreCandidates(this.FIRST_PAGE_ROWS, list);
-      this.scrollingMonitor.startMonitoring();
-      IMERender.toggleCandidatePanel(true);
-    }
-
-  } else { // rowCount != 1
-    this.scrollingMonitor.startMonitoring();
-    IMERender.toggleCandidatePanel(true);
-  }
-};
-
-CandidatePanelManager.prototype.hideFullPanel = function() {
-  if (!this.isFullPanelShown) {
-    return;
-  }
-
-  this.isFullPanelShown = false;
-
-  this.scrollingMonitor.stopMonitoring();
-  IMERender.toggleCandidatePanel(false);
-};
-
-CandidatePanelManager.prototype.updateCandidates = function(candidates) {
-  this.currentCandidates = candidates;
-  this.showCandidates();
-};
-
-CandidatePanelManager.prototype.showCandidates = function() {
-  IMERender.showCandidates(this.currentCandidates);
-};
-
-exports.CandidatePanelScrollingMonitor = CandidatePanelScrollingMonitor;
-exports.CandidatePanelManager = CandidatePanelManager;
-
-})(window);
diff --git a/apps/keyboard/js/keyboard/input_method_manager.js b/apps/keyboard/js/keyboard/input_method_manager.js
index d494ecb..659371d 100644
--- a/apps/keyboard/js/keyboard/input_method_manager.js
+++ b/apps/keyboard/js/keyboard/input_method_manager.js
@@ -1,6 +1,6 @@
 'use strict';

-/* global IMEngineSettings, Promise, KeyEvent */
+/* global Promise */

 /*
  * InputMethodManager manages life cycle of input methods.
@@ -96,11 +96,16 @@
  *      Allows the IM to switch between default and symbol layouts on the
  *      keyboard. Used by the latin IM.
  *
- *    setUpperCase(state):
+ *    setUpperCase(upperCase, upperCaseLocked):
  *      Allows the IM to switch between uppercase and lowercase layout on the
  *      keyboard. Used by the latin IM.
- *        - state.isUpperCase: to enable the upper case or not.
- *        - state.isUpperCaseLocked: to change the caps lock state.
+ *        - upperCase: to enable the upper case or not.
+ *        - upperCaseLocked: to change the caps lock state.
+ *
+ *    resetUpperCase():
+ *      Allows the IM to reset the upperCase to lowerCase without knowing the
+ *      internal states like caps lock and current layout page while keeping
+ *      setUpperCase simple as it is.
  *
  *    getNumberOfCandidatesPerRow():
  *      Allow the IM to know how many candidates the Render need in one row so
@@ -141,59 +146,25 @@ InputMethodGlue.prototype.init = function(app, imEngineName) {
 };

 InputMethodGlue.prototype.sendCandidates = function(candidates) {
-  this.app.candidatePanelManager.updateCandidates(candidates);
+  this.app.sendCandidates(candidates);
 };

 InputMethodGlue.prototype.setComposition = function(symbols, cursor) {
-  if (!this.app.inputContext) {
-    console.warn('InputMethodGlue: call setComposition() when ' +
-      'inputContext does not exist.');
-    return;
-  }
-  cursor = cursor || symbols.length;
-  this.app.inputContext.setComposition(symbols, cursor);
+  this.app.setComposition(symbols, cursor);
 };

 InputMethodGlue.prototype.endComposition = function(text) {
-  if (!this.app.inputContext) {
-    console.warn('InputMethodGlue: call endComposition() when ' +
-      'inputContext does not exist.');
-    return;
-  }
-  text = text || '';
-  this.app.inputContext.endComposition(text);
+  this.app.endComposition(text);
 };

 InputMethodGlue.prototype.sendKey = function(keyCode, isRepeat) {
-  if (!this.app.inputContext) {
-    console.warn('InputMethodGlue: call sendKey() when ' +
-      'inputContext does not exist.');
-    return Promise.reject();
-  }
-
-  var promise;
-
-  switch (keyCode) {
-    case KeyEvent.DOM_VK_BACK_SPACE:
-      promise = this.app.inputContext.sendKey(keyCode, 0, 0, isRepeat);
-      break;
-
-    case KeyEvent.DOM_VK_RETURN:
-      promise = this.app.inputContext.sendKey(keyCode, 0, 0);
-      break;
-
-    default:
-      promise = this.app.inputContext.sendKey(0, keyCode, 0);
-      break;
-  }
-
-  return promise;
+  return this.app.sendKey(keyCode, isRepeat);
 };

 // XXX deprecated
 InputMethodGlue.prototype.sendString = function(str) {
   for (var i = 0; i < str.length; i++) {
-    this.sendKey(str.charCodeAt(i));
+    this.app.sendKey(str.charCodeAt(i));
   }
 };

@@ -211,25 +182,21 @@ InputMethodGlue.prototype.setLayoutPage = function(newpage) {
   this.app.setLayoutPage(newpage);
 };

-InputMethodGlue.prototype.setUpperCase = function(state) {
-  this.app.upperCaseStateManager.switchUpperCaseState(state);
+InputMethodGlue.prototype.setUpperCase = function(upperCase, upperCaseLocked) {
+  this.app.setUpperCase(upperCase, upperCaseLocked);
+};
+InputMethodGlue.prototype.resetUpperCase = function() {
+  this.app.resetUpperCase();
 };

 InputMethodGlue.prototype.isCapitalized = function() {
-  return this.app.upperCaseStateManager.isUpperCase;
+  return this.app.isCapitalized();
 };

 InputMethodGlue.prototype.replaceSurroundingText = function(text, offset,
                                                             length) {
-  if (!this.app.inputContext) {
-    console.warn('InputMethodGlue: call replaceSurroundingText() when ' +
-      'inputContext does not exist.');
-    return Promise.reject();
-  }
-
-  return this.app.inputContext.replaceSurroundingText(text, offset, length);
+  return this.app.replaceSurroundingText(text, offset, length);
 };
-
 InputMethodGlue.prototype.getNumberOfCandidatesPerRow = function() {
   return this.app.getNumberOfCandidatesPerRow();
 };
@@ -313,12 +280,6 @@ InputMethodManager.prototype.start = function() {
   this.loader = new InputMethodLoader(this.app);
   this.loader.start();

-  this.imEngineSettings = new IMEngineSettings();
-  this.imEngineSettings.promiseManager = this.app.settingsPromiseManager;
-  this.imEngineSettings.initSettings().catch(function rejected() {
-    console.error('Fatal Error! Failed to get initial imEngine settings.');
-  });
-
   this.currentIMEngine = this.loader.getInputMethod('default');

   this._switchStateId = 0;
@@ -350,10 +311,8 @@ InputMethodManager.prototype.switchCurrentIMEngine = function(imEngineName,
   // Create our own promise by resolving promise from loader and the passed
   // dataPromise, then do our things.
   var loaderPromise = this.loader.getInputMethodAsync(imEngineName);
-  var settingsPromise = this.imEngineSettings.initSettings();

-  var p = Promise.all([loaderPromise, dataPromise, settingsPromise])
-  .then(function(values) {
+  var p = Promise.all([loaderPromise, dataPromise]).then(function(values) {
     if (switchStateId !== this._switchStateId) {
       console.log('InputMethodManager: ' +
         'Promise is resolved after another switchCurrentIMEngine() call. ' +
@@ -365,18 +324,10 @@ InputMethodManager.prototype.switchCurrentIMEngine = function(imEngineName,
     }

     var imEngine = values[0];
+    var dataValues = values[1];

     if (typeof imEngine.activate === 'function') {
-      var dataValues = values[1];
-      var settingsValues = values[2];
-      imEngine.activate(
-        this.app.layoutManager.currentModifiedLayout.autoCorrectLanguage,
-        dataValues,
-        {
-          suggest: settingsValues.suggestionsEnabled,
-          correct: settingsValues.correctionsEnabled
-        }
-      );
+      imEngine.activate.apply(imEngine, dataValues);
     }
     this.currentIMEngine = imEngine;

diff --git a/apps/keyboard/js/keyboard/keyboard_app.js b/apps/keyboard/js/keyboard/keyboard_app.js
deleted file mode 100644
index 946e8b7..0000000
--- a/apps/keyboard/js/keyboard/keyboard_app.js
+++ /dev/null
@@ -1,191 +0,0 @@
-'use strict';
-
-/* global PerformanceTimer, InputMethodManager, LayoutManager,
-          SettingsPromiseManager, L10nLoader, TargetHandlersManager,
-          FeedbackManager, VisualHighlightManager, CandidatePanelManager,
-          UpperCaseStateManager, IMERender */
-
-(function(exports) {
-
-var KeyboardApp = function() {
-  this.perfTimer = null;
-  this.inputMethodManager = null;
-  this.layoutManager = null;
-  this.settingsPromiseManager = null;
-  this.l10nLoader = null;
-  this.targetHandlersManager = null;
-  this.feedbackManager = null;
-  this.visualHighlightManager = null;
-  this.candidatePanelManager = null;
-  this.upperCaseStateManager = null;
-
-  this.inputContext = null;
-};
-
-KeyboardApp.prototype.ACCENT_CHAR_MENU_ELEMENT_ID = 'keyboard-accent-char-menu';
-KeyboardApp.prototype.CONATINER_ELEMENT_ID = 'keyboard';
-
-KeyboardApp.prototype.start = function() {
-  this._startComponents();
-};
-
-KeyboardApp.prototype._startComponents = function() {
-  // A timer for time measurement
-  this.perfTimer = new PerformanceTimer();
-  this.perfTimer.start();
-  this.perfTimer.printTime('KeyboardApp._startComponents()');
-  this.perfTimer.startTimer('KeyboardApp._startComponents()');
-
-  // SettingsPromiseManager wraps Settings DB methods into promises.
-  // This must be available to InputMethodManager and FeedbackManager.
-  this.settingsPromiseManager = new SettingsPromiseManager();
-
-  // InputMethodManager is responsible of loading/activating input methods.
-  this.inputMethodManager = new InputMethodManager(this);
-  this.inputMethodManager.start();
-
-  // LayoutManager loads and holds layout layouts for us.
-  // It also help us ensure there is only one current layout at the time.
-  this.layoutManager = new LayoutManager(this);
-  this.layoutManager.start();
-
-  // L10nLoader loads l10n.js. We call it's one and only load() method
-  // only after we have run everything in the critical cold launch path.
-  this.l10nLoader = new L10nLoader();
-
-  // targetHandlersManager handles key targets when they are being interacted.
-  this.targetHandlersManager = new TargetHandlersManager(this);
-  this.targetHandlersManager.start();
-
-  this.feedbackManager = new FeedbackManager(this);
-  this.feedbackManager.start();
-
-  this.visualHighlightManager = new VisualHighlightManager(this);
-  this.visualHighlightManager.start();
-
-  this.candidatePanelManager = new CandidatePanelManager(this);
-  this.candidatePanelManager.start();
-
-  this.upperCaseStateManager = new UpperCaseStateManager();
-  this.upperCaseStateManager.start();
-
-  this.perfTimer.printTime('BLOCKING KeyboardApp._startComponents()',
-    'KeyboardApp._startComponents()');
-};
-
-KeyboardApp.prototype.stop = function() {
-  this._stopComponents();
-
-  this.inputContext = null;
-};
-
-KeyboardApp.prototype._stopComponents = function() {
-  this.perfTimer = null;
-
-  this.inputMethodManager = null;
-
-  this.layoutManager = null;
-
-  this.settingsPromiseManager = null;
-
-  this.l10nLoader = null;
-
-  this.targetHandlersManager.stop();
-  this.targetHandlersManager = null;
-
-  this.feedbackManager.stop();
-  this.feedbackManager = null;
-
-  this.visualHighlightManager.stop();
-  this.visualHighlightManager = null;
-
-  this.candidatePanelManager.stop();
-  this.candidatePanelManager = null;
-
-  this.upperCaseStateManager.stop();
-  this.upperCaseStateManager = null;
-};
-
-KeyboardApp.prototype.getMenuContainer = function() {
-  // This is equal to IMERender.menu.
-  return document.getElementById(this.ACCENT_CHAR_MENU_ELEMENT_ID);
-};
-
-KeyboardApp.prototype.getContainer = function() {
-  // This is equal to IMERender.ime.
-  return document.getElementById(this.CONATINER_ELEMENT_ID);
-};
-
-
-KeyboardApp.prototype.getBasicInputType = function() {
-  if (!this.inputContext) {
-    return 'text';
-  }
-
-  var type = this.inputContext.inputType;
-  switch (type) {
-    // basic types
-    case 'url':
-    case 'tel':
-    case 'email':
-    case 'text':
-      // Don't overwrite type
-
-      break;
-
-    // default fallback and textual types
-    case 'password':
-    case 'search':
-    /* falls through */
-    default:
-      type = 'text';
-
-      break;
-
-    case 'number':
-    case 'range': // XXX: should be different from number
-      type = 'number';
-
-      break;
-  }
-
-  return type;
-};
-
-KeyboardApp.prototype.supportsSwitching = function() {
-  return navigator.mozInputMethod.mgmt.supportsSwitching();
-};
-
-// XXX: this should move to InputMethodGlue after
-// renderKeyboard() is no longer a global function.
-KeyboardApp.prototype.setForcedModifiedLayout = function(layoutName) {
-  this.layoutManager.updateForcedModifiedLayout(layoutName);
-
-  window.renderKeyboard();
-};
-
-// XXX: this should move to InputMethodGlue after
-// renderKeyboard() is no longer a global function.
-KeyboardApp.prototype.setLayoutPage = function setLayoutPage(page) {
-  if (page === this.layoutManager.currentLayoutPage) {
-    return;
-  }
-
-  this.layoutManager.updateLayoutPage(page);
-  window.renderKeyboard();
-
-  var engine = this.inputMethodManager.currentIMEngine;
-  if (typeof engine.setLayoutPage === 'function') {
-    engine.setLayoutPage(this.layoutManager.currentLayoutPage);
-  }
-};
-
-// XXX: this should move to InputMethodGlue after
-// IMERender() is no longer a global class.
-KeyboardApp.prototype.getNumberOfCandidatesPerRow = function() {
-  return IMERender.getNumberOfCandidatesPerRow();
-};
-
-exports.KeyboardApp = KeyboardApp;
-
-})(window);
diff --git a/apps/keyboard/js/keyboard/layout_loader.js b/apps/keyboard/js/keyboard/layout_loader.js
index 655b2a7..ba3a5e4 100644
--- a/apps/keyboard/js/keyboard/layout_loader.js
+++ b/apps/keyboard/js/keyboard/layout_loader.js
@@ -145,86 +145,72 @@ LayoutLoader.prototype.initLayouts = function() {
 // This function go through the 'alt' property of the layout and normalize
 // our existing mixed notation into arrays, so others won't have to do it again.
 LayoutLoader.prototype._normalizeAlternatives = function(layoutName) {
-  var mainLayout = this.getLayout(layoutName);
-  var layouts = [mainLayout];
-  // We need to process not only the layout but it's "sub-layout".
-  // Sub-layouts are getting loaded by their alternative layout name,
-  // so trying to match every possible returned value of
-  // layoutManager._getAlternativeLayoutName() is sufferent here.
-  var subLayoutNames = ['alternateLayout', 'symbolLayout', 'telLayout',
-    'pinLayout', 'numberLayout', layoutName + '-sms'];
-  subLayoutNames.forEach(function(name) {
-    if (name in mainLayout) {
-      layouts.push(mainLayout[name]);
-    }
-  });
-
-  layouts.forEach(function(layout) {
-    var alt = layout.alt = layout.alt || {};
-    var upperCase = layout.upperCase = layout.upperCase || {};
-    var keys = Object.keys(alt);
-    keys.forEach(function(key) {
-      var alternatives = alt[key];
-
-      // Split alternatives
-      // If the alternatives are delimited by spaces, it means that one or more
-      // of them is more than a single character long.
-      if (!Array.isArray(alternatives)) {
-        if (alternatives.indexOf(' ') !== -1) {
-          alternatives = alternatives.split(' ');
-
-          // If there is just a single multi-character alternative, it will have
-          // trailing whitespace which we have to discard here.
-          if (alternatives.length === 2 && alternatives[1] === '') {
-            alternatives.pop();
-          }
-        } else {
-          // No spaces, so all of the alternatives are single characters
-          alternatives = alternatives.split('');
+  var layout = this.getLayout(layoutName);
+
+  var alt = layout.alt = layout.alt || {};
+  var upperCase = layout.upperCase = layout.upperCase || {};
+  var keys = Object.keys(alt);
+  keys.forEach(function(key) {
+    var alternatives = alt[key];
+
+    // Split alternatives
+    // If the alternatives are delimited by spaces, it means that one or more
+    // of them is more than a single character long.
+    if (!Array.isArray(alternatives)) {
+      if (alternatives.indexOf(' ') !== -1) {
+        alternatives = alternatives.split(' ');
+
+        // If there is just a single multi-character alternative, it will have
+        // trailing whitespace which we have to discard here.
+        if (alternatives.length === 2 && alternatives[1] === '') {
+          alternatives.pop();
         }
+      } else {
+        // No spaces, so all of the alternatives are single characters
+        alternatives = alternatives.split('');
       }
+    }

-      alt[key] = alternatives;
-
-      var upperCaseKey = upperCase[key] || key.toUpperCase();
-      if (!alt[upperCaseKey]) {
-        var needDifferentUpperCaseLockedAlternatives = false;
-        // Creating an array for upper case too.
-        // XXX: The original code does not respect layout.upperCase here.
-        alt[upperCaseKey] = alternatives.map(function(key) {
-          if (key.length === 1) {
-            return key.toUpperCase();
-          }
-
-          // The 'l·l' key in the Catalan layout needs to be
-          // 'L·l' in upper case mode and 'L·L' in upper case locked mode.
-          // (see http://bugzil.la/896363#c19)
-          // If that happens we will create a different array for
-          // upper case locked mode.
+    alt[key] = alternatives;

-          // Last chance for figuring out if we need a different list of
-          // alternatives; if key.substr(1) has no upper case form,
-          // (e.g. R$ key) we should be able to skip this.
-          needDifferentUpperCaseLockedAlternatives =
-            needDifferentUpperCaseLockedAlternatives ||
-            (key.substr(1).toUpperCase() !== key.substr(1));
+    var upperCaseKey = upperCase[key] || key.toUpperCase();
+    if (!alt[upperCaseKey]) {
+      var needDifferentUpperCaseLockedAlternatives = false;
+      // Creating an array for upper case too.
+      // XXX: The original code does not respect layout.upperCase here.
+      alt[upperCaseKey] = alternatives.map(function(key) {
+        if (key.length === 1) {
+          return key.toUpperCase();
+        }

-          // We only capitalize the first character of the key in
-          // the normalization here.
-          return key[0].toUpperCase() + key.substr(1);
+        // The 'l·l' key in the Catalan layout needs to be
+        // 'L·l' in upper case mode and 'L·L' in upper case locked mode.
+        // (see http://bugzil.la/896363#c19)
+        // If that happens we will create a different array for
+        // upper case locked mode.
+
+        // Last chance for figuring out if we need a different list of
+        // alternatives; if key.substr(1) has no upper case form,
+        // (e.g. R$ key) we should be able to skip this.
+        needDifferentUpperCaseLockedAlternatives =
+          needDifferentUpperCaseLockedAlternatives ||
+          (key.substr(1).toUpperCase() !== key.substr(1));
+
+        // We only capitalize the first character of the key in
+        // the normalization here.
+        return key[0].toUpperCase() + key.substr(1);
+      });
+
+      // If we really need an special upper case locked alternatives,
+      // do it here and attach that as a property of the
+      // alt[upperCaseKey] array/object. Noted that this property of the array
+      // cannot be represented in JSON so it's not visible in JSON.stringify().
+      if (needDifferentUpperCaseLockedAlternatives) {
+        alt[upperCaseKey].upperCaseLocked = alternatives.map(function(key) {
+          return key.toUpperCase();
         });
-
-        // If we really need an special upper case locked alternatives,
-        // do it here and attach that as a property of the
-        // alt[upperCaseKey] array/object. Noted that this property of the array
-        // can't be represented in JSON so it's not visible in JSON.stringify().
-        if (needDifferentUpperCaseLockedAlternatives) {
-          alt[upperCaseKey].upperCaseLocked = alternatives.map(function(key) {
-            return key.toUpperCase();
-          });
-        }
       }
-    }, this);
+    }
   }, this);
 };

diff --git a/apps/keyboard/js/keyboard/layout_manager.js b/apps/keyboard/js/keyboard/layout_manager.js
index 295b9d8..64b095b 100644
--- a/apps/keyboard/js/keyboard/layout_manager.js
+++ b/apps/keyboard/js/keyboard/layout_manager.js
@@ -43,6 +43,7 @@ LayoutManager.prototype.KEYCODE_BASIC_LAYOUT = -1;
 LayoutManager.prototype.KEYCODE_ALTERNATE_LAYOUT = -2;
 LayoutManager.prototype.KEYCODE_SWITCH_KEYBOARD = -3;
 LayoutManager.prototype.KEYCODE_TOGGLE_CANDIDATE_PANEL = -4;
+LayoutManager.prototype.KEYCODE_NO_OP = -5;

 LayoutManager.prototype.LAYOUT_PAGE_DEFAULT = 0;
 LayoutManager.prototype.LAYOUT_PAGE_SYMBOLS_I = 1;
@@ -319,12 +320,9 @@ LayoutManager.prototype._updateModifiedLayout = function() {
         // Add comma key if we asked too,
         // Only add the key at alternative pages or if
         // we didn't add the switching key.
-        // Add comma key in any page if needsCommaKey is
-        // set explicitly.
         if (overwrites[','] !== false &&
             (this.currentLayoutPage !== this.LAYOUT_PAGE_DEFAULT ||
-             !needsSwitchingKey ||
-             layout.needsCommaKey)) {
+            !needsSwitchingKey)) {
           var commaKey = {
             value: ',',
             ratio: 1,
@@ -425,6 +423,7 @@ exports.ALTERNATE_LAYOUT = LayoutManager.prototype.KEYCODE_ALTERNATE_LAYOUT;
 exports.SWITCH_KEYBOARD = LayoutManager.prototype.KEYCODE_SWITCH_KEYBOARD;
 exports.TOGGLE_CANDIDATE_PANEL =
   LayoutManager.prototype.KEYCODE_TOGGLE_CANDIDATE_PANEL;
+exports.NO_OP = LayoutManager.prototype.KEYCODE_NO_OP;

 // IMEngines rely on this constant to understand the current layout page;
 // We'll set it to non-zero to tell it you are not on the default page.
diff --git a/apps/keyboard/js/keyboard/target_handlers.js b/apps/keyboard/js/keyboard/target_handlers.js
deleted file mode 100644
index 9104e35..0000000
--- a/apps/keyboard/js/keyboard/target_handlers.js
+++ /dev/null
@@ -1,310 +0,0 @@
-'use strict';
-
-/* global KeyEvent */
-
-(function(exports) {
-
-var DefaultTargetHandler = function(target, app) {
-  this.target = target;
-  this.app = app;
-
-  this.ignoreCommitActions = false;
-};
-DefaultTargetHandler.prototype.activate = function() {
-  this.app.feedbackManager.triggerFeedback(this.target);
-  this.app.visualHighlightManager.show(this.target);
-};
-DefaultTargetHandler.prototype.longPress = function() {
-  // Does the key have an long press value?
-  if (!('longPressValue' in this.target.dataset)) {
-    return;
-  }
-
-  // Ignore any action when commit.
-  this.ignoreCommitActions = true;
-
-  var keyCode = parseInt(this.target.dataset.longPressKeyCode, 10);
-  this.app.inputMethodManager.currentIMEngine.click(keyCode);
-  this.app.visualHighlightManager.hide(this.target);
-};
-DefaultTargetHandler.prototype.moveOut = function() {
-  this.app.visualHighlightManager.hide(this.target);
-};
-DefaultTargetHandler.prototype.moveIn = function() {
-  this.app.visualHighlightManager.show(this.target);
-};
-DefaultTargetHandler.prototype.commit = function() {
-  if (this.ignoreCommitActions) {
-    return;
-  }
-
-  var keyCode = parseInt(this.target.dataset.keycode, 10);
-  var upperCaseKeyCode = parseInt(this.target.dataset.keycodeUpper, 10);
-  var engine = this.app.inputMethodManager.currentIMEngine;
-
-  /*
-   * XXX: A hack to send both keycode and uppercase keycode to latin IME,
-   * since latin IME would maintain a promise queue for each key, and
-   * send correct keycode based on the current capitalization state.
-   * See bug 1013570 and bug 987809 for details.
-   * This hack should be removed and the state/input queue should be
-   * maintained out of latin.js.
-   */
-  if (this.app.layoutManager.currentModifiedLayout.imEngine === 'latin') {
-    engine.click(keyCode, upperCaseKeyCode);
-  } else {
-    engine.click(
-      this.app.upperCaseStateManager.isUpperCase ? upperCaseKeyCode : keyCode);
-  }
-
-  this.app.visualHighlightManager.hide(this.target);
-};
-DefaultTargetHandler.prototype.cancel = function() {
-  this.app.visualHighlightManager.hide(this.target);
-};
-DefaultTargetHandler.prototype.doubleTap = function() {
-  this.commit();
-};
-
-var NullTargetHandler = function(target, app) {
-  DefaultTargetHandler.apply(this, arguments);
-};
-NullTargetHandler.prototype = Object.create(DefaultTargetHandler.prototype);
-NullTargetHandler.prototype.activate =
-NullTargetHandler.prototype.moveIn =
-NullTargetHandler.prototype.moveOut =
-NullTargetHandler.prototype.commit =
-NullTargetHandler.prototype.cancel =
-NullTargetHandler.prototype.doubleTap = function() { };
-
-var SpaceKeyTargetHandler = function(target, app) {
-  DefaultTargetHandler.apply(this, arguments);
-};
-SpaceKeyTargetHandler.prototype =
-  Object.create(DefaultTargetHandler.prototype);
-SpaceKeyTargetHandler.prototype.longPress = function() {
-  this.app.targetHandlersManager.activeTargetsManager.clearAllTargets();
-  navigator.mozInputMethod.mgmt.hide();
-
-  this.app.visualHighlightManager.hide(this.target);
-};
-
-var CandidateSelectionTargetHandler = function(target, app) {
-  DefaultTargetHandler.apply(this, arguments);
-};
-CandidateSelectionTargetHandler.prototype =
-  Object.create(DefaultTargetHandler.prototype);
-CandidateSelectionTargetHandler.prototype.commit = function() {
-  this.app.candidatePanelManager.hideFullPanel();
-
-  // We use dataset.data instead of target.textContent because the
-  // text actually displayed to the user might have an ellipsis in it
-  // to make it fit.
-  var engine = this.app.inputMethodManager.currentIMEngine;
-  if (typeof engine.select === 'function') {
-    engine.select(this.target.textContent, this.target.dataset.data);
-  }
-
-  this.app.visualHighlightManager.hide(this.target);
-};
-
-var BackspaceTargetHandler = function(target, app) {
-  DefaultTargetHandler.apply(this, arguments);
-
-  this.deleteTimeout = undefined;
-  this.deleteInterval = undefined;
-
-  this.ignoreCommitActions = false;
-};
-BackspaceTargetHandler.prototype =
-  Object.create(DefaultTargetHandler.prototype);
-// Backspace repeat delay and repeat rate
-BackspaceTargetHandler.prototype.REPEAT_RATE = 75;
-BackspaceTargetHandler.prototype.REPEAT_TIMEOUT = 700;
-
-// Sends a delete code to remove last character
-// The argument specifies whether this is an auto repeat or not.
-BackspaceTargetHandler.prototype._sendDelete = function(isRepeat) {
-  // Pass the isRepeat argument to the input method. It may not want
-  // to compute suggestions, for example, if this is just one in a series
-  // of repeating events.
-  var engine = this.app.inputMethodManager.currentIMEngine;
-  engine.click(KeyEvent.DOM_VK_BACK_SPACE, null, isRepeat);
-};
-
-BackspaceTargetHandler.prototype.activate = function() {
-  this.app.feedbackManager.triggerFeedback(this.target);
-  this.app.visualHighlightManager.show(this.target);
-  // First repetition, after a delay
-  this.deleteTimeout = setTimeout(function() {
-    this._sendDelete(true);
-
-    // Second, after shorter delay
-    this.deleteInterval = setInterval(function() {
-      this._sendDelete(true);
-    }.bind(this), this.REPEAT_RATE);
-  }.bind(this), this.REPEAT_TIMEOUT);
-};
-
-BackspaceTargetHandler.prototype.moveOut = function() {
-  this.app.visualHighlightManager.hide(this.target);
-
-  clearTimeout(this.deleteTimeout);
-  clearInterval(this.deleteInterval);
-};
-
-BackspaceTargetHandler.prototype.moveIn = function() {
-  // Do nothing and make sure commit does nothing.
-  this.ignoreCommitActions = true;
-};
-
-BackspaceTargetHandler.prototype.commit = function() {
-  if (this.ignoreCommitActions) {
-    return;
-  }
-
-  clearTimeout(this.deleteTimeout);
-  clearInterval(this.deleteInterval);
-
-  this._sendDelete(false);
-
-  this.app.visualHighlightManager.hide(this.target);
-};
-
-BackspaceTargetHandler.prototype.cancel = function() {
-  clearTimeout(this.deleteTimeout);
-  clearInterval(this.deleteInterval);
-
-  this.app.visualHighlightManager.hide(this.target);
-};
-
-var CompositeTargetHandler = function(target, app) {
-  DefaultTargetHandler.apply(this, arguments);
-};
-CompositeTargetHandler.prototype =
-  Object.create(DefaultTargetHandler.prototype);
-CompositeTargetHandler.prototype.commit = function() {
-  // Keys with this attribute set send more than a single character
-  // Like ".com" or "2nd" or (in Catalan) "l·l".
-  var compositeString = this.target.dataset.compositeKey;
-  var engine = this.app.inputMethodManager.currentIMEngine;
-  for (var i = 0; i < compositeString.length; i++) {
-    engine.click(compositeString.charCodeAt(i));
-  }
-
-  this.app.visualHighlightManager.hide(this.target);
-};
-
-var PageSwitchingTargetHandler = function(target, app) {
-  DefaultTargetHandler.apply(this, arguments);
-};
-PageSwitchingTargetHandler.prototype =
-  Object.create(DefaultTargetHandler.prototype);
-PageSwitchingTargetHandler.prototype.commit = function() {
-  var keyCode = parseInt(this.target.dataset.keycode, 10);
-
-  var page;
-  switch (keyCode) {
-    case this.app.layoutManager.KEYCODE_BASIC_LAYOUT:
-      // Return to default page
-      page = this.app.layoutManager.LAYOUT_PAGE_DEFAULT;
-      break;
-
-    case this.app.layoutManager.KEYCODE_ALTERNATE_LAYOUT:
-      // Switch to numbers+symbols page
-      page = this.app.layoutManager.LAYOUT_PAGE_SYMBOLS_I;
-      break;
-
-    case KeyEvent.DOM_VK_ALT:
-      // alternate between pages 1 and 2 of SYMBOLS
-      if (this.app.layoutManager.currentLayoutPage ===
-          this.app.layoutManager.LAYOUT_PAGE_SYMBOLS_I) {
-        page = this.app.layoutManager.LAYOUT_PAGE_SYMBOLS_II;
-      } else {
-        page = this.app.layoutManager.LAYOUT_PAGE_SYMBOLS_I;
-      }
-      break;
-  }
-
-  this.app.setLayoutPage(page);
-  this.app.visualHighlightManager.hide(this.target);
-};
-
-var CapsLockTargetHandler = function(target, app) {
-  DefaultTargetHandler.apply(this, arguments);
-};
-CapsLockTargetHandler.prototype = Object.create(DefaultTargetHandler.prototype);
-CapsLockTargetHandler.prototype.commit = function() {
-  this.app.upperCaseStateManager.switchUpperCaseState({
-    isUpperCase: !this.app.upperCaseStateManager.isUpperCase,
-    isUpperCaseLocked: false
-  });
-  this.app.visualHighlightManager.hide(this.target);
-};
-CapsLockTargetHandler.prototype.doubleTap = function() {
-  this.app.upperCaseStateManager.switchUpperCaseState({
-    isUpperCaseLocked: true
-  });
-  this.app.visualHighlightManager.hide(this.target);
-};
-
-var SwitchKeyboardTargetHandler = function(target, app) {
-  DefaultTargetHandler.apply(this, arguments);
-};
-SwitchKeyboardTargetHandler.prototype =
-  Object.create(DefaultTargetHandler.prototype);
-SwitchKeyboardTargetHandler.prototype.longPress = function() {
-  this.ignoreCommitActions = true;
-
-  this.app.targetHandlersManager.activeTargetsManager.clearAllTargets();
-  navigator.mozInputMethod.mgmt.showAll();
-  this.app.visualHighlightManager.hide(this.target);
-};
-SwitchKeyboardTargetHandler.prototype.commit = function() {
-  if (this.ignoreCommitActions) {
-    return;
-  }
-
-  this.app.targetHandlersManager.activeTargetsManager.clearAllTargets();
-  navigator.mozInputMethod.mgmt.next();
-  this.app.visualHighlightManager.hide(this.target);
-};
-
-var ToggleCandidatePanelTargetHandler = function(target, app) {
-  DefaultTargetHandler.apply(this, arguments);
-};
-ToggleCandidatePanelTargetHandler.prototype =
-  Object.create(DefaultTargetHandler.prototype);
-ToggleCandidatePanelTargetHandler.prototype.commit = function() {
-  this.app.candidatePanelManager.toggleFullPanel();
-
-  this.app.visualHighlightManager.hide(this.target);
-};
-
-var DismissSuggestionsTargetHandler = function(target, app) {
-  DefaultTargetHandler.apply(this, arguments);
-};
-DismissSuggestionsTargetHandler.prototype =
-  Object.create(DefaultTargetHandler.prototype);
-DismissSuggestionsTargetHandler.prototype.commit = function() {
-  var engine = this.app.inputMethodManager.currentIMEngine;
-  if (typeof engine.dismissSuggestions === 'function') {
-    engine.dismissSuggestions();
-  }
-
-  this.app.visualHighlightManager.hide(this.target);
-};
-
-exports.DefaultTargetHandler = DefaultTargetHandler;
-exports.NullTargetHandler = NullTargetHandler;
-exports.SpaceKeyTargetHandler = SpaceKeyTargetHandler;
-exports.CandidateSelectionTargetHandler = CandidateSelectionTargetHandler;
-exports.BackspaceTargetHandler = BackspaceTargetHandler;
-exports.CompositeTargetHandler = CompositeTargetHandler;
-exports.PageSwitchingTargetHandler = PageSwitchingTargetHandler;
-exports.CapsLockTargetHandler = CapsLockTargetHandler;
-exports.SwitchKeyboardTargetHandler = SwitchKeyboardTargetHandler;
-exports.ToggleCandidatePanelTargetHandler = ToggleCandidatePanelTargetHandler;
-exports.DismissSuggestionsTargetHandler = DismissSuggestionsTargetHandler;
-
-})(window);
diff --git a/apps/keyboard/js/keyboard/target_handlers_manager.js b/apps/keyboard/js/keyboard/target_handlers_manager.js
deleted file mode 100644
index 42f94c9..0000000
--- a/apps/keyboard/js/keyboard/target_handlers_manager.js
+++ /dev/null
@@ -1,152 +0,0 @@
-'use strict';
-
-/* global ActiveTargetsManager, KeyEvent,
-          DefaultTargetHandler, NullTargetHandler, SpaceKeyTargetHandler,
-          CandidateSelectionTargetHandler, CompositeTargetHandler,
-          PageSwitchingTargetHandler, CapsLockTargetHandler,
-          SwitchKeyboardTargetHandler, ToggleCandidatePanelTargetHandler,
-          DismissSuggestionsTargetHandler, BackspaceTargetHandler */
-
-(function(exports) {
-
-var TargetHandlersManager = function(app) {
-  this.handlers = undefined;
-  this.activeTargetsManager = null;
-  this.app = app;
-};
-
-TargetHandlersManager.prototype.start = function() {
-  this.handlers = new WeakMap();
-
-  var activeTargetsManager = this.activeTargetsManager =
-    new ActiveTargetsManager(this.app);
-
-  // Create partial functions and hook to the callback properties,
-  // see http://mdn.io/bind#Partial_Functions
-  activeTargetsManager.ontargetactivated =
-    this._callTargetAction.bind(this, 'activate', true, false);
-  activeTargetsManager.ontargetlongpressed =
-    this._callTargetAction.bind(this, 'longPress', false, false);
-  activeTargetsManager.ontargetmovedout =
-    this._callTargetAction.bind(this, 'moveOut', false, true);
-  activeTargetsManager.ontargetmovedin =
-    this._callTargetAction.bind(this, 'moveIn', true, false);
-  activeTargetsManager.ontargetcommitted =
-    this._callTargetAction.bind(this, 'commit', false, true);
-  activeTargetsManager.ontargetcancelled =
-    this._callTargetAction.bind(this, 'cancel', false, true);
-  activeTargetsManager.ontargetdoubletapped =
-    this._callTargetAction.bind(this, 'doubleTap', false, true);
-  activeTargetsManager.start();
-};
-
-TargetHandlersManager.prototype.stop = function() {
-  this.handlers = null;
-  this.activeTargetsManager.stop();
-  this.activeTargetsManager = null;
-};
-
-// This method is the scaffold of our partical functions:
-// The first 3 arguments are instructions set with bind() on how the function
-// should process the target (put/delete the handler instance in the handers
-// map, and call the named action method), and the fourth argument is the actual
-// active target to handle.
-//
-// An active target and it's handler enjoys a life cycle that beginning with
-// "activate" or "moveIn", and end with "commit", "cancel", or "moveout".
-// "longpress" is noticeably an optional step during the life cycle and does
-// not start or end the handler/active target, so it was not mentioned in the
-// above list.
-//
-// Please note that since we are using target (the DOM element) as the
-// identifier of handlers, we do not assign new handler if there are two touches
-// on the same element. Currently that cannot happen because of what done in
-// bug 985855, however in the future that will change (and these handlers needs
-// to) to adopt bug 985853 (Combo key).
-TargetHandlersManager.prototype._callTargetAction = function(action,
-                                                             setHandler,
-                                                             deleteHandler,
-                                                             target) {
-  var handler;
-  if (this.handlers.has(target)) {
-    handler = this.handlers.get(target);
-    if (setHandler) {
-      console.warn('TargetHandlersManager: ' +
-        'calling targetHandler.' + action + '() on existing handler.');
-    }
-    if (deleteHandler) {
-      this.handlers.delete(target);
-    }
-  } else {
-    handler = this._createHandlerForTarget(target);
-    if (!setHandler) {
-      console.warn('TargetHandlersManager: ' +
-        'calling targetHandler.' + action + '() on non-existing handler.');
-    }
-    if (!deleteHandler) {
-      this.handlers.set(target, handler);
-    }
-  }
-
-  handler[action]();
-};
-
-// This method decide which of the TargetHandler is the right one to
-// handle the active target. It decide the TargetHandler to use and create
-// and instance of it, and return the instance.
-TargetHandlersManager.prototype._createHandlerForTarget = function(target) {
-  var handler;
-
-  // This is unfortunately very complex but this is essentially what's already
-  // specified in keyboard.js.
-  // We will need to normalize the identifier for each targets in the future.
-  if (target.classList.contains('dismiss-suggestions-button')) {
-    handler = new DismissSuggestionsTargetHandler(target, this.app);
-  } else if ('selection' in target.dataset) {
-    handler = new CandidateSelectionTargetHandler(target, this.app);
-  } else if ('compositeKey' in target.dataset) {
-    handler = new CompositeTargetHandler(target, this.app);
-  } else if ('keycode' in target.dataset) {
-    var keyCode = parseInt(target.dataset.keycode, 10);
-    switch (keyCode) {
-      // Delete is a special key, it reacts when pressed not released
-      case KeyEvent.DOM_VK_BACK_SPACE:
-        handler = new BackspaceTargetHandler(target, this.app);
-        break;
-
-      case KeyEvent.DOM_VK_SPACE:
-        handler = new SpaceKeyTargetHandler(target, this.app);
-        break;
-
-      case this.app.layoutManager.KEYCODE_BASIC_LAYOUT:
-      case this.app.layoutManager.KEYCODE_ALTERNATE_LAYOUT:
-      case KeyEvent.DOM_VK_ALT:
-        handler = new PageSwitchingTargetHandler(target, this.app);
-        break;
-
-      case this.app.layoutManager.KEYCODE_SWITCH_KEYBOARD:
-        handler = new SwitchKeyboardTargetHandler(target, this.app);
-        break;
-
-      case this.app.layoutManager.KEYCODE_TOGGLE_CANDIDATE_PANEL:
-        handler = new ToggleCandidatePanelTargetHandler(target, this.app);
-        break;
-
-      case KeyEvent.DOM_VK_CAPS_LOCK:
-        handler = new CapsLockTargetHandler(target, this.app);
-        break;
-
-      default:
-        handler = new DefaultTargetHandler(target, this.app);
-        break;
-    }
-  } else {
-    handler = new NullTargetHandler(target, this.app);
-  }
-
-  return handler;
-};
-
-exports.TargetHandlersManager = TargetHandlersManager;
-
-})(window);
diff --git a/apps/keyboard/js/keyboard/upper_case_state_manager.js b/apps/keyboard/js/keyboard/upper_case_state_manager.js
deleted file mode 100644
index b38af33..0000000
--- a/apps/keyboard/js/keyboard/upper_case_state_manager.js
+++ /dev/null
@@ -1,63 +0,0 @@
-'use strict';
-
-(function(exports) {
-
-var UpperCaseStateManager = function() {
-  this.isUpperCase = undefined;
-  this.isUpperCaseLocked = undefined;
-};
-
-UpperCaseStateManager.prototype.onstatechange = null;
-
-UpperCaseStateManager.prototype.start =
-UpperCaseStateManager.prototype.reset = function() {
-  this.isUpperCase = false;
-  this.isUpperCaseLocked = false;
-};
-
-UpperCaseStateManager.prototype.stop = function() {
-  this.isUpperCase = undefined;
-  this.isUpperCaseLocked = undefined;
-};
-
-UpperCaseStateManager.prototype.switchUpperCaseState = function(state) {
-  if (!state) {
-    return;
-  }
-
-  // User can switch the two states independently, and the one unspecified
-  // will be kept with the original state.
-  var newIsUpperCase = (typeof state.isUpperCase === 'boolean') ?
-    state.isUpperCase : this.isUpperCase;
-  var newIsUpperCaseLocked = (typeof state.isUpperCaseLocked === 'boolean') ?
-    state.isUpperCaseLocked : this.isUpperCaseLocked;
-
-  // It doesn't really make any sense to set isUpperCase to false but
-  // change/keep isUpperCaseLocked to true.
-  // This also means isUpperCaseLocked can overwrite isUpperCase changes,
-  // and literally keep the caps "lock".
-  if (newIsUpperCaseLocked) {
-    newIsUpperCase = true;
-  }
-
-  var statechanged = (this.isUpperCase !== newIsUpperCase) ||
-    (this.isUpperCaseLocked !== newIsUpperCaseLocked);
-
-  // Don't do anything if the state is unchanged.
-  if (!statechanged) {
-    return;
-  }
-
-  // Set the new states.
-  this.isUpperCase = newIsUpperCase;
-  this.isUpperCaseLocked = newIsUpperCaseLocked;
-
-  // Call onstatechange callback.
-  if (typeof this.onstatechange === 'function') {
-    this.onstatechange();
-  }
-};
-
-exports.UpperCaseStateManager = UpperCaseStateManager;
-
-})(window);
diff --git a/apps/keyboard/js/keyboard/user_press_manager.js b/apps/keyboard/js/keyboard/user_press_manager.js
index 52c4fc2..d6ee29f 100644
--- a/apps/keyboard/js/keyboard/user_press_manager.js
+++ b/apps/keyboard/js/keyboard/user_press_manager.js
@@ -35,11 +35,6 @@ var UserPressManager = function(app) {
   // Use a ECMAScript 6 Map object so we won't cast touch.identifier to string.
   // http://mdn.io/map
   this.presses = new Map();
-  // Count the # of touchstart events on a element, we need this to ensure
-  // we didn't remove the event listeners prematurely.
-  // This is a WeakMap because we obviously don't care about
-  // elements already GC'd.
-  this.touchstartCounts = new WeakMap();

   this.app = app;
 };
@@ -81,7 +76,7 @@ UserPressManager.prototype.stop = function() {
 };

 UserPressManager.prototype.handleEvent = function(evt) {
-  var touch, touchId, el, i, touchstartCount;
+  var touch, touchId, el, i;
   switch (evt.type) {
     case 'contextmenu':
       // Prevent all contextmenu event so no context menu on B2G/Desktop
@@ -93,24 +88,20 @@ UserPressManager.prototype.handleEvent = function(evt) {
       // not handle any presses from mouse events.
       this._ignoreMouseEvents = true;

-      touchstartCount = this.touchstartCounts.get(evt.target) || 0;
-      touchstartCount++;
-      this.touchstartCounts.set(evt.target, touchstartCount);
-
-      // Add touchmove and touchend listeners directly to the element so that
-      // we will always hear these events, even if the element is removed from
-      // the DOM and thus no longer the grandchild of the container.
-      // This can happen when the keyboard switches cases, as well as when we
-      // show the alternate characters menu for a key.
-      evt.target.addEventListener('touchmove', this);
-      evt.target.addEventListener('touchend', this);
-      evt.target.addEventListener('touchcancel', this);
-
       for (i = 0; i < evt.changedTouches.length; i++) {
         touch = evt.changedTouches[i];
         touchId = touch.identifier;
         el = touch.target;

+        // Add touchmove and touchend listeners directly to the element so that
+        // we will always hear these events, even if the element is removed from
+        // the DOM and thus no longer the grandchild of the container.
+        // This can happen when the keyboard switches cases, as well as when we
+        // show the alternate characters menu for a key.
+        el.addEventListener('touchmove', this);
+        el.addEventListener('touchend', this);
+        el.addEventListener('touchcancel', this);
+
         this._handleNewPress(el, touch, touchId);
       }
       break;
@@ -132,18 +123,10 @@ UserPressManager.prototype.handleEvent = function(evt) {

     case 'touchend': /* fall through */
     case 'touchcancel':
-      touchstartCount = this.touchstartCounts.get(evt.target);
-      touchstartCount--;
-      if (touchstartCount) {
-        this.touchstartCounts.set(evt.target, touchstartCount);
-      } else {
-        // Since this is the last event, remove event listeners here.
-        evt.target.removeEventListener('touchmove', this);
-        evt.target.removeEventListener('touchend', this);
-        evt.target.removeEventListener('touchcancel', this);
-
-        this.touchstartCounts.delete(evt.target);
-      }
+      // Since this is the last event, remove event listeners here.
+      evt.target.removeEventListener('touchmove', this);
+      evt.target.removeEventListener('touchend', this);
+      evt.target.removeEventListener('touchcancel', this);

       // Quietly escape if we are already stopped.
       if (!this._started) {
diff --git a/apps/keyboard/js/keyboard/visual_highlight_manager.js b/apps/keyboard/js/keyboard/visual_highlight_manager.js
index 5c447df..536f160 100644
--- a/apps/keyboard/js/keyboard/visual_highlight_manager.js
+++ b/apps/keyboard/js/keyboard/visual_highlight_manager.js
@@ -9,12 +9,8 @@
  */
 var VisualHighlightManager = function(app) {
   this.app = app;
-
-  this.highlightDelayTimers = new Map();
 };

-VisualHighlightManager.prototype.HIGHTLIGHT_DELAY_MS = 85;
-
 VisualHighlightManager.prototype.start = function() {
 };

@@ -22,27 +18,12 @@ VisualHighlightManager.prototype.stop = function() {
 };

 VisualHighlightManager.prototype.show = function(target) {
-  this.highlightDelayTimers.forEach(function(timer, target) {
-    clearTimeout(timer);
-    this.highlightDelayTimers.delete(target);
-    IMERender.unHighlightKey(target);
-  }, this);
-
-  var showUpperCase = this.app.upperCaseStateManager.isUpperCase;
+  var showUpperCase = this.app.isCapitalized();
   IMERender.highlightKey(target, { showUpperCase: showUpperCase });
 };

 VisualHighlightManager.prototype.hide = function(target) {
-  if (this.highlightDelayTimers.has(target)) {
-    clearTimeout(this.highlightDelayTimers.get(target));
-  }
-
-  var timer = setTimeout(function() {
-    this.highlightDelayTimers.delete(target);
-    IMERender.unHighlightKey(target);
-  }.bind(this), this.HIGHTLIGHT_DELAY_MS);
-
-  this.highlightDelayTimers.set(target, timer);
+  IMERender.unHighlightKey(target);
 };

 exports.VisualHighlightManager = VisualHighlightManager;
diff --git a/apps/keyboard/js/layouts/el.js b/apps/keyboard/js/layouts/el.js
index 9ecdc1b..0cf2e25 100644
--- a/apps/keyboard/js/layouts/el.js
+++ b/apps/keyboard/js/layouts/el.js
@@ -17,8 +17,7 @@ Keyboards.el = {
     υ: 'ύϋΰ',
     Ι: 'ΊΪ',
     ι: 'ίϊΐ',
-    η: 'ή',
-    '.': ',?!;:'
+    η: 'ή'
   },
   keys: [
     [
@@ -47,11 +46,6 @@ Keyboards['el-sms'] = {
   label: 'Greek SMS',
   menuLabel: 'Ελληνικό για SMS',
   imEngine: 'latin',
-  // No autocorrect for this layout
-  // autoCorrectLanguage: undefined,
-  alt: {
-    '.': ',?!;:'
-  },
   keys: [
     [
       { value: ';' }, { value: 'Ε', keyCode: 0x45 /* ASCII E */ } ,
@@ -67,8 +61,8 @@ Keyboards['el-sms'] = {
       { value: 'Ξ' }, { value: 'Κ', keyCode: 0x4B /* ASCII K */ },
       { value: 'Λ' }, { value: "'"}
     ], [
-      { value: '⇪', ratio: 1.5, keyCode: KeyEvent.DOM_VK_CAPS_LOCK,
-        disabled: true },
+      { value: '⇪', ratio: 1.5, keyCode: -5, // special key code for NO_OP
+        disabled: true},
       { value: 'Ζ', keyCode: 0x5A /* ASCII Z */ },
       { value: 'Χ', keyCode: 0x58 /* ASCII X */ }, { value: 'Ψ' },
       { value: 'Ω' }, { value: 'Β', keyCode: 0x42 /* ASCII B */ },
diff --git a/apps/keyboard/js/layouts/zh-Hans-Pinyin.js b/apps/keyboard/js/layouts/zh-Hans-Pinyin.js
index 3559e2c..c0598b1 100644
--- a/apps/keyboard/js/layouts/zh-Hans-Pinyin.js
+++ b/apps/keyboard/js/layouts/zh-Hans-Pinyin.js
@@ -4,17 +4,12 @@ Keyboards['zh-Hans-Pinyin'] = {
   menuLabel: '拼音',
   needsCandidatePanel: true,
   disableAlternateLayout: true,
-  needsCommaKey: true,
   imEngine: 'jspinyin',
   types: ['text', 'url', 'email'],
   width: 10,
   textLayoutOverwrite: {
-    ',': '，',
-    '.': '。'
-  },
-  alt: {
-    '.': '.,?!;:',
-    '。': '。，？！；：'
+    ',': false,
+    '.': false
   },
   keys: [
     [
@@ -24,28 +19,29 @@ Keyboards['zh-Hans-Pinyin'] = {
     ], [
       { value: 'a' }, { value: 's' }, { value: 'd' }, { value: 'f' },
       { value: 'g' } , { value: 'h' }, { value: 'j' }, { value: 'k' },
-      { value: 'l' }
+      { value: 'l' }, { value: "'" }
     ], [
-      { value: "'", ratio: 1.5 }, { value: 'z' },
+      { value: '，', ratio: 1.5 }, { value: 'z' },
       { value: 'x' }, { value: 'c' }, { value: 'v' }, { value: 'b' },
       { value: 'n' }, { value: 'm' },
       { value: '⌫', ratio: 1.5, keyCode: KeyEvent.DOM_VK_BACK_SPACE }
     ], [
-      { value: '12&', keyCode: -21, ratio: 1.5, className: 'switch-key' },
-      { value: '&nbsp', keyCode: KeyEvent.DOM_VK_SPACE, ratio: 6 },
-      { value: '↵', ratio: 2.5, keyCode: KeyEvent.DOM_VK_RETURN }
+      { value: '?123', keyCode: -21, ratio: 1.5 },
+      { value: '空格', keyCode: KeyEvent.DOM_VK_SPACE, ratio: 5 },
+      { value: '。', ratio: 1.5 },
+      { value: '↵', ratio: 2, keyCode: KeyEvent.DOM_VK_RETURN }
     ]
   ]
 };

 Keyboards['zh-Hans-Pinyin-Symbol-Ch-1'] = {
+  hidesSwitchKey: true,
   needsCandidatePanel: true,
   disableAlternateLayout: true,
-  needsCommaKey: true,
   width: 10,
   textLayoutOverwrite: {
-    ',': '，',
-    '.': '。'
+    ',': false,
+    '.': false
   },
   keys: [
     [
@@ -58,32 +54,30 @@ Keyboards['zh-Hans-Pinyin-Symbol-Ch-1'] = {
       { value: '～' }, { value: '（' }, { value: '）' },
       { value: '“' }, { value: '”' }
     ], [
-      { value: 'Alt', keyCode: -22 },
-      { value: '<div class="zh-encode-switcher \
-                            zh-encode-switcher-half">半</div> \
-                <div class="zh-encode-switcher \
-                            zh-encode-switcher-selected">全</div>',
-        keyCode: -30
-      },
-      { value: '、' }, { value: '＠' }, { value: '＆' }, { value: '＾' },
-      { value: '＃' }, { value: '％' }, { value: '／' },
-      { value: '⌫', keyCode: KeyEvent.DOM_VK_BACK_SPACE }
+      { value: '1/2', ratio: 1.5, keyCode: -22 },
+      { value: '、' }, { value: '@' }, { value: '&' }, { value: '^' },
+      { value: '#' }, { value: '%' }, { value: '/' },
+      { value: '⌫', ratio: 1.5, keyCode: KeyEvent.DOM_VK_BACK_SPACE }
     ], [
-      { value: 'ABC', ratio: 1.5, keyCode: -11 },
-      { value: '&nbsp', ratio: 6, keyCode: KeyboardEvent.DOM_VK_SPACE },
-      { value: '↵', ratio: 2.5, keyCode: KeyEvent.DOM_VK_RETURN }
+      { value: '返回', ratio: 1.5, keyCode: -11 },
+      { value: '中/<span class="pinyin-toggle-button-small">英</span>',
+        ratio: 1.5, keyCode: -30 },
+      { value: '，' },
+      { value: '空格', ratio: 3, keyCode: KeyboardEvent.DOM_VK_SPACE },
+      { value: '。' },
+      { value: '↵', ratio: 2, keyCode: KeyEvent.DOM_VK_RETURN }
     ]
   ]
 };

 Keyboards['zh-Hans-Pinyin-Symbol-Ch-2'] = {
+  hidesSwitchKey: true,
   needsCandidatePanel: true,
   disableAlternateLayout: true,
-  needsCommaKey: true,
   width: 10,
   textLayoutOverwrite: {
-    ',': '，',
-    '.': '。'
+    ',': false,
+    '.': false
   },
   keys: [
     [
@@ -91,33 +85,35 @@ Keyboards['zh-Hans-Pinyin-Symbol-Ch-2'] = {
       { value: '5' }, { value: '6' }, { value: '7' } , { value: '8' },
       { value: '9' }, { value: '0' }
     ], [
-      { value: '＋' }, { value: '－' }, { value: '＿' }, { value: '＝' },
-      { value: '＄' }, { value: '￥' }, { value: '《' }, { value: '》' },
-      { value: '｛' }, { value: '｝' }
+      { value: '+' }, { value: '-' }, { value: '_' }, { value: '=' },
+      { value: '$' }, { value: '￥' }, { value: '《' }, { value: '》' },
+      { value: '{' }, { value: '}' }
     ], [
-      { value: 'Alt', keyCode: -21 },
-      { value: '<div class="zh-encode-switcher \
-                            zh-encode-switcher-half">半</div> \
-                <div class="zh-encode-switcher \
-                            zh-encode-switcher-selected">全</div>',
-        keyCode: -30
-      },
+      { value: '2/2', ratio: 1.5, keyCode: -21 },
       { value: '【' }, { value: '】' }, { value: '「' }, { value: '」' },
-      { value: '＊' }, { value: '·' }, { value: '｜' },
-      { value: '⌫', keyCode: KeyEvent.DOM_VK_BACK_SPACE }
+      { value: '＊' }, { value: '·' }, { value: '|' },
+      { value: '⌫', ratio: 1.5, keyCode: KeyEvent.DOM_VK_BACK_SPACE }
     ], [
-      { value: 'ABC', ratio: 1.5, keyCode: -11 },
-      { value: '&nbsp', ratio: 6, keyCode: KeyboardEvent.DOM_VK_SPACE },
-      { value: '↵', ratio: 2.5, keyCode: KeyEvent.DOM_VK_RETURN }
+      { value: '返回', ratio: 1.5, keyCode: -11 },
+      { value: '中/<span class="pinyin-toggle-button-small">英</span>',
+        ratio: 1.5, keyCode: -30 },
+      { value: '，' },
+      { value: '空格', ratio: 3, keyCode: KeyboardEvent.DOM_VK_SPACE },
+      { value: '。' },
+      { value: '↵', ratio: 2, keyCode: KeyEvent.DOM_VK_RETURN }
     ]
   ]
 };

 Keyboards['zh-Hans-Pinyin-Symbol-En-1'] = {
+  hidesSwitchKey: true,
   needsCandidatePanel: true,
   disableAlternateLayout: true,
-  needsCommaKey: true,
   width: 10,
+  textLayoutOverwrite: {
+    ',': false,
+    '.': false
+  },
   keys: [
     [
       { value: '1' }, { value: '2' }, { value: '3' } , { value: '4' },
@@ -128,29 +124,31 @@ Keyboards['zh-Hans-Pinyin-Symbol-En-1'] = {
       { value: '…' }, { value: '~' }, { value: '(' }, { value: ')' },
       { value: '\'' }, { value: '"' }
     ], [
-      { value: 'Alt', keyCode: -32 },
-      { value: '<div class="zh-encode-switcher \
-                            zh-encode-switcher-half \
-                            zh-encode-switcher-selected">半</div> \
-                <div class="zh-encode-switcher">全</div>',
-        keyCode: -20
-      },
+      { value: '1/2', ratio: 1.5, keyCode: -32 },
       { value: '\\' }, { value: '@' }, { value: '&' }, { value: '^' },
       { value: '#' }, { value: '%' }, { value: '/' },
-      { value: '⌫', keyCode: KeyEvent.DOM_VK_BACK_SPACE }
+      { value: '⌫', ratio: 1.5, keyCode: KeyEvent.DOM_VK_BACK_SPACE }
     ], [
-      { value: 'ABC', ratio: 1.5, keyCode: -11 },
-      { value: '&nbsp', ratio: 6, keyCode: KeyboardEvent.DOM_VK_SPACE },
-      { value: '↵', ratio: 2.5, keyCode: KeyEvent.DOM_VK_RETURN }
+      { value: '返回', ratio: 1.5, keyCode: -11 },
+      { value: '<span class="pinyin-toggle-button-small">中</span>/英',
+        ratio: 1.5, keyCode: -20 },
+      { value: ',' },
+      { value: '空格', ratio: 3, keyCode: KeyboardEvent.DOM_VK_SPACE },
+      { value: '.' },
+      { value: '↵', ratio: 2, keyCode: KeyEvent.DOM_VK_RETURN }
     ]
   ]
 };

 Keyboards['zh-Hans-Pinyin-Symbol-En-2'] = {
+  hidesSwitchKey: true,
   needsCandidatePanel: true,
   disableAlternateLayout: true,
-  needsCommaKey: true,
   width: 10,
+  textLayoutOverwrite: {
+    ',': false,
+    '.': false
+  },
   keys: [
     [
       { value: '1' }, { value: '2' }, { value: '3' } , { value: '4' },
@@ -158,23 +156,21 @@ Keyboards['zh-Hans-Pinyin-Symbol-En-2'] = {
       { value: '9' }, { value: '0' }
     ], [
       { value: '+' }, { value: '-' }, { value: '_' }, { value: '=' },
-      { value: '$' }, { value: '¥' }, { value: '<' }, { value: '>' },
+      { value: '$' }, { value: '￥' }, { value: '<' }, { value: '>' },
       { value: '{' }, { value: '}' }
     ], [
-      { value: 'Alt', keyCode: -31 },
-      { value: '<div class="zh-encode-switcher \
-                            zh-encode-switcher-half \
-                            zh-encode-switcher-selected">半</div> \
-                <div class="zh-encode-switcher">全</div>',
-        keyCode: -20
-      },
+      { value: '2/2', ratio: 1.5, keyCode: -31 },
       { value: '[' }, { value: ']' }, { value: '「' }, { value: '」' },
       { value: '*' }, { value: '`' }, { value: '|' },
-      { value: '⌫', keyCode: KeyEvent.DOM_VK_BACK_SPACE }
+      { value: '⌫', ratio: 1.5, keyCode: KeyEvent.DOM_VK_BACK_SPACE }
     ], [
-      { value: 'ABC', ratio: 1.5, keyCode: -11 },
-      { value: '&nbsp', ratio: 6, keyCode: KeyboardEvent.DOM_VK_SPACE },
-      { value: '↵', ratio: 2.5, keyCode: KeyEvent.DOM_VK_RETURN }
+      { value: '返回', ratio: 1.5, keyCode: -11 },
+      { value: '<span class="pinyin-toggle-button-small">中</span>/英',
+        ratio: 1.5, keyCode: -20 },
+      { value: ',' },
+      { value: '空格', ratio: 3, keyCode: KeyboardEvent.DOM_VK_SPACE },
+      { value: '.' },
+      { value: '↵', ratio: 2, keyCode: KeyEvent.DOM_VK_RETURN }
     ]
   ]
 };
diff --git a/apps/keyboard/js/render.js b/apps/keyboard/js/render.js
index 2bb7fb0..b02dfb7 100644
--- a/apps/keyboard/js/render.js
+++ b/apps/keyboard/js/render.js
@@ -106,23 +106,22 @@ const IMERender = (function() {
     inputMethodName = name;
   };

-  // Accepts a state object with two properties.
-  //   Set isUpperCaseLocked to true if locked
-  //   Set isUpperCase to true when uppercase is enabled
-  //   Use false on both of these properties when uppercase is disabled
+  // Accepts three values: true / 'locked' / false
+  //   Use 'locked' when caps are locked
+  //   Use true when uppercase is enabled
+  //   Use false when uppercase if disabled
   var setUpperCaseLock = function kr_setUpperCaseLock(state) {
     var capsLockKey = activeIme.querySelector(
-      'button:not([disabled])' +
-      '[data-keycode="' + KeyboardEvent.DOM_VK_CAPS_LOCK + '"]'
+      'button[data-keycode="' + KeyboardEvent.DOM_VK_CAPS_LOCK + '"]'
     );

     if (!capsLockKey)
       return;

-    if (state.isUpperCaseLocked) {
+    if (state === 'locked') {
       capsLockKey.classList.remove('kbr-key-active');
       capsLockKey.classList.add('kbr-key-hold');
-    } else if (state.isUpperCase) {
+    } else if (state) {
       capsLockKey.classList.add('kbr-key-active');
       capsLockKey.classList.remove('kbr-key-hold');
     } else {
@@ -135,6 +134,9 @@ const IMERender = (function() {

   // Draw the keyboard and its components. Meat is here.
   var draw = function kr_draw(layout, flags, callback) {
+    perfTimer.printTime('IMERender.draw');
+    perfTimer.startTimer('IMERender.draw');
+
     flags = flags || {};

     var supportsSwitching = 'mozInputMethod' in navigator ?
@@ -190,6 +192,8 @@ const IMERender = (function() {
     // XXX We have to wait for layout to complete before
     // return this function
     container.offsetWidth;
+
+    perfTimer.printTime('BLOCKING IMERender.draw', 'IMERender.draw');
   };

   /**
@@ -240,24 +244,11 @@ const IMERender = (function() {
         // Uppercase keycode
         var upperCode = key.keyCode || upperCaseKeyChar.charCodeAt(0);

-        var attributeList = [];
         var className = '';
-
         if (isSpecialKey(key)) {
           className = 'special-key';
-        } else {
-          // The 'key' role tells an assistive technology that these buttons
-          // are used for composing text or numbers, and should be easier to
-          // activate than usual buttons. We keep special keys, like backspace,
-          // as buttons so that their activation is not performed by mistake.
-          attributeList.push({
-            key: 'role',
-            value: 'key'
-          });
-
-          if (layout.keyClassName) {
-            className = layout.keyClassName;
-          }
+        } else if (layout.keyClassName) {
+          className = layout.keyClassName;
         }

         if (key.className) {
@@ -277,6 +268,7 @@ const IMERender = (function() {
           dataset.push({'key': 'compositeKey', 'value': key.compositeKey});
         }

+        var attributeList = [];
         if (key.disabled) {
           attributeList.push({
             key: 'disabled',
@@ -324,7 +316,7 @@ const IMERender = (function() {
       container.insertBefore(
         candidatePanelToggleButtonCode(), container.firstChild);
       container.insertBefore(candidatePanelCode(), container.firstChild);
-      showCandidates([]);
+      showCandidates([], true);

       container.classList.add('candidate-panel');
     } else {
@@ -350,14 +342,12 @@ const IMERender = (function() {
     key.classList.remove('lowercase');
   };

-  var toggleCandidatePanel = function(expand) {
+  var toggleCandidatePanel = function(expand, resetScroll) {
     var candidatePanel = activeIme.querySelector('.keyboard-candidate-panel');
-    candidatePanel.scrollTop = candidatePanel.scrollLeft = 0;
-
-    toggleCandidatePanelWithoutResetScroll(expand);
-  };
+    if (resetScroll) {
+      candidatePanel.scrollTop = candidatePanel.scrollLeft = 0;
+    }

-  var toggleCandidatePanelWithoutResetScroll = function(expand) {
     if (expand) {
       ime.classList.remove('candidate-panel');
       ime.classList.add('full-candidate-panel');
@@ -373,7 +363,7 @@ const IMERender = (function() {

   // Show candidates
   // Each candidate is a string or an array of two strings
-  var showCandidates = function(candidates) {
+  var showCandidates = function(candidates, noWindowHeightUpdate) {
     if (!activeIme)
       return;

@@ -490,7 +480,7 @@ const IMERender = (function() {
         candidatePanel.innerHTML = '';

         candidatePanelToggleButton.style.display = 'none';
-        toggleCandidatePanelWithoutResetScroll(false);
+        toggleCandidatePanel(false, false);
         docFragment = candidatesFragmentCode(1, candidates, true);
         candidatePanel.appendChild(docFragment);
       }
@@ -644,11 +634,6 @@ const IMERender = (function() {
         });
       }

-      attributeList.push({
-        key: 'role',
-        value: 'key'
-      });
-
       content.appendChild(
         buildKey(alt, '', width + 'px', dataset, null, attributeList));
     });
@@ -730,6 +715,9 @@ const IMERender = (function() {

   // Recalculate dimensions for the current render
   var resizeUI = function(layout, callback) {
+    perfTimer.printTime('IMERender.resizeUI');
+    perfTimer.startTimer('IMERender.resizeUI');
+
     var RESIZE_UI_TIMEOUT = 0;

     // This function consists of two actual functions
@@ -738,6 +726,9 @@ const IMERender = (function() {
     // these are seperated into separate groups because they do similar
     // operations and minimizing reflow causes because of this
     function setKeyWidth() {
+      perfTimer.printTime('IMERender.resizeUI:setKeyWidth');
+      perfTimer.startTimer('IMERender.resizeUI:setKeyWidth');
+
       [].forEach.call(rows, function(rowEl, rIx) {
         var rowLayoutWidth = parseInt(rowEl.dataset.layoutWidth, 10);
         var keysInRow = rowEl.childNodes.length;
@@ -769,9 +760,15 @@ const IMERender = (function() {
       });

       setTimeout(getVisualData, RESIZE_UI_TIMEOUT);
+
+      perfTimer.printTime('BLOCKING IMERender.resizeUI:setKeyWidth',
+        'IMERender.resizeUI:setKeyWidth');
     }

     function getVisualData() {
+      perfTimer.printTime('IMERender.resizeUI:getVisualData');
+      perfTimer.startTimer('IMERender.resizeUI:getVisualData');
+
       // Now that key sizes have been set and adjusted for the row,
       // loop again and record the size and position of each. If we
       // do this as part of the loop above, we get bad position data.
@@ -810,6 +807,9 @@ const IMERender = (function() {
       // XXX We have to wait for layout to complete before
       // return this function
       ime.offsetWidth;
+
+      perfTimer.printTime('BLOCKING IMERender.resizeUI:getVisualData',
+        'IMERender.resizeUI:getVisualData');
     }

     var changeScale;
@@ -852,6 +852,8 @@ const IMERender = (function() {
     // XXX We have to wait for layout to complete before
     // return this function
     activeIme.offsetWidth;
+
+    perfTimer.printTime('BLOCKING IMERender.resizeUI', 'IMERender.resizeUI');
   };

   //
@@ -948,6 +950,14 @@ const IMERender = (function() {
       contentNode.dataset[data.key] = data.value;
     });

+    if (!contentNode.classList.contains('special-key')) {
+      // The 'key' role tells an assistive technology that these buttons
+      // are used for composing text or numbers, and should be easier to
+      // activate than usual buttons. We keep special keys, like backsapce, as
+      // buttons so that their activation is not performed by mistake.
+      contentNode.setAttribute('role', 'key');
+    }
+
     var vWrapperNode = document.createElement('span');
     vWrapperNode.className = 'visual-wrapper';

diff --git a/apps/keyboard/style/keyboard.css b/apps/keyboard/style/keyboard.css
index 5430819..5d9c7f3 100644
--- a/apps/keyboard/style/keyboard.css
+++ b/apps/keyboard/style/keyboard.css
@@ -92,6 +92,8 @@ button::-moz-focus-inner {
   border-radius: 0;  /* To override the system-default border radius for button element  */
   background: none;

+  /* Delay hiding the highlighting long enough to make sure the user sees it. */
+  transition: background-color 0s ease-in 0.01s;
 }

 /* Visible keys */
@@ -117,6 +119,9 @@ button::-moz-focus-inner {
   text-align: center;
   border-right: 0.1rem solid #525b5e;
   border-left: 0.1rem solid transparent;
+
+  /* Delay hiding the highlighting long enough to make sure the user sees it. */
+  transition: color 0s ease-in 0.01s;
 }

 .popup {
@@ -136,9 +141,15 @@ button::-moz-focus-inner {
   text-align: center;
 }

+.keyboard-key:not(.special-key) > .visual-wrapper > .popup {
+  /* Delay hiding the bubble long enough to make sure the user sees it. */
+  transition: visibility 0s ease-in 0.01s;
+}

 .keyboard-key.highlighted {
   background-color: #4a5255;
+
+  transition-delay: 0s;
 }

 .keyboard-key:last-child > .visual-wrapper > .key-element {
@@ -147,6 +158,8 @@ button::-moz-focus-inner {

 .keyboard-key.highlighted > .visual-wrapper > .key-element {
   color: #00caf2;
+
+  transition-delay: 0s;
 }

 /* Show the bubble text when the button is highlighted. */
@@ -155,6 +168,9 @@ button::-moz-focus-inner {
   visibility: visible;
 }

+.keyboard-key:not(.special-key).highlighted > .visual-wrapper > .popup {
+  transition-delay: 0s;
+}

 /* Special rules for lowercase and uppercase popups */

@@ -271,20 +287,8 @@ button::-moz-focus-inner {
   font-size: 1.6rem;
 }

-div.zh-encode-switcher-half {
-  margin-top: -0.8rem;
-}
-
-div.zh-encode-switcher {
-  width: 100%;
-  height: calc(50%);
-  padding: 0;
-  float: left;
-  font-size: 1.8rem;
-}
-
-div.zh-encode-switcher-selected {
-  color: #00AACC;
+span.pinyin-toggle-button-small {
+  font-size: 70%;
 }

 /* Alternatives menu -- this menu appears when you tap and hold a key that has
@@ -773,7 +777,7 @@ bubble above the key when you tap and hold. */
 }

 @media (orientation:portrait) {
-  .special-key > .visual-wrapper > .key-element[data-label="அஆஇ"] {
+  .special-key > .visual-wrapper > span[data-label="அஆஇ"] {
     font-size: 1.1rem;
   }

@@ -809,7 +813,7 @@ bubble above the key when you tap and hold. */

 @media (orientation:landscape) {
   #keyboard.landscape .special-key > .visual-wrapper >
-    .key-element[data-label="அஆஇ"] {
+    span[data-label="அஆஇ"] {
     font-size: 1.7rem;
   }

diff --git a/apps/keyboard/test/marionette/keyboardtestapp/index.html b/apps/keyboard/test/marionette/keyboardtestapp/index.html
index fcedee8..c4727dc 100644
--- a/apps/keyboard/test/marionette/keyboardtestapp/index.html
+++ b/apps/keyboard/test/marionette/keyboardtestapp/index.html
@@ -8,7 +8,5 @@
     <div>
       <input type="text" id="textInput"/>
     </div>
-    <div id="nonInput">
-    </div>
   </body>
 </html>
diff --git a/apps/keyboard/test/marionette/lib/keyboard.js b/apps/keyboard/test/marionette/lib/keyboard.js
index 1974bfc..297dfba 100644
--- a/apps/keyboard/test/marionette/lib/keyboard.js
+++ b/apps/keyboard/test/marionette/lib/keyboard.js
@@ -17,7 +17,6 @@ Keyboard.MANIFEST_URL =  'app://keyboard.gaiamobile.org/manifest.webapp';

 // Selectors for the DOM in built-in keyboard app.
 Keyboard.Selector = Object.freeze({
-  currentPanel: '.keyboard-type-container[data-active]',
   imeSwitchingKey: '.keyboard-type-container[data-active] ' +
     '.keyboard-key[data-keycode="-3"]',
   returnKey: '.keyboard-type-container[data-active] ' +
@@ -36,9 +35,5 @@ Keyboard.prototype = {
   },
   get dismissSuggestionsButton() {
     return this.client.findElement(Keyboard.Selector.dismissSuggestionsButton);
-  },
-
-  get currentPanel() {
-    return this.client.findElement(Keyboard.Selector.currentPanel);
   }
 };
diff --git a/apps/keyboard/test/marionette/lib/keyboard_test_app.js b/apps/keyboard/test/marionette/lib/keyboard_test_app.js
index c47a2e2..4f8038e 100644
--- a/apps/keyboard/test/marionette/lib/keyboard_test_app.js
+++ b/apps/keyboard/test/marionette/lib/keyboard_test_app.js
@@ -7,18 +7,10 @@ module.exports = KeyboardTests;

 KeyboardTests.ORIGIN = 'app://keyboardtestapp.gaiamobile.org';

-KeyboardTests.Selector = Object.freeze({
-  textInput: '#textInput',
-  nonInputArea: '#nonInput'
-});
-
 KeyboardTests.prototype = {
-  get textInput() {
-    return this.client.findElement(KeyboardTests.Selector.textInput);
-  },

-  get nonInputArea() {
-    return this.client.findElement(KeyboardTests.Selector.nonInputArea);
+  get textInput() {
+    return this.client.findElement('#textInput');
   },

   launch: function() {
diff --git a/apps/keyboard/test/marionette/manifest.ini b/apps/keyboard/test/marionette/manifest.ini
deleted file mode 100644
index beb9a2f..0000000
--- a/apps/keyboard/test/marionette/manifest.ini
+++ /dev/null
@@ -1,4 +0,0 @@
-[launch_test.js]
-[switching_test.js]
-[dismiss_test.js]
-[uninstallation_test.js]
diff --git a/apps/keyboard/test/marionette/uninstallation_test.js b/apps/keyboard/test/marionette/uninstallation_test.js
deleted file mode 100644
index 472725d..0000000
--- a/apps/keyboard/test/marionette/uninstallation_test.js
+++ /dev/null
@@ -1,114 +0,0 @@
-/*
- *  This test is to ensure that system's keyboard manager would
- *  correctly show the built-in keyboard app after the previous activated
- *  keyboard has been removed.
- */
-
-'use strict';
-
-var KeyboardTestApp = require('./lib/keyboard_test_app');
-var ImeTestApp = require('./lib/ime_test_app');
-var Keyboard = require('./lib/keyboard');
-var System = require('./lib/system');
-var assert = require('assert');
-var AppInstall =
-  require('../../../../apps/system/test/marionette/lib/app_install');
-
-marionette('Show Keyboard App after uninstallation', function() {
-  var keyboardTestApp = null;
-  var keyboard = null;
-  var system = null;
-  var imeTestApp = null;
-  var appInstall = null;
-  var client = null;
-  var apps = {};
-
-  // Pre-install keyboard testing app
-  apps[KeyboardTestApp.ORIGIN] = __dirname + '/keyboardtestapp';
-
-  // And a testing 3rd-party IME app
-  apps[ImeTestApp.ORIGIN] = __dirname + '/imetestapp';
-
-  var keyboardSettings = {};
-  keyboardSettings[Keyboard.MANIFEST_URL] = {
-    'en': true,
-    'number': true
-  };
-
-  // Enable a testing IME app
-  keyboardSettings[ImeTestApp.MANIFEST_URL] = {
-    'lol': true
-  };
-
-  client = marionette.client({
-    apps: apps,
-    prefs: {
-      'focusmanager.testmode': true
-    },
-    settings: {
-      'keyboard.enabled-layouts': keyboardSettings
-    }
-  });
-
-  appInstall = new AppInstall(client);
-
-  /*
-   * To check the 3rd-party IME is shown.
-   */
-  function check3rdPartyIme() {
-    // switch back to system
-    client.switchToFrame();
-    system.switchToActiveKeyboardFrame();
-    assert.ok(imeTestApp.sendKeyButton.displayed());
-  }
-
-  setup(function() {
-    keyboard =  new Keyboard(client);
-    system =  new System(client);
-    imeTestApp = new ImeTestApp(client);
-
-    // create a keyboard test app
-    keyboardTestApp = new KeyboardTestApp(client);
-    keyboardTestApp.launch();
-    keyboardTestApp.textInput.click();
-
-    // Wait for the keyboard pop up and switch to it
-    system.waitForKeyboardFrameDisplayed();
-    system.switchToActiveKeyboardFrame();
-
-    // Click to switch to next IME
-    keyboard.imeSwitchingKey.click();
-    check3rdPartyIme();
-
-    // Uninstall the current active IME
-    appInstall.uninstall(ImeTestApp.MANIFEST_URL);
-
-    // Click the input field again to check the built-in keyboard
-    client.switchToFrame();
-    client.apps.switchToApp(KeyboardTestApp.ORIGIN);
-    // XXX: do something to remove the focus
-    keyboardTestApp.nonInputArea.click();
-    keyboardTestApp.textInput.click();
-
-    // Wait for the keyboard pop up and switch to it
-    system.waitForKeyboardFrameDisplayed();
-    system.switchToActiveKeyboardFrame();
-  });
-
-  test('Fallback to built-in keyboard when the active IME has been ' +
-       'uninstalled', function() {
-    assert.ok(keyboard.currentPanel.displayed());
-  });
-
-  test('Should not show IME switching key after uninstallation', function() {
-    client.findElement(Keyboard.Selector.imeSwitchingKey,
-      function(err, element) {
-        // Should not find the IME switching key
-        if (err) {
-          assert.equal(err.name, 'NoSuchElement');
-        } else {
-          assert.ok(false);
-        }
-      });
-  });
-});
diff --git a/apps/keyboard/test/unit/jspinyin_test.js b/apps/keyboard/test/unit/jspinyin_test.js
index ea168ac..7f162a8 100644
--- a/apps/keyboard/test/unit/jspinyin_test.js
+++ b/apps/keyboard/test/unit/jspinyin_test.js
@@ -177,11 +177,12 @@ suite('jspinyin', function() {
   });

   test('activate', function(done) {
+    this.sinon.spy(glue, 'alterKeyboard');
     this.sinon.stub(jspinyin, '_start', function() {
       done(function() {
         assert.equal(jspinyin._keypressQueue[0], KeyEvent.DOM_VK_RETURN);
         assert.isNull(jspinyin._uninitTimer);
-        assert.equal(jspinyin._keyboard, 'zh-Hans-Pinyin');
+        assert.isTrue(glue.alterKeyboard.calledWith('zh-Hans-Pinyin'));
         jspinyin._resetKeypressQueue();
       });
     });
@@ -197,6 +198,7 @@ suite('jspinyin', function() {
   });

   test('activate twice', function() {
+    this.sinon.spy(glue, 'alterKeyboard');
     this.sinon.stub(jspinyin, '_start');

     mockIndexedDB({
@@ -207,7 +209,7 @@ suite('jspinyin', function() {
         }, 0);

         jspinyin.activate('zh-Hans', { type: 'textarea' }, {});
-        assert.equal(jspinyin._keyboard, 'zh-Hans-Pinyin');
+        assert.isTrue(glue.alterKeyboard.calledWith('zh-Hans-Pinyin'));
       }
     });
   });
diff --git a/apps/keyboard/test/unit/keyboard/active_targets_manager_test.js b/apps/keyboard/test/unit/keyboard/active_targets_manager_test.js
index 5ec164f..32d0417 100644
--- a/apps/keyboard/test/unit/keyboard/active_targets_manager_test.js
+++ b/apps/keyboard/test/unit/keyboard/active_targets_manager_test.js
@@ -33,7 +33,6 @@ suite('ActiveTargetsManager', function() {
     manager.ontargetmovedin = this.sinon.stub();
     manager.ontargetcommitted = this.sinon.stub();
     manager.ontargetcancelled = this.sinon.stub();
-    manager.ontargetdoubletapped = this.sinon.stub();
     manager.start();

     assert.isTrue(window.UserPressManager.calledWithNew());
@@ -126,81 +125,6 @@ suite('ActiveTargetsManager', function() {
       assert.isTrue(window.clearTimeout.calledTwice);
     });

-    test('double tap (within DOUBLE_TAP_TIMEOUT)', function() {
-      var pressEnd = {
-        target: press0.target
-      };
-      userPressManagerStub.onpressend(pressEnd, id0);
-
-      assert.isTrue(manager.ontargetcommitted.calledOnce);
-      assert.isFalse(manager.ontargetdoubletapped.calledOnce,
-        'ontargetdoubletapped should not be called yet.');
-      assert.isTrue(
-        manager.ontargetcommitted.calledWith(press0.target));
-
-      userPressManagerStub.onpressstart(press0, id0);
-      userPressManagerStub.onpressend(pressEnd, id0);
-
-      assert.isTrue(manager.ontargetcommitted.calledOnce);
-      assert.isTrue(manager.ontargetdoubletapped.calledOnce);
-      assert.isTrue(
-        manager.ontargetdoubletapped.calledWith(press0.target));
-    });
-
-    test('double tap (after DOUBLE_TAP_TIMEOUT)', function() {
-      var pressEnd = {
-        target: press0.target
-      };
-      userPressManagerStub.onpressend(pressEnd, id0);
-
-      assert.isTrue(alternativesCharMenuManagerStub.hide.calledOnce);
-      assert.isTrue(manager.ontargetcommitted.calledOnce);
-      assert.isFalse(manager.ontargetdoubletapped.calledOnce);
-      assert.isTrue(
-        manager.ontargetcommitted.calledWith(press0.target));
-      assert.equal(window.setTimeout.getCall(1).args[1],
-        manager.DOUBLE_TAP_TIMEOUT);
-      window.setTimeout.getCall(1).args[0].call(window);
-
-      userPressManagerStub.onpressstart(press0, id0);
-      userPressManagerStub.onpressend(pressEnd, id0);
-
-      assert.isTrue(manager.ontargetcommitted.calledTwice);
-      assert.isFalse(manager.ontargetdoubletapped.calledOnce,
-        'ontargetdoubletapped should not be called.');
-      assert.isTrue(
-        manager.ontargetcommitted.getCall(1).calledWith(press0.target));
-    });
-
-    test('triple tap (within DOUBLE_TAP_TIMEOUT)', function() {
-      var pressEnd = {
-        target: press0.target
-      };
-      userPressManagerStub.onpressend(pressEnd, id0);
-
-      assert.isTrue(manager.ontargetcommitted.calledOnce);
-      assert.isFalse(manager.ontargetdoubletapped.calledOnce);
-      assert.isTrue(
-        manager.ontargetcommitted.calledWith(press0.target));
-
-      userPressManagerStub.onpressstart(press0, id0);
-      userPressManagerStub.onpressend(pressEnd, id0);
-
-      assert.isTrue(manager.ontargetcommitted.calledOnce);
-      assert.isTrue(manager.ontargetdoubletapped.calledOnce);
-      assert.isTrue(
-        manager.ontargetdoubletapped.calledWith(press0.target));
-
-      userPressManagerStub.onpressstart(press0, id0);
-      userPressManagerStub.onpressend(pressEnd, id0);
-
-      assert.isTrue(manager.ontargetcommitted.calledTwice);
-      assert.isTrue(manager.ontargetdoubletapped.calledOnce,
-        'ontargetdoubletapped should not be called again.');
-      assert.isTrue(
-        manager.ontargetcommitted.getCall(1).calledWith(press0.target));
-    });
-
     suite('clearAllTargets', function() {
       setup(function() {
         manager.clearAllTargets();
@@ -262,7 +186,7 @@ suite('ActiveTargetsManager', function() {
         assert.isTrue(
           manager.ontargetlongpressed.calledWith(press0.target));
         assert.isTrue(
-          alternativesCharMenuManagerStub.show.calledWith(press0.target));
+          alternativesCharMenuManagerStub.show.calledWith(press0.target, id0));
       });

       test('press end', function() {
@@ -289,6 +213,7 @@ suite('ActiveTargetsManager', function() {
         };

         alternativesCharMenuManagerStub.isShown = true;
+        alternativesCharMenuManagerStub.isMenuTouch.withArgs(id0).returns(true);
         alternativesCharMenuManagerStub
           .isInMenuArea.withArgs(press0).returns(true);
         alternativesCharMenuManagerStub.getMenuTarget.returns(altTarget);
@@ -418,7 +343,7 @@ suite('ActiveTargetsManager', function() {
           assert.isTrue(
             manager.ontargetlongpressed.calledWith(movedTarget));
           assert.isTrue(
-            alternativesCharMenuManagerStub.show.calledWith(movedTarget));
+            alternativesCharMenuManagerStub.show.calledWith(movedTarget, id0));
         });

         test('press end', function() {
@@ -448,15 +373,11 @@ suite('ActiveTargetsManager', function() {
       setup(function() {
         userPressManagerStub.onpressstart(press1, id1);

-        assert.isTrue(manager.ontargetcommitted.calledWith(press0.target),
-          'Commit the first press when the second press starts.');
-        assert.isTrue(alternativesCharMenuManagerStub.hide.calledOnce);
-
         assert.isTrue(
           manager.ontargetactivated.calledWith(press1.target));
-
-        assert.equal(window.clearTimeout.callCount, 3);
-        assert.equal(window.setTimeout.callCount, 3);
+        assert.isTrue(window.clearTimeout.calledTwice);
+        assert.isFalse(window.setTimeout.calledTwice,
+          'No long press for second tap.');
       });

       test('press end second press, and first press', function() {
@@ -467,10 +388,10 @@ suite('ActiveTargetsManager', function() {
         };
         userPressManagerStub.onpressend(pressEnd, id1);

-        assert.isTrue(alternativesCharMenuManagerStub.hide.calledTwice);
+        assert.isTrue(alternativesCharMenuManagerStub.hide.calledOnce);
         assert.isTrue(
           manager.ontargetcommitted.calledWith(press1.target));
-        assert.equal(window.clearTimeout.callCount, 4);
+        assert.equal(window.clearTimeout.callCount, 3);

         var pressEnd2 = {
           target: {
@@ -479,10 +400,10 @@ suite('ActiveTargetsManager', function() {
         };
         userPressManagerStub.onpressend(pressEnd2, id0);

-        assert.isTrue(alternativesCharMenuManagerStub.hide.calledTwice,
-          'No additional calls to hide()');
-        assert.isTrue(manager.ontargetcommitted.calledTwice,
-          'No additional calls to ontargetcommitted');
+        assert.isTrue(alternativesCharMenuManagerStub.hide.calledTwice);
+        assert.isTrue(
+          manager.ontargetcommitted.calledWith(press0.target));
+        assert.equal(window.clearTimeout.callCount, 4);
       });

       test('press end first press, and second press', function() {
@@ -505,10 +426,10 @@ suite('ActiveTargetsManager', function() {
         };
         userPressManagerStub.onpressend(pressEnd2, id1);

-        assert.isTrue(alternativesCharMenuManagerStub.hide.calledTwice,
-          'No additional calls to hide()');
-        assert.isTrue(manager.ontargetcommitted.calledTwice,
-          'No additional calls to ontargetcommitted');
+        assert.isTrue(alternativesCharMenuManagerStub.hide.calledTwice);
+        assert.isTrue(
+          manager.ontargetcommitted.calledWith(press1.target));
+        assert.equal(window.clearTimeout.callCount, 4);
       });
     });
   });
@@ -549,13 +470,7 @@ suite('ActiveTargetsManager', function() {
       assert.isTrue(window.clearTimeout.calledTwice);
     });

-    test('press move and press end (moved press)', function() {
-      var pressMove = {
-        target: press0.target,
-        moved: true
-      };
-      userPressManagerStub.onpressmove(pressMove, id0);
-
+    test('press end (moved press)', function() {
       var pressEnd = {
         target: press0.target,
         moved: true
diff --git a/apps/keyboard/test/unit/keyboard/alternatives_char_menu_manager_test.js b/apps/keyboard/test/unit/keyboard/alternatives_char_menu_manager_test.js
index ec993cd..3f4905a 100644
--- a/apps/keyboard/test/unit/keyboard/alternatives_char_menu_manager_test.js
+++ b/apps/keyboard/test/unit/keyboard/alternatives_char_menu_manager_test.js
@@ -9,6 +9,7 @@ suite('AlternativesCharMenuManager', function() {
   var container;
   var manager;
   var target;
+  var id = 123;

   var getFakeElementWithGetBoundingClientRect;

@@ -49,9 +50,9 @@ suite('AlternativesCharMenuManager', function() {
       getMenuContainer: function() {
         return container;
       },
-      upperCaseStateManager: {
-        isUpperCaseLocked: undefined,
-        isUpperCase: undefined
+      isCapitalizeLocked: function() {
+      },
+      isCapitalized: function() {
       },
       layoutManager: {
         currentModifiedLayout: {
@@ -84,13 +85,13 @@ suite('AlternativesCharMenuManager', function() {
   });

   test('show (lower case)', function() {
-    app.upperCaseStateManager.isUpperCase = false;
-    app.upperCaseStateManager.isUpperCaseLocked = false;
+    this.sinon.stub(app, 'isCapitalized').returns(false);
+    this.sinon.stub(app, 'isCapitalizeLocked').returns(false);

     app.layoutManager.currentModifiedLayout.alt.x =
       ['a', 'b', 'c', 'd'];

-    manager.show(target);
+    manager.show(target, id);

     assert.isTrue(window.IMERender.
       showAlternativesCharMenu.calledWith(target, ['a', 'b', 'c', 'd']));
@@ -98,18 +99,19 @@ suite('AlternativesCharMenuManager', function() {
       window.IMERender.showAlternativesCharMenu.getCall(0).args[1],
       'A copy of the array should be sent instead of the original one.');
     assert.isTrue(manager.isShown);
+    assert.isTrue(manager.isMenuTouch(id));
   });

   test('show (upper case)', function() {
-    app.upperCaseStateManager.isUpperCase = true;
-    app.upperCaseStateManager.isUpperCaseLocked = false;
+    this.sinon.stub(app, 'isCapitalized').returns(true);
+    this.sinon.stub(app, 'isCapitalizeLocked').returns(false);

     app.layoutManager.currentModifiedLayout.alt.X =
       ['A', 'B', 'C', 'D'];
     app.layoutManager.currentModifiedLayout.alt.X.upperCaseLocked =
       ['E', 'F', 'G', 'H'];

-    manager.show(target);
+    manager.show(target, id);

     assert.isTrue(window.IMERender.
         showAlternativesCharMenu.calledWith(target, ['A', 'B', 'C', 'D']));
@@ -117,18 +119,19 @@ suite('AlternativesCharMenuManager', function() {
       window.IMERender.showAlternativesCharMenu.getCall(0).args[1],
       'A copy of the array should be sent instead of the original one.');
     assert.isTrue(manager.isShown);
+    assert.isTrue(manager.isMenuTouch(id));
   });

   test('show (upper case locked)', function() {
-    app.upperCaseStateManager.isUpperCase = true;
-    app.upperCaseStateManager.isUpperCaseLocked = true;
+    this.sinon.stub(app, 'isCapitalized').returns(true);
+    this.sinon.stub(app, 'isCapitalizeLocked').returns(true);

     app.layoutManager.currentModifiedLayout.alt.X =
       ['A', 'B', 'C', 'D'];
     app.layoutManager.currentModifiedLayout.alt.X.upperCaseLocked =
       ['E', 'F', 'G', 'H'];

-    manager.show(target);
+    manager.show(target, id);

     assert.isTrue(window.IMERender.
         showAlternativesCharMenu.calledWith(target, ['E', 'F', 'G', 'H']));
@@ -136,33 +139,36 @@ suite('AlternativesCharMenuManager', function() {
       window.IMERender.showAlternativesCharMenu.getCall(0).args[1],
       'A copy of the array should be sent instead of the original one.');
     assert.isTrue(manager.isShown);
+    assert.isTrue(manager.isMenuTouch(id));
   });

   test('show (ignore key w/o alternatives)', function() {
-    app.upperCaseStateManager.isUpperCase = false;
-    app.upperCaseStateManager.isUpperCaseLocked = false;
+    this.sinon.stub(app, 'isCapitalized').returns(false);
+    this.sinon.stub(app, 'isCapitalizeLocked').returns(false);

-    manager.show(target);
+    manager.show(target, id);

     assert.isFalse(window.IMERender.showAlternativesCharMenu.called);
     assert.isFalse(manager.isShown);
+    assert.isFalse(manager.isMenuTouch(id));
   });

   suite('after shown', function() {
     setup(function() {
-      app.upperCaseStateManager.isUpperCase = false;
-      app.upperCaseStateManager.isUpperCaseLocked = false;
+      this.sinon.stub(app, 'isCapitalized').returns(false);
+      this.sinon.stub(app, 'isCapitalizeLocked').returns(false);

       app.layoutManager.currentModifiedLayout.alt.x =
         ['a', 'b', 'c', 'd'];

-      manager.show(target);
+      manager.show(target, id);
     });

     test('hide', function() {
       manager.hide();

       assert.equal(manager.isShown, false);
+      assert.isFalse(manager.isMenuTouch(id));
       assert.isTrue(window.IMERender.hideAlternativesCharMenu.calledOnce);
     });

diff --git a/apps/keyboard/test/unit/keyboard/candidate_panel_manager_test.js b/apps/keyboard/test/unit/keyboard/candidate_panel_manager_test.js
deleted file mode 100644
index e847238..0000000
--- a/apps/keyboard/test/unit/keyboard/candidate_panel_manager_test.js
+++ /dev/null
@@ -1,256 +0,0 @@
-'use strict';
-
-/* global CandidatePanelManager, MockEventTarget */
-
-require('/shared/test/unit/mocks/mock_event_target.js');
-require('/js/keyboard/candidate_panel_manager.js');
-
-suite('CandidatePanelManager', function() {
-  var app;
-  var manager;
-
-  setup(function() {
-    window.IMERender = {
-      showCandidates: this.sinon.stub(),
-      showMoreCandidates: this.sinon.stub(),
-      candidatePanel: new MockEventTarget(),
-      getNumberOfCandidatesPerRow: this.sinon.stub(),
-      toggleCandidatePanel: this.sinon.stub()
-    };
-
-    window.IMERender.getNumberOfCandidatesPerRow.returns(8);
-    window.IMERender.candidatePanel.dataset = {};
-    window.IMERender.candidatePanel.scrollHeight = 500;
-    window.IMERender.candidatePanel.clientHeight = 100;
-    window.IMERender.candidatePanel.scrollTop = 398;
-
-    this.sinon.spy(window.IMERender.candidatePanel, 'addEventListener');
-    this.sinon.spy(window.IMERender.candidatePanel, 'removeEventListener');
-
-    this.sinon.stub(window, 'setTimeout');
-    this.sinon.stub(window, 'clearTimeout');
-
-    app = {
-      inputMethodManager: {
-        currentIMEngine: {}
-      }
-    };
-
-    manager = new CandidatePanelManager(app);
-    manager.start();
-  });
-
-  teardown(function() {
-    window.IMERender = null;
-    app = null;
-  });
-
-  test('stop', function() {
-    manager.stop();
-
-    assert.isTrue(window.clearTimeout.calledOnce);
-  });
-
-  suite('updateCandidates', function() {
-    var candidates;
-    setup(function() {
-      candidates = (function() {
-        var arr = [];
-        var i = 500;
-        while (i--) {
-          arr.push(['candidate ' + i, i]);
-        }
-
-        return arr;
-      }());
-
-      manager.updateCandidates(candidates);
-
-      assert.isTrue(window.IMERender.showCandidates.calledWith(candidates));
-
-      window.IMERender.candidatePanel.dataset.truncated = 'true';
-      window.IMERender.candidatePanel.dataset.rowCount = '1';
-    });
-
-    test('showCandidates', function() {
-      manager.showCandidates();
-
-      assert.isTrue(
-        window.IMERender.showCandidates.getCall(1).calledWith(candidates));
-    });
-
-    test('toggleFullPanel', function() {
-      this.sinon.stub(manager, 'showFullPanel');
-      this.sinon.stub(manager, 'hideFullPanel');
-
-      manager.toggleFullPanel();
-      assert.isTrue(manager.showFullPanel.calledOnce);
-      manager.isFullPanelShown = true;
-
-      manager.toggleFullPanel();
-      assert.isTrue(manager.hideFullPanel.calledOnce);
-    });
-
-    suite('With engine.getMoreCandidates',function() {
-      var getMoreCandidatesStub;
-      setup(function() {
-        getMoreCandidatesStub =
-          app.inputMethodManager.currentIMEngine.getMoreCandidates =
-          this.sinon.stub();
-
-        // Assume the candidates are truncated at 10th candidate.
-        window.IMERender.candidatePanel.dataset.candidateIndicator = '10';
-      });
-
-      suite('showFullPanel', function() {
-        setup(function() {
-          manager.showFullPanel();
-
-          assert.isTrue(manager.isFullPanelShown);
-          assert.isTrue(getMoreCandidatesStub.calledWith(
-              10, manager.FIRST_PAGE_ROWS * 8 + 1));
-
-          var firstPageList =
-            candidates.slice(10, 10 + manager.FIRST_PAGE_ROWS * 8 + 1);
-          getMoreCandidatesStub.getCall(0).args[2].call(window, firstPageList);
-
-          assert.isTrue(window.IMERender.showMoreCandidates
-            .calledWith(manager.FIRST_PAGE_ROWS, firstPageList));
-          assert.isTrue(
-            window.IMERender.toggleCandidatePanel.calledWith(true));
-
-          assert.isTrue(
-            window.IMERender.candidatePanel.addEventListener.calledOnce);
-        });
-
-        suite('showNextCandidatePage', function() {
-          setup(function() {
-            window.IMERender.candidatePanel.dataset.rowCount = '2';
-            window.IMERender.candidatePanel.dataset.candidateIndicator = '90';
-
-            var scrollEvent = {
-              type: 'scroll'
-            };
-            window.IMERender.candidatePanel.dispatchEvent(scrollEvent);
-
-            assert.isTrue(window.clearTimeout.calledOnce);
-            assert.isTrue(window.setTimeout.calledOnce);
-            assert.equal(window.setTimeout.getCall(0).args[1], 200);
-            window.setTimeout.getCall(0).args[0].call(window);
-
-            assert.isTrue(getMoreCandidatesStub.getCall(1).calledWith(
-                90, manager.PAGE_ROWS * 8 + 1));
-
-            var nextPageList =
-              candidates.slice(90, 90 + manager.PAGE_ROWS * 8 + 1);
-            getMoreCandidatesStub.getCall(1).args[2].call(window, nextPageList);
-
-            assert.isTrue(window.IMERender.showMoreCandidates
-              .calledWith(manager.PAGE_ROWS, nextPageList));
-          });
-
-          test('hideFullPanel & show panel', function () {
-            window.IMERender.candidatePanel.dataset.rowCount = '3';
-            window.IMERender.candidatePanel.dataset.candidateIndicator = '187';
-
-            manager.hideFullPanel();
-
-            assert.isFalse(manager.isFullPanelShown);
-            assert.isTrue(window.clearTimeout.calledTwice);
-            assert.isTrue(
-              window.IMERender.candidatePanel.removeEventListener.calledOnce);
-
-            manager.showFullPanel();
-
-            assert.isTrue(window.IMERender.showMoreCandidates.calledTwice,
-              'No showMoreCandidates call here.');
-            assert.isTrue(
-              window.IMERender.candidatePanel.addEventListener.calledTwice);
-          });
-        });
-
-        test('hideFullPanel', function () {
-          manager.hideFullPanel();
-
-          assert.isFalse(manager.isFullPanelShown);
-          assert.isTrue(
-            window.IMERender.candidatePanel.removeEventListener.calledOnce);
-        });
-      });
-    });
-
-    suite('No engine.getMoreCandidates',function() {
-      setup(function() {
-        // Assume the candidates are truncated at 10th candidate.
-        window.IMERender.candidatePanel.dataset.candidateIndicator = '10';
-      });
-
-      suite('showFullPanel', function() {
-        setup(function() {
-          manager.showFullPanel();
-
-          var firstPageList =
-            candidates.slice(10, 10 + manager.FIRST_PAGE_ROWS * 8 + 1);
-          assert.isTrue(manager.isFullPanelShown);
-          assert.isTrue(window.IMERender.showMoreCandidates
-            .calledWith(manager.FIRST_PAGE_ROWS, firstPageList));
-          assert.isTrue(
-            window.IMERender.toggleCandidatePanel.calledWith(true));
-
-          assert.isTrue(
-            window.IMERender.candidatePanel.addEventListener.calledOnce);
-        });
-
-        suite('showNextCandidatePage', function() {
-          setup(function() {
-            window.IMERender.candidatePanel.dataset.rowCount = '2';
-            window.IMERender.candidatePanel.dataset.candidateIndicator = '90';
-
-            var scrollEvent = {
-              type: 'scroll'
-            };
-            window.IMERender.candidatePanel.dispatchEvent(scrollEvent);
-
-            assert.isTrue(window.clearTimeout.calledOnce);
-            assert.isTrue(window.setTimeout.calledOnce);
-            window.setTimeout.getCall(0).args[0].call(window);
-
-            var nextPageList =
-              candidates.slice(90, 90 + manager.PAGE_ROWS * 8 + 1);
-
-            assert.isTrue(window.IMERender.showMoreCandidates
-              .calledWith(manager.PAGE_ROWS, nextPageList));
-          });
-
-          test('hideFullPanel & show panel', function () {
-            window.IMERender.candidatePanel.dataset.rowCount = '3';
-            window.IMERender.candidatePanel.dataset.candidateIndicator = '187';
-
-            manager.hideFullPanel();
-
-            assert.isFalse(manager.isFullPanelShown);
-            assert.isTrue(window.clearTimeout.calledTwice);
-            assert.isTrue(
-              window.IMERender.candidatePanel.removeEventListener.calledOnce);
-
-            manager.showFullPanel();
-
-            assert.isTrue(window.IMERender.showMoreCandidates.calledTwice,
-              'No showMoreCandidates call here.');
-            assert.isTrue(
-              window.IMERender.candidatePanel.addEventListener.calledTwice);
-          });
-        });
-
-        test('hideFullPanel', function () {
-          manager.hideFullPanel();
-
-          assert.isFalse(manager.isFullPanelShown);
-          assert.isTrue(window.clearTimeout.calledOnce);
-          assert.isTrue(
-            window.IMERender.candidatePanel.removeEventListener.calledOnce);
-        });
-      });
-    });
-  });
-});
diff --git a/apps/keyboard/test/unit/keyboard/input_method_manager_test.js b/apps/keyboard/test/unit/keyboard/input_method_manager_test.js
index 4f7026d..139d8f8 100644
--- a/apps/keyboard/test/unit/keyboard/input_method_manager_test.js
+++ b/apps/keyboard/test/unit/keyboard/input_method_manager_test.js
@@ -1,9 +1,7 @@
 'use strict';

-/* global InputMethodGlue, InputMethodLoader, InputMethodManager,
-          IMEngineSettings, Promise, KeyEvent */
+/* global InputMethodGlue, InputMethodLoader, InputMethodManager, Promise */

-require('/js/keyboard/settings.js');
 require('/js/keyboard/input_method_manager.js');

 suite('InputMethodGlue', function() {
@@ -19,129 +17,71 @@ suite('InputMethodGlue', function() {
   test('sendCandidates', function() {
     var glue = new InputMethodGlue();
     var app = {
-      candidatePanelManager: {
-        updateCandidates: this.sinon.stub()
-      }
+      sendCandidates: this.sinon.stub()
     };
     var data = [['foo', 1]];
     glue.init(app, 'foo');
     glue.sendCandidates(data);

-    assert.isTrue(app.candidatePanelManager.updateCandidates.calledWith(data));
+    assert.isTrue(app.sendCandidates.calledWith(data));
   });

   test('setComposition', function() {
     var glue = new InputMethodGlue();
     var app = {
-      inputContext: {
-        setComposition: this.sinon.stub()
-      }
+      setComposition: this.sinon.stub()
     };
     var symbols = 'bar';
     var cursor = 1;
     glue.init(app, 'foo');
     glue.setComposition(symbols, cursor);

-    assert.isTrue(app.inputContext.setComposition.calledWith(symbols, cursor));
+    assert.isTrue(app.setComposition.calledWith(symbols, cursor));
   });

   test('endComposition', function() {
     var glue = new InputMethodGlue();
     var app = {
-      inputContext: {
-        endComposition: this.sinon.stub()
-      }
+      endComposition: this.sinon.stub()
     };
     var data = 'bar';
     glue.init(app, 'foo');
     glue.endComposition(data);

-    assert.isTrue(app.inputContext.endComposition.calledWith(data));
+    assert.isTrue(app.endComposition.calledWith(data));
   });

-  suite('sendKey', function() {
-    var glue;
-    var app;
-    var p;
-    setup(function() {
-      glue = new InputMethodGlue();
-      app = {
-        inputContext: {
-          sendKey: this.sinon.stub()
-        }
-      };
-      p = Promise.resolve();
-      app.inputContext.sendKey.returns(p);
-    });
-
-    test('KeyEvent.DOM_VK_BACK_SPACE', function() {
-      var keyCode = KeyEvent.DOM_VK_BACK_SPACE;
-      var isRepeat = false;
-      glue.init(app, 'foo');
-      var returned = glue.sendKey(keyCode, isRepeat);
-
-      assert.isTrue(
-        app.inputContext.sendKey.calledWith(keyCode, 0, 0, isRepeat));
-      assert.equal(returned, p);
-    });
-
-    test('KeyEvent.DOM_VK_RETURN', function() {
-      var keyCode = KeyEvent.DOM_VK_RETURN;
-      var isRepeat = false;
-      glue.init(app, 'foo');
-      var returned = glue.sendKey(keyCode, isRepeat);
-
-      assert.isTrue(
-        app.inputContext.sendKey.calledWith(keyCode, 0, 0));
-      assert.equal(returned, p);
-    });
-
-    test('99', function() {
-      var keyCode = 99;
-      var isRepeat = false;
-      glue.init(app, 'foo');
-      var returned = glue.sendKey(keyCode, isRepeat);
-
-      assert.isTrue(
-        app.inputContext.sendKey.calledWith(0, 99, 0));
-      assert.equal(returned, p);
-    });
-
-    test('-99', function() {
-      var keyCode = -99;
-      var isRepeat = false;
-      glue.init(app, 'foo');
-      var returned = glue.sendKey(keyCode, isRepeat);
+  test('sendKey', function() {
+    var glue = new InputMethodGlue();
+    var app = {
+      sendKey: this.sinon.stub()
+    };
+    var p = {};
+    app.sendKey.returns(p);
+    var keyCode = 123;
+    var isRepeat = false;
+    glue.init(app, 'foo');
+    var returned = glue.sendKey(keyCode, isRepeat);

-      assert.isTrue(
-        app.inputContext.sendKey.calledWith(0, -99, 0));
-      assert.equal(returned, p);
-    });
+    assert.isTrue(app.sendKey.calledWith(keyCode, isRepeat));
+    assert.equal(returned, p);
   });

   test('sendString', function() {
     var glue = new InputMethodGlue();
     var app = {
-      inputContext: {
-        sendKey: this.sinon.stub()
-      }
+      sendKey: this.sinon.stub()
     };
     var text = 'foobar';
     glue.init(app, 'foo');
     glue.sendString(text);

-    assert.isTrue(
-      app.inputContext.sendKey.getCall(0).calledWith(0, text.charCodeAt(0), 0));
-    assert.isTrue(
-      app.inputContext.sendKey.getCall(1).calledWith(0, text.charCodeAt(1), 0));
-    assert.isTrue(
-      app.inputContext.sendKey.getCall(2).calledWith(0, text.charCodeAt(2), 0));
-    assert.isTrue(
-      app.inputContext.sendKey.getCall(3).calledWith(0, text.charCodeAt(3), 0));
-    assert.isTrue(
-      app.inputContext.sendKey.getCall(4).calledWith(0, text.charCodeAt(4), 0));
-    assert.isTrue(
-      app.inputContext.sendKey.getCall(5).calledWith(0, text.charCodeAt(5), 0));
+    assert.equal(app.sendKey.getCall(0).args[0], text.charCodeAt(0));
+    assert.equal(app.sendKey.getCall(1).args[0], text.charCodeAt(1));
+    assert.equal(app.sendKey.getCall(2).args[0], text.charCodeAt(2));
+    assert.equal(app.sendKey.getCall(3).args[0], text.charCodeAt(3));
+    assert.equal(app.sendKey.getCall(4).args[0], text.charCodeAt(4));
+    assert.equal(app.sendKey.getCall(5).args[0], text.charCodeAt(5));
   });

   test('alterKeyboard', function() {
@@ -174,30 +114,34 @@ suite('InputMethodGlue', function() {
   test('setUpperCase', function() {
     var glue = new InputMethodGlue();
     var app = {
-      upperCaseStateManager: {
-        switchUpperCaseState: this.sinon.stub()
-      }
+      setUpperCase: this.sinon.stub()
     };
-    var state = {
-      isUpperCase: true,
-      isUpperCaseLocked: false
+    var upperCase = true;
+    var uppserCaseLocked = false;
+    glue.init(app, 'foo');
+    glue.setUpperCase(upperCase, uppserCaseLocked);
+
+    assert.isTrue(app.setUpperCase.calledWith(upperCase, uppserCaseLocked));
+  });
+
+  test('resetUpperCase', function() {
+    var glue = new InputMethodGlue();
+    var app = {
+      resetUpperCase: this.sinon.stub()
     };
     glue.init(app, 'foo');
-    glue.setUpperCase(state);
+    glue.resetUpperCase();

-    assert.isTrue(
-      app.upperCaseStateManager.switchUpperCaseState.calledWith(state));
+    assert.isTrue(app.resetUpperCase.calledOnce);
   });

   test('replaceSurroundingText', function() {
     var glue = new InputMethodGlue();
     var app = {
-      inputContext: {
-        replaceSurroundingText: this.sinon.stub()
-      }
+      replaceSurroundingText: this.sinon.stub()
     };
-    var p = Promise.resolve();
-    app.inputContext.replaceSurroundingText.returns(p);
+    var p = {};
+    app.replaceSurroundingText.returns(p);

     var text = 'foobar';
     var offset = 3;
@@ -206,7 +150,7 @@ suite('InputMethodGlue', function() {
     var returned = glue.replaceSurroundingText(text, offset, length);

     assert.isTrue(
-      app.inputContext.replaceSurroundingText.calledWith(text, offset, length));
+      app.replaceSurroundingText.calledWith(text, offset, length));
     assert.equal(returned, p);
   });

@@ -364,9 +308,6 @@ suite('InputMethodLoader', function() {

 suite('InputMethodManager', function() {
   var realInputMethods;
-  var imEngineSettingsStub;
-  var app;
-  var initSettingsPromise;

   suiteSetup(function() {
     realInputMethods = window.InputMethods;
@@ -376,31 +317,12 @@ suite('InputMethodManager', function() {
     window.InputMethods = realInputMethods;
   });

-  setup(function () {
-    imEngineSettingsStub = this.sinon.stub(IMEngineSettings.prototype);
-    this.sinon.stub(window, 'IMEngineSettings').returns(imEngineSettingsStub);
-    initSettingsPromise = Promise.resolve({
-      suggestionsEnabled: true,
-      correctionsEnabled: true
-    });
-    imEngineSettingsStub.initSettings.returns(initSettingsPromise);
-
-    app = {
-      promiseManager: {},
-      layoutManager: {
-        currentModifiedLayout: {
-          autoCorrectLanguage: 'xx-XX'
-        }
-      }
-    };
-  });
-
   test('start', function() {
     window.InputMethods = {
       'default': realInputMethods['default']
     };

-    var manager = new InputMethodManager(app);
+    var manager = new InputMethodManager({});
     manager.start();

     assert.equal(manager.loader.app, manager.app);
@@ -412,12 +334,12 @@ suite('InputMethodManager', function() {
       'default': realInputMethods['default']
     };

-    var manager = new InputMethodManager(app);
+    var manager = new InputMethodManager({});
     manager.start();
     manager.loader.SOURCE_DIR = './fake-imes/';

-    var dataPromise = Promise.resolve({
-      value: 'data'
+    var dataPromise = new Promise(function(resolve) {
+      resolve(['foo', 'bar']);
     });

     var p = manager.switchCurrentIMEngine('foo', dataPromise);
@@ -428,12 +350,7 @@ suite('InputMethodManager', function() {
       assert.equal(manager.currentIMEngine, imEngine, 'currentIMEngine is set');

       var activateStub = imEngine.activate;
-      assert.isTrue(activateStub.calledWithExactly('xx-XX', {
-        value: 'data'
-      }, {
-        suggest: true,
-        correct: true
-      }));
+      assert.isTrue(activateStub.calledWith('foo', 'bar'));
       assert.equal(activateStub.getCall(0).thisValue,
         imEngine);

@@ -450,12 +367,12 @@ suite('InputMethodManager', function() {
       'default': realInputMethods['default']
     };

-    var manager = new InputMethodManager(app);
+    var manager = new InputMethodManager({});
     manager.start();
     manager.loader.SOURCE_DIR = './fake-imes/';

-    var dataPromise = Promise.resolve({
-      value: 'data'
+    var dataPromise = new Promise(function(resolve) {
+      resolve(['foo', 'bar']);
     });

     var p = manager.switchCurrentIMEngine('bar', dataPromise);
@@ -475,7 +392,7 @@ suite('InputMethodManager', function() {
       'default': realInputMethods['default']
     };

-    var manager = new InputMethodManager(app);
+    var manager = new InputMethodManager({});
     manager.start();
     manager.loader.SOURCE_DIR = './fake-imes/';

@@ -487,10 +404,7 @@ suite('InputMethodManager', function() {
       assert.equal(manager.currentIMEngine, imEngine, 'currentIMEngine is set');

       var activateStub = imEngine.activate;
-      assert.isTrue(activateStub.calledWithExactly('xx-XX', undefined, {
-        suggest: true,
-        correct: true
-      }));
+      assert.isTrue(activateStub.calledWithExactly());
       assert.equal(activateStub.getCall(0).thisValue,
         imEngine);

@@ -507,11 +421,13 @@ suite('InputMethodManager', function() {
       'default': realInputMethods['default']
     };

-    var manager = new InputMethodManager(app);
+    var manager = new InputMethodManager({});
     manager.start();
     manager.loader.SOURCE_DIR = './fake-imes/';

-    var dataPromise = Promise.reject();
+    var dataPromise = new Promise(function(resolve, reject) {
+      reject();
+    });

     var p = manager.switchCurrentIMEngine('foo', dataPromise);
     p.then(function() {
@@ -530,12 +446,12 @@ suite('InputMethodManager', function() {
       'default': realInputMethods['default']
     };

-    var manager = new InputMethodManager(app);
+    var manager = new InputMethodManager({});
     manager.start();
     manager.loader.SOURCE_DIR = './fake-imes/';

-    var dataPromise = Promise.resolve({
-      value: 'data'
+    var dataPromise = new Promise(function(resolve) {
+      resolve(['foo', 'bar']);
     });

     var p1 = manager.switchCurrentIMEngine('foo', dataPromise);
@@ -565,12 +481,12 @@ suite('InputMethodManager', function() {
       'default': realInputMethods['default']
     };

-    var manager = new InputMethodManager(app);
+    var manager = new InputMethodManager({});
     manager.start();
     manager.loader.SOURCE_DIR = './fake-imes/';

-    var dataPromise = Promise.resolve({
-      value: 'data'
+    var dataPromise = new Promise(function(resolve) {
+      resolve(['foo', 'bar']);
     });

     var p = manager.switchCurrentIMEngine('foo', dataPromise);
@@ -581,12 +497,7 @@ suite('InputMethodManager', function() {
       assert.equal(manager.currentIMEngine, imEngine, 'currentIMEngine is set');

       var activateStub = imEngine.activate;
-      assert.isTrue(activateStub.calledWithExactly('xx-XX', {
-        value: 'data'
-      }, {
-        suggest: true,
-        correct: true
-      }));
+      assert.isTrue(activateStub.calledWith('foo', 'bar'));
       assert.equal(activateStub.getCall(0).thisValue,
         imEngine);

@@ -610,12 +521,7 @@ suite('InputMethodManager', function() {

         var activateStub = imEngine.activate;
         assert.isTrue(activateStub.calledTwice);
-        assert.isTrue(activateStub.calledWithExactly('xx-XX', {
-          value: 'data'
-        }, {
-          suggest: true,
-          correct: true
-        }));
+        assert.isTrue(activateStub.getCall(1).calledWith('foo', 'bar'));
         assert.equal(activateStub.getCall(1).thisValue,
           imEngine);

diff --git a/apps/keyboard/test/unit/keyboard/keyboard_app_test.js b/apps/keyboard/test/unit/keyboard/keyboard_app_test.js
deleted file mode 100644
index 9b741ab..0000000
--- a/apps/keyboard/test/unit/keyboard/keyboard_app_test.js
+++ /dev/null
@@ -1,283 +0,0 @@
-'use strict';
-
-/* global KeyboardApp, PerformanceTimer, InputMethodManager, LayoutManager,
-          SettingsPromiseManager, L10nLoader, TargetHandlersManager,
-          FeedbackManager, VisualHighlightManager, CandidatePanelManager,
-          UpperCaseStateManager, MockInputMethodManager */
-
-require('/js/keyboard/performance_timer.js');
-require('/js/keyboard/input_method_manager.js');
-require('/js/keyboard/layout_manager.js');
-require('/js/keyboard/settings.js');
-require('/js/keyboard/l10n_loader.js');
-require('/js/keyboard/target_handlers_manager.js');
-require('/js/keyboard/feedback_manager.js');
-require('/js/keyboard/visual_highlight_manager.js');
-require('/js/keyboard/candidate_panel_manager.js');
-require('/js/keyboard/upper_case_state_manager.js');
-
-requireApp('keyboard/shared/test/unit/mocks/mock_event_target.js');
-requireApp('keyboard/shared/test/unit/mocks/mock_navigator_input_method.js');
-
-require('/js/keyboard/keyboard_app.js');
-
-suite('KeyboardApp', function() {
-  var perfTimerStub;
-  var inputMethodManagerStub;
-  var layoutManagerStub;
-  var settingsPromiseManagerStub;
-  var l10nLoaderStub;
-  var targetHandlersManagerStub;
-  var feedbackManagerStub;
-  var visualHighlightManagerStub;
-  var candidatePanelManagerStub;
-  var upperCaseStateManagerStub;
-
-  var app;
-  var realMozInputMethod;
-
-  setup(function() {
-    realMozInputMethod = navigator.mozInputMethod;
-    navigator.mozInputMethod = {
-      mgmt: this.sinon.stub(MockInputMethodManager.prototype)
-    };
-
-    window.renderKeyboard = this.sinon.stub();
-
-    perfTimerStub = this.sinon.stub(PerformanceTimer.prototype);
-    this.sinon.stub(window, 'PerformanceTimer').returns(perfTimerStub);
-
-    inputMethodManagerStub = this.sinon.stub(InputMethodManager.prototype);
-    this.sinon.stub(window, 'InputMethodManager')
-      .returns(inputMethodManagerStub);
-
-    layoutManagerStub = this.sinon.stub(LayoutManager.prototype);
-    this.sinon.stub(window, 'LayoutManager').returns(layoutManagerStub);
-
-    settingsPromiseManagerStub =
-      this.sinon.stub(SettingsPromiseManager.prototype);
-    this.sinon.stub(window, 'SettingsPromiseManager')
-      .returns(settingsPromiseManagerStub);
-
-    l10nLoaderStub = this.sinon.stub(L10nLoader.prototype);
-    this.sinon.stub(window, 'L10nLoader').returns(l10nLoaderStub);
-
-    targetHandlersManagerStub =
-      this.sinon.stub(TargetHandlersManager.prototype);
-    this.sinon.stub(window, 'TargetHandlersManager')
-      .returns(targetHandlersManagerStub);
-
-    feedbackManagerStub = this.sinon.stub(FeedbackManager.prototype);
-    this.sinon.stub(window, 'FeedbackManager').returns(feedbackManagerStub);
-
-    visualHighlightManagerStub =
-      this.sinon.stub(VisualHighlightManager.prototype);
-    this.sinon.stub(window, 'VisualHighlightManager')
-      .returns(visualHighlightManagerStub);
-
-    candidatePanelManagerStub =
-      this.sinon.stub(CandidatePanelManager.prototype);
-    this.sinon.stub(window, 'CandidatePanelManager')
-      .returns(candidatePanelManagerStub);
-
-    upperCaseStateManagerStub =
-      this.sinon.stub(UpperCaseStateManager.prototype);
-    this.sinon.stub(window, 'UpperCaseStateManager')
-      .returns(upperCaseStateManagerStub);
-
-    app = new KeyboardApp();
-    app.start();
-
-    assert.isTrue(window.PerformanceTimer.calledWithNew());
-    assert.isTrue(window.InputMethodManager.calledWithNew());
-    assert.isTrue(window.LayoutManager.calledWithNew());
-    assert.isTrue(window.SettingsPromiseManager.calledWithNew());
-    assert.isTrue(window.L10nLoader.calledWithNew());
-    assert.isTrue(window.TargetHandlersManager.calledWithNew());
-    assert.isTrue(window.FeedbackManager.calledWithNew());
-    assert.isTrue(window.VisualHighlightManager.calledWithNew());
-    assert.isTrue(window.CandidatePanelManager.calledWithNew());
-    assert.isTrue(window.UpperCaseStateManager.calledWithNew());
-
-    assert.isTrue(window.InputMethodManager.calledWith(app));
-    assert.isTrue(window.LayoutManager.calledWith(app));
-    assert.isTrue(window.TargetHandlersManager.calledWith(app));
-    assert.isTrue(window.FeedbackManager.calledWith(app));
-    assert.isTrue(window.VisualHighlightManager.calledWith(app));
-    assert.isTrue(window.CandidatePanelManager.calledWith(app));
-
-    assert.isTrue(perfTimerStub.start.calledOnce);
-    assert.isTrue(inputMethodManagerStub.start.calledOnce);
-    assert.isTrue(layoutManagerStub.start.calledOnce);
-    assert.isTrue(targetHandlersManagerStub.start.calledOnce);
-    assert.isTrue(feedbackManagerStub.start.calledOnce);
-    assert.isTrue(visualHighlightManagerStub.start.calledOnce);
-    assert.isTrue(candidatePanelManagerStub.start.calledOnce);
-    assert.isTrue(upperCaseStateManagerStub.start.calledOnce);
-  });
-
-  teardown(function() {
-    app.stop();
-
-    assert.isTrue(targetHandlersManagerStub.stop.calledOnce);
-    assert.isTrue(feedbackManagerStub.stop.calledOnce);
-    assert.isTrue(visualHighlightManagerStub.stop.calledOnce);
-    assert.isTrue(candidatePanelManagerStub.stop.calledOnce);
-    assert.isTrue(upperCaseStateManagerStub.stop.calledOnce);
-
-    navigator.mozInputMethod = realMozInputMethod;
-    delete window.renderKeyboard;
-  });
-
-  test('getMenuContainer', function() {
-    var el = {};
-    this.sinon.stub(document, 'getElementById').returns(el);
-
-    var result = app.getMenuContainer();
-    assert.isTrue(
-      document.getElementById.calledWith(app.ACCENT_CHAR_MENU_ELEMENT_ID));
-    assert.equal(result, el);
-  });
-
-
-  test('getContainer', function() {
-    var el = {};
-    this.sinon.stub(document, 'getElementById').returns(el);
-
-    var result = app.getContainer();
-    assert.isTrue(
-      document.getElementById.calledWith(app.CONATINER_ELEMENT_ID));
-    assert.equal(result, el);
-  });
-
-  suite('getBasicInputType', function() {
-    test('without inputContext', function() {
-      var result = app.getBasicInputType();
-      assert.equal(result, 'text');
-    });
-
-    test('inputType = url', function() {
-      app.inputContext = {
-        inputType: 'url'
-      };
-
-      var result = app.getBasicInputType();
-      assert.equal(result, 'url');
-    });
-
-    test('inputType = tel', function() {
-      app.inputContext = {
-        inputType: 'tel'
-      };
-
-      var result = app.getBasicInputType();
-      assert.equal(result, 'tel');
-    });
-
-    test('inputType = email', function() {
-      app.inputContext = {
-        inputType: 'email'
-      };
-
-      var result = app.getBasicInputType();
-      assert.equal(result, 'email');
-    });
-
-    test('inputType = text', function() {
-      app.inputContext = {
-        inputType: 'text'
-      };
-
-      var result = app.getBasicInputType();
-      assert.equal(result, 'text');
-    });
-
-    test('inputType = password', function() {
-      app.inputContext = {
-        inputType: 'password'
-      };
-
-      var result = app.getBasicInputType();
-      assert.equal(result, 'text');
-    });
-
-    test('inputType = search', function() {
-      app.inputContext = {
-        inputType: 'search'
-      };
-
-      var result = app.getBasicInputType();
-      assert.equal(result, 'text');
-    });
-
-    test('inputType = foo', function() {
-      app.inputContext = {
-        inputType: 'foo'
-      };
-
-      var result = app.getBasicInputType();
-      assert.equal(result, 'text');
-    });
-
-    test('inputType = number', function() {
-      app.inputContext = {
-        inputType: 'number'
-      };
-
-      var result = app.getBasicInputType();
-      assert.equal(result, 'number');
-    });
-
-    test('inputType = range', function() {
-      app.inputContext = {
-        inputType: 'range'
-      };
-
-      var result = app.getBasicInputType();
-      assert.equal(result, 'number');
-    });
-  });
-
-  test('supportsSwitching', function() {
-    navigator.mozInputMethod.mgmt.supportsSwitching.returns(true);
-
-    var result = app.supportsSwitching();
-    assert.isTrue(navigator.mozInputMethod.mgmt.supportsSwitching.calledOnce);
-    assert.isTrue(result);
-  });
-
-  test('setForcedModifiedLayout', function() {
-    app.setForcedModifiedLayout('foo');
-
-    assert.isTrue(
-      app.layoutManager.updateForcedModifiedLayout.calledWith('foo'));
-    assert.isTrue(window.renderKeyboard.calledOnce);
-  });
-
-  test('setLayoutPage', function() {
-    app.inputMethodManager.currentIMEngine = {
-      setLayoutPage: this.sinon.stub()
-    };
-    app.layoutManager.currentLayoutPage = 42;
-
-    app.setLayoutPage('foo');
-
-    assert.isTrue(
-      app.layoutManager.updateLayoutPage.calledWith('foo'));
-    assert.isTrue(window.renderKeyboard.calledOnce);
-    assert.isTrue(
-      app.inputMethodManager.currentIMEngine.setLayoutPage.calledWith(42));
-  });
-
-  test('getNumberOfCandidatesPerRow', function() {
-    window.IMERender = {
-      getNumberOfCandidatesPerRow: this.sinon.stub()
-    };
-    window.IMERender.getNumberOfCandidatesPerRow.returns(42);
-
-    var result = app.getNumberOfCandidatesPerRow();
-    assert.equal(result, 42);
-
-    window.IMERender = undefined;
-  });
-});
diff --git a/apps/keyboard/test/unit/keyboard/layout_loader_test.js b/apps/keyboard/test/unit/keyboard/layout_loader_test.js
index 2951034..3564edb 100644
--- a/apps/keyboard/test/unit/keyboard/layout_loader_test.js
+++ b/apps/keyboard/test/unit/keyboard/layout_loader_test.js
@@ -262,65 +262,6 @@ suite('LayoutLoader', function() {
     });
   });

-  test('normalize alt menu of sub-layout alternateLayout', function(done) {
-    window.Keyboards = {
-      'preloaded': {
-        keys: [
-          [
-            { value: 'preloaded' }
-          ]
-        ],
-        alternateLayout: {
-          keys: [
-            [
-              { value: 'preloaded-alternateLayout' }
-            ]
-          ],
-          alt: {
-            'a': 'áàâäåãāæ'
-          }
-        }
-      }
-    };
-
-    var loader = new LayoutLoader();
-    loader.start();
-
-    assert.equal(!!window.Keyboards.preloaded, false, 'original removed');
-    assert.isTrue(!!loader.getLayout('preloaded'), 'preloaded loaded');
-
-    var p = loader.getLayoutAsync('preloaded');
-    p.then(function(layout) {
-      assert.isTrue(true, 'loaded');
-      assert.deepEqual(loader.getLayout('preloaded'), {
-        keys: [
-          [
-            { value: 'preloaded' }
-          ]
-        ],
-        alternateLayout: {
-          keys: [
-            [
-              { value: 'preloaded-alternateLayout' }
-            ]
-          ],
-          alt: { 'a': [ 'á', 'à', 'â', 'ä', 'å', 'ã', 'ā', 'æ' ],
-                 'A': [ 'Á', 'À', 'Â', 'Ä', 'Å', 'Ã', 'Ā', 'Æ' ] },
-          upperCase: {}
-        },
-        alt: {},
-        upperCase: {}
-      }, 'preloaded loaded');
-      assert.equal(layout, loader.getLayout('preloaded'));
-
-      done();
-    }, function() {
-      assert.isTrue(false, 'should not reject');
-
-      done();
-    });
-  });
-
   test('normalize alt menu (with multi-char keys)', function(done) {
     window.Keyboards = {
       'preloaded': {
diff --git a/apps/keyboard/test/unit/keyboard/layout_manager_test.js b/apps/keyboard/test/unit/keyboard/layout_manager_test.js
index c4d34f2..10b762f 100644
--- a/apps/keyboard/test/unit/keyboard/layout_manager_test.js
+++ b/apps/keyboard/test/unit/keyboard/layout_manager_test.js
@@ -944,41 +944,5 @@ suite('LayoutManager', function() {
         done();
       });
     });
-
-    test('needsCommaKey', function(done) {
-      app.getBasicInputType.returns('text');
-      app.supportsSwitching.returns(true);
-      spaceLayout.needsCommaKey = true;
-
-      manager.switchCurrentLayout('spaceLayout').then(function() {
-        assert.deepEqual(manager.currentLayout, spaceLayout,
-          'Original layout not touched.');
-
-        var expectedModifiedLayout = {
-          layoutName: 'spaceLayout',
-          alternativeLayoutName: '',
-          keys: [ [ { value: 'S' } ],
-                  [ { keyCode: manager.KEYCODE_ALTERNATE_LAYOUT,
-                      value: '12&',
-                      ratio: 1.5,
-                      ariaLabel: 'alternateLayoutKey',
-                      className: 'switch-key' },
-                    { value: '&#x1f310;',
-                      ratio: 1,
-                      keyCode: -3,
-                      className: 'switch-key' },
-                    { value: ',', ratio: 1, keyCode: 44 },
-                    { ratio: 5.5 },
-                    { value: '.', ratio: 1, keyCode: 46 } ] ] };
-
-        assert.deepEqual(manager.currentModifiedLayout, expectedModifiedLayout);
-        assert.equal(manager.currentModifiedLayout.__proto__,
-          spaceLayout, 'proto is set correctly for layout.');
-        assert.equal(manager.currentModifiedLayout.keys[1][3].__proto__,
-          spaceLayout.keys[1][0], 'proto is set correctly for space key.');
-
-        done();
-      });
-    });
   });
 });
diff --git a/apps/keyboard/test/unit/keyboard/target_handlers_manager_test.js b/apps/keyboard/test/unit/keyboard/target_handlers_manager_test.js
deleted file mode 100644
index e36a1c4..0000000
--- a/apps/keyboard/test/unit/keyboard/target_handlers_manager_test.js
+++ /dev/null
@@ -1,476 +0,0 @@
-'use strict';
-
-/* global TargetHandlersManager, ActiveTargetsManager,
-          DefaultTargetHandler, KeyEvent, LayoutManager */
-
-require('/js/keyboard/active_targets_manager.js');
-require('/js/keyboard/target_handlers.js');
-require('/js/keyboard/layout_manager.js');
-
-require('/js/keyboard/target_handlers_manager.js');
-
-suite('TargetHandlersManager', function() {
-  var manager;
-  var app;
-  var handlerStub;
-  var activeTargetsManagerStub;
-
-  setup(function() {
-    activeTargetsManagerStub = this.sinon.stub(ActiveTargetsManager.prototype);
-    this.sinon.stub(window, 'ActiveTargetsManager')
-      .returns(activeTargetsManagerStub);
-
-    handlerStub = this.sinon.stub(DefaultTargetHandler.prototype);
-    this.sinon.stub(window, 'DefaultTargetHandler')
-      .returns(handlerStub);
-    this.sinon.stub(window, 'NullTargetHandler')
-      .returns(handlerStub);
-    this.sinon.stub(window, 'SpaceKeyTargetHandler')
-      .returns(handlerStub);
-    this.sinon.stub(window, 'CandidateSelectionTargetHandler')
-      .returns(handlerStub);
-    this.sinon.stub(window, 'BackspaceTargetHandler')
-      .returns(handlerStub);
-    this.sinon.stub(window, 'CompositeTargetHandler')
-      .returns(handlerStub);
-    this.sinon.stub(window, 'PageSwitchingTargetHandler')
-      .returns(handlerStub);
-    this.sinon.stub(window, 'CapsLockTargetHandler')
-      .returns(handlerStub);
-    this.sinon.stub(window, 'SwitchKeyboardTargetHandler')
-      .returns(handlerStub);
-    this.sinon.stub(window, 'ToggleCandidatePanelTargetHandler')
-      .returns(handlerStub);
-    this.sinon.stub(window, 'DismissSuggestionsTargetHandler')
-      .returns(handlerStub);
-
-    app = {
-      layoutManager: this.sinon.stub(LayoutManager.prototype)
-    };
-    manager = new TargetHandlersManager(app);
-    manager.start();
-
-    assert.isTrue(window.ActiveTargetsManager.calledWith(app));
-    assert.isTrue(activeTargetsManagerStub.start.calledOnce);
-  });
-
-  suite('activate', function() {
-    var target;
-    setup(function() {
-      target = {
-        classList: {
-          contains: this.sinon.stub()
-        },
-        dataset: {
-          keycode: '99'
-        }
-      };
-      target.classList.contains.returns(false);
-
-      activeTargetsManagerStub.ontargetactivated(target);
-
-      assert.isTrue(window.DefaultTargetHandler.calledWith(target, app));
-      assert.isTrue(window.DefaultTargetHandler.calledOnce);
-
-      assert.isTrue(handlerStub.activate.calledOnce);
-    });
-
-    teardown(function() {
-      assert.isTrue(window.DefaultTargetHandler.calledOnce,
-        'Same handler was used for every following action.');
-    });
-
-    test('commit', function() {
-      activeTargetsManagerStub.ontargetcommitted(target);
-
-      assert.isTrue(handlerStub.commit.calledOnce);
-    });
-
-    test('moveOut', function() {
-      activeTargetsManagerStub.ontargetmovedout(target);
-
-      assert.isTrue(handlerStub.moveOut.calledOnce);
-    });
-
-    test('cancel', function() {
-      activeTargetsManagerStub.ontargetcancelled(target);
-
-      assert.isTrue(handlerStub.cancel.calledOnce);
-    });
-
-    test('doubleTap', function() {
-      activeTargetsManagerStub.ontargetdoubletapped(target);
-
-      assert.isTrue(handlerStub.doubleTap.calledOnce);
-    });
-
-    suite('longPress', function() {
-      setup(function() {
-        activeTargetsManagerStub.ontargetlongpressed(target);
-
-        assert.isTrue(handlerStub.longPress.calledOnce);
-      });
-
-      test('commit', function() {
-        activeTargetsManagerStub.ontargetcommitted(target);
-
-        assert.isTrue(handlerStub.commit.calledOnce);
-      });
-
-      test('moveOut', function() {
-        activeTargetsManagerStub.ontargetmovedout(target);
-
-        assert.isTrue(handlerStub.moveOut.calledOnce);
-      });
-
-      test('cancel', function() {
-        activeTargetsManagerStub.ontargetcancelled(target);
-
-        assert.isTrue(handlerStub.cancel.calledOnce);
-      });
-
-      test('doubleTap', function() {
-        activeTargetsManagerStub.ontargetdoubletapped(target);
-
-        assert.isTrue(handlerStub.doubleTap.calledOnce);
-      });
-    });
-  });
-
-  suite('moveIn', function() {
-    var target;
-    setup(function() {
-      target = {
-        classList: {
-          contains: this.sinon.stub()
-        },
-        dataset: {
-          keycode: '99'
-        }
-      };
-      target.classList.contains.returns(false);
-
-      activeTargetsManagerStub.ontargetmovedin(target);
-
-      assert.isTrue(window.DefaultTargetHandler.calledWith(target, app));
-      assert.isTrue(window.DefaultTargetHandler.calledOnce);
-
-      assert.isTrue(handlerStub.moveIn.calledOnce);
-    });
-
-    teardown(function() {
-      assert.isTrue(window.DefaultTargetHandler.calledOnce,
-        'Same handler was used for every following action.');
-    });
-
-    test('commit', function() {
-      activeTargetsManagerStub.ontargetcommitted(target);
-
-      assert.isTrue(handlerStub.commit.calledOnce);
-    });
-
-    test('moveOut', function() {
-      activeTargetsManagerStub.ontargetmovedout(target);
-
-      assert.isTrue(handlerStub.moveOut.calledOnce);
-    });
-
-    test('cancel', function() {
-      activeTargetsManagerStub.ontargetcancelled(target);
-
-      assert.isTrue(handlerStub.cancel.calledOnce);
-    });
-
-    test('doubleTap', function() {
-      activeTargetsManagerStub.ontargetdoubletapped(target);
-
-      assert.isTrue(handlerStub.doubleTap.calledOnce);
-    });
-
-    suite('longPress', function() {
-      setup(function() {
-        activeTargetsManagerStub.ontargetlongpressed(target);
-
-        assert.isTrue(handlerStub.longPress.calledOnce);
-      });
-
-      test('commit', function() {
-        activeTargetsManagerStub.ontargetcommitted(target);
-
-        assert.isTrue(handlerStub.commit.calledOnce);
-      });
-
-      test('moveOut', function() {
-        activeTargetsManagerStub.ontargetmovedout(target);
-
-        assert.isTrue(handlerStub.moveOut.calledOnce);
-      });
-
-      test('cancel', function() {
-        activeTargetsManagerStub.ontargetcancelled(target);
-
-        assert.isTrue(handlerStub.cancel.calledOnce);
-      });
-
-      test('doubleTap', function() {
-        activeTargetsManagerStub.ontargetdoubletapped(target);
-
-        assert.isTrue(handlerStub.doubleTap.calledOnce);
-      });
-    });
-  });
-
-  suite('activate different targets', function() {
-    test('DismissSuggestionsTargetHandler', function() {
-      var target = {
-        classList: {
-          contains: this.sinon.stub()
-        },
-        dataset: {
-        }
-      };
-      target.classList.contains.returns(true);
-
-      activeTargetsManagerStub.ontargetactivated(target);
-
-      assert.isTrue(
-        target.classList.contains.calledWith('dismiss-suggestions-button'));
-      assert.isTrue(
-        window.DismissSuggestionsTargetHandler.calledWith(target, app));
-
-      assert.isTrue(handlerStub.activate.calledOnce);
-    });
-
-    test('CandidateSelectionTargetHandler', function() {
-      var target = {
-        classList: {
-          contains: this.sinon.stub()
-        },
-        dataset: {
-          selection: 'foo'
-        }
-      };
-      target.classList.contains.returns(false);
-
-      activeTargetsManagerStub.ontargetactivated(target);
-
-      assert.isTrue(
-        window.CandidateSelectionTargetHandler.calledWith(target, app));
-
-      assert.isTrue(handlerStub.activate.calledOnce);
-    });
-
-    test('CompositeTargetHandler', function() {
-      var target = {
-        classList: {
-          contains: this.sinon.stub()
-        },
-        dataset: {
-          compositeKey: 'lol'
-        }
-      };
-      target.classList.contains.returns(false);
-
-      activeTargetsManagerStub.ontargetactivated(target);
-
-      assert.isTrue(
-        window.CompositeTargetHandler.calledWith(target, app));
-
-      assert.isTrue(handlerStub.activate.calledOnce);
-    });
-
-    test('BackspaceTargetHandler', function() {
-      var target = {
-        classList: {
-          contains: this.sinon.stub()
-        },
-        dataset: {
-          keycode: KeyEvent.DOM_VK_BACK_SPACE
-        }
-      };
-      target.classList.contains.returns(false);
-
-      activeTargetsManagerStub.ontargetactivated(target);
-
-      assert.isTrue(
-        window.BackspaceTargetHandler.calledWith(target, app));
-
-      assert.isTrue(handlerStub.activate.calledOnce);
-    });
-
-
-    test('SpaceKeyTargetHandler', function() {
-      var target = {
-        classList: {
-          contains: this.sinon.stub()
-        },
-        dataset: {
-          keycode: KeyEvent.DOM_VK_SPACE
-        }
-      };
-      target.classList.contains.returns(false);
-
-      activeTargetsManagerStub.ontargetactivated(target);
-
-      assert.isTrue(
-        window.SpaceKeyTargetHandler.calledWith(target, app));
-
-      assert.isTrue(handlerStub.activate.calledOnce);
-    });
-
-    suite('PageSwitchingTargetHandler', function() {
-      test('KEYCODE_BASIC_LAYOUT', function() {
-        var target = {
-          classList: {
-            contains: this.sinon.stub()
-          },
-          dataset: {
-            keycode: app.layoutManager.KEYCODE_BASIC_LAYOUT
-          }
-        };
-        target.classList.contains.returns(false);
-
-        activeTargetsManagerStub.ontargetactivated(target);
-
-        assert.isTrue(
-          window.PageSwitchingTargetHandler.calledWith(target, app));
-
-        assert.isTrue(handlerStub.activate.calledOnce);
-      });
-
-      test('KEYCODE_ALTERNATE_LAYOUT', function() {
-        var target = {
-          classList: {
-            contains: this.sinon.stub()
-          },
-          dataset: {
-            keycode: app.layoutManager.KEYCODE_ALTERNATE_LAYOUT
-          }
-        };
-        target.classList.contains.returns(false);
-
-        activeTargetsManagerStub.ontargetactivated(target);
-
-        assert.isTrue(
-          window.PageSwitchingTargetHandler.calledWith(target, app));
-
-        assert.isTrue(handlerStub.activate.calledOnce);
-      });
-
-      test('KeyEvent.DOM_VK_ALT', function() {
-        var target = {
-          classList: {
-            contains: this.sinon.stub()
-          },
-          dataset: {
-            keycode: KeyEvent.DOM_VK_ALT
-          }
-        };
-        target.classList.contains.returns(false);
-
-        activeTargetsManagerStub.ontargetactivated(target);
-
-        assert.isTrue(
-          window.PageSwitchingTargetHandler.calledWith(target, app));
-
-        assert.isTrue(handlerStub.activate.calledOnce);
-      });
-    });
-
-    test('SwitchKeyboardTargetHandler', function() {
-      var target = {
-        classList: {
-          contains: this.sinon.stub()
-        },
-        dataset: {
-          keycode: app.layoutManager.KEYCODE_SWITCH_KEYBOARD
-        }
-      };
-      target.classList.contains.returns(false);
-
-      activeTargetsManagerStub.ontargetactivated(target);
-
-      assert.isTrue(
-        window.SwitchKeyboardTargetHandler.calledWith(target, app));
-
-      assert.isTrue(handlerStub.activate.calledOnce);
-    });
-
-    test('CapsLockTargetHandler', function() {
-      var target = {
-        classList: {
-          contains: this.sinon.stub()
-        },
-        dataset: {
-          keycode: KeyEvent.DOM_VK_CAPS_LOCK
-        }
-      };
-      target.classList.contains.returns(false);
-
-      activeTargetsManagerStub.ontargetactivated(target);
-
-      assert.isTrue(
-        window.CapsLockTargetHandler.calledWith(target, app));
-
-      assert.isTrue(handlerStub.activate.calledOnce);
-    });
-
-    suite('DefaultTargetHandler', function() {
-      test('-99', function() {
-        var target = {
-          classList: {
-            contains: this.sinon.stub()
-          },
-          dataset: {
-            keycode: '-99'
-          }
-        };
-        target.classList.contains.returns(false);
-
-        activeTargetsManagerStub.ontargetactivated(target);
-
-        assert.isTrue(
-          window.DefaultTargetHandler.calledWith(target, app));
-
-        assert.isTrue(handlerStub.activate.calledOnce);
-      });
-
-      test('99', function() {
-        var target = {
-          classList: {
-            contains: this.sinon.stub()
-          },
-          dataset: {
-            keycode: '99'
-          }
-        };
-        target.classList.contains.returns(false);
-
-        activeTargetsManagerStub.ontargetactivated(target);
-
-        assert.isTrue(
-          window.DefaultTargetHandler.calledWith(target, app));
-
-        assert.isTrue(handlerStub.activate.calledOnce);
-      });
-    });
-
-    test('NullTargetHandler', function() {
-      var target = {
-        classList: {
-          contains: this.sinon.stub()
-        },
-        dataset: {
-        }
-      };
-      target.classList.contains.returns(false);
-
-      activeTargetsManagerStub.ontargetactivated(target);
-
-      assert.isTrue(
-        window.NullTargetHandler.calledWith(target, app));
-
-      assert.isTrue(handlerStub.activate.calledOnce);
-    });
-  });
-});
diff --git a/apps/keyboard/test/unit/keyboard/target_handlers_test.js b/apps/keyboard/test/unit/keyboard/target_handlers_test.js
deleted file mode 100644
index bebc476..0000000
--- a/apps/keyboard/test/unit/keyboard/target_handlers_test.js
+++ /dev/null
@@ -1,1073 +0,0 @@
-'use strict';
-
-/* global KeyEvent, MockInputMethodManager, FeedbackManager,
-          VisualHighlightManager, CandidatePanelManager, LayoutManager,
-          DefaultTargetHandler, NullTargetHandler, SpaceKeyTargetHandler,
-          CandidateSelectionTargetHandler, CompositeTargetHandler,
-          PageSwitchingTargetHandler, CapsLockTargetHandler,
-          SwitchKeyboardTargetHandler, ToggleCandidatePanelTargetHandler,
-          DismissSuggestionsTargetHandler, BackspaceTargetHandler */
-
-require('/js/keyboard/target_handlers.js');
-require('/js/keyboard/feedback_manager.js');
-require('/js/keyboard/visual_highlight_manager.js');
-require('/js/keyboard/candidate_panel_manager.js');
-require('/js/keyboard/layout_manager.js');
-
-require('/shared/test/unit/mocks/mock_event_target.js');
-require('/shared/test/unit/mocks/mock_navigator_input_method.js');
-
-suite('target handlers', function() {
-  var app;
-  var realMozInputMethod;
-
-  setup(function() {
-    realMozInputMethod = navigator.mozInputMethod;
-    navigator.mozInputMethod = {
-      mgmt: this.sinon.stub(MockInputMethodManager.prototype)
-    };
-
-    this.sinon.stub(window, 'setTimeout');
-    this.sinon.stub(window, 'clearTimeout');
-    this.sinon.stub(window, 'setInterval');
-    this.sinon.stub(window, 'clearInterval');
-
-    app = {
-      feedbackManager: this.sinon.stub(FeedbackManager.prototype),
-      visualHighlightManager: this.sinon.stub(VisualHighlightManager.prototype),
-      candidatePanelManager: this.sinon.stub(CandidatePanelManager.prototype),
-      setLayoutPage: this.sinon.stub(),
-      layoutManager: this.sinon.stub(LayoutManager.prototype),
-      upperCaseStateManager: {
-        isUpperCase: false,
-        switchUpperCaseState: this.sinon.stub()
-      },
-      inputMethodManager: {
-        currentIMEngine: {
-          click: this.sinon.stub(),
-          select: this.sinon.stub(),
-          dismissSuggestions: this.sinon.stub()
-        }
-      },
-      targetHandlersManager: {
-        activeTargetsManager: {
-          clearAllTargets: this.sinon.stub()
-        }
-      }
-    };
-
-    app.layoutManager.currentModifiedLayout = {
-      imEngine: 'not-latin'
-    };
-
-  });
-
-  teardown(function() {
-    navigator.mozInputMethod = realMozInputMethod;
-  });
-
-  suite('DefaultTargetHandler', function() {
-    var handler;
-    var target;
-    setup(function() {
-      target = {
-        dataset: {
-          keycode: '99',
-          keycodeUpper: '999',
-          longPressValue: '$$',
-          longPressKeyCode: '9999'
-        }
-      };
-
-      handler = new DefaultTargetHandler(target, app);
-    });
-
-    suite('activate', function() {
-      setup(function() {
-        handler.activate();
-
-        assert.isTrue(app.feedbackManager.triggerFeedback.calledWith(target));
-        assert.isTrue(app.feedbackManager.triggerFeedback.calledOnce);
-
-        assert.isTrue(app.visualHighlightManager.show.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.show.calledOnce);
-      });
-
-      test('commit', function() {
-        handler.commit();
-
-        assert.isTrue(
-          app.inputMethodManager.currentIMEngine.click.calledWith(99));
-        assert.isTrue(app.inputMethodManager.currentIMEngine.click.calledOnce);
-
-        assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-      });
-
-      test('moveOut', function() {
-        handler.moveOut();
-
-        assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-      });
-
-      test('cancel', function() {
-        handler.cancel();
-
-        assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-      });
-
-      test('doubleTap', function() {
-        handler.doubleTap();
-
-        assert.isTrue(
-          app.inputMethodManager.currentIMEngine.click.calledWith(99));
-        assert.isTrue(app.inputMethodManager.currentIMEngine.click.calledOnce);
-
-        assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-      });
-
-      suite('longPress', function() {
-        setup(function() {
-          handler.longPress();
-
-          assert.isTrue(
-            app.inputMethodManager.currentIMEngine.click.calledWith(9999));
-          assert.isTrue(
-            app.inputMethodManager.currentIMEngine.click.calledOnce);
-
-          assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-          assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-        });
-
-        test('commit', function() {
-          handler.commit();
-
-          assert.isTrue(
-            app.inputMethodManager.currentIMEngine.click.calledOnce,
-            'Do nothing');
-        });
-
-        test('moveOut', function() {
-          handler.moveOut();
-
-          assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-          assert.isTrue(app.visualHighlightManager.hide.calledTwice);
-        });
-
-        test('cancel', function() {
-          handler.cancel();
-
-          assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-          assert.isTrue(app.visualHighlightManager.hide.calledTwice);
-        });
-
-        test('doubleTap', function() {
-          handler.doubleTap();
-
-          assert.isTrue(
-            app.inputMethodManager.currentIMEngine.click.calledOnce,
-            'Do nothing');
-        });
-      });
-    });
-
-    suite('moveIn', function() {
-      setup(function() {
-        handler.moveIn();
-
-        assert.isTrue(app.visualHighlightManager.show.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.show.calledOnce);
-      });
-
-      test('commit', function() {
-        handler.commit();
-
-        assert.isTrue(
-          app.inputMethodManager.currentIMEngine.click.calledWith(99));
-        assert.isTrue(app.inputMethodManager.currentIMEngine.click.calledOnce);
-
-        assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-      });
-
-      test('moveOut', function() {
-        handler.moveOut();
-
-        assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-      });
-
-      test('cancel', function() {
-        handler.cancel();
-
-        assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-      });
-
-      test('doubleTap', function() {
-        handler.doubleTap();
-
-        assert.isTrue(
-          app.inputMethodManager.currentIMEngine.click.calledWith(99));
-        assert.isTrue(app.inputMethodManager.currentIMEngine.click.calledOnce);
-
-        assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-      });
-
-      suite('longPress', function() {
-        setup(function() {
-          handler.longPress();
-
-          assert.isTrue(
-            app.inputMethodManager.currentIMEngine.click.calledWith(9999));
-          assert.isTrue(
-            app.inputMethodManager.currentIMEngine.click.calledOnce);
-
-          assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-          assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-        });
-
-        test('commit', function() {
-          handler.commit();
-
-          assert.isTrue(
-            app.inputMethodManager.currentIMEngine.click.calledOnce,
-            'Do nothing');
-        });
-
-        test('moveOut', function() {
-          handler.moveOut();
-
-          assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-          assert.isTrue(app.visualHighlightManager.hide.calledTwice);
-        });
-
-        test('cancel', function() {
-          handler.cancel();
-
-          assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-          assert.isTrue(app.visualHighlightManager.hide.calledTwice);
-        });
-
-        test('doubleTap', function() {
-          handler.doubleTap();
-
-          assert.isTrue(
-            app.inputMethodManager.currentIMEngine.click.calledOnce,
-            'Do nothing');
-        });
-      });
-    });
-  });
-
-  suite('NullTargetHandler', function() {
-    var handler;
-    var target;
-    setup(function() {
-      target = {
-        dataset: {
-        }
-      };
-
-      app = {};
-
-      handler = new NullTargetHandler(target, app);
-    });
-
-    test('activate', function() {
-      handler.activate();
-    });
-
-    test('longPress', function() {
-      handler.longPress();
-    });
-
-    test('moveIn', function() {
-      handler.activate();
-    });
-
-    test('moveOut', function() {
-      handler.activate();
-    });
-
-    test('commit', function() {
-      handler.activate();
-    });
-
-    test('cancel', function() {
-      handler.activate();
-    });
-
-    test('doubleTap', function() {
-      handler.activate();
-    });
-  });
-
-  suite('SpaceKeyTargetHandler', function() {
-    var handler;
-    var target;
-    setup(function() {
-      target = {
-        dataset: {
-        }
-      };
-
-      handler = new SpaceKeyTargetHandler(target, app);
-    });
-
-    test('activate', function() {
-      assert.equal(handler.activate, DefaultTargetHandler.prototype.activate,
-        'function not overwritten');
-    });
-
-    test('longPress', function() {
-      handler.longPress();
-
-      assert.isTrue(app.targetHandlersManager
-        .activeTargetsManager.clearAllTargets.calledOnce);
-
-      assert.isTrue(navigator.mozInputMethod.mgmt.hide.calledOnce);
-
-      assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-      assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-    });
-
-    test('moveIn', function() {
-      assert.equal(handler.moveIn, DefaultTargetHandler.prototype.moveIn,
-        'function not overwritten');
-    });
-
-    test('moveOut', function() {
-      assert.equal(handler.moveOut, DefaultTargetHandler.prototype.moveOut,
-        'function not overwritten');
-    });
-
-    test('commit', function() {
-      assert.equal(handler.commit, DefaultTargetHandler.prototype.commit,
-        'function not overwritten');
-    });
-
-    test('cancel', function() {
-      assert.equal(handler.cancel, DefaultTargetHandler.prototype.cancel,
-        'function not overwritten');
-    });
-
-    test('doubleTap', function() {
-      assert.equal(handler.doubleTap, DefaultTargetHandler.prototype.doubleTap,
-        'function not overwritten');
-    });
-  });
-
-  suite('CandidateSelectionTargetHandler', function() {
-    var handler;
-    var target;
-    setup(function() {
-      target = {
-        dataset: {
-          data: 'data'
-        },
-        textContent: 'text'
-      };
-
-      handler = new CandidateSelectionTargetHandler(target, app);
-    });
-
-    test('activate', function() {
-      assert.equal(handler.activate, DefaultTargetHandler.prototype.activate,
-        'function not overwritten');
-    });
-
-    test('longPress', function() {
-      assert.equal(handler.longPress, DefaultTargetHandler.prototype.longPress,
-        'function not overwritten');
-    });
-
-    test('moveIn', function() {
-      assert.equal(handler.moveIn, DefaultTargetHandler.prototype.moveIn,
-        'function not overwritten');
-    });
-
-    test('moveOut', function() {
-      assert.equal(handler.moveOut, DefaultTargetHandler.prototype.moveOut,
-        'function not overwritten');
-    });
-
-    test('commit', function() {
-      handler.commit();
-
-      assert.isTrue(app.candidatePanelManager.hideFullPanel.calledOnce);
-
-      assert.isTrue(app.inputMethodManager.currentIMEngine.
-        select.calledWith('text', 'data'));
-      assert.isTrue(app.inputMethodManager.currentIMEngine.
-        select.calledOnce);
-
-      assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-      assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-    });
-
-    test('cancel', function() {
-      assert.equal(handler.cancel, DefaultTargetHandler.prototype.cancel,
-        'function not overwritten');
-    });
-
-    test('doubleTap', function() {
-      assert.equal(handler.doubleTap, DefaultTargetHandler.prototype.doubleTap,
-        'function not overwritten');
-    });
-  });
-
-  suite('BackspaceTargetHandler', function() {
-    var handler;
-    var target;
-    setup(function() {
-      target = {
-        dataset: {
-        }
-      };
-
-      handler = new BackspaceTargetHandler(target, app);
-    });
-
-    test('longPress', function() {
-      assert.equal(handler.longPress, DefaultTargetHandler.prototype.longPress,
-        'function not overwritten');
-    });
-
-    suite('activate', function() {
-      setup(function() {
-        handler.activate();
-
-        assert.isTrue(app.feedbackManager.triggerFeedback.calledWith(target));
-        assert.isTrue(app.feedbackManager.triggerFeedback.calledOnce);
-
-        assert.isTrue(app.visualHighlightManager.show.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.show.calledOnce);
-
-        assert.isTrue(window.setTimeout.calledOnce);
-        assert.equal(
-          window.setTimeout.getCall(0).args[1], handler.REPEAT_TIMEOUT);
-      });
-
-      test('commit', function() {
-        handler.commit();
-
-        assert.isTrue(
-          app.inputMethodManager.currentIMEngine.click
-          .calledWith(KeyEvent.DOM_VK_BACK_SPACE, null, false));
-        assert.isTrue(app.inputMethodManager.currentIMEngine.click.calledOnce);
-
-        assert.isTrue(window.clearTimeout.calledOnce);
-        assert.isTrue(window.clearInterval.calledOnce);
-
-        assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-      });
-
-      test('moveOut', function() {
-        handler.moveOut();
-
-        assert.isTrue(window.clearTimeout.calledOnce);
-        assert.isTrue(window.clearInterval.calledOnce);
-
-        assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-      });
-
-      test('cancel', function() {
-        handler.cancel();
-
-        assert.isTrue(window.clearTimeout.calledOnce);
-        assert.isTrue(window.clearInterval.calledOnce);
-
-        assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-      });
-
-      test('doubleTap', function() {
-        handler.doubleTap();
-
-        assert.isTrue(
-          app.inputMethodManager.currentIMEngine.click
-          .calledWith(KeyEvent.DOM_VK_BACK_SPACE, null, false));
-        assert.isTrue(app.inputMethodManager.currentIMEngine.click.calledOnce);
-
-        assert.isTrue(window.clearTimeout.calledOnce);
-        assert.isTrue(window.clearInterval.calledOnce);
-
-        assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-      });
-
-      suite('after REPEAT_TIMEOUT', function() {
-        setup(function() {
-          window.setTimeout.getCall(0).args[0].call(window);
-
-          assert.isTrue(
-            app.inputMethodManager.currentIMEngine.click
-            .calledWith(KeyEvent.DOM_VK_BACK_SPACE, null, true));
-          assert.isTrue(app.inputMethodManager.currentIMEngine.click
-            .calledOnce);
-
-          assert.isTrue(window.setInterval.calledOnce);
-          assert.equal(
-            window.setInterval.getCall(0).args[1], handler.REPEAT_RATE);
-        });
-
-        test('commit', function() {
-          handler.commit();
-
-          assert.isTrue(
-            app.inputMethodManager.currentIMEngine.click.getCall(1)
-            .calledWith(KeyEvent.DOM_VK_BACK_SPACE, null, false));
-          assert.isTrue(
-            app.inputMethodManager.currentIMEngine.click.calledTwice);
-
-          assert.isTrue(window.clearTimeout.calledOnce);
-          assert.isTrue(window.clearInterval.calledOnce);
-
-          assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-          assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-        });
-
-        test('moveOut', function() {
-          handler.moveOut();
-
-          assert.isTrue(window.clearTimeout.calledOnce);
-          assert.isTrue(window.clearInterval.calledOnce);
-
-          assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-          assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-        });
-
-        test('cancel', function() {
-          handler.cancel();
-
-          assert.isTrue(window.clearTimeout.calledOnce);
-          assert.isTrue(window.clearInterval.calledOnce);
-
-          assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-          assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-        });
-
-        test('doubleTap', function() {
-          handler.doubleTap();
-
-          assert.isTrue(
-            app.inputMethodManager.currentIMEngine.click.getCall(1)
-            .calledWith(KeyEvent.DOM_VK_BACK_SPACE, null, false));
-          assert.isTrue(
-            app.inputMethodManager.currentIMEngine.click.calledTwice);
-
-          assert.isTrue(window.clearTimeout.calledOnce);
-          assert.isTrue(window.clearInterval.calledOnce);
-
-          assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-          assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-        });
-
-        suite('after REPEAT_RATE', function() {
-          setup(function() {
-            window.setInterval.getCall(0).args[0].call(window);
-
-            assert.isTrue(
-              app.inputMethodManager.currentIMEngine.click.getCall(1)
-              .calledWith(KeyEvent.DOM_VK_BACK_SPACE, null, true));
-            assert.isTrue(app.inputMethodManager.currentIMEngine.click
-              .calledTwice);
-
-            assert.isTrue(window.setInterval.calledOnce);
-            assert.equal(
-              window.setInterval.getCall(0).args[1], handler.REPEAT_RATE);
-          });
-
-          test('commit', function() {
-            handler.commit();
-
-            assert.isTrue(
-              app.inputMethodManager.currentIMEngine.click.getCall(2)
-              .calledWith(KeyEvent.DOM_VK_BACK_SPACE, null, false));
-            assert.isTrue(
-              app.inputMethodManager.currentIMEngine.click.calledThrice);
-
-            assert.isTrue(window.clearTimeout.calledOnce);
-            assert.isTrue(window.clearInterval.calledOnce);
-
-            assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-            assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-          });
-
-          test('moveOut', function() {
-            handler.moveOut();
-
-            assert.isTrue(window.clearTimeout.calledOnce);
-            assert.isTrue(window.clearInterval.calledOnce);
-
-            assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-            assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-          });
-
-          test('cancel', function() {
-            handler.cancel();
-
-            assert.isTrue(window.clearTimeout.calledOnce);
-            assert.isTrue(window.clearInterval.calledOnce);
-
-            assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-            assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-          });
-
-          test('doubleTap', function() {
-            handler.doubleTap();
-
-            assert.isTrue(
-              app.inputMethodManager.currentIMEngine.click.getCall(2)
-              .calledWith(KeyEvent.DOM_VK_BACK_SPACE, null, false));
-            assert.isTrue(
-              app.inputMethodManager.currentIMEngine.click.calledThrice);
-
-            assert.isTrue(window.clearTimeout.calledOnce);
-            assert.isTrue(window.clearInterval.calledOnce);
-
-            assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-            assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-          });
-        });
-      });
-    });
-
-    suite('moveIn', function() {
-      setup(function() {
-        handler.moveIn();
-
-        assert.isFalse(app.feedbackManager.triggerFeedback.calledOnce);
-        assert.isFalse(app.visualHighlightManager.show.calledOnce);
-        assert.isFalse(window.setTimeout.calledOnce);
-        assert.isFalse(window.setInterval.calledOnce);
-      });
-
-      teardown(function() {
-        assert.isFalse(app.inputMethodManager.currentIMEngine.click.calledOnce,
-          'Should not be called whatsoever.');
-      });
-
-      test('commit', function() {
-        handler.commit();
-      });
-
-      test('moveOut', function() {
-        handler.moveOut();
-      });
-
-      test('cancel', function() {
-        handler.cancel();
-      });
-
-      test('doubleTap', function() {
-        handler.doubleTap();
-      });
-    });
-  });
-
-  suite('CompositeTargetHandler', function() {
-    var handler;
-    var target;
-    setup(function() {
-      target = {
-        dataset: {
-          compositeKey: 'lol'
-        }
-      };
-
-      handler = new CompositeTargetHandler(target, app);
-    });
-
-    test('activate', function() {
-      assert.equal(handler.activate, DefaultTargetHandler.prototype.activate,
-        'function not overwritten');
-    });
-
-    test('longPress', function() {
-      assert.equal(handler.longPress, DefaultTargetHandler.prototype.longPress,
-        'function not overwritten');
-    });
-
-    test('moveIn', function() {
-      assert.equal(handler.moveIn, DefaultTargetHandler.prototype.moveIn,
-        'function not overwritten');
-    });
-
-    test('moveOut', function() {
-      assert.equal(handler.moveOut, DefaultTargetHandler.prototype.moveOut,
-        'function not overwritten');
-    });
-
-    test('commit', function() {
-      handler.commit();
-
-      for (var i = 0; i < 'lol'.length; i++) {
-        assert.isTrue(app.inputMethodManager.currentIMEngine.click
-          .getCall(i).calledWith('lol'.charCodeAt(i)));
-      }
-
-      assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-      assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-    });
-
-    test('cancel', function() {
-      assert.equal(handler.cancel, DefaultTargetHandler.prototype.cancel,
-        'function not overwritten');
-    });
-
-    test('doubleTap', function() {
-      assert.equal(handler.doubleTap, DefaultTargetHandler.prototype.doubleTap,
-        'function not overwritten');
-    });
-  });
-
-  suite('CapsLockTargetHandler', function() {
-    var handler;
-    var target;
-    setup(function() {
-      target = {
-        dataset: {
-        }
-      };
-
-      handler = new CapsLockTargetHandler(target, app);
-    });
-
-    test('activate', function() {
-      assert.equal(handler.activate, DefaultTargetHandler.prototype.activate,
-        'function not overwritten');
-    });
-
-    test('longPress', function() {
-      assert.equal(handler.longPress, DefaultTargetHandler.prototype.longPress,
-        'function not overwritten');
-    });
-
-    test('moveIn', function() {
-      assert.equal(handler.moveIn, DefaultTargetHandler.prototype.moveIn,
-        'function not overwritten');
-    });
-
-    test('moveOut', function() {
-      assert.equal(handler.moveOut, DefaultTargetHandler.prototype.moveOut,
-        'function not overwritten');
-    });
-
-    test('commit', function() {
-      handler.commit();
-
-      assert.isTrue(app.upperCaseStateManager.switchUpperCaseState.calledWith({
-        isUpperCase: true,
-        isUpperCaseLocked: false
-      }));
-
-      assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-      assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-    });
-
-    test('cancel', function() {
-      assert.equal(handler.cancel, DefaultTargetHandler.prototype.cancel,
-        'function not overwritten');
-    });
-
-    test('doubleTap', function() {
-      handler.doubleTap();
-
-      assert.isTrue(app.upperCaseStateManager.switchUpperCaseState.calledWith({
-        isUpperCaseLocked: true
-      }));
-
-      assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-      assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-    });
-  });
-
-  suite('PageSwitchingTargetHandler', function() {
-    var handler;
-    var target;
-    setup(function() {
-      target = {
-        dataset: {
-          keycode: '99'
-        }
-      };
-
-      handler = new PageSwitchingTargetHandler(target, app);
-    });
-
-    test('activate', function() {
-      assert.equal(handler.activate, DefaultTargetHandler.prototype.activate,
-        'function not overwritten');
-    });
-
-    test('longPress', function() {
-      assert.equal(handler.longPress, DefaultTargetHandler.prototype.longPress,
-        'function not overwritten');
-    });
-
-    test('moveIn', function() {
-      assert.equal(handler.moveIn, DefaultTargetHandler.prototype.moveIn,
-        'function not overwritten');
-    });
-
-    test('moveOut', function() {
-      assert.equal(handler.moveOut, DefaultTargetHandler.prototype.moveOut,
-        'function not overwritten');
-    });
-
-    test('cancel', function() {
-      assert.equal(handler.cancel, DefaultTargetHandler.prototype.cancel,
-        'function not overwritten');
-    });
-
-    test('doubleTap', function() {
-      assert.equal(handler.doubleTap, DefaultTargetHandler.prototype.doubleTap,
-        'function not overwritten');
-    });
-
-    suite('KEYCODE_BASIC_LAYOUT', function() {
-      setup(function() {
-        target.dataset.keycode =
-          app.layoutManager.KEYCODE_BASIC_LAYOUT.toString(10);
-      });
-
-      test('commit', function() {
-        handler.commit();
-
-        assert.isTrue(
-          app.setLayoutPage.calledWith(app.layoutManager.LAYOUT_PAGE_DEFAULT));
-        assert.isTrue(app.setLayoutPage.calledOnce);
-
-        assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-      });
-    });
-
-    suite('KEYCODE_ALTERNATE_LAYOUT', function() {
-      setup(function() {
-        target.dataset.keycode =
-          app.layoutManager.KEYCODE_ALTERNATE_LAYOUT.toString(10);
-      });
-
-      test('commit', function() {
-        handler.commit();
-
-        assert.isTrue(app.setLayoutPage.calledWith(
-          app.layoutManager.LAYOUT_PAGE_SYMBOLS_I));
-        assert.isTrue(app.setLayoutPage.calledOnce);
-
-        assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-      });
-    });
-
-    suite('DOM_VK_ALT', function() {
-      setup(function() {
-        target.dataset.keycode = KeyEvent.DOM_VK_ALT.toString(10);
-      });
-
-      test('commit (Symbols I -> II)', function() {
-        app.layoutManager.currentLayoutPage =
-          app.layoutManager.LAYOUT_PAGE_SYMBOLS_I;
-
-        handler.commit();
-
-        assert.isTrue(app.setLayoutPage.calledWith(
-          app.layoutManager.LAYOUT_PAGE_SYMBOLS_II));
-        assert.isTrue(app.setLayoutPage.calledOnce);
-
-        assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-      });
-
-      test('commit (Symbols II -> I)', function() {
-        app.layoutManager.currentLayoutPage =
-          app.layoutManager.LAYOUT_PAGE_SYMBOLS_II;
-
-        handler.commit();
-
-        assert.isTrue(app.setLayoutPage.calledWith(
-          app.layoutManager.LAYOUT_PAGE_SYMBOLS_I));
-        assert.isTrue(app.setLayoutPage.calledOnce);
-
-        assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-        assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-      });
-    });
-  });
-
-  suite('SwitchKeyboardTargetHandler', function() {
-    var handler;
-    var target;
-    setup(function() {
-      target = {
-        dataset: {
-        }
-      };
-
-      handler = new SwitchKeyboardTargetHandler(target, app);
-    });
-
-    test('activate', function() {
-      assert.equal(handler.activate, DefaultTargetHandler.prototype.activate,
-        'function not overwritten');
-    });
-
-    test('longPress', function() {
-      handler.longPress();
-
-      assert.isTrue(app.targetHandlersManager
-        .activeTargetsManager.clearAllTargets.calledOnce);
-
-      assert.isTrue(navigator.mozInputMethod.mgmt.showAll.calledOnce);
-
-      assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-      assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-    });
-
-    test('moveIn', function() {
-      assert.equal(handler.moveIn, DefaultTargetHandler.prototype.moveIn,
-        'function not overwritten');
-    });
-
-    test('moveOut', function() {
-      assert.equal(handler.moveOut, DefaultTargetHandler.prototype.moveOut,
-        'function not overwritten');
-    });
-
-    test('commit', function() {
-      handler.commit();
-
-      assert.isTrue(app.targetHandlersManager
-        .activeTargetsManager.clearAllTargets.calledOnce);
-
-      assert.isTrue(navigator.mozInputMethod.mgmt.next.calledOnce);
-
-      assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-      assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-    });
-
-    test('cancel', function() {
-      assert.equal(handler.cancel, DefaultTargetHandler.prototype.cancel,
-        'function not overwritten');
-    });
-
-    test('doubleTap', function() {
-      assert.equal(handler.doubleTap, DefaultTargetHandler.prototype.doubleTap,
-        'function not overwritten');
-    });
-  });
-
-  suite('ToggleCandidatePanelTargetHandler', function() {
-    var handler;
-    var target;
-    setup(function() {
-      target = {
-        dataset: {
-        }
-      };
-
-      handler = new ToggleCandidatePanelTargetHandler(target, app);
-    });
-
-    test('activate', function() {
-      assert.equal(handler.activate, DefaultTargetHandler.prototype.activate,
-        'function not overwritten');
-    });
-
-    test('longPress', function() {
-      assert.equal(handler.longPress, DefaultTargetHandler.prototype.longPress,
-        'function not overwritten');
-    });
-
-    test('moveIn', function() {
-      assert.equal(handler.moveIn, DefaultTargetHandler.prototype.moveIn,
-        'function not overwritten');
-    });
-
-    test('moveOut', function() {
-      assert.equal(handler.moveOut, DefaultTargetHandler.prototype.moveOut,
-        'function not overwritten');
-    });
-
-    test('commit', function() {
-      handler.commit();
-
-      assert.isTrue(app.candidatePanelManager.toggleFullPanel.calledOnce);
-
-      assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-      assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-    });
-
-    test('cancel', function() {
-      assert.equal(handler.cancel, DefaultTargetHandler.prototype.cancel,
-        'function not overwritten');
-    });
-
-    test('doubleTap', function() {
-      assert.equal(handler.doubleTap, DefaultTargetHandler.prototype.doubleTap,
-        'function not overwritten');
-    });
-  });
-
-  suite('DismissSuggestionsTargetHandler', function() {
-    var handler;
-    var target;
-    setup(function() {
-      target = {
-        dataset: {
-        }
-      };
-
-      handler = new DismissSuggestionsTargetHandler(target, app);
-    });
-
-    test('activate', function() {
-      assert.equal(handler.activate, DefaultTargetHandler.prototype.activate,
-        'function not overwritten');
-    });
-
-    test('longPress', function() {
-      assert.equal(handler.longPress, DefaultTargetHandler.prototype.longPress,
-        'function not overwritten');
-    });
-
-    test('moveIn', function() {
-      assert.equal(handler.moveIn, DefaultTargetHandler.prototype.moveIn,
-        'function not overwritten');
-    });
-
-    test('moveOut', function() {
-      assert.equal(handler.moveOut, DefaultTargetHandler.prototype.moveOut,
-        'function not overwritten');
-    });
-
-    test('commit', function() {
-      handler.commit();
-
-      assert.isTrue(
-        app.inputMethodManager.currentIMEngine.dismissSuggestions.calledOnce);
-
-      assert.isTrue(app.visualHighlightManager.hide.calledWith(target));
-      assert.isTrue(app.visualHighlightManager.hide.calledOnce);
-    });
-
-    test('cancel', function() {
-      assert.equal(handler.cancel, DefaultTargetHandler.prototype.cancel,
-        'function not overwritten');
-    });
-
-    test('doubleTap', function() {
-      assert.equal(handler.doubleTap, DefaultTargetHandler.prototype.doubleTap,
-        'function not overwritten');
-    });
-  });
-});
diff --git a/apps/keyboard/test/unit/keyboard/upper_case_state_manager_test.js b/apps/keyboard/test/unit/keyboard/upper_case_state_manager_test.js
deleted file mode 100644
index 5c7ea20..0000000
--- a/apps/keyboard/test/unit/keyboard/upper_case_state_manager_test.js
+++ /dev/null
@@ -1,282 +0,0 @@
-'use strict';
-
-/* global UpperCaseStateManager */
-
-require('/js/keyboard/upper_case_state_manager.js');
-
-suite('UpperCaseStateManager', function() {
-  var manager;
-
-  setup(function() {
-    manager = new UpperCaseStateManager();
-    manager.onstatechange = this.sinon.stub();
-    manager.start();
-  });
-
-  suite('isUpperCase = false, isUpperCaseLocked = false', function() {
-    test('set isUpperCase = true', function() {
-      manager.switchUpperCaseState({
-        isUpperCase: true
-      });
-
-      assert.isTrue(manager.isUpperCase);
-      assert.isFalse(manager.isUpperCaseLocked);
-      assert.isTrue(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCase = false', function() {
-      manager.switchUpperCaseState({
-        isUpperCase: false
-      });
-
-      assert.isFalse(manager.isUpperCase);
-      assert.isFalse(manager.isUpperCaseLocked);
-      assert.isFalse(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCase = true, isUpperCaseLocked = false', function() {
-      manager.switchUpperCaseState({
-        isUpperCase: true,
-        isUpperCaseLocked: false
-      });
-
-      assert.isTrue(manager.isUpperCase);
-      assert.isFalse(manager.isUpperCaseLocked);
-      assert.isTrue(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCase = false, isUpperCaseLocked = false', function() {
-      manager.switchUpperCaseState({
-        isUpperCase: false,
-        isUpperCaseLocked: false
-      });
-
-      assert.isFalse(manager.isUpperCase);
-      assert.isFalse(manager.isUpperCaseLocked);
-      assert.isFalse(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCase = true, isUpperCaseLocked = true', function() {
-      manager.switchUpperCaseState({
-        isUpperCase: true,
-        isUpperCaseLocked: true
-      });
-
-      assert.isTrue(manager.isUpperCase);
-      assert.isTrue(manager.isUpperCaseLocked);
-      assert.isTrue(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCase = false, isUpperCaseLocked = true', function() {
-      manager.switchUpperCaseState({
-        isUpperCase: false,
-        isUpperCaseLocked: true
-      });
-
-      assert.isTrue(manager.isUpperCase);
-      assert.isTrue(manager.isUpperCaseLocked);
-      assert.isTrue(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCaseLocked = true', function() {
-      manager.switchUpperCaseState({
-        isUpperCaseLocked: true
-      });
-
-      assert.isTrue(manager.isUpperCase);
-      assert.isTrue(manager.isUpperCaseLocked);
-      assert.isTrue(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCaseLocked = false', function() {
-      manager.switchUpperCaseState({
-        isUpperCaseLocked: false
-      });
-
-      assert.isFalse(manager.isUpperCase);
-      assert.isFalse(manager.isUpperCaseLocked);
-      assert.isFalse(manager.onstatechange.calledOnce);
-    });
-  });
-
-  suite('isUpperCase = true, isUpperCaseLocked = false', function() {
-    setup(function() {
-      manager.isUpperCase = true;
-    });
-
-    test('set isUpperCase = true', function() {
-      manager.switchUpperCaseState({
-        isUpperCase: true
-      });
-
-      assert.isTrue(manager.isUpperCase);
-      assert.isFalse(manager.isUpperCaseLocked);
-      assert.isFalse(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCase = false', function() {
-      manager.switchUpperCaseState({
-        isUpperCase: false
-      });
-
-      assert.isFalse(manager.isUpperCase);
-      assert.isFalse(manager.isUpperCaseLocked);
-      assert.isTrue(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCase = true, isUpperCaseLocked = false', function() {
-      manager.switchUpperCaseState({
-        isUpperCase: true,
-        isUpperCaseLocked: false
-      });
-
-      assert.isTrue(manager.isUpperCase);
-      assert.isFalse(manager.isUpperCaseLocked);
-      assert.isFalse(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCase = false, isUpperCaseLocked = false', function() {
-      manager.switchUpperCaseState({
-        isUpperCase: false,
-        isUpperCaseLocked: false
-      });
-
-      assert.isFalse(manager.isUpperCase);
-      assert.isFalse(manager.isUpperCaseLocked);
-      assert.isTrue(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCase = true, isUpperCaseLocked = true', function() {
-      manager.switchUpperCaseState({
-        isUpperCase: true,
-        isUpperCaseLocked: true
-      });
-
-      assert.isTrue(manager.isUpperCase);
-      assert.isTrue(manager.isUpperCaseLocked);
-      assert.isTrue(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCase = false, isUpperCaseLocked = true', function() {
-      manager.switchUpperCaseState({
-        isUpperCase: false,
-        isUpperCaseLocked: true
-      });
-
-      assert.isTrue(manager.isUpperCase);
-      assert.isTrue(manager.isUpperCaseLocked);
-      assert.isTrue(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCaseLocked = true', function() {
-      manager.switchUpperCaseState({
-        isUpperCaseLocked: true
-      });
-
-      assert.isTrue(manager.isUpperCase);
-      assert.isTrue(manager.isUpperCaseLocked);
-      assert.isTrue(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCaseLocked = false', function() {
-      manager.switchUpperCaseState({
-        isUpperCaseLocked: false
-      });
-
-      assert.isTrue(manager.isUpperCase);
-      assert.isFalse(manager.isUpperCaseLocked);
-      assert.isFalse(manager.onstatechange.calledOnce);
-    });
-  });
-
-  suite('isUpperCase = true, isUpperCaseLocked = true', function() {
-    setup(function() {
-      manager.isUpperCase = true;
-      manager.isUpperCaseLocked = true;
-    });
-
-    test('set isUpperCase = true', function() {
-      manager.switchUpperCaseState({
-        isUpperCase: true
-      });
-
-      assert.isTrue(manager.isUpperCase);
-      assert.isTrue(manager.isUpperCaseLocked);
-      assert.isFalse(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCase = false', function() {
-      manager.switchUpperCaseState({
-        isUpperCase: false
-      });
-
-      assert.isTrue(manager.isUpperCase);
-      assert.isTrue(manager.isUpperCaseLocked);
-      assert.isFalse(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCase = true, isUpperCaseLocked = false', function() {
-      manager.switchUpperCaseState({
-        isUpperCase: true,
-        isUpperCaseLocked: false
-      });
-
-      assert.isTrue(manager.isUpperCase);
-      assert.isFalse(manager.isUpperCaseLocked);
-      assert.isTrue(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCase = false, isUpperCaseLocked = false', function() {
-      manager.switchUpperCaseState({
-        isUpperCase: false,
-        isUpperCaseLocked: false
-      });
-
-      assert.isFalse(manager.isUpperCase);
-      assert.isFalse(manager.isUpperCaseLocked);
-      assert.isTrue(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCase = true, isUpperCaseLocked = true', function() {
-      manager.switchUpperCaseState({
-        isUpperCase: true,
-        isUpperCaseLocked: true
-      });
-
-      assert.isTrue(manager.isUpperCase);
-      assert.isTrue(manager.isUpperCaseLocked);
-      assert.isFalse(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCase = false, isUpperCaseLocked = true', function() {
-      manager.switchUpperCaseState({
-        isUpperCase: false,
-        isUpperCaseLocked: true
-      });
-
-      assert.isTrue(manager.isUpperCase);
-      assert.isTrue(manager.isUpperCaseLocked);
-      assert.isFalse(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCaseLocked = true', function() {
-      manager.switchUpperCaseState({
-        isUpperCaseLocked: true
-      });
-
-      assert.isTrue(manager.isUpperCase);
-      assert.isTrue(manager.isUpperCaseLocked);
-      assert.isFalse(manager.onstatechange.calledOnce);
-    });
-
-    test('set isUpperCaseLocked = false', function() {
-      manager.switchUpperCaseState({
-        isUpperCaseLocked: false
-      });
-
-      assert.isTrue(manager.isUpperCase);
-      assert.isFalse(manager.isUpperCaseLocked);
-      assert.isTrue(manager.onstatechange.calledOnce);
-    });
-  });
-});
diff --git a/apps/keyboard/test/unit/keyboard/user_press_manager_test.js b/apps/keyboard/test/unit/keyboard/user_press_manager_test.js
index 24a71b6..9afe9f6 100644
--- a/apps/keyboard/test/unit/keyboard/user_press_manager_test.js
+++ b/apps/keyboard/test/unit/keyboard/user_press_manager_test.js
@@ -567,7 +567,7 @@ suite('UserPressManager', function() {
       el2 = new MockEventTarget();
       var touchstartEvent2 = {
         type: 'touchstart',
-        target: el2,
+        target: el,
         changedTouches: [
           {
             target: el2,
@@ -849,125 +849,4 @@ suite('UserPressManager', function() {
       manager.stop();
     });
   });
-
-  suite('two touches on the same element', function() {
-    var manager, el;
-
-    setup(function() {
-      manager = new UserPressManager(app);
-      manager.onpressstart = this.sinon.stub();
-      manager.onpressmove = this.sinon.stub();
-      manager.onpressend = this.sinon.stub();
-      manager.start();
-
-      el = new MockEventTarget();
-      this.sinon.stub(el, 'removeEventListener');
-      var touchstartEvent = {
-        type: 'touchstart',
-        target: el,
-        changedTouches: [
-          {
-            target: el,
-            identifier: 0,
-            pageX: 100,
-            pageY: 110
-          }
-        ]
-      };
-      container.dispatchEvent(touchstartEvent);
-
-      assert.isTrue(manager.onpressstart.calledOnce);
-      assert.deepEqual(manager.onpressstart.getCall(0).args,
-        [{
-          target: el,
-          moved: false,
-          pageX: 100,
-          pageY: 110
-        }, 0]);
-
-      var touchstartEvent2 = {
-        type: 'touchstart',
-        target: el,
-        changedTouches: [
-          {
-            target: el,
-            identifier: 1,
-            pageX: 200,
-            pageY: 210
-          }
-        ]
-      };
-      container.dispatchEvent(touchstartEvent2);
-
-      assert.isTrue(manager.onpressstart.calledTwice);
-      assert.equal(manager.presses.size, 2);
-      assert.deepEqual(manager.onpressstart.getCall(1).args,
-        [{
-          target: el,
-          moved: false,
-          pageX: 200,
-          pageY: 210
-        }, 1]);
-
-      document.elementFromPoint.withArgs(100, 110).returns(el);
-      document.elementFromPoint.withArgs(200, 210).returns(el);
-    });
-
-    test('without moving, touchend', function() {
-      var touchendEvent = {
-        type: 'touchend',
-        target: el,
-        changedTouches: [
-          {
-            target: el,
-            identifier: 0,
-            pageX: 100,
-            pageY: 110
-          }
-        ]
-      };
-      el.dispatchEvent(touchendEvent);
-
-      assert.isTrue(manager.onpressend.calledOnce);
-      assert.equal(manager.presses.size, 1);
-      assert.deepEqual(manager.onpressend.getCall(0).args,
-        [{
-          target: el,
-          moved: false,
-          pageX: 100,
-          pageY: 110
-        }, 0]);
-
-      var touchendEvent2 = {
-        type: 'touchend',
-        target: el,
-        changedTouches: [
-          {
-            target: el,
-            identifier: 1,
-            pageX: 200,
-            pageY: 210
-          }
-        ]
-      };
-      el.dispatchEvent(touchendEvent2);
-
-      assert.isTrue(manager.onpressend.calledTwice);
-      assert.equal(manager.presses.size, 0);
-      assert.deepEqual(manager.onpressend.getCall(1).args,
-        [{
-          target: el,
-          moved: false,
-          pageX: 200,
-          pageY: 210
-        }, 1]);
-
-      assert.isTrue(el.removeEventListener.calledWith('touchmove'));
-      assert.isTrue(el.removeEventListener.calledWith('touchend'));
-      assert.isTrue(el.removeEventListener.calledWith('touchcancel'));
-      assert.equal(el.removeEventListener.callCount, 3);
-
-      manager.stop();
-    });
-  });
 });
diff --git a/apps/keyboard/test/unit/keyboard/visual_highlight_manager_test.js b/apps/keyboard/test/unit/keyboard/visual_highlight_manager_test.js
index 4666d3e..9603c31 100644
--- a/apps/keyboard/test/unit/keyboard/visual_highlight_manager_test.js
+++ b/apps/keyboard/test/unit/keyboard/visual_highlight_manager_test.js
@@ -11,9 +11,7 @@ suite('VisualHighlightManager', function() {

   setup(function() {
     app = {
-      upperCaseStateManager: {
-        isUpperCase: false
-      }
+      isCapitalized: this.sinon.stub()
     };

     // Create fake IMERender
@@ -26,9 +24,6 @@ suite('VisualHighlightManager', function() {

     manager = new VisualHighlightManager(app);
     manager.start();
-
-    this.sinon.stub(window, 'setTimeout');
-    this.sinon.stub(window, 'clearTimeout');
   });

   teardown(function() {
@@ -37,6 +32,7 @@ suite('VisualHighlightManager', function() {
   });

   test('show (lower case)', function() {
+    app.isCapitalized.returns(false);
     manager.show(target);

     assert.isTrue(window.IMERender.highlightKey
@@ -44,58 +40,16 @@ suite('VisualHighlightManager', function() {
   });

   test('show (upper case)', function() {
-    app.upperCaseStateManager.isUpperCase = true;
+    app.isCapitalized.returns(true);
     manager.show(target);

     assert.isTrue(window.IMERender.highlightKey
       .calledWith(target, { showUpperCase: true }));
   });

-  test('show after hide', function() {
-    manager.hide(target);
-
-    var target2 = {};
-
-    app.upperCaseStateManager.isUpperCase = false;
-    manager.show(target2);
-
-    assert.isTrue(window.IMERender.unHighlightKey.calledWith(target),
-      'The first target highlight should be hidden immediately.');
-
-    assert.isTrue(window.IMERender.highlightKey
-      .calledWith(target2, { showUpperCase: false }));
-  });
-
   test('hide', function() {
     manager.hide(target);

-    assert.isTrue(window.setTimeout.calledOnce);
-    assert.equal(window.setTimeout.getCall(0).args[1],
-      manager.HIGHTLIGHT_DELAY_MS);
-
-    window.setTimeout.getCall(0).args[0].call(window);
-
-    assert.isTrue(window.IMERender.unHighlightKey.calledWith(target));
-  });
-
-  test('hide twice within HIGHTLIGHT_DELAY_MS', function() {
-    window.setTimeout.returns(200);
-
-    manager.hide(target);
-
-    assert.isTrue(window.setTimeout.calledOnce);
-    assert.equal(window.setTimeout.getCall(0).args[1],
-      manager.HIGHTLIGHT_DELAY_MS);
-
-    window.setTimeout.returns(201);
-
-    manager.hide(target);
-
-    assert.isTrue(window.clearTimeout.calledWith(200));
-    assert.isTrue(window.setTimeout.calledTwice);
-
-    window.setTimeout.getCall(1).args[0].call(window);
-
     assert.isTrue(window.IMERender.unHighlightKey.calledWith(target));
   });
 });
diff --git a/apps/keyboard/test/unit/latin_test.js b/apps/keyboard/test/unit/latin_test.js
index fe8741c..633286e 100644
--- a/apps/keyboard/test/unit/latin_test.js
+++ b/apps/keyboard/test/unit/latin_test.js
@@ -17,20 +17,20 @@ suite('latin input method capitalization and punctuation', function() {
   var isUpperCase;

   var defaultKeyboardGlue = {
+    resetUpperCase: function() {
+      isUpperCase = false;
+    },
     sendKey: sendKey,
     sendCandidates: function(words) {
       // gotSuggestions(words);
     },
-    setUpperCase: function(state) {
-      isUpperCase = state.isUpperCase;
+    setUpperCase: function(uc) {
+      isUpperCase = uc;
     },
     setLayoutPage: function() {
     },
     isCapitalized: function() {
       return isUpperCase;
-    },
-    replaceSurroundingText: function() {
-      return Promise.resolve();
     }
   };

@@ -338,15 +338,14 @@ suite('latin input method capitalization and punctuation', function() {
     var keyboardGlue = Object.create(defaultKeyboardGlue);
     var _windowWorker;
     var workers = [];
-    var handleEventSpy = null;

     function activateIME() {
       im.activate('en', {
         type: 'text',
         inputmode: '',
-        value: 'before after',
-        selectionStart: 5,
-        selectionEnd: 5,
+        value: '',
+        selectionStart: 0,
+        selectionEnd: 0,
         inputContext: inputContext
       },{suggest: true, correct: true});
     }
@@ -366,35 +365,22 @@ suite('latin input method capitalization and punctuation', function() {
       };

       worker.prototype.postMessage = function() {};
-
-      handleEventSpy = sinon.spy(im, 'handleEvent');
     });

     teardown(function() {
       window.Worker = _windowWorker;
-      handleEventSpy.restore();
     });

     test('should listen to selectionchange', function() {
       im.init(keyboardGlue);
       activateIME();

+      var handleEventSpy = sinon.spy(im, 'handleEvent');
       inputContext.dispatchEvent(new Event('selectionchange'));

       sinon.assert.calledOnce(handleEventSpy);
     });

-    test('should stop listening to selectionchange when' +
-         ' deactivated', function() {
-      im.init(keyboardGlue);
-      activateIME();
-
-      im.deactivate();
-
-      inputContext.dispatchEvent(new Event('selectionchange'));
-      sinon.assert.notCalled(handleEventSpy);
-    });
-
     test('wll clear the suggestions if selectionchange', function() {
       im = InputMethods.latin;
       keyboardGlue.sendCandidates = sinon.stub();
@@ -403,6 +389,8 @@ suite('latin input method capitalization and punctuation', function() {
       activateIME();

       // change the cursor position
+      inputContext.selectionStart = 4;
+      inputContext.selectionEnd = 4;
       inputContext.dispatchEvent(new Event('selectionchange'));

       // will clear the suggestions since cursor changed
@@ -415,9 +403,6 @@ suite('latin input method capitalization and punctuation', function() {
       im.init(keyboardGlue);

       activateIME();
-
-      inputContext.selectionStart = 5;
-      inputContext.selectionEnd = 5;
       inputContext.dispatchEvent(new Event('selectionchange'));

       // Do nothing with the same cursor
@@ -442,25 +427,6 @@ suite('latin input method capitalization and punctuation', function() {
       sinon.assert.calledOnce(keyboardGlue.sendCandidates);
     });

-    test('Do nothing if there is pending selection change after' +
-         ' selecting a suggestion', function() {
-      im = InputMethods.latin;
-      keyboardGlue.sendCandidates = sinon.stub();
-      im.init(keyboardGlue);
-
-      activateIME();
-
-      im.select('suggestedWord', 'word data');
-
-      // change the cursor position
-      inputContext.selectionStart = 4;
-      inputContext.selectionEnd = 4;
-      inputContext.dispatchEvent(new Event('selectionchange'));
-
-      // Do nothing with the same cursor
-      sinon.assert.calledOnce(keyboardGlue.sendCandidates);
-    });
-
     test('Continue to listen to selectionchange after pending', function(done) {
       im = InputMethods.latin;
       keyboardGlue.sendCandidates = sinon.stub();
@@ -468,17 +434,14 @@ suite('latin input method capitalization and punctuation', function() {

       activateIME();

-      sinon.assert.calledOnce(keyboardGlue.sendCandidates);
-
       im.click('t'.charCodeAt(0)).then(function() {
-        sinon.assert.calledTwice(keyboardGlue.sendCandidates);
-
-        inputContext.selectionStart = 0;
-        inputContext.selectionEnd = 0;
+        inputContext.selectionStart = 4;
+        inputContext.selectionEnd = 4;
         inputContext.dispatchEvent(new Event('selectionchange'));

-        sinon.assert.calledThrice(keyboardGlue.sendCandidates);
-      }).then(done, done);
+        sinon.assert.calledTwice(keyboardGlue.sendCandidates);
+        done();
+      });
     });

     test('Continue to skip selectionchange if there are still' +
@@ -490,9 +453,7 @@ suite('latin input method capitalization and punctuation', function() {
       activateIME();

       im.click('t'.charCodeAt(0)).then(function() {
-
-        sinon.assert.calledTwice(keyboardGlue.sendCandidates);
-
+        console.log('hi hi');
         inputContext.selectionStart = 4;
         inputContext.selectionEnd = 4;

@@ -501,8 +462,9 @@ suite('latin input method capitalization and punctuation', function() {
       });

       im.click('o'.charCodeAt(0)).then(function() {
-        sinon.assert.calledThrice(keyboardGlue.sendCandidates);
-      }).then(done, done);
+        sinon.assert.calledOnce(keyboardGlue.sendCandidates);
+        done();
+      });
     });
   });

diff --git a/apps/music/js/metadata.js b/apps/music/js/metadata.js
index e1f6da4..7aae145 100644
--- a/apps/music/js/metadata.js
+++ b/apps/music/js/metadata.js
@@ -669,10 +669,6 @@ function parseAudioMetadata(blob, metadataCallback, errorCallback) {
               }
             }
           }
-          else {
-            // There is no enough information for us to identify the MP4
-            throw 'Not enough metadata in MP4 container!';
-          }
           data.index = nextindex;
         }
         else {
diff --git a/apps/music/style/images/IconAction_Media_SeekBackward_30x30.png b/apps/music/style/images/IconAction_Media_SeekBackward_30x30.png
new file mode 100644
index 0000000..23275f7
Binary files /dev/null and b/apps/music/style/images/IconAction_Media_SeekBackward_30x30.png differ
diff --git a/apps/music/style/images/IconAction_Media_SeekBackward_30x30@1.5x.png b/apps/music/style/images/IconAction_Media_SeekBackward_30x30@1.5x.png
new file mode 100644
index 0000000..d6f2d81
Binary files /dev/null and b/apps/music/style/images/IconAction_Media_SeekBackward_30x30@1.5x.png differ
diff --git a/apps/music/style/images/IconAction_Media_SeekBackward_30x30@2.25x.png b/apps/music/style/images/IconAction_Media_SeekBackward_30x30@2.25x.png
new file mode 100644
index 0000000..72d31c2
Binary files /dev/null and b/apps/music/style/images/IconAction_Media_SeekBackward_30x30@2.25x.png differ
diff --git a/apps/music/style/images/IconAction_Media_SeekBackward_30x30@2x.png b/apps/music/style/images/IconAction_Media_SeekBackward_30x30@2x.png
new file mode 100644
index 0000000..50e3b78
Binary files /dev/null and b/apps/music/style/images/IconAction_Media_SeekBackward_30x30@2x.png differ
diff --git a/apps/music/style/images/IconAction_Media_SeekForward_30x30.png b/apps/music/style/images/IconAction_Media_SeekForward_30x30.png
new file mode 100644
index 0000000..10e4ebe
Binary files /dev/null and b/apps/music/style/images/IconAction_Media_SeekForward_30x30.png differ
diff --git a/apps/music/style/images/IconAction_Media_SeekForward_30x30@1.5x.png b/apps/music/style/images/IconAction_Media_SeekForward_30x30@1.5x.png
new file mode 100644
index 0000000..c7673be
Binary files /dev/null and b/apps/music/style/images/IconAction_Media_SeekForward_30x30@1.5x.png differ
diff --git a/apps/music/style/images/IconAction_Media_SeekForward_30x30@2.25x.png b/apps/music/style/images/IconAction_Media_SeekForward_30x30@2.25x.png
new file mode 100644
index 0000000..20fc7d4
Binary files /dev/null and b/apps/music/style/images/IconAction_Media_SeekForward_30x30@2.25x.png differ
diff --git a/apps/music/style/images/IconAction_Media_SeekForward_30x30@2x.png b/apps/music/style/images/IconAction_Media_SeekForward_30x30@2x.png
new file mode 100644
index 0000000..7d2d71d
Binary files /dev/null and b/apps/music/style/images/IconAction_Media_SeekForward_30x30@2x.png differ
diff --git a/apps/music/style/images/IconAction_Media_Stop_30x30.png b/apps/music/style/images/IconAction_Media_Stop_30x30.png
new file mode 100644
index 0000000..9e56ed6
Binary files /dev/null and b/apps/music/style/images/IconAction_Media_Stop_30x30.png differ
diff --git a/apps/music/style/images/IconAction_Media_Stop_30x30@1.5x.png b/apps/music/style/images/IconAction_Media_Stop_30x30@1.5x.png
new file mode 100644
index 0000000..fb9ff26
Binary files /dev/null and b/apps/music/style/images/IconAction_Media_Stop_30x30@1.5x.png differ
diff --git a/apps/music/style/images/IconAction_Media_Stop_30x30@2.25x.png b/apps/music/style/images/IconAction_Media_Stop_30x30@2.25x.png
new file mode 100644
index 0000000..2780c4b
Binary files /dev/null and b/apps/music/style/images/IconAction_Media_Stop_30x30@2.25x.png differ
diff --git a/apps/music/style/images/IconAction_Media_Stop_30x30@2x.png b/apps/music/style/images/IconAction_Media_Stop_30x30@2x.png
new file mode 100644
index 0000000..1b58e1c
Binary files /dev/null and b/apps/music/style/images/IconAction_Media_Stop_30x30@2x.png differ
diff --git a/apps/music/style/images/scrubber_pressed.png b/apps/music/style/images/scrubber_pressed.png
new file mode 100644
index 0000000..b40c8af
Binary files /dev/null and b/apps/music/style/images/scrubber_pressed.png differ
diff --git a/apps/music/style/images/scrubber_pressed@1.5x.png b/apps/music/style/images/scrubber_pressed@1.5x.png
new file mode 100644
index 0000000..56a25f4
Binary files /dev/null and b/apps/music/style/images/scrubber_pressed@1.5x.png differ
diff --git a/apps/music/style/images/scrubber_pressed@2x.png b/apps/music/style/images/scrubber_pressed@2x.png
new file mode 100644
index 0000000..1a8e888
Binary files /dev/null and b/apps/music/style/images/scrubber_pressed@2x.png differ
diff --git a/apps/music/test/marionette/manifest.ini b/apps/music/test/marionette/manifest.ini
deleted file mode 100644
index c1bb0e9..0000000
--- a/apps/music/test/marionette/manifest.ini
+++ /dev/null
@@ -1 +0,0 @@
-[Player_test.js]
diff --git a/apps/operatorvariant/js/customizers/customizer.js b/apps/operatorvariant/js/customizers/customizer.js
index 1cc6b11..5fb5fcf 100644
--- a/apps/operatorvariant/js/customizers/customizer.js
+++ b/apps/operatorvariant/js/customizers/customizer.js
@@ -21,8 +21,7 @@ var Customizer = (function(setting, resourceType, onerror) {
         if (resourceType === 'data') {
           self.set(value);
         } else {
-          self.simPresentOnFirstBoot = event.detail.simPresentOnFirstBoot;
-          Resources.load(value, resourceType, self.set.bind(self),
+          Resources.load(value, resourceType, self.set,
             function onerrorRetrieving(status) {
               console.error('Customizer.js: Error retrieving the resource.');
               onerror && onerror(status);
diff --git a/apps/operatorvariant/js/customizers/keyboard_settings_customizer.js b/apps/operatorvariant/js/customizers/keyboard_settings_customizer.js
index 9724777..2918ea3 100644
--- a/apps/operatorvariant/js/customizers/keyboard_settings_customizer.js
+++ b/apps/operatorvariant/js/customizers/keyboard_settings_customizer.js
@@ -5,12 +5,10 @@ var KeyboardSettingsCustomizer = (function() {
   Customizer.call(this, 'keyboard_settings', 'json');

   this.set = function(keybrdParams) {
-    if (!this.simPresentOnFirstBoot) {
-      console.log('KeyboardSettingsCustomizer. ' +
-                  'Skipping configuration since there was no SIM at first run');
-      return;
-    }
+    const KEYBRD_SETTINGS = ['keyboard.vibration', 'keyboard.autocorrect',
+                             'keyboard.clicksound', 'keyboard.wordsuggestion'];

+    var actualValues = {};
     var settings = navigator.mozSettings;
     if (!settings) {
       console.error('KeyboardSettingsCustomizer. Settings is not available');
@@ -34,8 +32,23 @@ var KeyboardSettingsCustomizer = (function() {
       }
     }

+    function saveActualValue(key, req) {
+      actualValues[key] = req.result[key];
+      var numKeybrdSettings = KEYBRD_SETTINGS.length;
+      if (Object.keys(actualValues).length === numKeybrdSettings) {
+        // Verify that the user has changed any setting before we
+        // change the configuration
+        var hasChanged = false;
+        for (var i = 0; i < numKeybrdSettings && !hasChanged; i++) {
+          hasChanged = (keybrdParams.defaults[KEYBRD_SETTINGS[i]] !==
+                        actualValues[KEYBRD_SETTINGS[i]]);
+        }
+        !hasChanged && setKeyboard();
+      }
+    }
+
     // First of all, we should verify the parameters
-    if (!keybrdParams || !keybrdParams.values) {
+    if (!keybrdParams || !keybrdParams.defaults || !keybrdParams.values) {
       console.error('KeyboardCustomizer -> Configuration error: ' +
                     'Defaults parameters or new values have not been received');
       return;
@@ -48,7 +61,27 @@ var KeyboardSettingsCustomizer = (function() {
       return;
     }

-    setKeyboard();
+    // If there are not default values for all keyboard settings
+    // we can't continue. We must verify if the user has changed any value
+    for (var i = 0, l = KEYBRD_SETTINGS.length; i < l; i++) {
+      if (!(KEYBRD_SETTINGS[i] in keybrdParams.defaults)) {
+        console.log('KeyboardCustomizer -> Configuration error: Not all the ' +
+                    'default settings values were set. Missing value ' +
+                    KEYBRD_SETTINGS[i]);
+        return;
+      }
+    }
+
+    var onErrorMessage = function(settingName, req) {
+      console.error('Error requesting ' + settingName + '. ' + req.error.name);
+    };
+
+    var keyboardLock = settings.createLock();
+    for (var param in keybrdParams.defaults) {
+      var keyboardReq = keyboardLock.get(param);
+      keyboardReq.onsuccess = saveActualValue.bind(this, param, keyboardReq);
+      keyboardReq.onerror = onErrorMessage.bind(this, param, keyboardReq);
+    }
   };
 });

diff --git a/apps/operatorvariant/js/customizers/nfc_customizer.js b/apps/operatorvariant/js/customizers/nfc_customizer.js
index 87bc200..8579441 100644
--- a/apps/operatorvariant/js/customizers/nfc_customizer.js
+++ b/apps/operatorvariant/js/customizers/nfc_customizer.js
@@ -6,11 +6,6 @@ var NfcCustomizer = (function() {
   Customizer.call(this, 'nfc', 'json');

   this.set = function(nfcParams) {
-    if (!this.simPresentOnFirstBoot) {
-      console.log('NfcCustomizer. No first RUN with configured SIM.');
-      return;
-    }
-
     const NFC_SETTING = 'nfc.enabled';

     var settings = navigator.mozSettings;
diff --git a/apps/operatorvariant/js/customizers/ringtone_customizer.js b/apps/operatorvariant/js/customizers/ringtone_customizer.js
index 7b6f3ae..f1341b8 100644
--- a/apps/operatorvariant/js/customizers/ringtone_customizer.js
+++ b/apps/operatorvariant/js/customizers/ringtone_customizer.js
@@ -3,14 +3,10 @@
 'use strict';

 var RingtoneCustomizer = (function() {
+  var RINGTONE_NAME = 'dialer.ringtone.name';

   Customizer.call(this, 'ringtone', 'json');
   this.set = function(ringtoneParams) {
-    if (!this.simPresentOnFirstBoot) {
-      console.log('RingtoneCustomizer. No first RUN with configured SIM.');
-      return;
-    }
-
     var settings = navigator.mozSettings;
     if (!settings) {
       console.error('RingtoneCustomizer. Settings is not available');
@@ -29,7 +25,21 @@ var RingtoneCustomizer = (function() {
       });
     }

-    setRingtone();
+    var ringtone = settings.createLock().get(RINGTONE_NAME);
+    var ringtoneDefault = ringtoneParams.default;
+    // We only change the ringtone if the user does not changed it previously
+    // The user has changed the value if the actual value of ringtone is
+    // different from default value.
+    ringtone.onsuccess = function wc_onsucces() {
+      var value = ringtone.result[RINGTONE_NAME];
+      if (!value || value === ringtoneDefault) {
+        setRingtone();
+      }
+    };
+    ringtone.onerror = function wc_onerror() {
+      console.error('Error retrieving ' + RINGTONE_NAME + '. ' +
+                    ringtone.error.name);
+    };
   };
 });

diff --git a/apps/operatorvariant/js/customizers/sms_customizer.js b/apps/operatorvariant/js/customizers/sms_customizer.js
index e12fe30..786811b 100644
--- a/apps/operatorvariant/js/customizers/sms_customizer.js
+++ b/apps/operatorvariant/js/customizers/sms_customizer.js
@@ -32,12 +32,29 @@ var SmsCustomizer = (function() {
     if (!maxConcatFloor) {
       console.error('Incorrect value for max concatenated message:' +
                     smsParams.smsMaxConcat);
-      return;
     }

-    settings.createLock().set({
-      'operatorResource.sms.maxConcat': maxConcatFloor
-    });
+    var opSizeFloor = getPosInteger(smsParams.mmsSizeLimitation);
+    // Zero is wrong value too.
+    if (!opSizeFloor) {
+      console.error('Incorrect value for MMS message size:' +
+                    smsParams.mmsSizeLimitation);
+    }
+
+    var settingsValue = {};
+    const SMS_MAX_CONCAT = 'operatorResource.sms.maxConcat';
+    const MMS_SIZE_LIMIT = 'dom.mms.operatorSizeLimitation';
+
+    if (maxConcatFloor != null) {
+      settingsValue[SMS_MAX_CONCAT] = maxConcatFloor;
+    }
+    if (opSizeFloor != null) {
+      settingsValue[MMS_SIZE_LIMIT] = opSizeFloor;
+    }
+
+    if (Object.keys(settingsValue).length > 0) {
+      settings.createLock().set(settingsValue);
+    }
   };
 });

diff --git a/apps/operatorvariant/js/customizers/wallpaper_customizer.js b/apps/operatorvariant/js/customizers/wallpaper_customizer.js
index 0263a1d..c6e186f 100644
--- a/apps/operatorvariant/js/customizers/wallpaper_customizer.js
+++ b/apps/operatorvariant/js/customizers/wallpaper_customizer.js
@@ -4,14 +4,11 @@

 var WallpaperCustomizer = (function() {

+  var WALLPAPER_IMAGE = 'wallpaper.image';
+
   Customizer.call(this, 'wallpaper', 'json');

   this.set = function(wallpaperParams) {
-    if (!this.simPresentOnFirstBoot) {
-      console.log('WallpaperCustomizer. No first RUN with configured SIM.');
-      return;
-    }
-
     var settings = navigator.mozSettings;
     if (!settings) {
       console.error('WallpaperCustomizer. Settings is not available');
@@ -29,7 +26,29 @@ var WallpaperCustomizer = (function() {
       });
     }

-    setWallpaper();
+    // We only change the wallpaper if the user does not changed it previously
+    // The user has changed the value if the actual value of wallpaper is
+    // different from default value.
+    var wallpaper = settings.createLock().get(WALLPAPER_IMAGE);
+    wallpaper.onsuccess = function wc_onsucces() {
+      var actualValue = wallpaper.result[WALLPAPER_IMAGE];
+      var reader = new FileReader();
+      reader.onloadend = function() {
+        if (reader.result === wallpaperParams.default) {
+          setWallpaper();
+        }
+      };
+      reader.onerror = function() {
+        console.error('Unable to convert current wallpaper blob to dataURI. ' +
+                      reader.error.name);
+      };
+      reader.readAsDataURL(actualValue);
+    };
+
+    wallpaper.onerror = function wc_onerror() {
+      console.error('Error requesting ' + WALLPAPER_IMAGE + '. ' +
+                    wallpaper.error.name);
+    };
   };
 });

diff --git a/apps/operatorvariant/js/operator_variant.js b/apps/operatorvariant/js/operator_variant.js
index 31e9df5..52b8201 100644
--- a/apps/operatorvariant/js/operator_variant.js
+++ b/apps/operatorvariant/js/operator_variant.js
@@ -3,14 +3,6 @@
 'use strict';

 var OperatorVariantManager = {
-  SETTING_FTU_SIM_PRESENT: 'ftu.simPresentOnFirstBoot',
-
-  // Settings 'ftu.simPresentOnFirstBoot' only had false value if the user
-  // powered the phone on without SIM
-  // In other case we would have true or undefined depending on what process was
-  // executed first, so our variable is true by default.
-  simPresentOnFirstBoot: true,
-
   // This file is created during the BUILD process
   CUSTOMIZATION_FILE: '/resources/customization.json',

@@ -37,31 +29,14 @@ var OperatorVariantManager = {
   ],

   init: function ovm_init() {
-    navigator.mozSetMessageHandler('first-run-with-sim', (msg) => {
-      var self = this;
-      self.mcc_mnc = self.getMccMnc(msg.mcc, msg.mnc);
-      if (self.mcc_mnc) {
-        var settings = navigator.mozSettings;
-        if (!settings) {
-          console.log(
-            'Settings is not available. Cannot make the configuration changes');
-          return;
-        }
-        var req = settings.createLock().get(self.SETTING_FTU_SIM_PRESENT);
-
-        req.onsuccess = function osv_success(e) {
-          var simOnFirstBoot = req.result[self.SETTING_FTU_SIM_PRESENT];
-          self.simPresentOnFirstBoot = !simOnFirstBoot ||
-              req.result[self.SETTING_FTU_SIM_PRESENT] === self.mcc_mnc;
-          LazyLoader.load(
-            self.CUSTOMIZERS,
-            self.loadVariantAndCustomize.bind(self)
-          );
-        };
-
-        req.onerror = function osv_error(e) {
-          console.error('Error retrieving ftu.simPresentOnFirstBoot. ', e);
-        };
+    window.navigator.mozSetMessageHandler('first-run-with-sim', msg => {
+      this.mcc_mnc = this.getMccMnc(msg.mcc, msg.mnc);
+      if (this.mcc_mnc) {
+        // Load the variant customizers and the variant JSON file.
+        LazyLoader.load(
+          this.CUSTOMIZERS,
+          this.loadVariantAndCustomize.bind(this)
+        );
       }
     });
   },
@@ -121,8 +96,7 @@ var OperatorVariantManager = {
         var customizationEvent = new CustomEvent('customization', {
           detail: {
             setting: setting,
-            value: customizationSettings[setting],
-            simPresentOnFirstBoot: this.simPresentOnFirstBoot
+            value: customizationSettings[setting]
           }
         });
         scheduleEvent(customizationEvent);
diff --git a/apps/operatorvariant/test/unit/customizer_test.js b/apps/operatorvariant/test/unit/customizer_test.js
index b9b35b7..2490d8c 100644
--- a/apps/operatorvariant/test/unit/customizer_test.js
+++ b/apps/operatorvariant/test/unit/customizer_test.js
@@ -31,7 +31,6 @@ suite(' Customizer > ', function() {

     setup(function() {
       customizer = new Customizer(eventName, resourceType);
-      customizer.set = function () {};
       resourceLoaderSpy.reset();
     });

@@ -48,20 +47,16 @@ suite(' Customizer > ', function() {
       // Init for adding the listener
       customizer.init();
       // Check that listener is working as expected
-      var eventContent = {
+      var customizationEvent = new CustomEvent('customization', {
         detail: {
           setting: eventName,
-          value: resourcePath,
-          simPresentOnFirstBoot: 'A Random Value'
+          value: resourcePath
         }
-      };
-      var customizationEvent = new CustomEvent('customization', eventContent);
+      });
       // Once we dispatch the event, handler should
       // manage this properly
       window.dispatchEvent(customizationEvent);
       assert.isTrue(resourceLoaderSpy.calledOnce);
-      assert.equal(customizer.simPresentOnFirstBoot,
-                eventContent.detail.simPresentOnFirstBoot);
       // A new event should not be handled, because
       // we are removing the listener when the event
       // is handled.
@@ -72,14 +67,6 @@ suite(' Customizer > ', function() {

   suite(' set > ', function() {
     test(' resource available ', function(done) {
-      var eventContent = {
-        detail: {
-          setting: eventName,
-          value: resourcePath,
-          simPresentOnFirstBoot: 'a value'
-        }
-      };
-
       var onerror = function() {
         assert.ok(false, 'Resource not loaded properly');
         done();
@@ -87,31 +74,24 @@ suite(' Customizer > ', function() {
       var customizerSuccessful =
         new Customizer(eventName, resourceType, onerror);
       customizerSuccessful.set = function() {
-        assert.equal(customizerSuccessful.simPresentOnFirstBoot,
-                  eventContent.detail.simPresentOnFirstBoot);
         done();
       };
       // Init for adding the listener
       customizerSuccessful.init();
       // Check that listener is working as expected
-      var customizationEvent = new CustomEvent('customization', eventContent);
+      var customizationEvent = new CustomEvent('customization', {
+        detail: {
+          setting: eventName,
+          value: resourcePath
+        }
+      });
       // Once we dispatch the event, handler should
       // manage this properly
       window.dispatchEvent(customizationEvent);
     });

     test(' resource unavailable ', function(done) {
-      var eventContent = {
-        detail: {
-          setting: eventName,
-          value: 'wrong/path/file.jpg',
-          simPresentOnFirstBoot: 'Another value'
-        }
-      };
-
       var customizerError = new Customizer(eventName, resourceType, function() {
-        assert.equal(customizerError.simPresentOnFirstBoot,
-                  eventContent.detail.simPresentOnFirstBoot);
         done();
       });
       customizerError.set = function() {
@@ -121,7 +101,12 @@ suite(' Customizer > ', function() {
       // Init for adding the listener
       customizerError.init();
       // Check that listener is working as expected
-      var customizationEvent = new CustomEvent('customization', eventContent);
+      var customizationEvent = new CustomEvent('customization', {
+        detail: {
+          setting: eventName,
+          value: 'wrong/path/file.jpg'
+        }
+      });
       // Once we dispatch the event, handler should
       // manage this properly
       window.dispatchEvent(customizationEvent);
diff --git a/apps/operatorvariant/test/unit/keyboard_settings_customizer_test.js b/apps/operatorvariant/test/unit/keyboard_settings_customizer_test.js
index 3eb7259..a09637b 100644
--- a/apps/operatorvariant/test/unit/keyboard_settings_customizer_test.js
+++ b/apps/operatorvariant/test/unit/keyboard_settings_customizer_test.js
@@ -14,13 +14,19 @@ suite('Keyboard settings customizer >', function() {

   var testCases = [
     {
-      title: 'First run with valid SIM - options with valid values > ',
+      title: 'set all posible options with valid values > ',
       inputValues: {
         'values': {
           'keyboard.vibration': false,
           'keyboard.autocorrect': true,
           'keyboard.clicksound': false,
           'keyboard.wordsuggestion': true
+        },
+        'defaults': {
+          'keyboard.vibration': true,
+          'keyboard.autocorrect': true,
+          'keyboard.clicksound': false,
+          'keyboard.wordsuggestion': true
         }
       },
       actualValues: {
@@ -34,37 +40,47 @@ suite('Keyboard settings customizer >', function() {
         'keyboard.autocorrect': true,
         'keyboard.clicksound': false,
         'keyboard.wordsuggestion': true
-      },
-      simPresentOnFirstBoot: true
+      }
     },
     {
-      title: 'First Run with valid SIM - set invalid values > ',
+      title: 'Some value has changed previously > ',
       inputValues: {
         'values': {
-          'keyboard.vibration': [],
-          'keyboard.wordsuggestion': 'aFakeValue',
-          'keyboard.clicksound': {}
+          'keyboard.vibration': false,
+          'keyboard.autocorrect': true,
+          'keyboard.clicksound': false,
+          'keyboard.wordsuggestion': true
+        },
+        'defaults': {
+          'keyboard.vibration': true,
+          'keyboard.autocorrect': true,
+          'keyboard.clicksound': false,
+          'keyboard.wordsuggestion': true
         }
       },
       'actualValues': {
         'keyboard.vibration': true,
         'keyboard.autocorrect': true,
-        'keyboard.clicksound': false,
+        'keyboard.clicksound': true,
         'keyboard.wordsuggestion': true
       },
       expectedValues: {
         'keyboard.vibration': true,
         'keyboard.autocorrect': true,
-        'keyboard.clicksound': false,
+        'keyboard.clicksound': true,
         'keyboard.wordsuggestion': true
-      },
-      simPresentOnFirstBoot: true
+      }
     },
     {
-      title: 'first run without valid SIM > ',
+      title: 'set invalid values > ',
       inputValues: {
         'values': {
-          'keyboard.vibration': false,
+          'keyboard.vibration': [],
+          'keyboard.wordsuggestion': 'aFakeValue',
+          'keyboard.clicksound': {}
+        },
+        'defaults': {
+          'keyboard.vibration': true,
           'keyboard.autocorrect': true,
           'keyboard.clicksound': false,
           'keyboard.wordsuggestion': true
@@ -73,16 +89,15 @@ suite('Keyboard settings customizer >', function() {
       'actualValues': {
         'keyboard.vibration': true,
         'keyboard.autocorrect': true,
-        'keyboard.clicksound': undefined,
+        'keyboard.clicksound': false,
         'keyboard.wordsuggestion': true
       },
       expectedValues: {
         'keyboard.vibration': true,
         'keyboard.autocorrect': true,
-        'keyboard.clicksound': undefined,
+        'keyboard.clicksound': false,
         'keyboard.wordsuggestion': true
-      },
-      simPresentOnFirstBoot: false
+      }
     }
   ];

@@ -110,8 +125,7 @@ suite('Keyboard settings customizer >', function() {
       for (var avKey in actualValues) {
         window.MockNavigatorSettings.mSettings[avKey] = actualValues[avKey];
       }
-      keyboardSettingsCustomizer.simPresentOnFirstBoot =
-        testCase.simPresentOnFirstBoot;
+
       keyboardSettingsCustomizer.set(testCase.inputValues);
       this.sinon.clock.tick(TINY_TIMEOUT);
       var mSettings = window.MockNavigatorSettings.mSettings;
diff --git a/apps/operatorvariant/test/unit/nfc_customizer_test.js b/apps/operatorvariant/test/unit/nfc_customizer_test.js
index 5a1df0b..fcad60d 100644
--- a/apps/operatorvariant/test/unit/nfc_customizer_test.js
+++ b/apps/operatorvariant/test/unit/nfc_customizer_test.js
@@ -21,8 +21,7 @@ suite('NFC customizer >', function() {
         'default': false
       },
       currentValue: false,
-      expectedValue: true,
-      simPresentOnFirstBoot: true
+      expectedValue: true
     },
     {
       title: 'set false value. It has not changed previously > ',
@@ -31,8 +30,7 @@ suite('NFC customizer >', function() {
         'default': false
       },
       currentValue: false,
-      expectedValue: false,
-      simPresentOnFirstBoot: true
+      expectedValue: false
     },
     {
       title: 'set true value. It has changed previously > ',
@@ -41,8 +39,7 @@ suite('NFC customizer >', function() {
         'default': false
       },
       currentValue: true,
-      expectedValue: true,
-      simPresentOnFirstBoot: true
+      expectedValue: true
     },
     {
       title: 'set false value. It has changed previously > ',
@@ -51,8 +48,7 @@ suite('NFC customizer >', function() {
         'default': false
       },
       currentValue: true,
-      expectedValue: true,
-      simPresentOnFirstBoot: true
+      expectedValue: true
     },
     {
       title: 'set true value. Previously value undefined > ',
@@ -61,8 +57,7 @@ suite('NFC customizer >', function() {
         'default': false
       },
       currentValue: undefined,
-      expectedValue: true,
-      simPresentOnFirstBoot: true
+      expectedValue: true
     },
     {
       title: 'set false value. Previous value undefined > ',
@@ -71,26 +66,7 @@ suite('NFC customizer >', function() {
         'default': false
       },
       currentValue: undefined,
-      expectedValue: false,
-      simPresentOnFirstBoot: true
-    },
-    {
-      title: 'set true value. Previous RUN with no SIM (or unconfigured one)> ',
-      inputValue: {
-        'isEnabled': true,
-        'default': false
-      },
-      expectedValue: undefined,
-      simPresentOnFirstBoot: false
-    },
-    {
-      title: 'set false value. Previous RUN with no SIM (or unconfigured one)>',
-      inputValue: {
-        'isEnabled': false,
-        'default': false
-      },
-      expectedValue: undefined,
-      simPresentOnFirstBoot: false
+      expectedValue: false
     }
   ];

@@ -118,7 +94,6 @@ suite('NFC customizer >', function() {
         window.MockNavigatorSettings.mSettings[NFC_SETTING] =
           testCase.currentValue;
       }
-      nfcCustomizer.simPresentOnFirstBoot = testCase.simPresentOnFirstBoot;
       nfcCustomizer.set(testCase.inputValue);
       this.sinon.clock.tick(TINY_TIMEOUT);
       var mSettings = window.MockNavigatorSettings.mSettings;
diff --git a/apps/operatorvariant/test/unit/operator_variant_test.js b/apps/operatorvariant/test/unit/operator_variant_test.js
index a6f2e40..68837b4 100644
--- a/apps/operatorvariant/test/unit/operator_variant_test.js
+++ b/apps/operatorvariant/test/unit/operator_variant_test.js
@@ -31,7 +31,6 @@ suite(' OperatorVariantManager > ', function() {
     }
   };
   const MSG_NAME = 'first-run-with-sim';
-  const FIRST_RUN_SETTING = 'ftu.simPresentOnFirstBoot';
   var message = {
     mcc: '214',
     mnc: '007'
@@ -86,27 +85,16 @@ suite(' OperatorVariantManager > ', function() {
     var eventsDispatched = {};
     var eventsToDispatch = customizationList[TEST_MCC_MNC];

-    // Run the initialization with the setting set to true, the expected value
-    // is true
-    window.MockNavigatorSettings.mSettings[FIRST_RUN_SETTING] = TEST_MCC_MNC;
     navigator.mozSetMessageHandler.mTrigger(MSG_NAME, message);
-    assert.isTrue(OperatorVariantManager.simPresentOnFirstBoot,
-                  'The simPresentOnFirstBoot value should be true');
-
     window.addEventListener('customization', function customizer(event) {
       var setting = event.detail.setting;
       var value = event.detail.value;
       // Check that the value is the expected
       assert.equal(value, eventsToDispatch[setting]);
-
-      // Check that we got true as ftu.simPresentOnFirstBoot on the event.
-      assert.isTrue(event.detail.simPresentOnFirstBoot,
-                    'event simPresentOnFirstBoot should be true');
-
       // Check that we have only one event dispatched per setting
       if (eventsDispatched[setting]) {
-        assert.ok(false, 'The setting ' + setting +
-                         ' was dispatched several times.');
+        assert.ok(false, 'The settting ' + setting +
+          ' was dispatched several times.');
         done();
         return;
       }
diff --git a/apps/operatorvariant/test/unit/resources/customization.json b/apps/operatorvariant/test/unit/resources/customization.json
index 571929c..16aa164 100644
--- a/apps/operatorvariant/test/unit/resources/customization.json
+++ b/apps/operatorvariant/test/unit/resources/customization.json
@@ -3,21 +3,21 @@
         "support_contacts": "/ftu/test/unit/resources/support_contacts.json",
         "wallpaper": "/resources/wallpaper.jpg",
         "default_contacts": "/resources/contacts.json",
-        "ringtone": "/resources/ringtone.ogg",
+        "ringtone": "/resources/ringtone.ogg"
         "power": "/ftu/test/unit/resources/power.json"
     },
     "214-02": {
         "support_contacts": "/ftu/test/unit/resources/support_contacts.json",
         "wallpaper": "/resources/wallpaper.jpg",
         "default_contacts": "/resources/contacts.json",
-        "ringtone": "/resources/ringtone.ogg",
+        "ringtone": "/resources/ringtone.ogg"
         "power": "/ftu/test/unit/resources/power.json"
     },
     "214-007": {
         "support_contacts": "/test/unit/resources/support_contacts.json",
         "wallpaper": "/resources/wallpaper.jpg",
         "default_contacts": "/resources/contacts.json",
-        "ringtone": "/resources/ringtone.ogg",
+        "ringtone": "/resources/ringtone.ogg"
         "power": "/test/unit/resources/power.json"
     }
 }
diff --git a/apps/operatorvariant/test/unit/ringtone_customizer_test.js b/apps/operatorvariant/test/unit/ringtone_customizer_test.js
index 47ca322..aa82b41 100644
--- a/apps/operatorvariant/test/unit/ringtone_customizer_test.js
+++ b/apps/operatorvariant/test/unit/ringtone_customizer_test.js
@@ -37,9 +37,8 @@ suite('RingtoneCustomizer >', function() {
     this.sinon.clock.restore();
   });

-  test(' First run with valid SIM. Set > ', function() {
+  test(' request the right ringtone blob > ', function() {
     var resourcesSpy = sinon.spy(Resources, 'load');
-    ringtoneCustomizer.simPresentOnFirstBoot = true;
     ringtoneCustomizer.set(ringtoneParams);
     this.sinon.clock.tick(TINY_TIMEOUT);
     sinon.assert.calledOnce(resourcesSpy);
@@ -52,21 +51,8 @@ suite('RingtoneCustomizer >', function() {
     this.sinon.stub(Resources, 'load', function(uri, type, onsuccess) {
       onsuccess('ABC');
     });
-    ringtoneCustomizer.simPresentOnFirstBoot = true;
     ringtoneCustomizer.set(ringtoneParams);
     sinon.assert.calledOnce(createLockSpy);
     createLockSpy.restore();
   });
-
-  test(' First run outwith valid SIM. Not set > ', function() {
-    var createLockSpy = sinon.spy(navigator.mozSettings, 'createLock');
-    this.sinon.stub(Resources, 'load', function(uri, type, onsuccess) {
-      onsuccess('ABC');
-    });
-    ringtoneCustomizer.simPresentOnFirstBoot = false;
-    ringtoneCustomizer.set(ringtoneParams);
-    sinon.assert.notCalled(createLockSpy);
-    createLockSpy.restore();
-  });
-
 });
diff --git a/apps/operatorvariant/test/unit/sms_customizer_test.js b/apps/operatorvariant/test/unit/sms_customizer_test.js
index 62bd070..c6cfd70 100644
--- a/apps/operatorvariant/test/unit/sms_customizer_test.js
+++ b/apps/operatorvariant/test/unit/sms_customizer_test.js
@@ -10,6 +10,7 @@ requireApp('operatorvariant/js/customizers/sms_customizer.js');

 suite('SMS customizer >', function() {
   const SMS_MAX_CONCAT = 'operatorResource.sms.maxConcat';
+  const MMS_SIZE_LIMIT = 'dom.mms.operatorSizeLimitation';

   var createLockSpy;
   var realSettings;
@@ -37,23 +38,28 @@ suite('SMS customizer >', function() {
     var sttngs = navigator.mozSettings.mSettings;

     smsCustomizer.set({
-      smsMaxConcat: 10
+      smsMaxConcat: 10,
+      mmsSizeLimitation: 307200
     });

     assert.isTrue(createLockSpy.calledOnce);

     assert.strictEqual(sttngs[SMS_MAX_CONCAT], 10);
+    assert.strictEqual(sttngs[MMS_SIZE_LIMIT], 307200);
+
   });

   test(' set valid value (decimal) > ', function() {
     var sttngs = navigator.mozSettings.mSettings;

     smsCustomizer.set({
-      smsMaxConcat: 10.5
+      smsMaxConcat: 10.5,
+      mmsSizeLimitation: 307200.2
     });
     assert.isTrue(createLockSpy.calledOnce);

     assert.strictEqual(sttngs[SMS_MAX_CONCAT], 10);
+    assert.strictEqual(sttngs[MMS_SIZE_LIMIT], 307200);
   });

   test(' set invalid value (NaN) > ', function() {
@@ -65,16 +71,18 @@ suite('SMS customizer >', function() {
     assert.isTrue(createLockSpy.notCalled);

     assert.isUndefined(sttngs.SMS_MAX_CONCAT);
+    assert.isUndefined(sttngs.MMS_SIZE_LIMIT);
   });

   test(' set invalid value (negative value) > ', function() {
     var sttngs = navigator.mozSettings.mSettings;

     smsCustomizer.set({
-      smsMaxConcat: -1
+      mmsSizeLimitation: -1
     });
     assert.isTrue(createLockSpy.notCalled);

     assert.isUndefined(sttngs.SMS_MAX_CONCAT);
+    assert.isUndefined(sttngs.MMS_SIZE_LIMIT);
   });
 });
diff --git a/apps/operatorvariant/test/unit/wallpaper_customizer_test.js b/apps/operatorvariant/test/unit/wallpaper_customizer_test.js
index 830252e..fe59e07 100644
--- a/apps/operatorvariant/test/unit/wallpaper_customizer_test.js
+++ b/apps/operatorvariant/test/unit/wallpaper_customizer_test.js
@@ -58,15 +58,15 @@ suite('WallpaperCustomizer >', function() {
   var userValue = 'data:application/object;base64,userValue';
   var defaultValue = 'data:application/object;base64,defaultValue';

-  test('First run with valid SIM. Set ', function() {
+  test('No previously modified. Set ', function() {
     var settings = navigator.mozSettings.mSettings;
+    settings[WALLPAPER_SETTING] = defaultValue;

     var inputParam = {
       uri: '/test/unit/resources/wallpaper.png',
       default: defaultValue
     };

-    wallpaperCustomizer.simPresentOnFirstBoot = true;
     wallpaperCustomizer.set(inputParam);

     sendResponseText(configuredValue);
@@ -81,7 +81,7 @@ suite('WallpaperCustomizer >', function() {
                        WALLPAPER_SETTING + ' has a incorrect value');
   });

-  test('Previous run withot SIM. Not set ', function() {
+  test('Previously modified. Not set ', function() {
     var settings = navigator.mozSettings.mSettings;
     settings[WALLPAPER_SETTING] = userValue;

@@ -90,12 +90,12 @@ suite('WallpaperCustomizer >', function() {
       default: defaultValue
     };

-    wallpaperCustomizer.simPresentOnFirstBoot = false;
     wallpaperCustomizer.set(inputParam);

     sendResponseText(configuredValue);
     this.sinon.clock.tick(TINY_TIMEOUT);

+
     sinon.assert.notCalled(resourcesSpy);

     //Verify if value has been correctly changed
diff --git a/apps/ringtones/pick.html b/apps/ringtones/pick.html
index 31d5ac3..52481f5 100644
--- a/apps/ringtones/pick.html
+++ b/apps/ringtones/pick.html
@@ -32,7 +32,7 @@
   <body>
     <section role="region" class="skin-organic">
       <header>
-        <button id="cancel"><span class="icon icon-close"></span></button>
+        <button id="cancel"><span class="icon icon-back"></span></button>
         <menu type="toolbar"><button id="done" data-l10n-id="pick-done"
                                      disabled>done</button></menu>
         <h1 id="title" data-l10n-id="pick-title"></h1>
diff --git a/apps/ringtones/test/marionette/manifest.ini b/apps/ringtones/test/marionette/manifest.ini
deleted file mode 100644
index 0693490..0000000
--- a/apps/ringtones/test/marionette/manifest.ini
+++ /dev/null
@@ -1,3 +0,0 @@
-[pick_test.js]
-[share_test.js]
-[manage_test.js]
diff --git a/apps/search/js/contextmenu.js b/apps/search/js/contextmenu.js
index 0bd6acb..b7c2a79 100644
--- a/apps/search/js/contextmenu.js
+++ b/apps/search/js/contextmenu.js
@@ -57,6 +57,7 @@
               icon: this.icon.icon
             }
           });
+          this.hide();
           break;
       }
     }
diff --git a/apps/search/js/providers/places.js b/apps/search/js/providers/places.js
index 6d087e4..b71622e 100644
--- a/apps/search/js/providers/places.js
+++ b/apps/search/js/providers/places.js
@@ -1,4 +1,4 @@
-/* globals DataGridProvider, Promise, Search, SettingsListener, GaiaGrid */
+/* globals HtmlHelper, Promise, Provider, Search, SettingsListener */

 (function(exports) {

@@ -218,19 +218,22 @@
   }

   function formatPlace(placeObj, filter) {
-    var icon;
-    if (placeObj.iconUri in icons && icons[placeObj.iconUri]) {
-      icon = URL.createObjectURL(icons[placeObj.iconUri]);
-    }
+    var titleText = placeObj.title || placeObj.url;

     var renderObj = {
-      data: new GaiaGrid.Bookmark({
-        id: placeObj.url,
-        name: placeObj.title || placeObj.url,
-        url: placeObj.url,
-        icon: icon
-      })
+      title: HtmlHelper.createHighlightHTML(titleText, filter),
+      meta: HtmlHelper.createHighlightHTML(placeObj.url, filter),
+      description: placeObj.url,
+      label: titleText,
+      dataset: {
+        url: placeObj.url
+      }
     };
+
+    if (placeObj.iconUri in icons && icons[placeObj.iconUri]) {
+      renderObj.icon = icons[placeObj.iconUri];
+    }
+
     return renderObj;
   }

@@ -238,18 +241,19 @@

   Places.prototype = {

-    __proto__: DataGridProvider.prototype,
+    __proto__: Provider.prototype,

     name: 'Places',

     click: itemClicked,

     init: function() {
-      DataGridProvider.prototype.init.apply(this, arguments);
+      Provider.prototype.init.apply(this, arguments);
     },

     search: function(filter) {
       return new Promise((resolve, reject) => {
+        this.clear();
         var matched = 0;
         var renderResults = [];
         for (var url in results) {
@@ -269,6 +273,11 @@
       });
     },

+
+    clear: function() {
+      Provider.prototype.clear.apply(this, arguments);
+    },
+
     /**
      * Add a place
      */
diff --git a/apps/search/manifest.webapp b/apps/search/manifest.webapp
index 4039b2d..b19d633 100644
--- a/apps/search/manifest.webapp
+++ b/apps/search/manifest.webapp
@@ -15,6 +15,9 @@
     }
   },
   "default_locale": "en-US",
+  "icons": {
+    "128": "/style/icons/Blank.png"
+  },
   "permissions": {
     "geolocation": {},
     "mobileconnection":{},
@@ -37,12 +40,5 @@
       "description": "Stores data about browsing history."
     }
   },
-  "icons": {
-    "84": "/style/icons/search_84.png",
-    "126": "/style/icons/search_126.png",
-    "142": "/style/icons/search_142.png",
-    "189": "/style/icons/search_189.png",
-    "284": "/style/icons/search_284.png"
-  },
   "orientation": "default"
 }
diff --git a/apps/search/style/icons/Blank.png b/apps/search/style/icons/Blank.png
new file mode 100644
index 0000000..ce42684
Binary files /dev/null and b/apps/search/style/icons/Blank.png differ
diff --git a/apps/search/style/icons/google_favicon.png b/apps/search/style/icons/google_favicon.png
new file mode 100644
index 0000000..b285920
Binary files /dev/null and b/apps/search/style/icons/google_favicon.png differ
diff --git a/apps/search/style/icons/search_126.png b/apps/search/style/icons/search_126.png
deleted file mode 100644
index ce320a9..0000000
Binary files a/apps/search/style/icons/search_126.png and /dev/null differ
diff --git a/apps/search/style/icons/search_142.png b/apps/search/style/icons/search_142.png
deleted file mode 100644
index d7314c4..0000000
Binary files a/apps/search/style/icons/search_142.png and /dev/null differ
diff --git a/apps/search/style/icons/search_189.png b/apps/search/style/icons/search_189.png
deleted file mode 100644
index b13d0a7..0000000
Binary files a/apps/search/style/icons/search_189.png and /dev/null differ
diff --git a/apps/search/style/icons/search_284.png b/apps/search/style/icons/search_284.png
deleted file mode 100644
index 88e535a..0000000
Binary files a/apps/search/style/icons/search_284.png and /dev/null differ
diff --git a/apps/search/style/icons/search_84.png b/apps/search/style/icons/search_84.png
deleted file mode 100644
index 41c3bd3..0000000
Binary files a/apps/search/style/icons/search_84.png and /dev/null differ
diff --git a/apps/search/test/marionette/app_search_test.js b/apps/search/test/marionette/app_search_test.js
index a63c262..c9902ee 100644
--- a/apps/search/test/marionette/app_search_test.js
+++ b/apps/search/test/marionette/app_search_test.js
@@ -3,14 +3,12 @@
 var System = require('../../../system/test/marionette/lib/system');
 var Search = require('./lib/search');
 var Rocketbar = require('../../../system/test/marionette/lib/rocketbar.js');
-var Home2 = require('../../../verticalhome/test/marionette/lib/home2.js');

 marionette('Search - App search', function() {
-  var client = marionette.client(Home2.clientOptions);
-  var home, search, rocketbar, system;
+  var client = marionette.client(Rocketbar.clientOptions);
+  var search, rocketbar, system;

   setup(function() {
-    home = new Home2(client);
     system = new System(client);
     search = new Search(client);
     rocketbar = new Rocketbar(client);
@@ -19,8 +17,10 @@ marionette('Search - App search', function() {
   });

   test('Search apps from Rocketbar', function() {
-    home.waitForLaunch();
-    home.focusRocketBar();
+    client.switchToFrame();
+    rocketbar.focus();
+    search.triggerFirstRun(rocketbar);
+    rocketbar.focus();
     rocketbar.enterText('calendar');
     search.goToResults();
     var calendarIdentifier = 'app://calendar.gaiamobile.org/manifest.webapp';
@@ -30,8 +30,10 @@ marionette('Search - App search', function() {
   });

   test('Search for app with entry point', function() {
-    home.waitForLaunch();
-    home.focusRocketBar();
+    client.switchToFrame();
+    rocketbar.focus();
+    search.triggerFirstRun(rocketbar);
+    rocketbar.focus();
     rocketbar.enterText('Phone');
     search.goToResults();
     var phoneIdentifier =
diff --git a/apps/search/test/marionette/manifest.ini b/apps/search/test/marionette/manifest.ini
deleted file mode 100644
index c1a0cb2..0000000
--- a/apps/search/test/marionette/manifest.ini
+++ /dev/null
@@ -1,3 +0,0 @@
-[app_search_test.js]
-[contacts_search_test.js]
-[places_search_test.js]
diff --git a/apps/search/test/unit/providers/places_test.js b/apps/search/test/unit/providers/places_test.js
index 8af24b5..be30d69 100644
--- a/apps/search/test/unit/providers/places_test.js
+++ b/apps/search/test/unit/providers/places_test.js
@@ -1,20 +1,10 @@
-/* global MockNavigatorDatastore, MockDatastore, Promise */
+/* global MockNavigatorDatastore, MockDatastore, Promise, Search */
 'use strict';

 require('/shared/test/unit/mocks/mock_navigator_datastore.js');
 require('/shared/js/utilities.js');
 requireApp('search/test/unit/mock_search.js');
 requireApp('search/js/providers/provider.js');
-requireApp('search/js/providers/grid_provider.js');
-
-// Required files for the grid and a mozapp result
-require('/shared/js/l10n.js');
-require('/shared/elements/gaia_grid/js/grid_icon_renderer.js');
-require('/shared/elements/gaia_grid/js/grid_layout.js');
-require('/shared/elements/gaia_grid/js/grid_view.js');
-require('/shared/elements/gaia_grid/script.js');
-require('/shared/elements/gaia_grid/js/items/grid_item.js');
-require('/shared/elements/gaia_grid/js/items/bookmark.js');

 suite('search/providers/places', function() {
   var fakeElement, subject;
@@ -60,16 +50,28 @@ suite('search/providers/places', function() {
                           .returns(fakeElement.cloneNode(true));
     requireApp('search/js/providers/places.js', function() {
       subject = window.Places;
-      subject.grid = document.createElement('gaia-grid');
+      subject.init();
       promiseDone.then(done.bind(null, null));
     });
   });

   suite('search', function() {
+    test('calls clear', function() {
+      var stub = this.sinon.stub(subject, 'clear');
+      subject.search('foo', function() {});
+      assert.ok(stub.calledOnce);
+    });
+
     test('renders data url', function(done) {
       subject.search('mozilla').then((results) => {
-        assert.equal(results[0].data.detail.url, 'http://mozilla.org');
-        assert.equal(results[0].data.name, 'homepage');
+        Search.collect(subject, results);
+        var place = subject.container.querySelector('.result');
+        assert.equal(place.dataset.url, 'http://mozilla.org');
+        assert.equal(place.querySelector('.title').innerHTML, 'homepage');
+        assert.equal(place.getAttribute('aria-label'), 'homepage');
+        assert.equal(place.getAttribute('role'), 'link');
+        assert.equal(place.querySelector('.icon').getAttribute('role'),
+          'presentation');
         done();
       });
     });
diff --git a/apps/settings/.jshintrc b/apps/settings/.jshintrc
index a64ba51..461f653 100644
--- a/apps/settings/.jshintrc
+++ b/apps/settings/.jshintrc
@@ -3,7 +3,6 @@
   "predef": [
     "define",
     "require",
-    "Settings",
-    "Promise"
+    "Settings"
   ]
 }
diff --git a/apps/settings/README.md b/apps/settings/README.md
index c967713..96c4c19 100644
--- a/apps/settings/README.md
+++ b/apps/settings/README.md
@@ -170,26 +170,3 @@ Our `Makefile` has two tasks, one to **'build'** and one to **'clean'** (delete
 1. Remove any previous settings build from the `build_stage/`
 2. Create an new directory `build_stage/settings`
 3. Run the `r.js` (RequireJS optimizer), pointing it at our `require_config.jslike` file (`.jslike` because we don't want Gaia builds to mess with it [I think]). This copies our entire application (JS and all) and bundles our JS (tracing `require()` calls) and CSS (tracing `@import`) in two single files.
-
-## Q&A
-
-### How to make sure some specific works are done before rendering panels ?
-
-Sometimes, you may need to do something before rendering panels. In order to achieve this, you have to return a promise object in `onBeforeShow` first and Settings app will do the transition after the promise is resolved. By the way, don't put some really heavy works here, otherwise users will feel confused and would treat Settings app as broken.
-
-```js
-return SettingsPanel({
-  onBeforeShow: function _onBeforeShow() {
-    var promise = new Promise(function(resolve, reject) {
-      // do your works here
-      // then call the resolve method from Promise instance
-      fetch_data_from_server(function callback() {
-        resolve();
-      });
-    });
-
-    // Return the promise object back to Settings app
-    return promise;
-  }
-});
-```
diff --git a/apps/settings/build/settings.build.jslike b/apps/settings/build/settings.build.jslike
index 9f24c6c..9ec03d1 100644
--- a/apps/settings/build/settings.build.jslike
+++ b/apps/settings/build/settings.build.jslike
@@ -20,11 +20,7 @@
     'shared/settings_listener': 'empty:',
     'utils': 'empty:',
     'shared/settings_url': 'empty:',
-    'shared/omadrm/fl': 'empty:',
-    'shared/device_storage/enumerate_all': 'empty:',
-    'shared/wifi_helper': 'empty:',
-    'modules/wifi_utils': 'empty:',
-    'modules/wifi_context': 'empty:'
+    'shared/omadrm/fl': 'empty:'
   },

   findNestedDependencies: true,
diff --git a/apps/settings/elements/about_more_info.html b/apps/settings/elements/about_more_info.html
index 11de6a3..77ee147 100644
--- a/apps/settings/elements/about_more_info.html
+++ b/apps/settings/elements/about_more_info.html
@@ -26,9 +26,9 @@
           <small data-name="deviceinfo.mac"></small>
           <span data-l10n-id="macAddress"> MAC address </span>
         </li>
-        <li class="multiline">
+        <li>
+          <small id="deviceInfo-imei"></small>
           <span data-l10n-id="deviceInfo-IMEI"> IMEI </span>
-          <small id="deviceInfo-imeis"></small>
         </li>
         <li class="multiline">
           <span data-l10n-id="deviceInfo-ICCID"> ICCID </span>
diff --git a/apps/settings/elements/developer.html b/apps/settings/elements/developer.html
index 5df8229..007fd20 100644
--- a/apps/settings/elements/developer.html
+++ b/apps/settings/elements/developer.html
@@ -125,12 +125,6 @@
         </li>
         <li>
           <label class="pack-checkbox">
-            <input type="checkbox" name="app-brandcolor.enabled">
-            <span data-l10n-id="app-brandcolor">App brand color</span>
-          </label>
-        </li>
-        <li>
-          <label class="pack-checkbox">
             <input type="checkbox" name="app-suspending.enabled">
             <span data-l10n-id="app-suspending">App suspending</span>
           </label>
diff --git a/apps/settings/elements/developer_hud.html b/apps/settings/elements/developer_hud.html
index 8912138..c5cd95e 100644
--- a/apps/settings/elements/developer_hud.html
+++ b/apps/settings/elements/developer_hud.html
@@ -18,7 +18,7 @@
         </li>
       </ul>
       <ul class="hud-widgets disabled">
-        <li class="hud-separator">
+        <li>
           <label class="pack-checkbox">
             <input type="checkbox" name="hud.logging">
             <span data-l10n-id="hud-logging">Log changes in ADB</span>
@@ -49,7 +49,7 @@
         </li>
       </ul>
       <ul class="hud-widgets disabled">
-        <li class="hud-separator">
+        <li>
           <label class="pack-checkbox">
             <input type="checkbox" name="hud.reflows">
             <span class="color-preview reflow-counter" data-l10n-id="hud-reflows">Reflows</span>
@@ -101,44 +101,30 @@
             <input type="checkbox" name="hud.uss">
             <span class="color-preview uss-monitor" data-l10n-id="hud-uss">Unique Set Size</span>
           </label>
-        </li>
-        <li>
           <label class="pack-checkbox">
             <input type="checkbox" name="hud.appmemory">
             <span class="color-preview memory-monitor" data-l10n-id="hud-appmemory">App memory</span>
           </label>
-        </li>
-        <li>
           <label class="pack-checkbox">
             <input type="checkbox" name="hud.jsobjects">
             <span class="color-preview memory-item" data-l10n-id="hud-jsobjects">JS objects</span>
           </label>
-        </li>
-        <li>
           <label class="pack-checkbox">
             <input type="checkbox" name="hud.jsstrings">
             <span class="color-preview memory-item" data-l10n-id="hud-jsstrings">JS strings</span>
           </label>
-        </li>
-        <li>
           <label class="pack-checkbox">
             <input type="checkbox" name="hud.jsother">
             <span class="color-preview memory-item" data-l10n-id="hud-jsother">JS other</span>
           </label>
-        </li>
-        <li>
           <label class="pack-checkbox">
             <input type="checkbox" name="hud.dom">
             <span class="color-preview memory-item" data-l10n-id="hud-dom">DOM</span>
           </label>
-        </li>
-        <li>
           <label class="pack-checkbox">
             <input type="checkbox" name="hud.style">
             <span class="color-preview memory-item" data-l10n-id="hud-style">Style</span>
           </label>
-        </li>
-        <li>
           <label class="pack-checkbox">
             <input type="checkbox" name="hud.other">
             <span class="color-preview memory-item" data-l10n-id="hud-other">Other</span>
diff --git a/apps/settings/elements/do_not_track.html b/apps/settings/elements/do_not_track.html
index c57a2a7..7ba0034 100644
--- a/apps/settings/elements/do_not_track.html
+++ b/apps/settings/elements/do_not_track.html
@@ -35,10 +35,10 @@
           <p data-l10n-id="doNotTrack-dd1">
             When you turn on the Do Not Track feature, your device tells every
             website and app (as well as advertisers and other content providers)
-            that you do not want your behavior tracked.
+            that you don’t want your behavior tracked.
           </p>
           <p data-l10n-id="doNotTrack-dd2">
-            Turning on Do Not Track will not affect your ability to log into
+            Turning on Do Not Track won’t affect your ability to log into
             websites, nor cause your device to forget your private information —
             such as the contents of shopping carts, location information, or
             log-in information.
diff --git a/apps/settings/elements/findmydevice.html b/apps/settings/elements/findmydevice.html
index da0fe43..dea65e0 100644
--- a/apps/settings/elements/findmydevice.html
+++ b/apps/settings/elements/findmydevice.html
@@ -55,8 +55,6 @@
       </div>
     </div>

-    <script src="shared/js/settings_helper.js"></script>
-    <script src="shared/js/findmydevice_iac_api.js"></script>
     <script src="js/findmydevice.js"></script>

   </template>
diff --git a/apps/settings/elements/homescreen.html b/apps/settings/elements/homescreen.html
index 809de0a..ed3b8a7 100644
--- a/apps/settings/elements/homescreen.html
+++ b/apps/settings/elements/homescreen.html
@@ -7,13 +7,13 @@
     </header>

     <div>
-      <section id="vertical-homescreen-layout" hidden data-type="list">
+      <section data-type="list">
         <header>
           <h2 data-l10n-id="vertical-homescreen-layout">Layout</h2>
         </header>
         <ul>
           <li>
-            <p data-l10n-id="vertical-homescreen-icon-layout">Icon Layout</p>
+            <label data-l10n-id="vertical-homescreen-icon-layout">Icon Layout</label>
             <div class="button icon icon-dialog">
               <select name="grid.layout.cols">
                 <option value="3" data-l10n-id="vertical-homescreen-three-columns">Three Columns</option>
@@ -29,25 +29,17 @@
         </header>
         <ul>
           <li>
-            <p data-l10n-id="search-engine">Search Engine</p>
+            <label data-l10n-id="search-engine">Search Engine</label>
             <div class="button icon icon-dialog">
               <select name="search.urlTemplate">
               </select>
             </div>
           </li>
           <li>
-            <label class="pack-switch">
-              <input type="checkbox" name="search.suggestions.enabled">
-              <span data-l10n-id="search-suggestions">Search Suggestions</span>
-            </label>
-          </li>
-          <li class="description">
-            <p data-l10n-id="search-suggestions-description">
-              The characters you type when entering a search are sent
-              to multiple search providers and will be used to send you
-              search suggestions. Additional data charges may apply
-              when using this feature.
-            </p>
+            <small id="suggestions-desc" class="menu-item-desc"></small>
+            <a id="menuItem-suggestions" class="menu-item"
+               href="#search-suggestions"
+               data-l10n-id="search-suggestions-button">Search Suggestions</a>
           </li>
         </ul>
       </section>
diff --git a/apps/settings/elements/keyboard.html b/apps/settings/elements/keyboard.html
index 302f5d4..7f5bb80 100644
--- a/apps/settings/elements/keyboard.html
+++ b/apps/settings/elements/keyboard.html
@@ -7,25 +7,16 @@
     </header>

     <div>
-      <header>
-        <h2 data-l10n-id="keyboardSettings">Keyboard Settings</h2>
-      </header>
-      <ul class="allKeyboardList" hidden>
-      </ul>
-      <header>
-        <h2 data-l10n-id="selectedKeyboards">Selected Keyboards</h2>
-      </header>
-      <ul class="enabledKeyboardList">
-      </ul>
       <ul>
         <li>
-          <button class="icon icon-view"
-                  data-l10n-id="selectKeyboards"
-                  data-href="#keyboard-selection-addMore">
-            Select Keyboards
-          </button>
+          <a href="#keyboard-selection" data-l10n-id="selectedKeyboards">Selected keyboards</a>
         </li>
       </ul>
+      <header>
+        <h2 data-l10n-id="installedInputMethods">Installed input methods</h2>
+      </header>
+      <ul class="allKeyboardList" hidden>
+      </ul>
     </div>

     <panel data-path="panels/keyboard/panel"></panel>
diff --git a/apps/settings/elements/keyboard_selection.html b/apps/settings/elements/keyboard_selection.html
new file mode 100644
index 0000000..f66a09f
--- /dev/null
+++ b/apps/settings/elements/keyboard_selection.html
@@ -0,0 +1,26 @@
+<element name="keyboard-selection" extends="section">
+  <template>
+
+    <header>
+      <a href="#keyboard"><span class="icon icon-back">back</span></a>
+      <h1 data-l10n-id="selectedKeyboards-header"> Selected keyboards </h1>
+    </header>
+
+    <div>
+      <ul class="enabledKeyboardList">
+      </ul>
+      <ul>
+        <li>
+          <button class="icon icon-view"
+                  data-l10n-id="addMoreKeyboards"
+                  data-href="#keyboard-selection-addMore">
+            Add more keyboards
+          </button>
+        </li>
+      </ul>
+    </div>
+
+    <panel data-path="panels/keyboard_enabled_layouts/panel"></panel>
+
+  </template>
+</element>
diff --git a/apps/settings/elements/keyboard_selection_add_more.html b/apps/settings/elements/keyboard_selection_add_more.html
index f6a820f..f4b43d7 100644
--- a/apps/settings/elements/keyboard_selection_add_more.html
+++ b/apps/settings/elements/keyboard_selection_add_more.html
@@ -2,8 +2,8 @@
   <template>

     <header>
-      <a href="#keyboard"><span class="icon icon-back">back</span></a>
-      <h1 data-l10n-id="selectKeyboards-header"> Select Keyboards </h1>
+      <a href="#keyboard-selection"><span class="icon icon-back">back</span></a>
+      <h1 data-l10n-id="addMoreKeyboards-header"> Add more keyboards </h1>
     </header>

     <div class="keyboardAppContainer"></div>
diff --git a/apps/settings/elements/messaging.html b/apps/settings/elements/messaging.html
index ee98d93..14c1199 100644
--- a/apps/settings/elements/messaging.html
+++ b/apps/settings/elements/messaging.html
@@ -64,15 +64,6 @@
           </label>
         </li>
       </ul>
-      <header>
-        <h2 data-l10n-id="messagingInformation"> Information </h2>
-      </header>
-      <ul>
-        <li id="menuItem-smsc" aria-disabled="true" class="hint">
-          <a data-l10n-id="messagingSMSC">SMSC</a>
-          <p class="explanation">Unknown</p>
-        </li>
-      </ul>
     </div>

     <script src="js/messaging.js"></script>
diff --git a/apps/settings/elements/root.html b/apps/settings/elements/root.html
new file mode 100644
index 0000000..445c1ff
--- /dev/null
+++ b/apps/settings/elements/root.html
@@ -0,0 +1,208 @@
+<element name="root" extends="section">
+  <template>
+
+    <header>
+      <menu id="activityDoneButton" type="toolbar">
+        <a href="#home" role="menuitem" data-l10n-id="done">Done</a>
+      </menu>
+      <h1 data-l10n-id="settings"> Settings </h1>
+    </header>
+
+    <div>
+      <header data-category="connectivity">
+        <h2 data-l10n-id="networkAndConnectivity">Network &amp; Connectivity</h2>
+      </header>
+      <ul>
+        <li data-category="connectivity">
+          <label class="pack-switch">
+            <input id="airplaneMode-input" class="uninit" type="checkbox" disabled>
+            <span id="menuItem-airplaneMode" class="menu-item gaia-icon icon-settings-airplane" data-l10n-id="airplaneMode">Airplane Mode</span>
+          </label>
+        </li>
+        <li>
+          <label class="pack-switch">
+            <input name="geolocation.enabled" class="uninit" type="checkbox">
+            <span id="menuItem-gps" class="menu-item gaia-icon icon-settings-gps" data-l10n-id="geolocation">Geolocation</span>
+          </label>
+        </li>
+        <li data-category="connectivity">
+          <small id="wifi-desc" class="menu-item-desc"></small>
+          <a id="menuItem-wifi" class="menu-item gaia-icon icon-settings-wifi" href="#wifi" data-l10n-id="wifi">Wi-Fi</a>
+        </li>
+        <li id="simCardManager-settings" aria-disabled="true">
+          <small id="simmanager-desc" class="menu-item-desc"></small>
+          <a id="menuItem-simManager" class="menu-item gaia-icon icon-settings-simcardlock" href="#sim-manager" data-l10n-id="simManager">SIM manager</a>
+        </li>
+        <li id="call-settings" aria-disabled="true">
+          <small id="call-desc" class="menu-item-desc"></small>
+          <a id="menuItem-callSettings" class="menu-item gaia-icon icon-settings-call" href="#call" data-l10n-id="callSettings">Call Settings</a>
+        </li>
+        <li id="messaging-settings" aria-disabled="true">
+          <small id="messaging-desc" class="menu-item-desc"></small>
+          <a id="menuItem-messagingSettings" class="menu-item gaia-icon icon-settings-messages" href="#messaging" data-l10n-id="messagingSettings">Messaging Settings</a>
+        </li>
+        <li id="data-connectivity" data-category="connectivity" aria-disabled="true">
+          <small id="data-desc" class="menu-item-desc"></small>
+          <a id="menuItem-cellularAndData" class="menu-item gaia-icon icon-settings-network" href="#carrier" data-l10n-id="cellularAndData">Cellular &amp; Data</a>
+        </li>
+        <li>
+          <small id="bluetooth-desc" class="menu-item-desc"></small>
+          <a id="menuItem-bluetooth" class="menu-item gaia-icon icon-settings-bluetooth" href="#bluetooth" data-l10n-id="bluetooth">Bluetooth</a>
+        </li>
+        <li class="nfc-settings" hidden>
+          <label class="pack-switch">
+            <input id="nfc-input" name="nfc.enabled" class="uninit" type="checkbox">
+            <span id="menuItem-nfc" class="menu-item gaia-icon icon-settings-nfc" data-l10n-id="nfc">NFC</span>
+          </label>
+        </li>
+        <li>
+          <small id="internetSharing-desc" class="menu-item-desc"></small>
+          <a id="menuItem-internetSharing" class="menu-item gaia-icon icon-settings-tethering" href="#hotspot" data-l10n-id="internetSharing">Internet Sharing</a>
+        </li>
+      </ul>
+
+      <header>
+        <h2 data-l10n-id="personalization">Personalization</h2>
+      </header>
+      <ul>
+        <li>
+          <a id="menuItem-sound" class="menu-item gaia-icon icon-settings-sound-max" href="#sound" data-l10n-id="sound">Sound</a>
+        </li>
+        <li>
+          <a id="menuItem-display" class="menu-item gaia-icon icon-settings-display" href="#display" data-l10n-id="display">Display</a>
+        </li>
+        <li>
+          <a id="menuItem-homescreen" class="menu-item gaia-icon icon-settings-homescreen" href="#homescreen" data-l10n-id="homescreen">Homescreen</a>
+        </li>
+        <li>
+          <a id="menuItem-navigation" class="menu-item gaia-icon icon-settings-gesture" href="#navigation" data-l10n-id="navigation">Navigation</a>
+        </li>
+        <li>
+          <a id="menuItem-notifications" class="menu-item gaia-icon icon-settings-notifications" href="#notifications" data-l10n-id="notifications">Notifications</a>
+        </li>
+        <li>
+          <small id="time-desc" class="menu-item-desc"></small>
+          <a id="menuItem-dateAndTime" class="menu-item gaia-icon icon-settings-time" href="#dateTime" data-l10n-id="dateAndTime">Date &amp; Time</a>
+        </li>
+        <li>
+          <small class="language-desc menu-item-desc"></small>
+          <a class="menuItem-languageAndRegion menu-item gaia-icon icon-settings-languages2" href="#languages" data-l10n-id="language">Language</a>
+        </li>
+        <li id="homescreens-section" hidden>
+          <a id="menuItem-homescreens" class="menu-item gaia-icon icon-settings-apps" href="#homescreens" data-l10n-id="homescreens">Homescreens</a>
+        </li>
+        <li>
+          <small id="keyboard-desc" class="menu-item-desc"></small>
+          <a id="menuItem-keyboard" class="menu-item gaia-icon icon-settings-keyboard" href="#keyboard" data-l10n-id="keyboards">Keyboards</a>
+        </li>
+      </ul>
+
+      <header>
+        <h2 data-l10n-id="accounts">Accounts</h2>
+      </header>
+      <ul>
+        <li>
+          <small id="fxa-desc" class="menu-item-desc"></small>
+          <a id="menuItem-fxa" class="menu-item gaia-icon icon-settings-persona" href="#fxa" data-l10n-id="fxa-accounts">Firefox Accounts</a>
+        </li>
+        <li data-show-name="findmydevice.ui.enabled" hidden>
+          <small class="findmydevice-desc menu-item-desc"></small>
+          <a id="menuItem-findmydevice" class="menu-item gaia-icon icon-settings-findmydevice" href="#findmydevice"
+            data-l10n-id="findmydevice">Find My Device</a>
+        </li>
+      </ul>
+
+      <header>
+        <h2 data-l10n-id="privacyAndSecurity">Privacy &amp; Security</h2>
+      </header>
+      <ul>
+        <li>
+          <small id="screenLock-desc" class="menu-item-desc"></small>
+          <a id="menuItem-screenLock" class="menu-item gaia-icon icon-settings-phonelock" href="#screenLock" data-l10n-id="screenLock">Screen Lock</a>
+        </li>
+        <li id="simSecurity-settings" aria-disabled="true">
+          <small id="simCardLock-desc" class="menu-item-desc"></small>
+          <a id="menuItem-simSecurity" class="menu-item gaia-icon icon-settings-simcardlock" href="#simpin" data-l10n-id="simSecurity">SIM security</a>
+        </li>
+        <li>
+          <a id="menuItem-appPermissions" class="menu-item gaia-icon icon-settings-app-permissions" href="#appPermissions" data-l10n-id="appPermissions">App permissions</a>
+        </li>
+        <li>
+          <small id="doNotTrack-desc" class="menu-item-desc"></small>
+          <a id="menuItem-doNotTrack" class="menu-item gaia-icon icon-settings-donottrack" href="#doNotTrack" data-l10n-id="doNotTrack">Do Not Track</a>
+        </li>
+      </ul>
+
+      <header>
+        <h2 data-l10n-id="storage">Storage</h2>
+      </header>
+      <ul>
+        <li>
+          <label class="pack-switch">
+            <input class="ums-switch-root" data-ignore type="checkbox">
+            <small class="ums-desc-root menu-item-desc">Disabled</small>
+            <span id="menuItem-enableStorage" class="menu-item gaia-icon icon-settings-usbstorage" data-l10n-id="enableUSBStorage1">USB storage</span>
+          </label>
+        </li>
+        <li>
+          <small class="application-storage-desc menu-item-desc"></small>
+          <a class="menuItem-applicationStorage menu-item gaia-icon icon-settings-appstorage" href="#applicationStorage" data-l10n-id="appStorage">Application Storage</a>
+        </li>
+        <li class="media-storage-section">
+          <small class="media-storage-desc menu-item-desc"></small>
+          <a class="menuItem-mediaStorage menu-item gaia-icon icon-settings-mediastorage" href="#mediaStorage" data-l10n-id="mediaStorage">Media Storage</a>
+        </li>
+      </ul>
+
+      <header>
+        <h2 data-l10n-id="device">Device</h2>
+      </header>
+      <ul>
+        <li>
+          <a id="menuItem-deviceInfo" class="menu-item gaia-icon icon-settings-aboutphone" href="#about" data-l10n-id="deviceInfo">Device Information</a>
+        </li>
+        <li>
+          <a id="menuItem-downloads" class="menu-item gaia-icon icon-settings-download" href="#downloads" data-l10n-id="downloads">Downloads</a>
+        </li>
+        <li>
+          <small class="battery-desc menu-item-desc" hidden></small>
+          <a class="menuItem-battery menu-item gaia-icon icon-settings-battery" href="#battery" data-l10n-id="battery">Battery</a>
+        </li>
+        <li data-show-name="accessibility.show-settings" hidden>
+          <a id="menuItem-accessibility" class="menu-item gaia-icon icon-settings-accessibility" href="#accessibility" data-l10n-id="accessibility">Accessibility</a>
+        </li>
+        <li data-show-name="developer.menu.enabled" hidden>
+          <a id="menuItem-developer" class="menu-item gaia-icon icon-settings-developer" href="#developer" data-l10n-id="developer">Developer</a>
+        </li>
+        <li>
+          <a id="menuItem-improveBrowserOS" class="menu-item gaia-icon icon-settings-feedback" href="#improveBrowserOS" data-l10n-id="improveBrowserOS">Improve Browser OS</a>
+        </li>
+        <li>
+          <a id="menuItem-help" class="menu-item gaia-icon icon-settings-help" href="#help" data-l10n-id="help">Help</a>
+        </li>
+      </ul>
+
+      <header id="icc-mainheader">
+        <h2 data-l10n-id="operatorServices">Operator Services</h2>
+      </header>
+      <ul id="icc-entries">
+      </ul>
+    </div>
+
+    <form role="dialog" data-type="confirm" class="turn-on-ums-dialog" hidden>
+      <section>
+        <h1 data-l10n-id="ums-warning-title">Enable USB storage?</h1>
+        <p data-l10n-id="turn-on-ums-confirm">
+          Turning on Enable USB storage allows another computer or device connected using USB to access files on this phone.
+        </p>
+      </section>
+      <menu>
+        <button data-l10n-id="cancel" class="ums-cancel-option">Cancel</button>
+        <button data-l10n-id="ok" class="ums-confirm-option recommend">OK</button>
+      </menu>
+    </form>
+
+    <panel data-path="panels/root/panel"><panel>
+
+  </template>
+</element>
diff --git a/apps/settings/elements/screen_lock.html b/apps/settings/elements/screen_lock.html
index f2d3975..9ce299c 100644
--- a/apps/settings/elements/screen_lock.html
+++ b/apps/settings/elements/screen_lock.html
@@ -25,11 +25,17 @@
           <span class="button icon icon-dialog">
             <select name="lockscreen.passcode-lock.timeout">
               <option value="0" data-l10n-id="immediately" selected>Immediately</option>
+              <option value="5" data-l10n-id="after-five-seconds">After 5 seconds</option>
+              <option value="15" data-l10n-id="after-fifteen-seconds">After 15 seconds</option>
+              <option value="30" data-l10n-id="after-thirty-seconds">After 30 seconds</option>
               <option value="60" data-l10n-id="after-one-minute">After 1 minute</option>
+              <option value="120" data-l10n-id="after-two-minutes">After 2 minutes</option>
               <option value="300" data-l10n-id="after-five-minutes">After 5 minutes</option>
+              <option value="600" data-l10n-id="after-ten-minutes">After 10 minutes</option>
               <option value="900" data-l10n-id="after-fifteen-minutes">After 15 minutes</option>
               <option value="1800" data-l10n-id="after-thirty-minutes">After 30 minutes</option>
               <option value="3600" data-l10n-id="after-one-hour">After 1 hour</option>
+              <option value="14400" data-l10n-id="after-four-hours">After 4 hours</option>
             </select>
           </span>
         </li>
diff --git a/apps/settings/elements/search_suggestions.html b/apps/settings/elements/search_suggestions.html
new file mode 100644
index 0000000..c976c8f
--- /dev/null
+++ b/apps/settings/elements/search_suggestions.html
@@ -0,0 +1,37 @@
+<element name="search-suggestions" extends="section">
+  <template>
+
+    <header>
+      <a href="#homescreen"><span class="icon icon-back">back</span></a>
+      <h1 data-l10n-id="search-suggestions-header"> Search Suggestions </h1>
+    </header>
+
+    <div>
+      <ul>
+        <li id="search-suggestions-enabled">
+          <label class="pack-switch">
+            <input type="checkbox" name="search.suggestions.enabled">
+            <span data-l10n-id="search-suggestions">Search Suggestions</span>
+          </label>
+        </li>
+      </ul>
+
+      <header>
+        <h2 data-l10n-id="notice">Notice</h2>
+      </header>
+
+      <ul>
+        <li class="description">
+          <p data-l10n-id="search-suggestions-description">
+            The characters you type when entering a search are sent
+            to multiple search providers and will be used to send you
+            search suggestions. Additional data charges may apply
+            when using this feature.
+          </p>
+        </li>
+      </ul>
+
+    </div>
+
+  </template>
+</element>
diff --git a/apps/settings/elements/wifi.html b/apps/settings/elements/wifi.html
index 5cb55f4..a71251a 100644
--- a/apps/settings/elements/wifi.html
+++ b/apps/settings/elements/wifi.html
@@ -63,7 +63,7 @@
       </ul>
     </div>

-    <panel data-path="panels/wifi/panel"></panel>
+    <script src="js/wifi.js"></script>

   </template>
 </element>
diff --git a/apps/settings/elements/wifi_auth.html b/apps/settings/elements/wifi_auth.html
index f0e8c6d..cc020ad 100644
--- a/apps/settings/elements/wifi_auth.html
+++ b/apps/settings/elements/wifi_auth.html
@@ -71,7 +71,5 @@
       </ul>
     </div>

-    <panel data-path="panels/wifi_auth/panel"></panel>
-
   </template>
 </element>
diff --git a/apps/settings/elements/wifi_enter_certificate_nickname.html b/apps/settings/elements/wifi_enter_certificate_nickname.html
index b30b843..5af7dd5 100644
--- a/apps/settings/elements/wifi_enter_certificate_nickname.html
+++ b/apps/settings/elements/wifi_enter_certificate_nickname.html
@@ -23,7 +23,5 @@
       </ul>
     </div>

-    <panel data-path="panels/wifi_enter_certificate_nickname/panel"></panel>
-
   </template>
 </element>
diff --git a/apps/settings/elements/wifi_join_hidden.html b/apps/settings/elements/wifi_join_hidden.html
index 80df137..12aa15f 100644
--- a/apps/settings/elements/wifi_join_hidden.html
+++ b/apps/settings/elements/wifi_join_hidden.html
@@ -18,7 +18,7 @@
         <li>
           <p data-l10n-id="security">Security</p>
           <span class="button icon icon-dialog">
-            <select name="security">
+            <select>
               <option data-l10n-id="securityNone">none</option>
               <option>WEP</option>
               <option selected>WPA-PSK</option>
@@ -29,7 +29,7 @@
         <li class="eap">
           <p data-l10n-id="eap">EAP method</p>
           <span class="button icon icon-dialog" data-eapMethod>
-            <select name="eap">
+            <select>
               <option value="SIM">SIM</option>
               <option value="PEAP">PEAP</option>
               <option value="TTLS">TTLS</option>
@@ -76,7 +76,5 @@
       </ul>
     </div>

-    <panel data-path="panels/wifi_join_hidden/panel"></panel>
-
   </template>
 </element>
diff --git a/apps/settings/elements/wifi_manage_certificates.html b/apps/settings/elements/wifi_manage_certificates.html
index 6c00239..c477711 100644
--- a/apps/settings/elements/wifi_manage_certificates.html
+++ b/apps/settings/elements/wifi_manage_certificates.html
@@ -41,7 +41,5 @@
       </menu>
     </form>

-    <panel data-path="panels/wifi_manage_certificates/panel"></panel>
-
   </template>
 </element>
diff --git a/apps/settings/elements/wifi_manage_networks.html b/apps/settings/elements/wifi_manage_networks.html
index 82fcf20..8eb5f08 100644
--- a/apps/settings/elements/wifi_manage_networks.html
+++ b/apps/settings/elements/wifi_manage_networks.html
@@ -47,7 +47,5 @@
       </menu>
     </form>

-    <panel data-path="panels/wifi_manage_networks/panel"></panel>
-
   </template>
 </element>
diff --git a/apps/settings/elements/wifi_select_certificate_file.html b/apps/settings/elements/wifi_select_certificate_file.html
index 932f4dd..ff3e0bd 100644
--- a/apps/settings/elements/wifi_select_certificate_file.html
+++ b/apps/settings/elements/wifi_select_certificate_file.html
@@ -21,7 +21,8 @@
       </menu>
     </form>

-    <panel data-path="panels/wifi_select_certificate_file/panel"></panel>
+    <script src="js/wifi_select_certificate_file.js"></script>
+    <script src="shared/js/device_storage/enumerate_all.js"></script>

   </template>
 </element>
diff --git a/apps/settings/elements/wifi_status.html b/apps/settings/elements/wifi_status.html
index 4a986e5..c401c3c 100644
--- a/apps/settings/elements/wifi_status.html
+++ b/apps/settings/elements/wifi_status.html
@@ -34,7 +34,5 @@
       </ul>
     </div>

-    <panel data-path="panels/wifi_status/panel"></panel>
-
   </template>
 </element>
diff --git a/apps/settings/elements/wifi_wps.html b/apps/settings/elements/wifi_wps.html
index faf1b8a..5bc0ebf 100644
--- a/apps/settings/elements/wifi_wps.html
+++ b/apps/settings/elements/wifi_wps.html
@@ -45,7 +45,5 @@
       </ul>
     </div>

-    <panel data-path="panels/wifi_wps/panel"></panel>
-
   </template>
 </element>
diff --git a/apps/settings/index.html b/apps/settings/index.html
index abdcfbc..881f030 100644
--- a/apps/settings/index.html
+++ b/apps/settings/index.html
@@ -18,7 +18,7 @@
     <link rel="stylesheet" type="text/css" href="style/lists.css">
     <link rel="stylesheet" type="text/css" href="style/icons.css">
     <link rel="stylesheet" type="text/css" href="style/settings.css">
-    <link rel="stylesheet" type="text/css" href="style/settings_large.css" data-device-type="tablet">
+    <link rel="stylesheet" type="text/css" href="style/settings_large.css">
     <!-- Panel Stylesheets
     <link rel="stylesheet" type="text/css" href="shared/style/action_menu.css"/>
     <link rel="stylesheet" type="text/css" href="shared/style/buttons.css"/>
@@ -87,7 +87,6 @@
     <!--<script defer src="shared/js/text_normalizer.js"></script> -->
     <!--<script defer src="shared/js/settings_url.js"></script> -->
     <!--<script defer src="shared/js/omadrm/fl.js"></script> -->
-    <!--<script defer src="shared/js/device_storage/enumerate_all.js"></script> -->

     <!-- all non-#root panels will lazy-load their own scripts -->
     <link rel="import" href="/elements/wifi_status.html">
@@ -127,6 +126,7 @@
     <link rel="import" href="/elements/sound.html">
     <link rel="import" href="/elements/display.html">
     <link rel="import" href="/elements/homescreen.html">
+    <link rel="import" href="/elements/search_suggestions.html">
     <link rel="import" href="/elements/navigation.html">
     <link rel="import" href="/elements/notifications.html">
     <link rel="import" href="/elements/date_time.html">
@@ -137,6 +137,7 @@
     <link rel="import" href="/elements/keyboard.html">
     <link rel="import" href="/elements/keyboard_enabled_default.html">
     <link rel="import" href="/elements/keyboard_selection_add_more.html">
+    <link rel="import" href="/elements/keyboard_selection.html">
     <link rel="import" href="/elements/screen_lock_passcode.html">
     <link rel="import" href="/elements/screen_lock.html">
     <link rel="import" href="/elements/simpin_dialog.html">
@@ -166,6 +167,7 @@
     <link rel="import" href="/elements/downloads.html">
     <link rel="import" href="/elements/firefox_accounts.html">
     <link rel="import" href="/elements/findmydevice.html">
+    <link rel="import" href="/elements/root.html">
   </head>
   <body class="skin-organic uninit">
     <!--
@@ -269,6 +271,8 @@
     <section is="homescreen" role="region" id="homescreen"></section>
     <!-- Personalization :: Navigation -->
     <section is="navigation" role="region" id="navigation"></section>
+    <!-- Personalization :: Homescreen :: Search Suggestions -->
+    <section is="search-suggestions" role="region" id="search-suggestions"></section>
     <!-- Personalization :: Notifications -->
     <section is="notifications" role="region" id="notifications"></section>
     <!-- Personalization :: Date & Time -->
@@ -350,210 +354,7 @@
     <!-- Firefox Accounts -->
     <section is="fxa" role="region" id="fxa"></section>
     <!-- Main List -->
-    <section role="region" id="root" class="current" data-rendered="true">
-      <header>
-        <menu id="activityDoneButton" type="toolbar">
-          <a href="#home" role="menuitem" data-l10n-id="done">Done</a>
-        </menu>
-        <h1 data-l10n-id="settings"> Settings </h1>
-      </header>
-
-      <div>
-        <header data-category="connectivity">
-          <h2 data-l10n-id="networkAndConnectivity">Network &amp; Connectivity</h2>
-        </header>
-        <ul>
-          <li data-category="connectivity">
-            <label class="pack-switch">
-              <input id="airplaneMode-input" class="uninit" type="checkbox" disabled>
-              <span id="menuItem-airplaneMode" class="menu-item gaia-icon icon-settings-airplane" data-l10n-id="airplaneMode">Airplane Mode</span>
-            </label>
-          </li>
-          <li>
-            <label class="pack-switch">
-              <input name="geolocation.enabled" class="uninit" type="checkbox">
-              <span id="menuItem-gps" class="menu-item gaia-icon icon-settings-gps" data-l10n-id="geolocation">Geolocation</span>
-            </label>
-          </li>
-          <li data-category="connectivity">
-            <small id="wifi-desc" class="menu-item-desc"></small>
-            <a id="menuItem-wifi" class="menu-item gaia-icon icon-settings-wifi" href="#wifi" data-l10n-id="wifi">Wi-Fi</a>
-          </li>
-          <li id="simCardManager-settings" aria-disabled="true">
-            <small id="simmanager-desc" class="menu-item-desc"></small>
-            <a id="menuItem-simManager" class="menu-item gaia-icon icon-settings-simcardlock" href="#sim-manager" data-l10n-id="simManager">SIM manager</a>
-          </li>
-          <li id="call-settings" aria-disabled="true">
-            <small id="call-desc" class="menu-item-desc"></small>
-            <a id="menuItem-callSettings" class="menu-item gaia-icon icon-settings-call" href="#call" data-l10n-id="callSettings">Call Settings</a>
-          </li>
-          <li id="messaging-settings" aria-disabled="true">
-            <small id="messaging-desc" class="menu-item-desc"></small>
-            <a id="menuItem-messagingSettings" class="menu-item gaia-icon icon-settings-messages" href="#messaging" data-l10n-id="messagingSettings">Messaging Settings</a>
-          </li>
-          <li id="data-connectivity" data-category="connectivity" aria-disabled="true">
-            <small id="data-desc" class="menu-item-desc"></small>
-            <a id="menuItem-cellularAndData" class="menu-item gaia-icon icon-settings-network" href="#carrier" data-l10n-id="cellularAndData">Cellular &amp; Data</a>
-          </li>
-          <li>
-            <small id="bluetooth-desc" class="menu-item-desc"></small>
-            <a id="menuItem-bluetooth" class="menu-item gaia-icon icon-settings-bluetooth" href="#bluetooth" data-l10n-id="bluetooth">Bluetooth</a>
-          </li>
-          <li class="nfc-settings" hidden>
-            <label class="pack-switch">
-              <input id="nfc-input" name="nfc.enabled" class="uninit" type="checkbox">
-              <span id="menuItem-nfc" class="menu-item gaia-icon icon-settings-nfc" data-l10n-id="nfc">NFC</span>
-            </label>
-          </li>
-          <li>
-            <small id="internetSharing-desc" class="menu-item-desc"></small>
-            <a id="menuItem-internetSharing" class="menu-item gaia-icon icon-settings-tethering" href="#hotspot" data-l10n-id="internetSharing">Internet Sharing</a>
-          </li>
-        </ul>
-
-        <header>
-          <h2 data-l10n-id="personalization">Personalization</h2>
-        </header>
-        <ul>
-          <li>
-            <a id="menuItem-sound" class="menu-item gaia-icon icon-settings-sound-max" href="#sound" data-l10n-id="sound">Sound</a>
-          </li>
-          <li>
-            <a id="menuItem-display" class="menu-item gaia-icon icon-settings-display" href="#display" data-l10n-id="display">Display</a>
-          </li>
-          <li>
-            <a id="menuItem-homescreen" class="menu-item gaia-icon icon-settings-homescreen" href="#homescreen" data-l10n-id="homescreen">Homescreen</a>
-          </li>
-          <li>
-            <a id="menuItem-navigation" class="menu-item gaia-icon icon-settings-gesture" href="#navigation" data-l10n-id="navigation">Navigation</a>
-          </li>
-          <li>
-            <a id="menuItem-notifications" class="menu-item gaia-icon icon-settings-notifications" href="#notifications" data-l10n-id="notifications">Notifications</a>
-          </li>
-          <li>
-            <small id="time-desc" class="menu-item-desc"></small>
-            <a id="menuItem-dateAndTime" class="menu-item gaia-icon icon-settings-time" href="#dateTime" data-l10n-id="dateAndTime">Date &amp; Time</a>
-          </li>
-          <li>
-            <small class="language-desc menu-item-desc"></small>
-            <a class="menuItem-languageAndRegion menu-item gaia-icon icon-settings-languages2" href="#languages" data-l10n-id="language">Language</a>
-          </li>
-          <li id="homescreens-section" hidden>
-            <a id="menuItem-homescreens" class="menu-item gaia-icon icon-settings-apps" href="#homescreens" data-l10n-id="homescreens">Homescreens</a>
-          </li>
-          <li>
-            <small id="keyboard-desc" class="menu-item-desc"></small>
-            <a id="menuItem-keyboard" class="menu-item gaia-icon icon-settings-keyboard" href="#keyboard" data-l10n-id="keyboards">Keyboards</a>
-          </li>
-        </ul>
-
-        <header>
-          <h2 data-l10n-id="accounts">Accounts</h2>
-        </header>
-        <ul>
-          <li>
-            <small id="fxa-desc" class="menu-item-desc"></small>
-            <a id="menuItem-fxa" class="menu-item gaia-icon icon-settings-persona" href="#fxa" data-l10n-id="fxa-accounts">Firefox Accounts</a>
-          </li>
-          <li data-show-name="findmydevice.ui.enabled" hidden>
-            <small class="findmydevice-desc menu-item-desc"></small>
-            <a id="menuItem-findmydevice" class="menu-item gaia-icon icon-settings-findmydevice" href="#findmydevice"
-              data-l10n-id="findmydevice">Find My Device</a>
-          </li>
-        </ul>
-
-        <header>
-          <h2 data-l10n-id="privacyAndSecurity">Privacy &amp; Security</h2>
-        </header>
-        <ul>
-          <li>
-            <small id="screenLock-desc" class="menu-item-desc"></small>
-            <a id="menuItem-screenLock" class="menu-item gaia-icon icon-settings-phonelock" href="#screenLock" data-l10n-id="screenLock">Screen Lock</a>
-          </li>
-          <li id="simSecurity-settings" aria-disabled="true">
-            <small id="simCardLock-desc" class="menu-item-desc"></small>
-            <a id="menuItem-simSecurity" class="menu-item gaia-icon icon-settings-simcardlock" href="#simpin" data-l10n-id="simSecurity">SIM security</a>
-          </li>
-          <li>
-            <a id="menuItem-appPermissions" class="menu-item gaia-icon icon-settings-app-permissions" href="#appPermissions" data-l10n-id="appPermissions">App permissions</a>
-          </li>
-          <li>
-            <small id="doNotTrack-desc" class="menu-item-desc"></small>
-            <a id="menuItem-doNotTrack" class="menu-item gaia-icon icon-settings-donottrack" href="#doNotTrack" data-l10n-id="doNotTrack">Do Not Track</a>
-          </li>
-        </ul>
-
-        <header>
-          <h2 data-l10n-id="storage">Storage</h2>
-        </header>
-        <ul>
-          <li>
-            <label class="pack-switch">
-              <input class="ums-switch-root" data-ignore type="checkbox">
-              <small class="ums-desc-root menu-item-desc">Disabled</small>
-              <span id="menuItem-enableStorage" class="menu-item gaia-icon icon-settings-usbstorage" data-l10n-id="enableUSBStorage1">USB storage</span>
-            </label>
-          </li>
-          <li>
-            <small class="application-storage-desc menu-item-desc"></small>
-            <a class="menuItem-applicationStorage menu-item gaia-icon icon-settings-appstorage" href="#applicationStorage" data-l10n-id="appStorage">Application Storage</a>
-          </li>
-          <li class="media-storage-section">
-            <small class="media-storage-desc menu-item-desc"></small>
-            <a class="menuItem-mediaStorage menu-item gaia-icon icon-settings-mediastorage" href="#mediaStorage" data-l10n-id="mediaStorage">Media Storage</a>
-          </li>
-        </ul>
-
-        <header>
-          <h2 data-l10n-id="device">Device</h2>
-        </header>
-        <ul>
-          <li>
-            <a id="menuItem-deviceInfo" class="menu-item gaia-icon icon-settings-aboutphone" href="#about" data-l10n-id="deviceInfo">Device Information</a>
-          </li>
-          <li>
-            <a id="menuItem-downloads" class="menu-item gaia-icon icon-settings-download" href="#downloads" data-l10n-id="downloads">Downloads</a>
-          </li>
-          <li>
-            <small class="battery-desc menu-item-desc" hidden></small>
-            <a class="menuItem-battery menu-item gaia-icon icon-settings-battery" href="#battery" data-l10n-id="battery">Battery</a>
-          </li>
-          <li data-show-name="accessibility.show-settings" hidden>
-            <a id="menuItem-accessibility" class="menu-item gaia-icon icon-settings-accessibility" href="#accessibility" data-l10n-id="accessibility">Accessibility</a>
-          </li>
-          <li data-show-name="developer.menu.enabled" hidden>
-            <a id="menuItem-developer" class="menu-item gaia-icon icon-settings-developer" href="#developer" data-l10n-id="developer">Developer</a>
-          </li>
-          <li>
-            <a id="menuItem-improveBrowserOS" class="menu-item gaia-icon icon-settings-feedback" href="#improveBrowserOS" data-l10n-id="improveBrowserOS">Improve Browser OS</a>
-          </li>
-          <li>
-            <a id="menuItem-help" class="menu-item gaia-icon icon-settings-help" href="#help" data-l10n-id="help">Help</a>
-          </li>
-        </ul>
-
-        <header id="icc-mainheader">
-          <h2 data-l10n-id="operatorServices">Operator Services</h2>
-        </header>
-        <ul id="icc-entries">
-        </ul>
-      </div>
-
-      <form role="dialog" data-type="confirm" class="turn-on-ums-dialog" hidden>
-        <section>
-          <h1 data-l10n-id="ums-warning-title">Enable USB storage?</h1>
-          <p data-l10n-id="turn-on-ums-confirm">
-            Turning on Enable USB storage allows another computer or device connected using USB to access files on this phone.
-          </p>
-        </section>
-        <menu>
-          <button data-l10n-id="cancel" class="ums-cancel-option">Cancel</button>
-          <button data-l10n-id="ok" class="ums-confirm-option recommend">OK</button>
-        </menu>
-      </form>
-
-      <panel data-path="panels/root/panel"><panel>
-    </section>
+    <section is="root" role="region" id="root"></section>

     <script src="js/startup.js"></script>
   </body>
diff --git a/apps/settings/js/about_more_info.js b/apps/settings/js/about_more_info.js
index aa032e0..ea46d1d 100644
--- a/apps/settings/js/about_more_info.js
+++ b/apps/settings/js/about_more_info.js
@@ -1,22 +1,11 @@
-/* global SettingsListener */
 'use strict';

 var AboutMoreInfo = {
-  /** MMI control code used for retrieving a phone's IMEI code. */
-  GET_IMEI_COMMAND: '*#06#',

   init: function about_init() {
     this.loadImei();
     this.loadIccId();
     this.loadGaiaCommit();
-    this.loadMacAddress();
-  },
-
-  loadMacAddress: function about_loadMacAddress() {
-    var field = document.querySelector('[data-name="deviceinfo.mac"]');
-    SettingsListener.observe('deviceinfo.mac', '', function(macAddress) {
-      field.textContent = macAddress;
-    });
   },

   loadGaiaCommit: function about_loadGaiaCommit() {
@@ -24,9 +13,8 @@ var AboutMoreInfo = {

     var dispDate = document.getElementById('gaia-commit-date');
     var dispHash = document.getElementById('gaia-commit-hash');
-    if (dispHash.textContent) {
+    if (dispHash.textContent)
       return; // `gaia-commit.txt' has already been loaded
-    }

     function dateToUTC(d) {
       var arr = [];
@@ -65,95 +53,27 @@ var AboutMoreInfo = {
     req.send();
   },

-  /**
-   * Retrieves the IMEI code corresponding with the specified SIM card slot.
-   *
-   * @param {Integer} simSlotIndex The slot whose IMEI code we want to retrieve.
-   * @returns {Promise} A promise that resolves to the IMEI code or rejects
-   *          if an error occurred.
-   */
-  _getImeiCode: function about_getImeiCode(simSlotIndex) {
-    var self = this;
-
-    return new Promise(function(resolve, reject) {
-      var connection = navigator.mozMobileConnections[simSlotIndex];
-      var request = connection.sendMMI(self.GET_IMEI_COMMAND);
-      request.onsuccess = function about_onGetImeiCodeSuccess() {
-        if (!this.result || (this.result.serviceCode !== 'scImei') ||
-            (this.result.statusMessage === null)) {
-          reject(new Error('Could not retrieve the IMEI code for SIM' +
-            simSlotIndex));
-          return;
-        }
-
-        resolve(this.result.statusMessage);
-      };
-      request.onerror = function about_onGetImeiCodeError() {
-        reject(this.error);
-      };
-    });
-  },
-
-  /**
-   * Populate the IMEI information entry with the provided list of IMEI codes.
-   * If the code is not given or if it's empty then the entry will be marked
-   * as unavailable.
-   *
-   * @param {Array} imeis An array of IMEI codes.
-   */
-  _createImeiField: function about_createImeiField(imeis) {
-    var deviceInfoImeis = document.getElementById('deviceInfo-imeis');
-
-    while (deviceInfoImeis.hasChildNodes()) {
-      deviceInfoImeis.removeChild(deviceInfoImeis.lastChild);
-    }
-
-    if (!imeis || imeis.length === 0) {
-      var span = document.createElement('span');
-
-      navigator.mozL10n.localize(span, 'unavailable');
-      deviceInfoImeis.appendChild(span);
-    } else {
-      imeis.forEach(function(imei, index) {
-        var span = document.createElement('span');
-
-        span.textContent = (imeis.length > 1) ?
-          'IMEI ' + (index + 1) + ': ' + imei : imei;
-        span.dataset.slot = index;
-        deviceInfoImeis.appendChild(span);
-      });
-    }
-  },
-
-  /**
-   * Loads all the phone's IMEI code in the corresponding entry.
-   *
-   * @returns {Promise} A promise that is resolved when the container has been
-   *          fully populated.
-   */
   loadImei: function about_loadImei() {
-    var deviceInfoImeis = document.getElementById('deviceInfo-imeis');
+    var deviceInfoImei = document.getElementById('deviceInfo-imei');
     var conns = navigator.mozMobileConnections;

     if (!navigator.mozTelephony || !conns) {
-      deviceInfoImeis.parentNode.hidden = true;
-      return Promise.resolve();
-    }
-
-    // Retrieve all IMEI codes.
-    var promises = [];
-
-    for (var i = 0; i < conns.length; i++) {
-      promises.push(this._getImeiCode(i));
+      deviceInfoImei.parentNode.hidden = true;
+      return;
     }

-    var self = this;
-
-    return Promise.all(promises).then(function(imeis) {
-      self._createImeiField(imeis);
-    }, function() {
-      self._createImeiField(null);
-    });
+    // update imei, we use the first mobile conneciton.
+    var req = conns[0].sendMMI('*#06#');
+    req.onsuccess = function getIMEI() {
+      if (req.result && req.result.statusMessage) {
+        deviceInfoImei.textContent = req.result.statusMessage;
+      } else {
+        navigator.mozL10n.localize(deviceInfoImei, 'unavailable');
+      }
+    };
+    req.onerror = function() {
+      navigator.mozL10n.localize(deviceInfoImei, 'unavailable');
+    };
   },

   loadIccId: function about_loadIccId() {
diff --git a/apps/settings/js/config/require.js b/apps/settings/js/config/require.js
index 70d6de3..8c41478 100644
--- a/apps/settings/js/config/require.js
+++ b/apps/settings/js/config/require.js
@@ -44,9 +44,6 @@ require.config({
     },
     'utils': {
       exports: ''
-    },
-    'shared/device_storage/enumerate_all': {
-      exports: 'enumerateAll'
     }
   },
   modules: [
@@ -124,6 +121,16 @@ require.config({
       ]
     },
     {
+      name: 'panels/keyboard_enabled_layouts/panel',
+      exclude: [
+        'main',
+        'modules/mvvm/list_view',
+        'modules/mvvm/observable',
+        'modules/mvvm/observable_array',
+        'modules/keyboard_context'
+      ]
+    },
+    {
       name: 'panels/keyboard_enabled_default/dialog',
       exclude: [
         'main'
@@ -135,42 +142,6 @@ require.config({
         'main',
         'modules/mvvm/observable'
       ]
-    },
-    {
-      name: 'panels/wifi/panel',
-      exclude: ['main']
-    },
-    {
-      name: 'panels/wifi_auth/panel',
-      exclude: ['main']
-    },
-    {
-      name: 'panels/wifi_enter_certificate_nickname/panel',
-      exclude: ['main']
-    },
-    {
-      name: 'panels/wifi_join_hidden/panel',
-      exclude: ['main']
-    },
-    {
-      name: 'panels/wifi_manage_certificates/panel',
-      exclude: ['main']
-    },
-    {
-      name: 'panels/wifi_manage_networks/panel',
-      exclude: ['main']
-    },
-    {
-      name: 'panels/wifi_select_certificate_file/panel',
-      exclude: ['main']
-    },
-    {
-      name: 'panels/wifi_status/panel',
-      exclude: ['main']
-    },
-    {
-      name: 'panels/wifi_wps/panel',
-      exclude: ['main']
     }
   ]
 });
diff --git a/apps/settings/js/connectivity.js b/apps/settings/js/connectivity.js
index 50e8715..7ad132d 100644
--- a/apps/settings/js/connectivity.js
+++ b/apps/settings/js/connectivity.js
@@ -5,7 +5,7 @@

 /**
  * This library displays the connectivity status in the main panel without
- * requiring the full `carrier.js' + `bluetooth.js' libraries.
+ * requiring the full `wifi.js' + `carrier.js' + `bluetooth.js' libraries.
  */

 // TODO: handle hotspot status
@@ -19,15 +19,43 @@ var Connectivity = (function(window, document, undefined) {
   var SettingsCache = require('modules/settings_cache');

   // in desktop helper we fake these device interfaces if they don't exist.
+  var wifiManager = WifiHelper.getWifiManager();
   var bluetooth = getBluetooth();
   var mobileConnection = getMobileConnection();

   var initOrder = [
+    updateWifi,
     updateBluetooth
   ];

+  // XXX if wifiManager implements addEventListener function
+  // we can remove these listener lists.
+  var wifiEnabledListeners = [updateWifi];
+  var wifiDisabledListeners = [updateWifi];
+  var wifiStatusChangeListeners = [updateWifi];
   var settings = navigator.mozSettings;

+  //
+  // Now register callbacks to track the state of the wifi hardware
+  //
+  if (wifiManager) {
+    // Set wifi.enabled so that it mirrors the state of the hardware.
+    // wifi.enabled is not an ordinary user setting because the system
+    // turns it on and off when wifi goes up and down.
+    //
+    settings.createLock().set({'wifi.enabled': wifiManager.enabled});
+
+    wifiManager.onenabled = function() {
+      dispatchEvent(new CustomEvent('wifi-enabled'));
+      wifiEnabled();
+    };
+    wifiManager.ondisabled = function() {
+      dispatchEvent(new CustomEvent('wifi-disabled'));
+      wifiDisabled();
+    };
+    wifiManager.onstatuschange = wifiStatusChange;
+  }
+
   // Register callbacks to track the state of the bluetooth hardware
   if (bluetooth) {
     bluetooth.addEventListener('adapteradded', function() {
@@ -62,6 +90,91 @@ var Connectivity = (function(window, document, undefined) {
   }

   /**
+   * Wifi Manager
+   */
+  function updateWifi() {
+    if (!wifiManager) {
+      return;
+    }
+    if (!_initialized) {
+      init();
+      return; // init will call updateWifi()
+    }
+
+    var wifiDesc = document.getElementById('wifi-desc');
+
+    // If the MAC address is in the Settings database, it's already displayed in
+    // all `MAC address' fields; if not, it will be set as soon as the Wi-Fi is
+    // enabled (see `storeMacAddress').
+    if (!_macAddress && settings) {
+      var req = settings.createLock().get('deviceinfo.mac');
+      req.onsuccess = function macAddr_onsuccess() {
+        _macAddress = req.result['deviceinfo.mac'];
+      };
+    }
+
+    if (wifiManager.enabled) {
+      storeMacAddress();
+      // network.connection.status has one of the following values:
+      // connecting, associated, connected, connectingfailed, disconnected.
+      var networkProp = wifiManager.connection.network ?
+          {ssid: wifiManager.connection.network.ssid} : null;
+      localize(wifiDesc, 'fullStatus-' + wifiManager.connection.status,
+               networkProp);
+    } else {
+      localize(wifiDesc, 'disabled');
+    }
+  }
+
+  function storeMacAddress() {
+    if (!wifiManager) {
+      return;
+    }
+    // Store the MAC address in the Settings database.  Note: the wifiManager
+    // sets macAddress to the string `undefined' when it is not available.
+    if (settings && wifiManager.macAddress &&
+                    wifiManager.macAddress !== _macAddress &&
+                    wifiManager.macAddress !== 'undefined') {
+      _macAddress = wifiManager.macAddress;
+      settings.createLock().set({ 'deviceinfo.mac': _macAddress });
+      // update all related fields in the UI
+      var fields = document.querySelectorAll('[data-name="deviceinfo.mac"]');
+      for (var i = 0, l = fields.length; i < l; i++) {
+        fields[i].textContent = _macAddress;
+      }
+    }
+  }
+
+  // Keep the setting in sync with the hardware state.  We need to do this
+  // because b2g/dom/wifi/WifiWorker.js can turn the hardware on and off.
+  function syncWifiEnabled(enabled, callback) {
+    SettingsCache.getSettings(function(results) {
+      var wifiEnabled = results['wifi.enabled'];
+      if (wifiEnabled !== enabled) {
+        settings.createLock().set({'wifi.enabled': enabled});
+      }
+      callback();
+    });
+  }
+
+  function wifiEnabled() {
+    syncWifiEnabled(true, function() {
+      wifiEnabledListeners.forEach(function(listener) { listener(); });
+      storeMacAddress();
+    });
+  }
+
+  function wifiDisabled() {
+    syncWifiEnabled(false, function() {
+      wifiDisabledListeners.forEach(function(listener) { listener(); });
+    });
+  }
+
+  function wifiStatusChange(event) {
+    wifiStatusChangeListeners.forEach(function(listener) { listener(event); });
+  }
+
+  /**
    * Bluetooth Manager
    */

@@ -136,6 +249,10 @@ var Connectivity = (function(window, document, undefined) {

   return {
     init: init,
-    updateBluetooth: updateBluetooth
+    updateWifi: updateWifi,
+    updateBluetooth: updateBluetooth,
+    set wifiEnabled(listener) { wifiEnabledListeners.push(listener) },
+    set wifiDisabled(listener) { wifiDisabledListeners.push(listener); },
+    set wifiStatusChange(listener) { wifiStatusChangeListeners.push(listener); }
   };
 })(this, document);
diff --git a/apps/settings/js/findmydevice.js b/apps/settings/js/findmydevice.js
index dc5bad2..68369c3 100644
--- a/apps/settings/js/findmydevice.js
+++ b/apps/settings/js/findmydevice.js
@@ -1,16 +1,12 @@
 /* global SettingsListener */
-/* global SettingsHelper */
 /* global loadJSON */
-/* global wakeUpFindMyDevice */
-/* global IAC_API_WAKEUP_REASON_TRY_DISABLE */

 'use strict';

 var FindMyDevice = {
   // When the FxA login callback is called, we need to know if the
   // login process began with the user clicking our login button
-  // since in that case we also want to enable Find My Device if it's
-  // not already registered.
+  // since in that case we also want to enable Find My Device
   _interactiveLogin: false,
   _loginButton: null,

@@ -21,9 +17,6 @@ var FindMyDevice = {
     loadJSON('/resources/findmydevice.json', function(data) {
       self._audienceURL = data.audience_url;

-      SettingsListener.observe('findmydevice.logged-in', false,
-        self._togglePanel.bind(self));
-
       navigator.mozId.watch({
         wantIssuer: 'firefox-accounts',
         audience: self._audienceURL,
@@ -34,12 +27,9 @@ var FindMyDevice = {
           console.log('Find My Device: onready fired');
         },
         onerror: function fmd_fxa_onerror(err) {
-          console.error('Find My Device: onerror fired: ' + err);
-          self._interactiveLogin = false;
+          self._togglePanel(false);
           self._loginButton.removeAttribute('disabled');
-          if (JSON.parse(err).name !== 'OFFLINE') {
-            SettingsHelper('findmydevice.logged-in').set(false);
-          }
+          console.error('Find My Device: onerror fired: ' + err);
         }
       });
     });
@@ -50,11 +40,9 @@ var FindMyDevice = {

     SettingsListener.observe('findmydevice.enabled', false,
       this._setEnabled.bind(this));
-    SettingsListener.observe('findmydevice.can-disable', true,
-      this._setCanDisable.bind(this));

     var checkbox = document.querySelector('#findmydevice-enabled input');
-    checkbox.addEventListener('click', this._onCheckboxChanged.bind(this));
+    checkbox.addEventListener('change', this._onCheckboxChanged.bind(this));
   },

   _onLoginClick: function fmd_on_login_click(e) {
@@ -68,18 +56,13 @@ var FindMyDevice = {
       return window.alert(_('findmydevice-enable-network'));
     }
     this._interactiveLogin = true;
-    var self = this;
-    navigator.mozId.request({
-      oncancel: function fmd_fxa_oncancel() {
-        self._interactiveLogin = false;
-        console.log('Find My Device: oncancel fired');
-      }
-    });
+    navigator.mozId.request();
   },

   _setEnabled: function fmd_set_enabled(value) {
     var checkbox = document.querySelector('#findmydevice-enabled input');
     checkbox.checked = value;
+    checkbox.disabled = false;

     var status = document.getElementById('findmydevice-tracking');
     status.hidden = !value;
@@ -91,11 +74,6 @@ var FindMyDevice = {
       value ?  'findmydevice-active-tracking' : 'findmydevice-not-tracking');
   },

-  _setCanDisable: function fmd_set_can_disable(value) {
-    var checkbox = document.querySelector('#findmydevice-enabled input');
-    checkbox.disabled = !value;
-  },
-
   _togglePanel: function fmd_toggle_panel(loggedIn) {
     var signin = document.getElementById('findmydevice-signin');
     signin.hidden = loggedIn;
@@ -107,41 +85,28 @@ var FindMyDevice = {
   _onChangeLoginState: function fmd_on_change_login_state(loggedIn) {
     console.log('settings, logged in: ' + loggedIn);

+    this._togglePanel(loggedIn);
+
     if (this._interactiveLogin) {
-      SettingsHelper('findmydevice.registered').get(function(registered) {
-        if (!registered) {
-          SettingsHelper('findmydevice.enabled').set(true);
-        }
+      SettingsListener.getSettingsLock().set({
+        'findmydevice.enabled': loggedIn
       });
     }

     this._interactiveLogin = false;
   },

-  _onCheckboxChanged: function fmd_on_checkbox_changed(event) {
-    event.preventDefault();
-
-    var _ = navigator.mozL10n.get;
-    if (!window.navigator.onLine) {
-      setTimeout(function() {
-        // XXX(ggp) do this later so that the visual change in the
-        // checkbox is properly prevented.
-        window.alert(_('findmydevice-enable-network'));
-      });
-      return;
-    }
+  _onCheckboxChanged: function fmd_on_checkbox_changed() {
+      var checkbox = document.querySelector('#findmydevice-enabled input');

-    var checkbox = document.querySelector('#findmydevice-enabled input');
-    checkbox.disabled = true;
-
-    if (checkbox.checked === false) {
-      wakeUpFindMyDevice(IAC_API_WAKEUP_REASON_TRY_DISABLE);
-    } else {
-      SettingsHelper('findmydevice.enabled').set(true, function() {
+      SettingsListener.getSettingsLock().set({
+        'findmydevice.enabled': checkbox.checked
+      }).onerror = function() {
         checkbox.disabled = false;
-      });
-    }
-  },
+      };
+
+      checkbox.disabled = true;
+  }
 };

 navigator.mozL10n.once(FindMyDevice.init.bind(FindMyDevice));
diff --git a/apps/settings/js/main.js b/apps/settings/js/main.js
index 4b3388b..e34e113 100644
--- a/apps/settings/js/main.js
+++ b/apps/settings/js/main.js
@@ -15,7 +15,6 @@ require(['config/require'], function() {
     // used by all header building blocks
     require('shared/font_size_utils');

-    var SettingsUtils = require('modules/settings_utils');
     var SettingsService = require('modules/settings_service');
     var PageTransitions = require('modules/page_transitions');
     var LazyLoader = require('shared/lazy_loader');
@@ -55,7 +54,7 @@ require(['config/require'], function() {

     /**
      * In two column layout, the root panel should not be deactivated. We pass
-     * the id of the root panel to SettingsService so that it won't deactivate
+     * the id of the root panel to SettingsService so that it won't deacivate
      * the root panel when in two column.
      * XXX: Currently we don't separate the navigation logic of one column and
      *      two column layout, so that the root panel will not be deactivated
@@ -64,7 +63,6 @@ require(['config/require'], function() {
     SettingsService.init('root');

     var options = {
-      SettingsUtils: SettingsUtils,
       SettingsService: SettingsService,
       PageTransitions: PageTransitions,
       LazyLoader: LazyLoader,
diff --git a/apps/settings/js/messaging.js b/apps/settings/js/messaging.js
index ab8e0ac..da63cf9 100644
--- a/apps/settings/js/messaging.js
+++ b/apps/settings/js/messaging.js
@@ -1,5 +1,3 @@
-/* global IccHelper, SettingsListener */
-
 'use strict';

 /**
@@ -25,7 +23,6 @@ var Messaging = (function(window, document, undefined) {
     m_disableItems(false);
     m_initDeliveryReportSettings();
     m_initCellBroadcast();
-    m_initSMSC();
   }

   /**
@@ -94,25 +91,6 @@ var Messaging = (function(window, document, undefined) {
   }

   /**
-   * Retrieves the SMSC information
-   */
-   function m_initSMSC() {
-    // TODO: deal with dual SIM situations (see bug 1001285)
-    var request = navigator.mozMobileMessage.getSmscAddress();
-    var wrapper = document.getElementById('menuItem-smsc');
-    var holder = wrapper.querySelector('p');
-    request.onsuccess = function() {
-      // we only want the number, not the rest of details
-      // and, as it is a number, we don't need to use l10n
-      holder.textContent = this.result.split(',')[0].replace(/"/g, '');
-    };
-    request.onerror = function() {
-      navigator.l10n.localize(holder, 'unknownSMSC');
-      console.error('Unable to retrieve SMSC number');
-    };
-   }
-
-  /**
    * Disable the items listed in the panel in order to avoid user interaction.
    * This is useful in case the ICC card status is not equal to ready (e.g.
    * airplane mode).
diff --git a/apps/settings/js/modules/panel.js b/apps/settings/js/modules/panel.js
index ecc1431..242182a 100644
--- a/apps/settings/js/modules/panel.js
+++ b/apps/settings/js/modules/panel.js
@@ -54,7 +54,7 @@ define(function() {
         }
         _initialized = true;

-        return _onInit(panel, initOptions);
+        _onInit(panel, initOptions);
       },

       /**
@@ -80,9 +80,8 @@ define(function() {
        */
       show: function(panel, showOptions) {
         // Initialize at the first call to show if necessary.
-        return Promise.resolve(this.init(panel, showOptions)).then(function() {
-          return _onShow(panel, showOptions);
-        });
+        this.init(panel, showOptions);
+        _onShow(panel, showOptions);
       },

       /**
@@ -91,7 +90,7 @@ define(function() {
        * @alias module:Panel#hide
        */
       hide: function() {
-        return _onHide();
+        _onHide();
       },

       /**
@@ -103,10 +102,8 @@ define(function() {
        */
       beforeShow: function(panel, beforeShowOptions) {
         // Initialize at the first call to beforeShow.
-        return Promise.resolve(this.init(panel, beforeShowOptions)).then(
-          function() {
-            return _onBeforeShow(panel, beforeShowOptions);
-        });
+        this.init(panel, beforeShowOptions);
+        _onBeforeShow(panel, beforeShowOptions);
       },

       /**
@@ -117,7 +114,7 @@ define(function() {
        * @param {Object} beforeShowOptions
        */
       beforeHide: function() {
-        return _onBeforeHide();
+        _onBeforeHide();
       }
     };
   };
diff --git a/apps/settings/js/modules/panel_utils.js b/apps/settings/js/modules/panel_utils.js
index 953e6cd..65c5fa4 100644
--- a/apps/settings/js/modules/panel_utils.js
+++ b/apps/settings/js/modules/panel_utils.js
@@ -126,19 +126,8 @@ define(function(require) {
       });
       LazyLoader.load(scripts_src);

-      var _onclick = function() {
-        if (!this.dataset.href) {
-          this.dataset.href = this.href;
-          this.href = '#';
-        }
-        var href = this.dataset.href;
-        if (!href.startsWith('#')) { // external link
-          openLink(href);
-        } else if (!href.endsWith('Settings')) { // generic dialog
-          openDialog(href.substr(1));
-        } else { // Settings-specific dialog box
-          _openDialog(href.substr(1));
-        }
+      var _onclick = function(callback, value) {
+        callback(value);
         return false;
       };

@@ -148,7 +137,21 @@ define(function(require) {
       var i, count;

       for (i = 0, count = links.length; i < count; i++) {
-        links[i].onclick = _onclick;
+        var link = links[i];
+        if (!link.dataset.href) {
+          link.dataset.href = link.href;
+          link.href = '#';
+        }
+        if (!link.dataset.href.startsWith('#')) { // external link
+          link.onclick = _onclick.bind(this, openLink,
+                                       link.dataset.href);
+        } else if (!link.dataset.href.endsWith('Settings')) { // generic dialog
+          link.onclick = _onclick.bind(this, openDialog,
+                                       link.dataset.href.substr(1));
+        } else { // Settings-specific dialog box
+          link.onclick = _onclick.bind(this, _openDialog,
+                                       link.dataset.href.substr(1));
+        }
       }
     },

diff --git a/apps/settings/js/modules/settings_panel.js b/apps/settings/js/modules/settings_panel.js
index 8d7dca4..228e77b 100644
--- a/apps/settings/js/modules/settings_panel.js
+++ b/apps/settings/js/modules/settings_panel.js
@@ -79,7 +79,6 @@ define(function(require) {
       options.onShow = options.onShow || _emptyFunc;
       options.onHide = options.onHide || _emptyFunc;
       options.onBeforeShow = options.onBeforeShow || _emptyFunc;
-      options.onBeforeHide = options.onBeforeHide || _emptyFunc;

       return Panel({
         onInit: function(panel, initOptions) {
@@ -90,7 +89,7 @@ define(function(require) {
           _panel = panel;
           PanelUtils.activate(panel);

-          return options.onInit(panel, initOptions);
+          options.onInit(panel, initOptions);
         },
         onUninit: function() {
           _removeListeners(_panel);
@@ -99,23 +98,21 @@ define(function(require) {
           options.onUninit();
         },
         onShow: function(panel, showOptions) {
-          return options.onShow(panel, showOptions);
+          options.onShow(panel, showOptions);
         },
         onHide: function() {
           // Remove listeners.
           _removeListeners(_panel);

-          return options.onHide();
+          options.onHide();
         },
         onBeforeShow: function(panel, beforeShowOptions) {
           // Preset the panel every time when it is presented.
           PanelUtils.preset(panel);
           _addListeners(panel);
-          return options.onBeforeShow(panel, beforeShowOptions);
+          options.onBeforeShow(panel, beforeShowOptions);
         },
-        onBeforeHide: function() {
-          return options.onBeforeHide();
-        }
+        onBeforeHide: options.onBeforeHide
       });
     };
     return SettingsPanel;
diff --git a/apps/settings/js/modules/settings_service.js b/apps/settings/js/modules/settings_service.js
index 904f1ff..90c3903 100644
--- a/apps/settings/js/modules/settings_service.js
+++ b/apps/settings/js/modules/settings_service.js
@@ -28,21 +28,11 @@ define(function(require) {
     };

     var _transit = function ss_transit(oldPanel, newPanel, callback) {
-      var promise = new Promise(function(resolve) {
-        var wrappedCallback = function() {
-          if (typeof callback === 'function') {
-            callback();
-          }
-          resolve();
-        };
-
-        if (_isTabletAndLandscape()) {
-          PageTransitions.twoColumn(oldPanel, newPanel, wrappedCallback);
-        } else {
-          PageTransitions.oneColumn(oldPanel, newPanel, wrappedCallback);
-        }
-      });
-      return promise;
+      if (_isTabletAndLandscape()) {
+        PageTransitions.twoColumn(oldPanel, newPanel, callback);
+      } else {
+        PageTransitions.oneColumn(oldPanel, newPanel, callback);
+      }
     };

     var _loadPanel = function ss_loadPanel(panelId, callback) {
@@ -121,58 +111,36 @@ define(function(require) {
             // show function.
             options = options || {};

-            // 0. start the chain
-            Promise.resolve()
-            // 1. beforeHide previous panel
-            .then(function() {
-              // We don't deactivate the root panel.
-              if (currentPanel && currentPanelId !== _rootPanelId) {
-                return currentPanel.beforeHide();
-              }
-            })
-            // 2. beforeShow next panel
-            .then(function() {
-              return panel.beforeShow(newPanelElement, options);
-            })
-            // 3. add a timeout for smoother transition.
-            .then(function() {
-              var promise = new Promise(function(resolve) {
-                setTimeout(function timeout() {
-                  resolve();
-                });
+            panel.beforeShow(newPanelElement, options);
+            // We don't deactivate the root panel.
+            if (currentPanel && currentPanelId !== _rootPanelId) {
+              currentPanel.beforeHide();
+            }
+
+            // Add a timeout for smoother transition.
+            setTimeout(function doTransition() {
+              _transit(currentPanelElement, newPanelElement,
+                function transitionCompleted() {
+                  panel.show(newPanelElement, options);
+                  // We don't deactivate the root panel.
+                  if (currentPanel && currentPanelId !== _rootPanelId) {
+                    currentPanel.hide();
+                  }
+
+                  // Update the current navigation object
+                  _currentNavigation = {
+                    panelId: panelId,
+                    panelElement: newPanelElement,
+                    panel: panel,
+                    options: options
+                  };
+
+                  // XXX we need to remove this line in the future
+                  // to make sure we won't manipulate Settings
+                  // directly
+                  Settings._currentPanel = '#' + panelId;
+                  callback();
               });
-              return promise;
-            })
-            // 4. do the transition
-            .then(function() {
-              return _transit(currentPanelElement, newPanelElement);
-            })
-            // 5. hide previous panel
-            .then(function() {
-              // We don't deactivate the root panel.
-              if (currentPanel && currentPanelId !== _rootPanelId) {
-                return currentPanel.hide();
-              }
-            })
-            // 6. show next panel
-            .then(function() {
-              return panel.show(newPanelElement, options);
-            })
-            // 7. keep information
-            .then(function() {
-              // Update the current navigation object
-              _currentNavigation = {
-                panelId: panelId,
-                panelElement: newPanelElement,
-                panel: panel,
-                options: options
-              };
-
-              // XXX we need to remove this line in the future
-              // to make sure we won't manipulate Settings
-              // directly
-              Settings._currentPanel = '#' + panelId;
-              callback();
             });
           });
         });
diff --git a/apps/settings/js/modules/settings_utils.js b/apps/settings/js/modules/settings_utils.js
deleted file mode 100644
index f5de46e..0000000
--- a/apps/settings/js/modules/settings_utils.js
+++ /dev/null
@@ -1,64 +0,0 @@
-/*
- * SettingsUtils is a singleton that we will provide all needed methods
- * when doing panel related actions.
- *
- * @module SettingsUtils
- */
-define(function(require) {
-  'use strict';
-
-  // TODO
-  // We need to move utils.js to SettingsUtils step by step
-  var SettingsService = require('modules/settings_service');
-  var SettingsUtils = {
-    /*
-     * This method can help you make target panel as a dialog and
-     * you can pass needed options into it.
-     *
-     * @memberOf SettingsUtils
-     * @param {String} dialogID - ID of target panel
-     * @param {Object} userOptions - passed options
-     */
-    openDialog: function(dialogID, userOptions) {
-      if ('#' + dialogID == Settings.currentPanel) {
-        return;
-      }
-
-      var origin = Settings.currentPanel.match(/#(.*)/)[1];
-      var options = userOptions || {};
-      var onSubmit = options.onSubmit;
-      var onReset = options.onReset;
-
-      // Don't bypass these two functions inside panel
-      delete options.onSubmit;
-      delete options.onReset;
-
-      // Load dialog contents and show it.
-      SettingsService.navigate(dialogID, options);
-
-      var dialog = document.getElementById(dialogID);
-      var submit = dialog.querySelector('[type=submit]');
-      if (submit) {
-        submit.onclick = function onsubmit() {
-          // hide dialog box and we would call a callback after navigation
-          SettingsService.navigate(origin, {}, function() {
-            onSubmit.call(dialog);
-          });
-        };
-      }
-
-      var reset = dialog.querySelector('[type=reset]');
-      if (reset) {
-        reset.onclick = function onreset() {
-          if (typeof onReset === 'function') {
-            onReset.call(dialog);
-          }
-          // hide dialog box
-          SettingsService.navigate(origin);
-        };
-      }
-    }
-  };
-
-  return SettingsUtils;
-});
diff --git a/apps/settings/js/modules/wifi_context.js b/apps/settings/js/modules/wifi_context.js
deleted file mode 100644
index 94dc7aa..0000000
--- a/apps/settings/js/modules/wifi_context.js
+++ /dev/null
@@ -1,421 +0,0 @@
-/**
- * WifiContext is a singleton that you can easily use it to fetch
- * some shared data across different panels
- *
- * @module WifiContext
- */
-define(function(require) {
-  'use strict';
-
-  // modules / helpers
-  var SettingsCache = require('modules/settings_cache');
-  var WifiHelper = require('shared/wifi_helper');
-  var wifiManager = WifiHelper.getWifiManager();
-  var settings = Settings.mozSettings;
-  var _ = navigator.mozL10n.get;
-
-  // observed objects
-  var _currentNetwork =
-    wifiManager && wifiManager.connection && wifiManager.connection.network;
-
-  var _wpsOptions = {
-    selectedAp: '',
-    selectedMethod: '',
-    pin: ''
-  };
-
-  var _authOptions = {
-    password: '',
-    identity: '',
-    eap: '',
-    authPhase2: '',
-    certificate: ''
-  };
-
-  var WifiContext = {
-    /**
-     * These listeners would be called when wifi is enabled
-     *
-     * @memberOf WifiContext
-     * @type {Array}
-     */
-    _wifiEnabledListeners: [],
-
-    /**
-     * These listeners would be called when wifi is disabled
-     *
-     * @memberOf WifiContext
-     * @type {Array}
-     */
-    _wifiDisabledListeners: [],
-
-    /**
-     * These listeners would be called when wifi is changed
-     *
-     * @memberOf WifiContext
-     * @type {Array}
-     */
-    _wifiStatusChangeListeners: [],
-
-    /**
-     * These listeners would be called when
-     *   1. localized
-     *   2. wifi is enabled
-     *   3. wifi is changed
-     *   4. wifi is disabled
-     *
-     * @memberOf WifiContext
-     * @type {Array}
-     */
-    _wifiStatusTextChangeListeners: [],
-
-    /**
-     * Desc about customized wifi status
-     *
-     * @memberOf WifiContext
-     * @type {String}
-     */
-    _wifiStatusText: '',
-
-    /**
-     * Mac address
-     *
-     * @memberOf WifiContext
-     * @type {String}
-     */
-    _macAddress: '',
-
-    /**
-     * Init is used to initialize some basic stuffs
-     *
-     * @memberOf WifiContext
-     */
-    _init: function() {
-      if (!wifiManager) {
-        return;
-      }
-
-      // Set wifi.enabled so that it mirrors the state of the hardware.
-      // wifi.enabled is not an ordinary user setting because the system
-      // turns it on and off when wifi goes up and down.
-      settings.createLock().set({'wifi.enabled': wifiManager.enabled});
-
-      this._bindEvents();
-
-      // we would call _updateWifi() when init
-      this._updateWifi();
-    },
-
-    /**
-     * We will bind some default listeners here
-     *
-     * @memberOf WifiContext
-     */
-    _bindEvents: function() {
-      var self = this;
-
-      var _updateWifi = this._updateWifi.bind(this);
-      var _updateWifiStatusText = this._updateWifiStatusText.bind(this);
-      var _updateNetworkStatus = this._updateNetworkStatus.bind(this);
-
-      // make sure we would update anything when wifi got changed
-      this._wifiEnabledListeners.push(_updateWifi, _updateNetworkStatus);
-      this._wifiDisabledListeners.push(_updateWifi);
-      this._wifiStatusChangeListeners.push(_updateWifi, _updateNetworkStatus);
-
-      // make sure when localizations got changed, we would also translate
-      // wifiStatus at the same time.
-      window.addEventListener('localized', function() {
-        _updateWifiStatusText();
-        self._wifiStatusTextChange();
-      });
-
-      // Now register callbacks to track the state of the wifi hardware
-      if (wifiManager) {
-        wifiManager.onenabled = function() {
-          self._wifiEnabled();
-          self._wifiStatusTextChange();
-        };
-
-        wifiManager.ondisabled = function() {
-          self._wifiDisabled();
-          self._wifiStatusTextChange();
-        };
-
-        wifiManager.onstatuschange = function(event) {
-          self._wifiStatusChange.call(self, event);
-          self._wifiStatusTextChange();
-        };
-      }
-    },
-
-    /**
-     * We will update mac address, wifiStatus when wifi is updated
-     *
-     * @memberOf WifiContext
-     */
-    _updateWifi: function() {
-      var self = this;
-
-      if (!wifiManager) {
-        return;
-      }
-
-      // If the MAC address is in the Settings database, it's already
-      // displayed in all `MAC address' fields; if not, it will be set as soon
-      // as the Wi-Fi is enabled (see `storeMacAddress').
-      if (!this._macAddress && settings) {
-        SettingsCache.getSettings(function(results) {
-          self._macAddress = results['deviceinfo.mac'];
-        });
-      }
-
-      if (wifiManager.enabled) {
-        this._storeMacAddress();
-      }
-
-      // reflect latest value of wifiStatus
-      this._updateWifiStatusText();
-    },
-
-    /**
-     * We will update mac address, wifiStatus when wifi is updated
-     *
-     * @memberOf WifiContext
-     */
-    _updateWifiStatusText: function() {
-      if (wifiManager.enabled) {
-        var networkProp = wifiManager.connection.network ?
-          { ssid: wifiManager.connection.network.ssid } : null;
-        this._wifiStatusText =
-          _('fullStatus-' + wifiManager.connection.status, networkProp);
-      } else {
-        this._wifiStatusText = _('disabled');
-      }
-    },
-
-    /**
-     * We need to handle network status when wifi is enabled / wifistatus
-     * is changed.
-     *
-     * _currentNetwork: user activated current network
-     * wifiManager.connection.network: system activated current network
-     *
-     * Main difference between |_currentNetwork| and |wifiManager.connection.
-     * network| is that we can't tell if network is known while connecting by
-     * |wifiManager.connectiohn.network.known| because it will always be true.
-     *
-     * Instead, we use |_currentNetwork| to indicate if current connecting
-     * network is new or known network.
-     *
-     * When system connect to network by user's tap on UI, |_currentNetwork|
-     * will point to same network as |wifiManager.connection.network|.
-     *
-     * On the other hand, if system connect to network automatically under
-     * conditions like wifi enable, move into AP's range, or reconnect to
-     * other network after delete current connected network, |_currentNetwork|
-     * will be null, while |wifiManager.connection.network| contains
-     * information about current network.
-     *
-     * @memberOf WifiContext
-     */
-    _updateNetworkStatus: function() {
-      var networkStatus = wifiManager.connection.status;
-      if (networkStatus === 'connectingfailed' && _currentNetwork) {
-        if (_currentNetwork.known === false) {
-          // Connection fail on user-activated unknown network, should be wrong
-          // password, delete network and force a new authentication dialog.
-          delete(_currentNetwork.password);
-          this.forgetNetwork(_currentNetwork);
-        }
-      } else if (networkStatus === 'disconnected') {
-        _currentNetwork = null;
-      }
-    },
-
-    /**
-     * When wifi is enabled, we will make sure the mozSettings is sync
-     * with hardward status and call all registered listeners.
-     *
-     * @memberOf WifiContext
-     */
-    _wifiEnabled: function() {
-      var self = this;
-      this._syncWifiEnabled(true, function() {
-        self._wifiEnabledListeners.forEach(function(listener) {
-          listener();
-        });
-      });
-    },
-
-    /**
-     * When wifi is disabled, we will make sure the mozSettings is sync
-     * with hardward status and call all registered listeners.
-     *
-     * @memberOf WifiContext
-     */
-    _wifiDisabled: function() {
-      var self = this;
-      this._syncWifiEnabled(false, function() {
-        self._wifiDisabledListeners.forEach(function(listener) {
-          listener();
-        });
-      });
-    },
-
-    /**
-     * When wifi's status is changed, we will call all registered listeners.
-     *
-     * @memberOf WifiContext
-     */
-    _wifiStatusChange: function(event) {
-      this._wifiStatusChangeListeners.forEach(function(listener) {
-        listener(event);
-      });
-    },
-
-    /**
-     * When text of wifiStatus is changed, we will call all registered
-     * listeners.
-     *
-     * @memberOf WifiContext
-     */
-    _wifiStatusTextChange: function() {
-      this._wifiStatusTextChangeListeners.forEach(function(listener) {
-        listener();
-      });
-    },
-
-    /**
-     * Keep mac address in mozSettings
-     *
-     * @memberOf WifiContext
-     */
-    _storeMacAddress: function() {
-      if (!wifiManager) {
-        return;
-      }
-      // Store the MAC address in the Settings database.  Note: the wifiManager
-      // sets macAddress to the string `undefined' when it is not available.
-      if (settings && wifiManager.macAddress &&
-        wifiManager.macAddress !== this._macAddress &&
-          wifiManager.macAddress !== 'undefined') {
-            this._macAddress = wifiManager.macAddress;
-            settings.createLock().set({ 'deviceinfo.mac': this._macAddress });
-      }
-    },
-
-    /**
-     * Keep the setting in sync with the hardware state.  We need to do this
-     * because b2g/dom/wifi/WifiWorker.js can turn the hardware on and off.
-     *
-     * @memberOf WifiContext
-     * @param {Boolean} enabled
-     * @param {Function} callback
-     */
-    _syncWifiEnabled: function(enabled, callback) {
-      SettingsCache.getSettings(function(results) {
-        var wifiEnabled = results['wifi.enabled'];
-        if (wifiEnabled !== enabled) {
-          settings.createLock().set({'wifi.enabled': enabled});
-        }
-        callback();
-      });
-    },
-    /**
-     * This is an internal function that can help us find out the matched
-     * callback from catched listeners and remove it
-     *
-     * @memberOf WifiContext
-     * @param {Array} listeners
-     * @param {Function} callback
-     */
-    _removeEventListener: function(listeners, callback) {
-      var index = listeners.indexOf(callback);
-      if (index >= 0) {
-        listeners.splice(index, 1);
-      }
-    },
-    /**
-     * This is a wrapper of WifiManger.associate to make sure we can handle
-     * our internal status at the same time.
-     *
-     * @memberOf WifiContext
-     * @param {Object} network
-     * @param {Function} callback
-     */
-    associateNetwork: function(network, cb) {
-      cb = cb || function() {};
-      var request = wifiManager.associate(network);
-      var done = function() {
-        if (!request.error) {
-          _currentNetwork = network;
-        }
-        cb(request.error);
-      };
-      request.onsuccess = done;
-      request.onerror = done;
-    },
-    /**
-     * This is a wrapper of WifiManger.forget to make sure we can handle
-     * our internal status at the same time.
-     *
-     * @memberOf WifiContext
-     * @param {Object} network
-     * @param {Function} callback
-     */
-    forgetNetwork: function(network, cb) {
-      cb = cb || function() {};
-      var request = wifiManager.forget(network);
-      var done = function() {
-        if (!request.error) {
-          _currentNetwork = null;
-        }
-        cb(request.error);
-      };
-      request.onsuccess = done;
-      request.onerror = done;
-    }
-  };
-
-  WifiContext._init();
-
-  return {
-    addEventListener: function(eventName, callback) {
-      if (eventName === 'wifiEnabled') {
-        WifiContext._wifiEnabledListeners.push(callback);
-      } else if (eventName === 'wifiDisabled') {
-        WifiContext._wifiDisabledListeners.push(callback);
-      } else if (eventName === 'wifiStatusChange') {
-        WifiContext._wifiStatusChangeListeners.push(callback);
-      } else if (eventName === 'wifiStatusTextChange') {
-        WifiContext._wifiStatusTextChangeListeners.push(callback);
-      }
-    },
-    removeEventListener: function(eventName, callback) {
-      if (eventName === 'wifiEnabled') {
-        WifiContext._removeEventListener(
-          WifiContext._wifiEnabledListeners, callback);
-      } else if (eventName === 'wifiDisabled') {
-        WifiContext._removeEventListener(
-          WifiContext._wifiDisabledListeners, callback);
-      } else if (eventName === 'wifiStatusChange') {
-        WifiContext._removeEventListener(
-          WifiContext._wifiStatusChangeListeners, callback);
-      } else if (eventName === 'wifiStatusTextChange') {
-        WifiContext._removeEventListener(
-          WifiContext._wifiStatusTextChangeListeners, callback);
-      }
-    },
-    get wifiStatusText() {
-      return WifiContext._wifiStatusText;
-    },
-    get currentNetwork() {
-      return _currentNetwork;
-    },
-    forgetNetwork: WifiContext.forgetNetwork,
-    associateNetwork: WifiContext.associateNetwork,
-    wpsOptions: _wpsOptions,
-    authOptions: _authOptions
-  };
-});
diff --git a/apps/settings/js/modules/wifi_utils.js b/apps/settings/js/modules/wifi_utils.js
deleted file mode 100644
index d5ad535..0000000
--- a/apps/settings/js/modules/wifi_utils.js
+++ /dev/null
@@ -1,225 +0,0 @@
-/**
- * WifiUtils is a utils-box that keeps wifi-operations needed utils.
- *
- * @module WifiUtils
- */
-define(function(require) {
-  'use strict';
-
-  var WifiHelper = require('shared/wifi_helper');
-  var wifiManager = WifiHelper.getWifiManager();
-
-  var WifiUtils = {
-    /**
-     * Create an explanatory list item
-     *
-     * @memberOf WifiUtils
-     * @param {String} message
-     * @returns {HTMLLIElement}
-     */
-    newExplanationItem: function(message) {
-      var li = document.createElement('li');
-      li.className = 'explanation';
-      li.textContent = navigator.mozL10n.get(message);
-      return li;
-    },
-
-    /**
-     * Create a network list item
-     *
-     * @memberOf WifiUtils
-     * @param {Object} network
-     * @param {Function} callback
-     * @returns {HTMLLIElement}
-     */
-    newListItem: function(network, callback) {
-      var localize = navigator.mozL10n.localize;
-      /**
-       * A Wi-Fi list item has the following HTML structure:
-       *   <li>
-       *     <aside class="pack-end wifi-icon level-[?] [secured]"></aside>
-       *     <small> Network Security </small>
-       *     <a> Network SSID </a>
-       *   </li>
-       */
-
-      // icon
-      var icon = document.createElement('aside');
-      icon.classList.add('pack-end');
-      icon.classList.add('wifi-icon');
-      var level = Math.min(Math.floor(network.relSignalStrength / 20), 4);
-      icon.classList.add('level-' + level);
-
-      // ssid
-      var ssid = document.createElement('a');
-      ssid.textContent = network.ssid;
-
-      // supported authentication methods
-      var small = document.createElement('small');
-      var keys = WifiHelper.getSecurity(network);
-      if (keys && keys.length) {
-        localize(small, 'securedBy', { capabilities: keys.join(', ') });
-        icon.classList.add('secured');
-      } else {
-        localize(small, 'securityOpen');
-      }
-
-      // create list item
-      var li = document.createElement('li');
-      li.appendChild(icon);
-      li.appendChild(small);
-      li.appendChild(ssid);
-
-      // Show connection status
-      icon.classList.add('wifi-signal');
-      if (WifiHelper.isConnected(network)) {
-        localize(small, 'shortStatus-connected');
-        icon.classList.add('connected');
-        li.classList.add('active');
-      }
-
-      // bind connection callback
-      li.onclick = function() {
-        callback(network);
-      };
-      return li;
-    },
-
-    /**
-     * Change dialog layout based on dialogId and security
-     *
-     * @memberOf WifiUtils
-     * @param {HTMLElement} panel
-     * @param {String} security
-     */
-    changeDisplay: function(panel, security) {
-      var eap = panel.querySelector('li.eap select');
-      var identity = panel.querySelector('input[name=identity]');
-      var password = panel.querySelector('input[name=password]');
-      var authPhase2 = panel.querySelector('li.auth-phase2 select');
-      var certificate = panel.querySelector('li.server-certificate select');
-      var description =
-        panel.querySelector('li.server-certificate-description');
-
-      if (security === 'WEP' || security === 'WPA-PSK') {
-        identity.parentNode.style.display = 'none';
-        password.parentNode.style.display = 'block';
-        authPhase2.parentNode.parentNode.style.display = 'none';
-        certificate.parentNode.parentNode.style.display = 'none';
-        description.style.display = 'none';
-      } else if (security === 'WPA-EAP') {
-        if (eap) {
-          switch (eap.value) {
-            case 'SIM':
-              identity.parentNode.style.display = 'none';
-              password.parentNode.style.display = 'none';
-              authPhase2.parentNode.parentNode.style.display = 'none';
-              certificate.parentNode.parentNode.style.display = 'none';
-              description.style.display = 'none';
-              break;
-            case 'PEAP':
-            case 'TLS':
-            case 'TTLS':
-              identity.parentNode.style.display = 'block';
-              password.parentNode.style.display = 'block';
-              authPhase2.parentNode.parentNode.style.display = 'block';
-              certificate.parentNode.parentNode.style.display = 'block';
-              description.style.display = 'block';
-              break;
-            default:
-              break;
-          }
-        }
-      } else {
-        identity.parentNode.style.display = 'none';
-        password.parentNode.style.display = 'none';
-      }
-    },
-
-    /**
-     * This is used to help us do some initialization works if the panel
-     * is auth related.
-     *
-     * @memberOf WifiUtils
-     * @param {String} panel
-     * @param {Object} network
-     */
-    initializeAuthFields: function(panel, network) {
-      var key = WifiHelper.getKeyManagement(network);
-      var identity = panel.querySelector('input[name=identity]');
-      var password = panel.querySelector('input[name=password]');
-      var showPassword = panel.querySelector('input[name=show-pwd]');
-      var eap = panel.querySelector('li.eap select');
-      var certificate = panel.querySelector('li.server-certificate select');
-      var submitButton = panel.querySelector('button[type=submit]');
-
-      // load needed certificates first
-      this.loadImportedCertificateOptions(certificate);
-
-      identity.value = network.identity || '';
-
-      password.type = 'password';
-      password.value = network.password || '';
-
-      showPassword.checked = false;
-      showPassword.onchange = function() {
-        password.type = this.checked ? 'text' : 'password';
-      };
-
-      var checkPassword = function() {
-        submitButton.disabled =
-          !WifiHelper.isValidInput(key, password.value, identity.value,
-            eap.value);
-      };
-
-      eap.onchange = function() {
-        checkPassword();
-        WifiUtils.changeDisplay(panel, key);
-      };
-
-      password.oninput = checkPassword;
-      identity.oninput = checkPassword;
-      checkPassword();
-    },
-
-    /**
-     * This is an inner function that used to inject certificates options
-     * into select element.
-     *
-     * @memberOf WifiUtils
-     * @param {HTMLSelectElement} select
-     */
-    loadImportedCertificateOptions: function(select) {
-      if (!wifiManager.getImportedCerts) {
-        return;
-      }
-
-      var certRequest = wifiManager.getImportedCerts();
-
-      certRequest.onsuccess = function() {
-        var i;
-        var certList = certRequest.result;
-        // save the imported server certificates
-        var certificateList = certList.ServerCert;
-
-        // reset the option to be <option value="none">--</option> only
-        for (i = 0; i < select.options.length - 1; i++) {
-          select.remove(1);
-        }
-
-        for (i = 0; i < certificateList.length; i++) {
-          var option = document.createElement('option');
-          option.text = certificateList[i];
-          option.value = certificateList[i];
-          select.add(option, null);
-        }
-      };
-
-      certRequest.onerror = function() {
-        console.warn('getImportedCerts failed');
-      };
-    }
-  };
-
-  return WifiUtils;
-});
diff --git a/apps/settings/js/panels/keyboard/core.js b/apps/settings/js/panels/keyboard/core.js
new file mode 100644
index 0000000..2f6c29a
--- /dev/null
+++ b/apps/settings/js/panels/keyboard/core.js
@@ -0,0 +1,87 @@
+/**
+ * The module initializes a ListView displaying the installed keyboards.
+ * Implementation details please refer to {@link KeyboardCore}.
+ *
+ * @module keyboard/core
+ */
+define(function(require) {
+  'use strict';
+
+  var ListView = require('modules/mvvm/list_view');
+
+  /**
+   * @alias module:keyboard/core
+   * @class KeyboardCore
+   * @requires module:modules/mvvm/list_view
+   * @param {KeyboardContext} context
+                              The kyboard context providing installed keyboards.
+   * @param {Function} template
+                       The template function used to render an installed
+                       keyboard.
+   * @returns {KeyboardCore}
+   */
+  function KeyboardCore(context, template) {
+    this._enabled = false;
+    this._listView = null;
+    this._keyboardContext = context;
+    this._keyboardTemplate = template;
+  }
+
+  KeyboardCore.prototype = {
+    /**
+     * The value indicates whether the module is responding. If it is false, the
+     * UI stops reflecting the updates from the keyboard context.
+     *
+     * @access public
+     * @memberOf KeyboardCore.prototype
+     * @type {Boolean}
+     */
+    get enabled() {
+      return this._enabled;
+    },
+
+    set enabled(value) {
+      this._enabled = value;
+      if (this._listView) {
+        this._listView.enabled = this._enabled;
+      }
+    },
+
+    /**
+     * @access private
+     * @memberOf KeyboardCore.prototype
+     * @param {HTMLElement} listViewRoot
+     * @param {ObservableArray} keyboards
+     * @param {Function} keyboardTemplate
+     */
+    _initAllKeyboardListView:
+      function k_initListView(listViewRoot, keyboards, keyboardTemplate) {
+        listViewRoot.hidden = (keyboards.length === 0);
+        this._listView = ListView(listViewRoot, keyboards, keyboardTemplate);
+    },
+
+    /**
+     * @access public
+     * @memberOf KeyboardCore.prototype
+     * @param {Array} elements
+     *                Elements needed by this module.
+     * @param {HTMLElement} elements.listViewRoot
+     *                      The root element for the list view displaying the
+     *                      installed keyboards.
+     */
+    init: function k_init(elements) {
+      var that = this;
+      this._keyboardContext.init(function() {
+        that._keyboardContext.keyboards(function(keyboards) {
+          that._initAllKeyboardListView(
+            elements.listViewRoot, keyboards, that._keyboardTemplate);
+          that.enabled = true;
+        });
+      });
+    }
+  };
+
+  return function ctor_keyboardCore(context, template) {
+    return new KeyboardCore(context, template);
+  };
+});
diff --git a/apps/settings/js/panels/keyboard/enabled_layouts.js b/apps/settings/js/panels/keyboard/enabled_layouts.js
deleted file mode 100644
index 0830bf4..0000000
--- a/apps/settings/js/panels/keyboard/enabled_layouts.js
+++ /dev/null
@@ -1,85 +0,0 @@
-/**
- * The module initializes a ListView displaying all enabled layouts.
- * Implementation details please refer to {@link KeyboardEnabledLayoutsCore}.
- *
- * @module keyboard/enabled_layouts
- */
-define(function(require) {
-  'use strict';
-
-  var ListView = require('modules/mvvm/list_view');
-
-  /**
-   * @alias module:keyboard/enabled_layouts
-   * @class KeyboardEnabledLayoutsCore
-   * @requires module:modules/mvvm/list_view
-   * @param {KeyboardContext} context
-                              The kyboard context providing enabled layouts.
-   * @param {Function} template
-                       The template function used to render a layout.
-   * @returns {KeyboardEnabledLayoutsCore}
-   */
-  function KeyboardEnabledLayoutsCore(context, template) {
-    this._enabled = false;
-    this._listView = null;
-    this._keyboardContext = context;
-    this._layoutTemplate = template;
-  }
-
-  KeyboardEnabledLayoutsCore.prototype = {
-    /**
-     * The value indicates whether the module is responding. If it is false, the
-     * UI stops reflecting the updates from the keyboard context.
-     *
-     * @access public
-     * @memberOf KeyboardEnabledLayoutsCore.prototype
-     * @type {Boolean}
-     */
-    get enabled() {
-      return this._enabled;
-    },
-
-    set enabled(value) {
-      this._enabled = value;
-      if (this._listView) {
-        this._listView.enabled = this._enabled;
-      }
-    },
-
-    /**
-     * @access private
-     * @memberOf KeyboardAddLayoutsCore.prototype
-     * @param {HTMLElement} listViewRoot
-     * @param {ObservableArray} layouts
-     * @param {Function} layoutTemplate
-     */
-    _initEnabledLayoutListView:
-      function kepl_initListView(listViewRoot, layouts, layoutTemplate) {
-      this._listView = ListView(listViewRoot, layouts, layoutTemplate);
-    },
-
-    /**
-     * @access public
-     * @memberOf KeyboardEnabledLayoutsCore.prototype
-     * @param {Array} elements
-     *                Elements needed by this module.
-     * @param {HTMLElement} elements.listViewRoot
-     *                      The root element for the list view displaying the
-     *                      installed keyboards.
-     */
-    init: function kepl_onInit(elements) {
-      var that = this;
-      this._keyboardContext.init(function() {
-        that._keyboardContext.enabledLayouts(function(layouts) {
-          that._initEnabledLayoutListView(
-            elements.listViewRoot, layouts, that._layoutTemplate);
-          that.enabled = true;
-        });
-      });
-    }
-  };
-
-  return function ctor_keplCore(context, template) {
-    return new KeyboardEnabledLayoutsCore(context, template);
-  };
-});
diff --git a/apps/settings/js/panels/keyboard/installed_keyboards.js b/apps/settings/js/panels/keyboard/installed_keyboards.js
deleted file mode 100644
index 90008c6..0000000
--- a/apps/settings/js/panels/keyboard/installed_keyboards.js
+++ /dev/null
@@ -1,87 +0,0 @@
-/**
- * The module initializes a ListView displaying the installed keyboards.
- * Implementation details please refer to {@link KeyboardCore}.
- *
- * @module keyboard/installed_keyboards
- */
-define(function(require) {
-  'use strict';
-
-  var ListView = require('modules/mvvm/list_view');
-
-  /**
-   * @alias module:keyboard/installed_keyboards
-   * @class KeyboardCore
-   * @requires module:modules/mvvm/list_view
-   * @param {KeyboardContext} context
-                              The kyboard context providing installed keyboards.
-   * @param {Function} template
-                       The template function used to render an installed
-                       keyboard.
-   * @returns {KeyboardCore}
-   */
-  function KeyboardCore(context, template) {
-    this._enabled = false;
-    this._listView = null;
-    this._keyboardContext = context;
-    this._keyboardTemplate = template;
-  }
-
-  KeyboardCore.prototype = {
-    /**
-     * The value indicates whether the module is responding. If it is false, the
-     * UI stops reflecting the updates from the keyboard context.
-     *
-     * @access public
-     * @memberOf KeyboardCore.prototype
-     * @type {Boolean}
-     */
-    get enabled() {
-      return this._enabled;
-    },
-
-    set enabled(value) {
-      this._enabled = value;
-      if (this._listView) {
-        this._listView.enabled = this._enabled;
-      }
-    },
-
-    /**
-     * @access private
-     * @memberOf KeyboardCore.prototype
-     * @param {HTMLElement} listViewRoot
-     * @param {ObservableArray} keyboards
-     * @param {Function} keyboardTemplate
-     */
-    _initAllKeyboardListView:
-      function k_initListView(listViewRoot, keyboards, keyboardTemplate) {
-        listViewRoot.hidden = (keyboards.length === 0);
-        this._listView = ListView(listViewRoot, keyboards, keyboardTemplate);
-    },
-
-    /**
-     * @access public
-     * @memberOf KeyboardCore.prototype
-     * @param {Array} elements
-     *                Elements needed by this module.
-     * @param {HTMLElement} elements.listViewRoot
-     *                      The root element for the list view displaying the
-     *                      installed keyboards.
-     */
-    init: function k_init(elements) {
-      var that = this;
-      this._keyboardContext.init(function() {
-        that._keyboardContext.keyboards(function(keyboards) {
-          that._initAllKeyboardListView(
-            elements.listViewRoot, keyboards, that._keyboardTemplate);
-          that.enabled = true;
-        });
-      });
-    }
-  };
-
-  return function ctor_keyboardCore(context, template) {
-    return new KeyboardCore(context, template);
-  };
-});
diff --git a/apps/settings/js/panels/keyboard/layout_template.js b/apps/settings/js/panels/keyboard/layout_template.js
deleted file mode 100644
index 45c67e2..0000000
--- a/apps/settings/js/panels/keyboard/layout_template.js
+++ /dev/null
@@ -1,33 +0,0 @@
-/**
- * A template function for generating an UI element for a layout object.
- */
-define(function(require) {
-  'use strict';
-
-  var layoutTemplate = function layoutTemplate(layout, recycled) {
-    var container = null;
-    var span;
-    var small;
-    if (recycled) {
-      container = recycled;
-      span = container.querySelector('span');
-      small = container.querySelector('small');
-    } else {
-      container = document.createElement('li');
-      span = document.createElement('span');
-      small = document.createElement('small');
-      container.appendChild(small);
-      container.appendChild(span);
-    }
-    var refreshName = function() {
-      span.textContent = layout.name;
-      small.textContent = layout.appName;
-    };
-    refreshName();
-    layout.observe('appName', refreshName);
-    layout.observe('name', refreshName);
-    return container;
-  };
-
-  return layoutTemplate;
-});
diff --git a/apps/settings/js/panels/keyboard/panel.js b/apps/settings/js/panels/keyboard/panel.js
index f7f08cf..2df0fcf 100644
--- a/apps/settings/js/panels/keyboard/panel.js
+++ b/apps/settings/js/panels/keyboard/panel.js
@@ -4,31 +4,22 @@ define(function(require) {
   var SettingsPanel = require('modules/settings_panel');
   var KeyboardContext = require('modules/keyboard_context');
   var keyboardTemplate = require('panels/keyboard/keyboard_template');
-  var layoutTemplate = require('panels/keyboard/layout_template');
-  var InstalledKeyboards = require('panels/keyboard/installed_keyboards');
-  var EnabledLayouts = require('panels/keyboard/enabled_layouts');
+  var Core = require('panels/keyboard/core');

   return function ctor_keyboardPanel() {
-    var installedKeyboards =
-      InstalledKeyboards(KeyboardContext, keyboardTemplate);
-    var enabledLayouts = EnabledLayouts(KeyboardContext, layoutTemplate);
+    var core = Core(KeyboardContext, keyboardTemplate);

     return SettingsPanel({
       onInit: function kp_onInit(rootElement) {
-        installedKeyboards.init({
+        core.init({
           listViewRoot: rootElement.querySelector('.allKeyboardList')
         });
-        enabledLayouts.init({
-          listViewRoot: rootElement.querySelector('.enabledKeyboardList')
-        });
       },
       onBeforeShow: function kp_onBeforeShow() {
-        installedKeyboards.enabled = true;
-        enabledLayouts.enabled = true;
+        core.enabled = true;
       },
       onHide: function kp_onHide() {
-        installedKeyboards.enabled = false;
-        enabledLayouts.enabled = false;
+        core.enabled = false;
       }
     });
   };
diff --git a/apps/settings/js/panels/keyboard_enabled_layouts/core.js b/apps/settings/js/panels/keyboard_enabled_layouts/core.js
new file mode 100644
index 0000000..3785bbb
--- /dev/null
+++ b/apps/settings/js/panels/keyboard_enabled_layouts/core.js
@@ -0,0 +1,85 @@
+/**
+ * The module initializes a ListView displaying all enabled layouts.
+ * Implementation details please refer to {@link KeyboardEnabledLayoutsCore}.
+ *
+ * @module keyboard_enabled_layouts/core
+ */
+define(function(require) {
+  'use strict';
+
+  var ListView = require('modules/mvvm/list_view');
+
+  /**
+   * @alias module:keyboard_enabled_layouts/core
+   * @class KeyboardEnabledLayoutsCore
+   * @requires module:modules/mvvm/list_view
+   * @param {KeyboardContext} context
+                              The kyboard context providing enabled layouts.
+   * @param {Function} template
+                       The template function used to render a layout.
+   * @returns {KeyboardEnabledLayoutsCore}
+   */
+  function KeyboardEnabledLayoutsCore(context, template) {
+    this._enabled = false;
+    this._listView = null;
+    this._keyboardContext = context;
+    this._layoutTemplate = template;
+  }
+
+  KeyboardEnabledLayoutsCore.prototype = {
+    /**
+     * The value indicates whether the module is responding. If it is false, the
+     * UI stops reflecting the updates from the keyboard context.
+     *
+     * @access public
+     * @memberOf KeyboardEnabledLayoutsCore.prototype
+     * @type {Boolean}
+     */
+    get enabled() {
+      return this._enabled;
+    },
+
+    set enabled(value) {
+      this._enabled = value;
+      if (this._listView) {
+        this._listView.enabled = this._enabled;
+      }
+    },
+
+    /**
+     * @access private
+     * @memberOf KeyboardAddLayoutsCore.prototype
+     * @param {HTMLElement} listViewRoot
+     * @param {ObservableArray} layouts
+     * @param {Function} layoutTemplate
+     */
+    _initEnabledLayoutListView:
+      function kepl_initListView(listViewRoot, layouts, layoutTemplate) {
+      this._listView = ListView(listViewRoot, layouts, layoutTemplate);
+    },
+
+    /**
+     * @access public
+     * @memberOf KeyboardEnabledLayoutsCore.prototype
+     * @param {Array} elements
+     *                Elements needed by this module.
+     * @param {HTMLElement} elements.listViewRoot
+     *                      The root element for the list view displaying the
+     *                      installed keyboards.
+     */
+    init: function kepl_onInit(elements) {
+      var that = this;
+      this._keyboardContext.init(function() {
+        that._keyboardContext.enabledLayouts(function(layouts) {
+          that._initEnabledLayoutListView(
+            elements.listViewRoot, layouts, that._layoutTemplate);
+          that.enabled = true;
+        });
+      });
+    }
+  };
+
+  return function ctor_keplCore(context, template) {
+    return new KeyboardEnabledLayoutsCore(context, template);
+  };
+});
diff --git a/apps/settings/js/panels/keyboard_enabled_layouts/layout_template.js b/apps/settings/js/panels/keyboard_enabled_layouts/layout_template.js
new file mode 100644
index 0000000..aff56e4
--- /dev/null
+++ b/apps/settings/js/panels/keyboard_enabled_layouts/layout_template.js
@@ -0,0 +1,28 @@
+/**
+ * A template function for generating an UI element for a layout object.
+ */
+define(function(require) {
+  'use strict';
+
+  var layoutTemplate = function layoutTemplate(layout, recycled) {
+    var container = null;
+    var span;
+    if (recycled) {
+      container = recycled;
+      span = container.querySelector('span');
+    } else {
+      container = document.createElement('li');
+      span = document.createElement('span');
+      container.appendChild(span);
+    }
+    var refreshName = function() {
+      span.textContent = layout.appName + ': ' + layout.name;
+    };
+    refreshName();
+    layout.observe('appName', refreshName);
+    layout.observe('name', refreshName);
+    return container;
+  };
+
+  return layoutTemplate;
+});
diff --git a/apps/settings/js/panels/keyboard_enabled_layouts/panel.js b/apps/settings/js/panels/keyboard_enabled_layouts/panel.js
new file mode 100644
index 0000000..c0ba7fe
--- /dev/null
+++ b/apps/settings/js/panels/keyboard_enabled_layouts/panel.js
@@ -0,0 +1,31 @@
+/**
+ * In the panels we initialize a ListView with the data provided by
+ * KeyboardContext. Templates for generating UI elements are also defined
+ * here.
+ */
+define(function(require) {
+  'use strict';
+
+  var SettingsPanel = require('modules/settings_panel');
+  var KeyboardContext = require('modules/keyboard_context');
+  var layoutTemplate =
+    require('panels/keyboard_enabled_layouts/layout_template');
+  var Core = require('panels/keyboard_enabled_layouts/core');
+
+  return function ctor_enabledLayoutsPanel() {
+    var core = Core(KeyboardContext, layoutTemplate);
+    return SettingsPanel({
+      onInit: function kelp_onInit(rootElement) {
+        core.init({
+          listViewRoot: rootElement.querySelector('.enabledKeyboardList')
+        });
+      },
+      onBeforeShow: function kelp_onBeforeShow() {
+        core.enabled = true;
+      },
+      onHide: function kelp_onHide() {
+        core.enabled = false;
+      }
+    });
+  };
+});
diff --git a/apps/settings/js/panels/root/panel.js b/apps/settings/js/panels/root/panel.js
index d5b68c4..42a896a 100644
--- a/apps/settings/js/panels/root/panel.js
+++ b/apps/settings/js/panels/root/panel.js
@@ -9,7 +9,6 @@ define(function(require) {
   var FindMyDeviceItem = require('panels/root/findmydevice_item');
   var StorageUSBItem = require('panels/root/storage_usb_item');
   var StorageAppItem = require('panels/root/storage_app_item');
-  var WifiItem = require('panels/root/wifi_item');

   return function ctor_root_panel() {
     var root = Root();
@@ -19,7 +18,6 @@ define(function(require) {
     var findMyDeviceItem;
     var storageUsbItem;
     var storageAppItem;
-    var wifiItem;

     return SettingsPanel({
       onInit: function rp_onInit(panel) {
@@ -40,7 +38,6 @@ define(function(require) {
         });
         storageAppItem = StorageAppItem(
           panel.querySelector('.application-storage-desc'));
-        wifiItem = WifiItem(panel.querySelector('#wifi-desc'));
       },
       onBeforeShow: function rp_onBeforeShow() {
         languageItem.enabled = true;
@@ -48,7 +45,6 @@ define(function(require) {
         findMyDeviceItem.enabled = true;
         storageUsbItem.enabled = true;
         storageAppItem.enabled = true;
-        wifiItem.enabled = true;
       },
       onShow: function rp_onShow() {
         // XXX: Set data-ready to true to indicate that the first panel is
@@ -63,7 +59,6 @@ define(function(require) {
         findMyDeviceItem.enabled = false;
         storageUsbItem.enabled = false;
         storageAppItem.enabled = false;
-        wifiItem.enabled = false;
       }
     });
   };
diff --git a/apps/settings/js/panels/root/wifi_item.js b/apps/settings/js/panels/root/wifi_item.js
deleted file mode 100644
index 72b6226..0000000
--- a/apps/settings/js/panels/root/wifi_item.js
+++ /dev/null
@@ -1,41 +0,0 @@
-define(function(require) {
-  'use strict';
-
-  var WifiContext = require('modules/wifi_context');
-  var wifiManager = navigator.mozWifiManager;
-
-  function WifiItem(element) {
-    this._enabled = false;
-    this._boundUpdateWifiDesc = this._updateWifiDesc.bind(this, element);
-  }
-
-  WifiItem.prototype = {
-    set enabled(value) {
-      if (value === this._enabled || !wifiManager) {
-        return;
-      }
-
-      this._enabled = value;
-      if (this._enabled) {
-        this._boundUpdateWifiDesc();
-        WifiContext.addEventListener('wifiStatusTextChange',
-          this._boundUpdateWifiDesc);
-      } else {
-        WifiContext.removeEventListener('wifiStatusTextChange',
-          this._boundUpdateWifiDesc);
-      }
-    },
-
-    get enabled() {
-      return this._enabled;
-    },
-
-    _updateWifiDesc: function root_updateWifiDesc(element) {
-      element.textContent = WifiContext.wifiStatusText;
-    }
-  };
-
-  return function ctor_wifiItem(element) {
-    return new WifiItem(element);
-  };
-});
diff --git a/apps/settings/js/panels/wifi/panel.js b/apps/settings/js/panels/wifi/panel.js
deleted file mode 100644
index 1d754a7..0000000
--- a/apps/settings/js/panels/wifi/panel.js
+++ /dev/null
@@ -1,217 +0,0 @@
-define(function(require) {
-  'use strict';
-
-  var SettingsUtils = require('modules/settings_utils');
-  var SettingsPanel = require('modules/settings_panel');
-  var SettingsListener = require('shared/settings_listener');
-  var WifiWps = require('panels/wifi/wifi_wps');
-  var WifiContext = require('modules/wifi_context');
-  var WifiHelper = require('shared/wifi_helper');
-  var WifiNetworkList = require('panels/wifi/wifi_network_list');
-  var wifiManager = WifiHelper.getWifiManager();
-
-  var _ = navigator.mozL10n.get;
-  var localize = navigator.mozL10n.localize;
-
-  return function ctor_wifi() {
-    var elements;
-
-    return SettingsPanel({
-      onInit: function(panel) {
-        this._settings = navigator.mozSettings;
-        this._wifiSectionVisible = true;
-        this._scanPending = false;
-
-        elements = {
-          panel: panel,
-          wifi: panel,
-          wpsColumn: panel.querySelector('#wps-column'),
-          wpsInfoBlock: panel.querySelector('#wps-column small'),
-          wpsPbcLabelBlock: panel.querySelector('#wps-column a'),
-          manageNetworksBtn: panel.querySelector('#manageNetworks'),
-          wifiCheckbox: panel.querySelector('#wifi-enabled input'),
-          manageCertificatesBtn: panel.querySelector('#manageCertificates'),
-          wifiAvailableNetworks: panel.querySelector('#wifi-availableNetworks'),
-        };
-
-        elements.infoItem = elements.wifiAvailableNetworks.querySelector(
-          'li[data-state="on"]');
-        elements.scanItem = elements.wifiAvailableNetworks.querySelector(
-          'li[data-state="ready"]');
-        elements.wifiItem = elements.wifiAvailableNetworks.querySelector(
-          'li:not([data-state])');
-
-        elements.networklist = {
-          infoItem: elements.infoItem,
-          scanItem: elements.scanItem,
-          wifiAvailableNetworks: elements.wifiAvailableNetworks
-        };
-
-        elements.wps = {
-          wpsColumn: elements.wpsColumn,
-          wpsInfoBlock: elements.wpsInfoBlock,
-          wpsPbcLabelBlock: elements.wpsPbcLabelBlock
-        };
-
-        this._networkList = WifiNetworkList(elements.networklist);
-        this._wps = WifiWps();
-        this._wps.addEventListener('statusreset', function() {
-          localize(elements.wps.wpsPbcLabelBlock, 'wpsMessage');
-          setTimeout(function resetWpsInfoBlock() {
-            localize(elements.wps.wpsPbcLabelBlock, 'wpsDescription2');
-          }, 1500);
-        });
-
-        SettingsListener.observe('wifi.enabled', true, function(enabled) {
-          this._setMozSettingsEnabled(enabled);
-          if (enabled) {
-            this._updateNetworkState();
-            this._networkList.scan();
-          }
-        }.bind(this));
-
-        // element related events
-        elements.scanItem.addEventListener('click',
-          this._onScanItemClick.bind(this));
-
-        elements.wifiCheckbox.addEventListener('click',
-          this._onWifiCheckboxClick.bind(this));
-
-        elements.wpsColumn.addEventListener('click',
-          this._onWpsColumnClick.bind(this));
-
-        elements.manageCertificatesBtn.addEventListener('click', function() {
-          SettingsUtils.openDialog('wifi-manageCertificates');
-        });
-
-        elements.manageNetworksBtn.addEventListener('click', function() {
-          SettingsUtils.openDialog('wifi-manageNetworks');
-        });
-
-        // wifiContext related events
-        WifiContext.addEventListener('wifiEnabled', function() {
-          elements.wifiCheckbox.disabled = false;
-          this._updateNetworkState();
-          this._networkList.scan();
-        }.bind(this));
-
-        WifiContext.addEventListener('wifiDisabled', function() {
-          elements.wifiCheckbox.disabled = false;
-          // Re-enable UI toggle
-          this._networkList.clear(false);
-          this._networkList.autoscan = false;
-        }.bind(this));
-
-        WifiContext.addEventListener('wifiStatusChange', function(event) {
-          var scanStates =
-            new Set(['connected', 'connectingfailed', 'disconnected']);
-
-          this._updateNetworkState();
-          if (scanStates.has(event.status)) {
-            if (this._wifiSectionVisible) {
-              this._networkList.scan();
-            } else {
-              this._scanPending = true;
-            }
-          }
-        }.bind(this));
-      },
-      onBeforeShow: function() {
-        this._wifiSectionVisible = true;
-        this._updateVisibilityStatus();
-      },
-      onBeforeHide: function() {
-        this._wifiSectionVisible = false;
-      },
-      _onWpsColumnClick: function() {
-        var self = this;
-        if (this._wps.inProgress) {
-          this._wps.cancel({
-            onSuccess: function() {
-              localize(elements.wpsInfoBlock, 'fullStatus-wps-canceled');
-            },
-            onError: function(error) {
-              elements.wpsInfoBlock.textContent =
-                _('wpsCancelFailedMessage') + ' [' + error.name + ']';
-            }
-          });
-        } else {
-          SettingsUtils.openDialog('wifi-wps', {
-            onSubmit: function() {
-              self._wps.connect({
-                onSuccess: function() {
-                  localize(elements.wps.wpsPbcLabelBlock,
-                    'wpsCancelMessage');
-                  localize(elements.wps.wpsInfoBlock,
-                    'fullStatus-wps-inprogress');
-                },
-                onError: function(error) {
-                  elements.wps.wpsInfoBlock.textContent =
-                    _('fullStatus-wps-failed') + ' [' + error.name + ']';
-                }
-              });
-            },
-            wpsAvailableNetworks: self._networkList.getWpsAvailableNetworks()
-          });
-        }
-      },
-      _onWifiCheckboxClick: function() {
-        // `this` is Wifi Object
-        var checkbox = elements.wifiCheckbox;
-        this._settings.createLock().set({
-          'wifi.enabled': checkbox.checked
-        }).onerror = function() {
-          // Fail to write mozSettings, return toggle control to the user.
-          checkbox.disabled = false;
-        };
-        checkbox.disabled = true;
-      },
-      _onScanItemClick: function() {
-        this._networkList.clear(true);
-        this._networkList.scan();
-      },
-      _updateVisibilityStatus: function() {
-        if (this._scanPending) {
-          this._networkList.scan();
-          this._scanPending = false;
-        }
-      },
-      _setMozSettingsEnabled: function(enabled) {
-        elements.wifiCheckbox.checked = enabled;
-        if (enabled) {
-          /**
-           * wifiManager may not be ready (enabled) at this moment.
-           * To be responsive, show 'initializing' status and 'search...' first.
-           * A 'scan' would be called when wifiManager is enabled.
-           */
-          this._networkList.clear(true);
-          elements.wpsColumn.hidden = false;
-        } else {
-          if (this._wps.inProgress) {
-            elements.wpsInfoBlock.textContent = WifiContext.wifiStatusText;
-          }
-          this._networkList.clear(false);
-          this._networkList.autoscan = false;
-          elements.wpsColumn.hidden = true;
-        }
-      },
-      _updateNetworkState: function() {
-        // update network state, called only when wifi enabled.
-        var networkStatus = wifiManager.connection.status;
-
-        if (this._wps.inProgress) {
-          if (networkStatus !== 'disconnected') {
-            elements.wpsInfoBlock.textContent = WifiContext.wifiStatusText;
-          }
-          if (networkStatus === 'connected' ||
-            networkStatus === 'wps-timedout' ||
-            networkStatus === 'wps-failed' ||
-            networkStatus === 'wps-overlapped') {
-              this._wps.inProgress = false;
-              this._wps.statusReset();
-          }
-        }
-      }
-    });
-  };
-});
diff --git a/apps/settings/js/panels/wifi/wifi_network_list.js b/apps/settings/js/panels/wifi/wifi_network_list.js
deleted file mode 100644
index c5a73db..0000000
--- a/apps/settings/js/panels/wifi/wifi_network_list.js
+++ /dev/null
@@ -1,258 +0,0 @@
-/* global PerformanceTestingHelper */
-define(function(require) {
-  'use strict';
-
-  var SettingsUtils = require('modules/settings_utils');
-  var WifiUtils = require('modules/wifi_utils');
-  var WifiHelper = require('shared/wifi_helper');
-  var WifiContext = require('modules/wifi_context');
-  var wifiManager = WifiHelper.getWifiManager();
-  var _ = navigator.mozL10n.get;
-
-  var WifiNetworkList = function(elements) {
-    var list = elements.wifiAvailableNetworks;
-
-    var wifiNetworkList = {
-      _scanRate: 5000, // 5s after last scan results
-      _scanning: false,
-      _autoscan: false,
-      _index: [], // index of all scanned networks
-      _networks: {},
-      _list: elements.wifiAvailableNetworks,
-      clear: function(addScanningItem) {
-        // clear the network list
-        this._index = [];
-        this._networks = {};
-
-        // remove all items except the text expl.
-        // and the "search again" button
-        var wifiItems = list.querySelectorAll('li:not([data-state])');
-        var len = wifiItems.length;
-        for (var i = len - 1; i >= 0; i--) {
-          list.removeChild(wifiItems[i]);
-        }
-
-        list.dataset.state = addScanningItem ? 'on' : 'off';
-      },
-      display: function() {
-        var network =
-          WifiContext.currentNetwork || wifiManager.connection.network;
-        var networkStatus = wifiManager.connection.status;
-
-        // display a message on the network item matching the ssid
-        if (!network) {
-          return;
-        }
-
-        var key = this._getNetworkKey(network);
-        var listItem = this._index[key];
-        var active = list.querySelector('.active');
-
-        if (active && active != listItem) {
-          active.classList.remove('active');
-          active.querySelector('small').textContent =
-            _('shortStatus-disconnected');
-          active.querySelector('aside').classList.remove('connecting');
-          active.querySelector('aside').classList.remove('connected');
-        }
-        if (listItem) {
-          listItem.classList.add('active');
-          listItem.querySelector('small').textContent =
-            _('shortStatus-' + networkStatus);
-          if (networkStatus === 'connecting') {
-            listItem.querySelector('aside').classList.add('connecting');
-          }
-          if (networkStatus === 'connected') {
-            listItem.querySelector('aside').classList.remove('connecting');
-          }
-        }
-      },
-      scan: function() {
-        PerformanceTestingHelper.dispatch('settings-panel-wifi-visible');
-
-        // scan wifi networks and display them in the list
-        var self = this;
-        if (this._scanning) {
-          return;
-        }
-
-        // stop auto-scanning if wifi disabled or the app is hidden
-        if (!wifiManager.enabled || document.hidden) {
-          this._scanning = false;
-          return;
-        }
-
-        this._scanning = true;
-        var req = WifiHelper.getAvailableAndKnownNetworks();
-
-        req.onsuccess = function onScanSuccess() {
-          self.clear(false);
-          var allNetworks = req.result;
-          var network;
-
-          for (var i = 0; i < allNetworks.length; ++i) {
-            network = allNetworks[i];
-            var key = self._getNetworkKey(network);
-            // keep connected network first, or select the highest strength
-            if (!self._networks[key] || network.connected) {
-              self._networks[key] = network;
-            } else {
-              if (!self._networks[key].connected &&
-                network.relSignalStrength >
-                  self._networks[key].relSignalStrength) {
-                    self._networks[key] = network;
-              }
-            }
-          }
-
-          var networkKeys = Object.getOwnPropertyNames(self._networks);
-
-          // display network list
-          if (networkKeys.length) {
-            // sort networks by signal strength
-            networkKeys.sort(function(a, b) {
-              return self._networks[b].relSignalStrength -
-                self._networks[a].relSignalStrength;
-            });
-
-            // add detected networks
-            for (var j = 0; j < networkKeys.length; j++) {
-              network = self._networks[networkKeys[j]];
-              var listItem = WifiUtils.newListItem(network,
-                self._toggleNetwork.bind(self));
-              // put connected network on top of list
-              if (WifiHelper.isConnected(network)) {
-                list.insertBefore(listItem,
-                  elements.infoItem.nextSibling);
-              } else {
-                list.insertBefore(listItem, elements.scanItem);
-              }
-              // add composited key to index
-              self._index[networkKeys[j]] = listItem;
-            }
-          } else {
-            // display a "no networks found" message if necessary
-            list.insertBefore(
-              WifiUtils.newExplanationItem('noNetworksFound'),
-                elements.scanItem);
-          }
-
-          // display the "Search Again" button
-          list.dataset.state = 'ready';
-
-          PerformanceTestingHelper.dispatch('settings-panel-wifi-ready');
-
-          // auto-rescan if requested
-          if (self._autoscan) {
-            window.setTimeout(self.scan.bind(self), self._scanRate);
-          }
-
-          self._scanning = false;
-        };
-
-        req.onerror = function onScanError(error) {
-          // always try again.
-          self._scanning = false;
-
-          PerformanceTestingHelper.dispatch('settings-panel-wifi-ready');
-
-          window.setTimeout(self.scan.bind(self), self._scanRate);
-        };
-      },
-      getWpsAvailableNetworks: function() {
-        // get WPS available networks
-        var ssids = Object.getOwnPropertyNames(this._networks);
-        var wpsAvailableNetworks = [];
-        for (var i = 0; i < ssids.length; i++) {
-          var network = this._networks[ssids[i]];
-          if (WifiHelper.isWpsAvailable(network)) {
-            wpsAvailableNetworks.push(network);
-          }
-        }
-        return wpsAvailableNetworks;
-      },
-      set autoscan(value) {
-        this._autoscan = value;
-      },
-      get autoscan() {
-        return this._autoscan;
-      },
-      get scanning() {
-        return this._scanning;
-      },
-      // use ssid + security as a composited key
-      _getNetworkKey: function(network) {
-        var key = network.ssid + '+' +
-          WifiHelper.getSecurity(network).join('+');
-        return key;
-      },
-      _toggleNetwork: function(network) {
-        var self = this;
-
-        var keys = WifiHelper.getSecurity(network);
-        var security = (keys && keys.length) ? keys.join(', ') : '';
-        var sl = Math.min(Math.floor(network.relSignalStrength / 20), 4);
-
-        if (WifiHelper.isConnected(network)) {
-          // online: show status + offer to disconnect
-          SettingsUtils.openDialog('wifi-status', {
-            sl: sl,
-            network: network,
-            security: security,
-            onSubmit: function(network) {
-              // disconnect first, then rescan
-              WifiContext.forgetNetwork(network, function() {
-                self.scan();
-              });
-            }.bind({}, network),
-          });
-        } else if (network.password && (network.password == '*')) {
-          // offline, known network (hence the '*' password value):
-          // no further authentication required.
-          WifiHelper.setPassword(network);
-          WifiContext.associateNetwork(network);
-        } else {
-          // offline, unknown network: propose to connect
-          var key = WifiHelper.getKeyManagement(network);
-          switch (key) {
-            case 'WEP':
-            case 'WPA-PSK':
-            case 'WPA-EAP':
-              SettingsUtils.openDialog('wifi-auth', {
-                sl: sl,
-                security: security,
-                network: network,
-                onSubmit: function(network) {
-                  var authOptions = WifiContext.authOptions;
-                  WifiHelper.setPassword(
-                    network,
-                    authOptions.password,
-                    authOptions.identity,
-                    authOptions.eap,
-                    authOptions.authPhase2,
-                    authOptions.certificate
-                  );
-                  WifiContext.associateNetwork(network);
-                }.bind({}, network)
-              });
-              break;
-            default:
-              WifiContext.associateNetwork(network);
-              break;
-          }
-        }
-      }
-    };
-
-    // networkStatus has one of the following values:
-    // connecting, associated, connected, connectingfailed, disconnected.
-    WifiContext.addEventListener('wifiEnabled',
-      wifiNetworkList.display.bind(wifiNetworkList));
-    WifiContext.addEventListener('wifiStatusChange',
-      wifiNetworkList.display.bind(wifiNetworkList));
-
-    return wifiNetworkList;
-  };
-
-  return WifiNetworkList;
-});
diff --git a/apps/settings/js/panels/wifi/wifi_wps.js b/apps/settings/js/panels/wifi/wifi_wps.js
deleted file mode 100644
index 0cfcf71..0000000
--- a/apps/settings/js/panels/wifi/wifi_wps.js
+++ /dev/null
@@ -1,143 +0,0 @@
-/**
- * WifiWps is a module that can help you manipulate wps related stuffs easily.
- *
- * @module WifiWps
- */
-define(function(require) {
-  'use strict';
-
-  var WifiContext = require('modules/wifi_context');
-  var WifiHelper = require('shared/wifi_helper');
-  var wifiManager = WifiHelper.getWifiManager();
-  var _ = navigator.mozL10n.get;
-
-  var WifiWps = function() {
-    var wifiWps = {
-      /**
-       * A flag to make sure whether we are manipulating wps.
-       *
-       * @type {Boolean}
-       * @default false
-       */
-      inProgress: false,
-      /**
-       * An array used to keep registered listeners for statusReset event.
-       *
-       * @type {Array}
-       * @default []
-       */
-      _statusResetEventListeners: [],
-      /**
-       * A method to trigger all registered handlers
-       *
-       * @type {Function}
-       */
-      statusReset: function() {
-        this._statusResetEventListeners.forEach(function(handler) {
-          handler();
-        });
-      },
-      /**
-       * Put necessary information about wps (ssid, method, pin) to connect
-       * to specific wps.
-       *
-       * @param {Object} options
-       */
-      connect: function(options) {
-        var self = this;
-        var req;
-
-        var onSuccess = options.onSuccess || function() {};
-        var onError = options.onError || function() {};
-        var bssid = WifiContext.wpsOptions.selectedAp;
-        var method = WifiContext.wpsOptions.selectedMethod;
-        var pin = WifiContext.wpsOptions.pin;
-
-        if (method === 'pbc') {
-          req = wifiManager.wps({
-            method: 'pbc'
-          });
-        } else if (method === 'myPin') {
-          req = wifiManager.wps({
-            method: 'pin',
-            bssid: bssid
-          });
-        } else {
-          req = wifiManager.wps({
-            method: 'pin',
-            bssid: bssid,
-            pin: pin
-          });
-        }
-
-        req.onsuccess = function() {
-          if (method === 'myPin') {
-            alert(_('wpsPinInput', { pin: req.result }));
-          }
-          self.inProgress = true;
-          onSuccess();
-        };
-
-        req.onerror = function() {
-          onError(req.error);
-        };
-      },
-      /**
-       * Cancel current wps operation and will call your onSuccess / onError
-       * callback when operation is done.
-       *
-       * @memberOf WifiWps
-       * @param {Object} options
-       */
-      cancel: function(options) {
-        var self = this;
-        var onError = options.onError || function() {};
-        var onSuccess = options.onSuccess || function() {};
-
-        var req = wifiManager.wps({
-          method: 'cancel'
-        });
-
-        req.onsuccess = function() {
-          self.inProgress = false;
-          self.statusReset();
-          onSuccess();
-        };
-
-        req.onerror = function() {
-          onError(req.error);
-        };
-      },
-      /**
-       * You can add your listeners when `statusreset` event is triggered.
-       *
-       * @memberOf WifiWps
-       * @param {String} eventName
-       * @param {Function} callback
-       */
-      addEventListener: function(eventName, callback) {
-        if (eventName === 'statusreset') {
-          this._statusResetEventListeners.push(callback);
-        }
-      },
-      /**
-       * Remove catched listener about `statusreset` event.
-       *
-       * @memberOf WifiWps
-       * @param {String} eventName
-       * @param {Function} callback
-       */
-      removeEventListener: function(eventName, callback) {
-        if (eventName === 'statusreset') {
-          var index = this._statusResetEventListeners.indexOf(callback);
-          if (index >= 0) {
-            this._statusResetEventListeners.splice(index, 1);
-          }
-        }
-      }
-    };
-    return wifiWps;
-  };
-
-  return WifiWps;
-});
diff --git a/apps/settings/js/panels/wifi_auth/panel.js b/apps/settings/js/panels/wifi_auth/panel.js
deleted file mode 100644
index 444f9f0..0000000
--- a/apps/settings/js/panels/wifi_auth/panel.js
+++ /dev/null
@@ -1,49 +0,0 @@
-define(function(require) {
-  'use strict';
-
-  var SettingsPanel = require('modules/settings_panel');
-  var WifiUtils = require('modules/wifi_utils');
-  var WifiContext = require('modules/wifi_context');
-  var _ = navigator.mozL10n.get;
-
-  return function ctor_wifiAuth() {
-    var elements = {};
-
-    return SettingsPanel({
-      onInit: function(panel, options) {
-        elements.ssid = panel.querySelector('[data-ssid]');
-        elements.signal = panel.querySelector('[data-signal]');
-        elements.security = panel.querySelector('[data-security]');
-        elements.identity = panel.querySelector('input[name=identity]');
-        elements.password = panel.querySelector('input[name=password]');
-        elements.showPassword = panel.querySelector('input[name=show-pwd]');
-        elements.eap = panel.querySelector('li.eap select');
-        elements.authPhase2 = panel.querySelector('li.auth-phase2 select');
-        elements.certificate =
-          panel.querySelector('li.server-certificate select');
-      },
-      onBeforeShow: function(panel, options) {
-        var network = options.network;
-        WifiUtils.initializeAuthFields(panel, network);
-        WifiUtils.changeDisplay(panel, options.security);
-
-        panel.dataset.security = options.security;
-        elements.ssid.textContent = network.ssid;
-        elements.signal.textContent = _('signalLevel' + options.sl);
-        elements.security.textContent = options.security || _('securityNone');
-      },
-      onBeforeHide: function() {
-        WifiContext.authOptions.password = elements.password.value;
-        WifiContext.authOptions.identity = elements.identity.value;
-        WifiContext.authOptions.eap = elements.eap.value;
-        WifiContext.authOptions.authPhase2 = elements.authPhase2.value;
-        WifiContext.authOptions.certificate = elements.certificate.value;
-      },
-      onHide: function() {
-        elements.identity.value = '';
-        elements.password.value = '';
-        elements.showPassword.checked = false;
-      }
-    });
-  };
-});
diff --git a/apps/settings/js/panels/wifi_enter_certificate_nickname/panel.js b/apps/settings/js/panels/wifi_enter_certificate_nickname/panel.js
deleted file mode 100644
index 3c4e751..0000000
--- a/apps/settings/js/panels/wifi_enter_certificate_nickname/panel.js
+++ /dev/null
@@ -1,20 +0,0 @@
-define(function(require) {
-  'use strict';
-
-  var SettingsPanel = require('modules/settings_panel');
-
-  return function ctor_wifiEnterCertificateNickname() {
-    var elements = {};
-
-    return SettingsPanel({
-      onInit: function(panel) {
-        elements.panel = panel;
-        elements.nicknameInput =
-          panel.querySelector('#certificate-file-nickname');
-      },
-      onBeforeShow: function(panel, options) {
-        elements.nicknameInput.value = options.certificateName;
-      }
-    });
-  };
-});
diff --git a/apps/settings/js/panels/wifi_join_hidden/panel.js b/apps/settings/js/panels/wifi_join_hidden/panel.js
deleted file mode 100644
index 42bdf85..0000000
--- a/apps/settings/js/panels/wifi_join_hidden/panel.js
+++ /dev/null
@@ -1,75 +0,0 @@
-define(function(require) {
-  'use strict';
-
-  var SettingsPanel = require('modules/settings_panel');
-  var WifiHelper = require('shared/wifi_helper');
-  var WifiUtils = require('modules/wifi_utils');
-
-  return function ctor_joinHiddenWifi() {
-    var elements = {};
-    var network;
-    var isHomeKeyPressed = false;
-
-    return SettingsPanel({
-      onInit: function(panel) {
-        elements.panel = panel;
-        elements.ssid = panel.querySelector('input[name="ssid"]');
-        elements.eap = panel.querySelector('select[name="eap"]');
-        elements.password = panel.querySelector('input[name="password"]');
-        elements.identity = panel.querySelector('input[name="identity"]');
-        elements.securitySelect =
-          panel.querySelector('select[name="security"]');
-        elements.submitButton = panel.querySelector('button[type=submit]');
-        elements.showPassword = panel.querySelector('input[name=show-pwd]');
-
-        elements.ssid.oninput = this._onSSIDchange;
-        elements.securitySelect.onchange = this._onSecurityChange;
-      },
-      onBeforeShow: function(panel, options) {
-        if (!isHomeKeyPressed) {
-          network = options.network;
-          this._onSecurityChange.call(elements.securitySelect);
-          WifiUtils.initializeAuthFields(panel, network);
-        }
-        isHomeKeyPressed = false;
-      },
-      onBeforeHide: function() {
-        // We have to keep these information in network object
-        network.ssid = elements.ssid.value;
-        network.hidden = true;
-      },
-      onHide: function() {
-        isHomeKeyPressed = document.hidden;
-        if (!isHomeKeyPressed) {
-          elements.password = '';
-          elements.identity = '';
-          elements.showPassword.checked = false;
-        }
-      },
-      _onSecurityChange: function() {
-        var key = this.selectedIndex ? this.value : '';
-        var password = elements.password.value;
-        var identity = elements.identity.value;
-        var eap = elements.eap.value;
-
-        elements.panel.dataset.security = key;
-        elements.submitButton.disabled =
-          !WifiHelper.isValidInput(key, password, identity, eap);
-
-        WifiHelper.setSecurity(network, [key]);
-        WifiUtils.changeDisplay(elements.panel, key);
-      },
-      _onSSIDchange: function() {
-        // Make sure ssid length is less then 32 bytes.
-        var str = this.value;
-        // Non-ASCII chars in SSID will be encoded by UTF-8, and length of
-        // each char might be longer than 1 byte.
-        // Use encodeURIComponent() to encode ssid, then calculate correct
-        // length.
-        if (encodeURIComponent(str).replace(/%[\w\d]{2}/g, '1').length > 32) {
-          this.value = str.substring(0, str.length - 1);
-        }
-      }
-    });
-  };
-});
diff --git a/apps/settings/js/panels/wifi_manage_certificates/panel.js b/apps/settings/js/panels/wifi_manage_certificates/panel.js
deleted file mode 100644
index 935a5df..0000000
--- a/apps/settings/js/panels/wifi_manage_certificates/panel.js
+++ /dev/null
@@ -1,158 +0,0 @@
-define(function(require) {
-  'use strict';
-
-  var SettingsUtils = require('modules/settings_utils');
-  var SettingsPanel = require('modules/settings_panel');
-  var WifiUtils = require('modules/wifi_utils');
-  var WifiHelper = require('shared/wifi_helper');
-  var wifiManager = WifiHelper.getWifiManager();
-
-  return function ctor_manageCertificatedWifi() {
-    var elements = {};
-
-    return SettingsPanel({
-      onInit: function(panel) {
-        elements = {};
-        elements.panel = panel;
-        elements.certificateList = panel.querySelector('#wifi-certificateList');
-        elements.deleteCertificateFailedDialog =
-          panel.querySelector('#certificate-deletion-failed');
-        elements.importCertificateBtn =
-          panel.querySelector('#importCertificate');
-        elements.deleteCertificateBtn =
-          panel.querySelector('#deleteCertificate');
-
-        elements.importCertificateBtn.onclick = function() {
-          SettingsUtils.openDialog('wifi-selectCertificateFile');
-        };
-
-        elements.deleteCertificateBtn.onclick =
-          this._deleteCertificate.bind(this);
-      },
-      onBeforeShow: function(panel) {
-        this._scan();
-      },
-      _scan: function() {
-        var self = this;
-        var list = elements.certificateList;
-        this._cleanup();
-
-        var certRequest = wifiManager.getImportedCerts();
-        certRequest.onsuccess = function() {
-          var certList = certRequest.result;
-          // save the imported server certificates
-          var certificateList = certList.ServerCert;
-
-          // display certificate list
-          if (certificateList.length) {
-            for (var i = 0; i < certificateList.length; i++) {
-              list.appendChild(
-                self._newCertificateItem(certificateList[i]));
-            }
-
-            // add event listener for update toggle delete/import cert. buttons
-            var toggleBtnsWhenClicked = function() {
-              var option = self._isItemSelected();
-              self._toggleDeleteCertificateBtn(option);
-              self._toggleImportCertificateBtn(!option);
-            };
-
-            var inputItems = list.querySelectorAll('input');
-            for (var j = 0; j < inputItems.length; j++) {
-              inputItems[j].onchange = toggleBtnsWhenClicked;
-            }
-          } else {
-            // display "no certificate" message
-            // while no any imported certificate
-            list.appendChild(
-              WifiUtils.newExplanationItem('noCertificate'));
-          }
-        };
-
-        certRequest.onerror = function() {
-          console.warn('getImportedCerts failed');
-        };
-
-        this._toggleDeleteCertificateBtn(false);
-        this._toggleImportCertificateBtn(true);
-      },
-      _cleanup: function() {
-        while (elements.certificateList.hasChildNodes()) {
-          elements.certificateList.removeChild(
-            elements.certificateList.lastChild
-          );
-        }
-      },
-      _deleteCertificate: function() {
-        var self = this;
-        var countItemDeleted = 0;
-        var checkedInputList =
-          elements.certificateList.querySelectorAll(
-            'input[type=checkbox]:checked');
-
-        var scanWhenDeleteFinish = function(totalLength) {
-          return function() {
-            if (++countItemDeleted == totalLength) {
-              // refresh certificate list
-              countItemDeleted = 0;
-              self._scan();
-            }
-          };
-        };
-
-        var scanWhenDeleteError = function(totalLength) {
-          return function() {
-            if (++countItemDeleted == totalLength) {
-              // refresh certificate list
-              countItemDeleted = 0;
-              self._scan();
-            }
-            // Pop out alert message for certificate deletion failed
-            var dialog = elements.deleteCertificateFailedDialog;
-            dialog.hidden = false;
-            dialog.onsubmit = function confirm() {
-              dialog.hidden = true;
-            };
-          };
-        };
-
-        for (var i = 0; i < checkedInputList.length; i++) {
-          var nickname = checkedInputList[i].name;
-          var certRequest = wifiManager.deleteCert(nickname);
-          certRequest.onsuccess = scanWhenDeleteFinish(checkedInputList.length);
-          certRequest.onerror = scanWhenDeleteError(checkedInputList.length);
-        }
-      },
-      _isItemSelected: function() {
-        return elements.certificateList.querySelector(
-          'input[type=checkbox]:checked') != null;
-      },
-      _toggleImportCertificateBtn: function(enabled) {
-        elements.importCertificateBtn.disabled = !enabled;
-      },
-      _toggleDeleteCertificateBtn: function(enabled) {
-        elements.deleteCertificateBtn.disabled = !enabled;
-      },
-      _newCertificateItem: function(caName) {
-        var label = document.createElement('label');
-        label.className = 'pack-checkbox';
-
-        var input = document.createElement('input');
-        input.type = 'checkbox';
-        input.name = caName;
-        input.checked = false;
-
-        var span = document.createElement('span');
-        span.textContent = caName;
-
-        label.appendChild(input);
-        label.appendChild(span);
-
-        var li = document.createElement('li');
-        li.appendChild(label);
-
-        return li;
-      }
-    });
-  };
-});
diff --git a/apps/settings/js/panels/wifi_manage_networks/panel.js b/apps/settings/js/panels/wifi_manage_networks/panel.js
deleted file mode 100644
index c174ef5..0000000
--- a/apps/settings/js/panels/wifi_manage_networks/panel.js
+++ /dev/null
@@ -1,94 +0,0 @@
-define(function(require) {
-  'use strict';
-
-  var SettingsListener = require('shared/settings_listener');
-  var SettingsPanel = require('modules/settings_panel');
-  var SettingsUtils = require('modules/settings_utils');
-  var WifiContext = require('modules/wifi_context');
-  var WifiUtils = require('modules/wifi_utils');
-  var WifiHelper = require('shared/wifi_helper');
-  var WifiKnownNetworks =
-    require('panels/wifi_manage_networks/wifi_known_networks');
-  var wifiManager = WifiHelper.getWifiManager();
-
-  return function ctor_wifi_manage_networks_panel() {
-    var elements = {};
-    return SettingsPanel({
-      onInit: function(panel) {
-        elements.panel = panel;
-        elements.knownNetworkListWrapper =
-          panel.querySelector('#wifi-knownNetworks');
-        elements.forgetNetworkDialog =
-          panel.querySelector('form');
-        elements.macAddress =
-          panel.querySelector('[data-name="deviceinfo.mac"]');
-        elements.joinHiddenBtn =
-          panel.querySelector('#joinHidden');
-        elements.joinHiddenBtn.addEventListener('click', function() {
-          var network = {};
-          SettingsUtils.openDialog('wifi-joinHidden', {
-            network: network,
-            onSubmit: function(network) {
-              if (window.MozWifiNetwork !== undefined) {
-                network = new window.MozWifiNetwork(network);
-              }
-              WifiContext.associateNetwork(network);
-            }.bind({}, network)
-          });
-        });
-
-        // we would update this value all the time
-        SettingsListener.observe('deviceinfo.mac', '', function(macAddress) {
-          elements.macAddress.textContent = macAddress;
-        });
-      },
-      onBeforeShow: function(panel) {
-        this._cleanup();
-        this._scan();
-      },
-      _cleanup: function() {
-        var wrapper = elements.knownNetworkListWrapper;
-        while (wrapper.hasChildNodes()) {
-          wrapper.removeChild(wrapper.firstChild);
-        }
-      },
-      _scan: function() {
-        WifiKnownNetworks.scan(function(networks) {
-          var networkKeys = Object.getOwnPropertyNames(networks);
-          if (networkKeys.length) {
-            networkKeys.sort();
-            for (var i = 0; i < networkKeys.length; i++) {
-              var aItem = WifiUtils.newListItem(
-                networks[networkKeys[i]], this._forgetNetwork.bind(this));
-              elements.knownNetworkListWrapper.appendChild(aItem);
-            }
-          } else {
-            // display a "no known networks" message if necessary
-            elements.knownNetworkListWrapper.appendChild(
-              WifiUtils.newExplanationItem('noKnownNetworks'));
-          }
-        }.bind(this));
-      },
-      _forgetNetwork: function(network) {
-        var self = this;
-        var forgetNetworkDialog = elements.forgetNetworkDialog;
-        forgetNetworkDialog.hidden = false;
-
-        forgetNetworkDialog.onsubmit = function forget() {
-          var request = wifiManager.forget(network);
-          request.onsuccess = function() {
-            self._cleanup();
-            self._scan();
-            forgetNetworkDialog.hidden = true;
-          };
-          return false;
-        };
-
-        forgetNetworkDialog.onreset = function cancel() {
-          forgetNetworkDialog.hidden = true;
-          return false;
-        };
-      }
-    });
-  };
-});
diff --git a/apps/settings/js/panels/wifi_manage_networks/wifi_known_networks.js b/apps/settings/js/panels/wifi_manage_networks/wifi_known_networks.js
deleted file mode 100644
index 5ac3c15..0000000
--- a/apps/settings/js/panels/wifi_manage_networks/wifi_known_networks.js
+++ /dev/null
@@ -1,111 +0,0 @@
-/**
- * WifiKnownNetworks is a singleton that you can use it to
- * get known network list.
- *
- * @module wifi_manage_networks/wifi_known_networks
- */
-define(function(require) {
-  'use strict';
-
-  var WifiHelper = require('shared/wifi_helper');
-  var wifiManager = WifiHelper.getWifiManager();
-
-  /**
-   * @alias module:wifi_manage_networks/wifi_known_networks
-   * @class WifiKnownNetworks
-   * @requires module:shared/wifi_helper
-   */
-  var WifiKnownNetworks = {
-
-    /**
-     * We would keep cache known networks list here.
-     * @memberof WifiKnownNetworks
-     * @type {Object}
-     */
-    _networks: {},
-
-    /**
-     * We will use this flag to make sure whether we are scanning or not.
-     * @memberof WifiKnownNetworks
-     * @type {Boolean}
-     */
-    _scanning: false,
-
-    /**
-     * We will keep users' callbacks here when we are scanning. And after that,
-     * these callbacks will be called with _networks as parameters.
-     *
-     * @memberof WifiKnownNetworks
-     * @type {Array}
-     */
-    _cachedCallbacks: [],
-
-    /**
-     * You can call this to get _networks directly. If we are scanning when you
-     * call this method, we will queue your callbacks and they will be called
-     * later when scanning is done.
-     *
-     * @memberof WifiKnownNetworks
-     * @param {Function} callback
-     */
-    get: function(callback) {
-      // cache callbacks
-      if (this._scanning) {
-        this._cachedCallbacks.push(callback);
-      } else {
-        callback(this._networks);
-      }
-    },
-
-    /**
-     * You can call this method to scan known networks directly and we will
-     * return found networks as a parameter to your callback.
-     *
-     * @memberof WifiKnownNetworks
-     * @parameter {Function} callback
-     */
-    scan: function(callback) {
-      var i;
-      var req = wifiManager.getKnownNetworks();
-      this._scanning = true;
-
-      req.onsuccess = function() {
-        // clean them first
-        this._networks = {};
-        this._scanning = false;
-
-        var allNetworks = req.result;
-
-        for (i = 0; i < allNetworks.length; ++i) {
-          var network = allNetworks[i];
-          // use ssid + capabilities as a composited key
-          var key = network.ssid + '+' +
-            WifiHelper.getSecurity(network).join('+');
-          this._networks[key] = network;
-        }
-
-        var cachedCb;
-        while (this._cachedCallbacks.length > 0) {
-          cachedCb = this._cachedCallbacks.pop();
-          cachedCb(this._networks);
-        }
-
-        // we can call an additional callback after scanning
-        if (callback) {
-          callback(this._networks);
-        }
-      }.bind(this);
-
-      req.onerror = function(error) {
-        this._scanning = false;
-        console.warn('Error : ', error);
-        console.warn('could not retrieve any known network.');
-      }.bind(this);
-    }
-  };
-
-  // let's try to scan for the first time
-  WifiKnownNetworks.scan();
-
-  return WifiKnownNetworks;
-});
diff --git a/apps/settings/js/panels/wifi_select_certificate_file/panel.js b/apps/settings/js/panels/wifi_select_certificate_file/panel.js
deleted file mode 100644
index 4bc00ad..0000000
--- a/apps/settings/js/panels/wifi_select_certificate_file/panel.js
+++ /dev/null
@@ -1,123 +0,0 @@
-define(function(require) {
-  'use strict';
-
-  var SettingsPanel = require('modules/settings_panel');
-  var SettingsService = require('modules/settings_service');
-  var SettingsUtils = require('modules/settings_utils');
-  var EnumerateAll = require('shared/device_storage/enumerate_all');
-  var WifiHelper = require('shared/wifi_helper');
-  var wifiManager = WifiHelper.getWifiManager();
-
-  return function ctor_selectCertificateWifi() {
-    var elements = {};
-
-    return SettingsPanel({
-      onInit: function(panel) {
-        elements = {};
-        elements.panel = panel;
-        elements.certificateFilesList =
-          panel.querySelector('#wifi-certificate-files-List');
-        elements.certificateFailedDialog =
-          panel.querySelector('#certificate-import-failed');
-      },
-      onBeforeShow: function(panel) {
-        this._cleanup();
-        this._createScanList(elements.certificateFilesList);
-      },
-      _cleanup: function() {
-        // clear the certificate files list
-        while (elements.certificateFilesList.hasChildNodes()) {
-          elements.certificateFilesList.removeChild(
-            elements.certificateFilesList.lastChild
-          );
-        }
-      },
-      _createScanList: function(list) {
-        var storages = navigator.getDeviceStorages('sdcard');
-        var cursor = EnumerateAll(storages, '');
-
-        cursor.onsuccess = function() {
-          var file = cursor.result;
-          if (file) {
-            var extension = this._parseExtension(file.name);
-            if (this._isCertificateFile(extension)) {
-              var li = this._createLinkAnchor(file);
-              list.appendChild(li);
-            }
-            cursor.continue();
-          }
-        }.bind(this);
-
-        cursor.onerror = function() {
-          console.warn('failed to get file:' + cursor.error.name);
-        };
-      },
-      _createLinkAnchor: function(file) {
-        // create anchor
-        var anchor = document.createElement('a');
-        var certificateName = this._parseFilename(file.name);
-        anchor.textContent = certificateName;
-
-        var li = document.createElement('li');
-        li.appendChild(anchor);
-
-        anchor.onclick = function settingsNicknameForImportCertificateFile() {
-          SettingsUtils.openDialog('wifi-enterCertificateNickname', {
-            certificateName: certificateName,
-            onSubmit: function() {
-              // TODO
-              // we have to make a new mechanism for this case
-              var inputNickname =
-                document.getElementById('certificate-file-nickname');
-
-              var certRequest =
-                wifiManager.importCert(file, '', inputNickname.value);
-
-              // Gray out all item of certificate files
-              // since we are importing other file.
-              var items = elements.certificateFilesList.querySelectorAll('li');
-
-              for (var i = 0; i < items.length; i++) {
-                items[i].classList.add('disabled');
-              }
-
-              certRequest.onsuccess = function() {
-                // direct dialog to "wifi-manageCertificates"
-                SettingsService.navigate('wifi-manageCertificates');
-              };
-
-              certRequest.onerror = function() {
-                // Pop out alert message for certificate import failed
-                var dialog = elements.certificateFailedDialog;
-                dialog.hidden = false;
-                dialog.onsubmit = function confirm() {
-                  dialog.hidden = true;
-                };
-
-                // Re-enable all items of certificate files
-                // since import file process is completed.
-                for (var i = 0; i < items.length; i++) {
-                  if (items[i].classList.contains('disabled')) {
-                    items[i].classList.remove('disabled');
-                  }
-                }
-              };
-            }
-          });
-        };
-        return li;
-      },
-      _parseFilename: function(path) {
-        return path.slice(path.lastIndexOf('/') + 1, path.lastIndexOf('.'));
-      },
-      _parseExtension: function(filename) {
-        var array = filename.split('.');
-        return array.length > 1 ? array.pop() : '';
-      },
-      _isCertificateFile: function(extension) {
-        var cerExtension = ['cer', 'crt', 'pem', 'der'];
-        return cerExtension.indexOf(extension) > -1;
-      },
-    });
-  };
-});
diff --git a/apps/settings/js/panels/wifi_status/panel.js b/apps/settings/js/panels/wifi_status/panel.js
deleted file mode 100644
index 9841b61..0000000
--- a/apps/settings/js/panels/wifi_status/panel.js
+++ /dev/null
@@ -1,40 +0,0 @@
-define(function(require) {
-  'use strict';
-
-  var _ = navigator.mozL10n.get;
-  var SettingsPanel = require('modules/settings_panel');
-  var WifiHelper = require('shared/wifi_helper');
-  var wifiManager = WifiHelper.getWifiManager();
-
-  return function ctor_statusWifi() {
-    var elements = {};
-
-    return SettingsPanel({
-      onInit: function(panel) {
-        elements = {};
-        elements.ip = panel.querySelector('[data-ip]');
-        elements.speed = panel.querySelector('[data-speed]');
-        elements.ssid = panel.querySelector('[data-ssid]');
-        elements.signal = panel.querySelector('[data-signal]');
-        elements.security = panel.querySelector('[data-security]');
-      },
-      onBeforeShow: function(panel, options) {
-        this._updateNetworkInfo();
-        elements.ssid.textContent = options.network.ssid;
-        elements.signal.textContent = _('signalLevel' + options.sl);
-        elements.security.textContent = options.security || _('securityNone');
-        wifiManager.onconnectioninfoupdate = this._updateNetworkInfo;
-      },
-      onBeforeHide: function() {
-        wifiManager.onconnectioninfoupdate = null;
-      },
-      _updateNetworkInfo: function() {
-        var info = wifiManager.connectionInformation || {};
-        elements.ip.textContent = info.ipAddress || '';
-        elements.speed.textContent = _('linkSpeedMbs', {
-          linkSpeed: info.linkSpeed
-        });
-      }
-    });
-  };
-});
diff --git a/apps/settings/js/panels/wifi_wps/panel.js b/apps/settings/js/panels/wifi_wps/panel.js
deleted file mode 100644
index b52b942..0000000
--- a/apps/settings/js/panels/wifi_wps/panel.js
+++ /dev/null
@@ -1,87 +0,0 @@
-define(function(require) {
-  'use strict';
-
-  var _ = navigator.mozL10n.get;
-  var SettingsPanel = require('modules/settings_panel');
-  var WifiContext = require('modules/wifi_context');
-  var WifiWps = require('panels/wifi_wps/wifi_wps');
-
-  return function ctor_wpsWifi() {
-    var wifiWps = WifiWps();
-    var elements = {};
-
-    return SettingsPanel({
-      onInit: function(panel) {
-        elements.panel = panel;
-        elements.submitWpsButton = panel.querySelector('button[type=submit]');
-        elements.apSelectionArea = panel.querySelector('#wifi-wps-pin-aps');
-        elements.apSelect = elements.apSelectionArea.querySelector('select');
-        elements.pinItem = panel.querySelector('#wifi-wps-pin-area');
-        elements.pinDesc = elements.pinItem.querySelector('p');
-        elements.pinInput = elements.pinItem.querySelector('input');
-        elements.wpsMethodRadios = panel.querySelectorAll('input[type=radio]');
-
-        // Check validWpsPin each time when typing
-        elements.pinInput.oninput = function() {
-          elements.submitWpsButton.disabled =
-            !wifiWps._isValidWpsPin(elements.pinInput.value);
-        };
-
-        for (var i = 0; i < elements.wpsMethodRadios.length; i++) {
-          elements.wpsMethodRadios[i].onchange = this._onWpsMethodChange;
-        }
-        this._onWpsMethodChange();
-      },
-      onBeforeShow: function(panel, options) {
-        this._cleanupApList();
-        this._updateApList(options.wpsAvailableNetworks);
-      },
-      onBeforeHide: function() {
-        // Store information on the context to make them accessible from
-        // other panels.
-        WifiContext.wpsOptions.selectedAp = elements.apSelect.options[
-          elements.apSelect.selectedIndex].value;
-
-        WifiContext.wpsOptions.selectedMethod = elements.panel.querySelector(
-          'input[type=\'radio\']:checked').value;
-
-        WifiContext.wpsOptions.pin = elements.pinInput.value;
-      },
-      _cleanupApList: function() {
-        var apSelect = elements.apSelect;
-        while (apSelect.hasChildNodes()) {
-          apSelect.removeChild(apSelect.firstChild);
-        }
-      },
-      _updateApList: function(wpsAvailableNetworks) {
-        // Add the first option
-        var option = document.createElement('option');
-        option.textContent = _('wpsAnyAp');
-        option.value = 'any';
-        elements.apSelect.appendChild(option);
-
-        // Add the other networks
-        for (var i = 0; i < wpsAvailableNetworks.length; i++) {
-          option = document.createElement('option');
-          option.textContent = wpsAvailableNetworks[i].ssid;
-          option.value = wpsAvailableNetworks[i].bssid;
-          elements.apSelect.appendChild(option);
-        }
-      },
-      _onWpsMethodChange: function() {
-        var method = elements.panel.querySelector(
-          'input[type=\'radio\']:checked').value;
-
-        if (method === 'apPin') {
-          elements.submitWpsButton.disabled =
-            !wifiWps._isValidWpsPin(elements.pinInput.value);
-          elements.pinItem.hidden = false;
-        } else {
-          elements.submitWpsButton.disabled = false;
-          elements.pinItem.hidden = true;
-        }
-        elements.apSelectionArea.hidden = method === 'pbc';
-      }
-    });
-  };
-});
diff --git a/apps/settings/js/panels/wifi_wps/wifi_wps.js b/apps/settings/js/panels/wifi_wps/wifi_wps.js
deleted file mode 100644
index 83dace7..0000000
--- a/apps/settings/js/panels/wifi_wps/wifi_wps.js
+++ /dev/null
@@ -1,51 +0,0 @@
-/**
- * WifiWps is a module that stores some functions that would be called
- * when doing wps related operations
- *
- * @module wifi_wps/wifi_wps
- */
-define(function(require) {
-  'use strict';
-
-  var WifiWps = function() {
-    return {
-      /**
-       * To make sure wps pin is valid or not
-       * @param {String} pin - value of pin
-       * @returns {Boolean}
-       */
-      _isValidWpsPin: function(pin) {
-        if (pin.match(/[^0-9]+/)) {
-          return false;
-        }
-        if (pin.length === 4) {
-          return true;
-        }
-        if (pin.length !== 8) {
-          return false;
-        }
-        var num = pin - 0;
-        return this._pinChecksum(Math.floor(num / 10)) === (num % 10);
-      },
-      /**
-       * This is an inner function that we can use it to get
-       * pin's checksum
-       *
-       * @param {Number} pin - value of pin
-       * @returns {Number}
-       */
-      _pinChecksum: function(pin) {
-        var accum = 0;
-        while (pin > 0) {
-          accum += 3 * (pin % 10);
-          pin = Math.floor(pin / 10);
-          accum += pin % 10;
-          pin = Math.floor(pin / 10);
-        }
-        return (10 - accum % 10) % 10;
-      }
-    };
-  };
-
-  return WifiWps;
-});
diff --git a/apps/settings/js/settings.js b/apps/settings/js/settings.js
index 7f7911d..06f1d85 100644
--- a/apps/settings/js/settings.js
+++ b/apps/settings/js/settings.js
@@ -56,7 +56,7 @@ var Settings = {
       hash = '#' + hash;
     }

-    if (hash === this._currentPanel) {
+    if (hash == this._currentPanel) {
       return;
     }

@@ -93,7 +93,6 @@ var Settings = {
       return;
     }

-    this.SettingsUtils = options.SettingsUtils;
     this.SettingsService = options.SettingsService;
     this.PageTransitions = options.PageTransitions;
     this.ScreenLayout = options.ScreenLayout;
@@ -102,7 +101,7 @@ var Settings = {
     // register web activity handler
     navigator.mozSetMessageHandler('activity', this.webActivityHandler);

-    this.currentPanel = '#root';
+    this.currentPanel = 'root';

     // init connectivity when we get a chance
     navigator.mozL10n.once(function loadWhenIdle() {
diff --git a/apps/settings/js/simcard_manager.js b/apps/settings/js/simcard_manager.js
index 3d2ca52..27d1555 100644
--- a/apps/settings/js/simcard_manager.js
+++ b/apps/settings/js/simcard_manager.js
@@ -33,16 +33,11 @@
       // in order to show confirm dialog after users changing value, the better
       // way right now is to check values when `onblur` event triggered.
       this.addOutgoingDataSelectEvent();
+
       this.addVoiceChangeEventOnConns();
       this.addCardStateChangeEventOnIccs();
       this.addLocalizedChangeEventOnIccs();

-      // SMS app will directly change this value if users are going to
-      // donwload specific sms from differnt simcard, so we have to
-      // make sure our UI will reflect the right value at the moment.
-      SimSettingsHelper.observe('outgoingData',
-        this.outgoingDataChangeEvent.bind(this));
-
       // because in fugu, airplaneMode will not change cardState
       // but we still have to make UI consistent. In this way,
       // when airplaneMode is on in fugu, we have to mimic the nosim
@@ -67,6 +62,7 @@
       }
     },
     handleEvent: function(evt) {
+
       var cardIndex = evt.target.value;

       // it means users is seleting '--' options
@@ -85,9 +81,6 @@
           break;
       }
     },
-    outgoingDataChangeEvent: function(cardIndex) {
-      this.simManagerOutgoingDataSelect.value = cardIndex;
-    },
     addOutgoingDataSelectEvent: function() {
       var prevCardIndex;
       var newCardIndex;
diff --git a/apps/settings/js/vertical_homescreen.js b/apps/settings/js/vertical_homescreen.js
index 900d516..febfff7 100644
--- a/apps/settings/js/vertical_homescreen.js
+++ b/apps/settings/js/vertical_homescreen.js
@@ -5,13 +5,10 @@ if (!window.verticalHomescreen) {
   (function(exports) {

     function VerticalHomescreen() {
-      this.section = document.getElementById('vertical-homescreen-layout');
       this.gridSelect = document.querySelector('[name="grid.layout.cols"]');
       verticalPreferences.addEventListener('updated', this);
       this.gridSelect.addEventListener('change', this);
       verticalPreferences.get('grid.cols').then(this.updateCols.bind(this));
-      verticalPreferences.get('cols.preference.enabled').then(
-        this.updateColsPref.bind(this));

       this.searchUrlTemplate = null;
       this.getCurrentSearchEngine();
@@ -19,6 +16,16 @@ if (!window.verticalHomescreen) {
       // Listen for search engine selection
       this.searchEngineSelect = document.querySelector(
         '[name="search.urlTemplate"]');
+
+      // Show whether the search suggestions are currently enabled
+      var enabledKey = 'search.suggestions.enabled';
+      var enabledDesc = document.getElementById('suggestions-desc');
+
+      SettingsListener.observe(enabledKey, true, function (enabled) {
+        navigator.mozL10n
+          .localize(enabledDesc, enabled ? 'enabled' : 'disabled');
+      });
+
     }

     VerticalHomescreen.prototype = {
@@ -52,10 +59,6 @@ if (!window.verticalHomescreen) {
         }
       },

-      updateColsPref: function(enabled) {
-        this.section.hidden = !enabled;
-      },
-
       getCurrentSearchEngine: function() {
         var searchUrlTemplateRequest = SettingsListener.getSettingsLock().
           get('search.urlTemplate');
diff --git a/apps/settings/js/wifi.js b/apps/settings/js/wifi.js
new file mode 100644
index 0000000..ac39c32
--- /dev/null
+++ b/apps/settings/js/wifi.js
@@ -0,0 +1,1092 @@
+/* -*- Mode: js; js-indent-level: 2; indent-tabs-mode: nil -*- */
+/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */
+
+'use strict';
+
+// handle Wi-Fi settings
+navigator.mozL10n.once(function wifiSettings() {
+  var _ = navigator.mozL10n.get;
+
+  var settings = window.navigator.mozSettings;
+  if (!settings)
+    return;
+
+  var gWifiManager = WifiHelper.getWifiManager();
+  var gWifi = document.querySelector('#wifi');
+  var gWifiCheckBox = document.querySelector('#wifi-enabled input');
+  var gWifiInfoBlock = document.querySelector('#wifi-desc');
+  var gWpsInfoBlock = document.querySelector('#wps-column small');
+  var gWpsPbcLabelBlock = document.querySelector('#wps-column a');
+
+  var gCurrentNetwork = gWifiManager.connection.network;
+
+  // auto-scan networks when the Wi-Fi panel gets visible
+  var gScanPending = false;
+  var gWifiSectionVisible = false;
+
+  function updateVisibilityStatus() {
+    var computedStyle = window.getComputedStyle(gWifi);
+    gWifiSectionVisible = (!document.hidden &&
+                           computedStyle.visibility != 'hidden');
+    if (gWifiSectionVisible && gScanPending) {
+      gNetworkList.scan();
+      gScanPending = false;
+    }
+  }
+
+  document.addEventListener('visibilitychange', updateVisibilityStatus);
+  gWifi.addEventListener('transitionend', function(evt) {
+    if (evt.target == gWifi) {
+      updateVisibilityStatus();
+    }
+  });
+
+  // toggle wifi on/off
+  gWifiCheckBox.onchange = function toggleWifi() {
+    settings.createLock().set({
+      'wifi.enabled': this.checked
+    }).onerror = function() {
+      // Fail to write mozSettings, return toggle control to the user.
+      gWifiCheckBox.disabled = false;
+    };
+    this.disabled = true;
+  };
+
+  /**
+   * mozWifiManager status
+   * see dom/wifi/nsIWifi.idl -- the 4 possible statuses are:
+   *  - connecting:
+   *        fires when we start the process of connecting to a network.
+   *  - associated:
+   *        fires when we have connected to an access point but do not yet
+   *        have an IP address.
+   *  - connected:
+   *        fires once we are fully connected to an access point.
+   *  - connectingfailed:
+   *        fires when we fail to connect to an access point.
+   *  - disconnected:
+   *        fires when we were connected to a network but have been
+   *        disconnected.
+   */
+
+  var gScanStates = new Set(['connected', 'connectingfailed', 'disconnected']);
+  Connectivity.wifiStatusChange = function(event) {
+    updateNetworkState();
+
+    if (gScanStates.has(event.status)) {
+      if (gWifiSectionVisible) {
+        gNetworkList.scan();
+      } else {
+        gScanPending = true;
+      }
+    }
+  };
+
+  Connectivity.wifiEnabled = function onWifiEnabled() {
+    // Re-enable UI toggle
+    gWifiCheckBox.disabled = false;
+    updateNetworkState();
+    gNetworkList.scan();
+  };
+
+  Connectivity.wifiDisabled = function onWifiDisabled() {
+    // Re-enable UI toggle
+    gWifiCheckBox.disabled = false;
+    gWifiInfoBlock.textContent = _('disabled');
+    gWifiInfoBlock.dataset.l10nId = 'disabled';
+    gNetworkList.clear(false);
+    gNetworkList.autoscan = false;
+  };
+
+  // Wi-Fi Protected Setup
+  var gWpsInProgress = false;
+
+  function wpsStatusReset() {
+    // The WPS process is done (connected, cancelled or error):
+    //  - reset the title of the WPS item ("Connect with WPS") right now;
+    //  - leave the current status for a moment, then reset it to the default
+    //    message ("Automatic Wi-Fi setup").
+    localize(gWpsPbcLabelBlock, 'wpsMessage');
+    setTimeout(function resetWpsInfoBlock() {
+      localize(gWpsInfoBlock, 'wpsDescription2');
+    }, 1500);
+  }
+
+  document.getElementById('wps-column').onclick = function() {
+    if (gWpsInProgress) {
+      var req = gWifiManager.wps({
+        method: 'cancel'
+      });
+      req.onsuccess = function() {
+        gWpsInProgress = false;
+        localize(gWpsInfoBlock, 'fullStatus-wps-canceled');
+        wpsStatusReset();
+      };
+      req.onerror = function() {
+        gWpsInfoBlock.textContent = _('wpsCancelFailedMessage') +
+          ' [' + req.error.name + ']';
+      };
+    } else {
+      wpsDialog('wifi-wps', wpsCallback);
+    }
+
+    function wpsCallback(bssid, method, pin) {
+      var req;
+      if (method === 'pbc') {
+        req = gWifiManager.wps({
+          method: 'pbc'
+        });
+      } else if (method === 'myPin') {
+        req = gWifiManager.wps({
+          method: 'pin',
+          bssid: bssid
+        });
+      } else {
+        req = gWifiManager.wps({
+          method: 'pin',
+          bssid: bssid,
+          pin: pin
+        });
+      }
+      req.onsuccess = function() {
+        if (method === 'myPin') {
+          alert(_('wpsPinInput', { pin: req.result }));
+        }
+        gWpsInProgress = true;
+        localize(gWpsPbcLabelBlock, 'wpsCancelMessage');
+        localize(gWpsInfoBlock, 'fullStatus-wps-inprogress');
+      };
+      req.onerror = function() {
+        gWpsInfoBlock.textContent = _('fullStatus-wps-failed') +
+          ' [' + req.error.name + ']';
+      };
+    }
+
+    function wpsDialog(dialogID, callback) {
+      // hide dialog box
+      function pinChecksum(pin) {
+        var accum = 0;
+        while (pin > 0) {
+          accum += 3 * (pin % 10);
+          pin = Math.floor(pin / 10);
+          accum += pin % 10;
+          pin = Math.floor(pin / 10);
+        }
+        return (10 - accum % 10) % 10;
+      }
+
+      function isValidWpsPin(pin) {
+        if (pin.match(/[^0-9]+/))
+          return false;
+        if (pin.length === 4)
+          return true;
+        if (pin.length !== 8)
+          return false;
+        var num = pin - 0;
+        return pinChecksum(Math.floor(num / 10)) === (num % 10);
+      }
+
+      var dialog = document.getElementById(dialogID);
+      if (!dialog)
+        return;
+
+      var apSelectionArea = dialog.querySelector('#wifi-wps-pin-aps');
+      var apSelect = apSelectionArea.querySelector('select');
+      for (var i = apSelect.childNodes.length - 1; i >= 0; i--) {
+        apSelect.removeChild(apSelect.childNodes[i]);
+      }
+      var option = document.createElement('option');
+      option.textContent = _('wpsAnyAp');
+      option.value = 'any';
+      apSelect.appendChild(option);
+      var wpsAvailableNetworks = gNetworkList.getWpsAvailableNetworks();
+      for (var i = 0; i < wpsAvailableNetworks.length; i++) {
+        option = document.createElement('option');
+        option.textContent = wpsAvailableNetworks[i].ssid;
+        option.value = wpsAvailableNetworks[i].bssid;
+        apSelect.appendChild(option);
+      }
+
+      var submitWpsButton = dialog.querySelector('button[type=submit]');
+      var pinItem = document.getElementById('wifi-wps-pin-area');
+      var pinDesc = pinItem.querySelector('p');
+      var pinInput = pinItem.querySelector('input');
+      pinInput.oninput = function() {
+        submitWpsButton.disabled = !isValidWpsPin(pinInput.value);
+      };
+
+      function onWpsMethodChange() {
+        var method =
+          dialog.querySelector("input[type='radio']:checked").value;
+        if (method === 'apPin') {
+          submitWpsButton.disabled = !isValidWpsPin(pinInput.value);
+          pinItem.hidden = false;
+        } else {
+          submitWpsButton.disabled = false;
+          pinItem.hidden = true;
+        }
+        apSelectionArea.hidden = method === 'pbc';
+      }
+
+      var radios = dialog.querySelectorAll('input[type="radio"]');
+      for (var i = 0; i < radios.length; i++) {
+        radios[i].onchange = onWpsMethodChange;
+      }
+      onWpsMethodChange();
+
+      openDialog(dialogID, function submit() {
+        callback(apSelect.options[apSelect.selectedIndex].value,
+          dialog.querySelector("input[type='radio']:checked").value,
+          pinInput.value);
+      });
+    }
+  };
+
+  // create a network list item
+  function newListItem(network, callback) {
+    /**
+     * A Wi-Fi list item has the following HTML structure:
+     *   <li>
+     *     <aside class="pack-end wifi-icon level-[?] [secured]"></aside>
+     *     <small> Network Security </small>
+     *     <a> Network SSID </a>
+     *   </li>
+     */
+
+    // icon
+    var icon = document.createElement('aside');
+    icon.classList.add('pack-end');
+    icon.classList.add('wifi-icon');
+    var level = Math.min(Math.floor(network.relSignalStrength / 20), 4);
+    icon.classList.add('level-' + level);
+
+    // ssid
+    var ssid = document.createElement('a');
+    ssid.textContent = network.ssid;
+
+    // supported authentication methods
+    var small = document.createElement('small');
+    var keys = WifiHelper.getSecurity(network);
+    if (keys && keys.length) {
+      localize(small, 'securedBy', { capabilities: keys.join(', ') });
+      icon.classList.add('secured');
+    } else {
+      localize(small, 'securityOpen');
+    }
+
+    // create list item
+    var li = document.createElement('li');
+    li.appendChild(icon);
+    li.appendChild(small);
+    li.appendChild(ssid);
+
+    // Show connection status
+    icon.classList.add('wifi-signal');
+    if (WifiHelper.isConnected(network)) {
+      localize(small, 'shortStatus-connected');
+      icon.classList.add('connected');
+      li.classList.add('active');
+    }
+
+    // bind connection callback
+    li.onclick = function() {
+      callback(network);
+    };
+    return li;
+  }
+
+  // create an explanatory list item
+  function newExplanationItem(message) {
+    var li = document.createElement('li');
+    li.className = 'explanation';
+    li.textContent = _(message);
+    return li;
+  }
+
+  // available network list
+  var gNetworkList = (function networkList(list) {
+    var scanning = false;
+    var autoscan = false;
+    var scanRate = 5000; // 5s after last scan results
+    var index = [];      // index of all scanned networks
+    var networks = {};
+
+    // get the "Searching..." and "Search Again" items, respectively
+    var infoItem = list.querySelector('li[data-state="on"]');
+    var scanItem = list.querySelector('li[data-state="ready"]');
+    scanItem.onclick = function() {
+      clear(true);
+      scan();
+    };
+
+    // clear the network list
+    function clear(addScanningItem) {
+      index = [];
+      networks = {};
+
+      // remove all items except the text expl. and the "search again" button
+      var wifiItems = list.querySelectorAll('li:not([data-state])');
+      var len = wifiItems.length;
+      for (var i = len - 1; i >= 0; i--) {
+        list.removeChild(wifiItems[i]);
+      }
+
+      list.dataset.state = addScanningItem ? 'on' : 'off';
+    }
+
+    // scan wifi networks and display them in the list
+    function scan() {
+      PerformanceTestingHelper.dispatch('settings-panel-wifi-visible');
+
+      if (scanning)
+        return;
+
+      // stop auto-scanning if wifi disabled or the app is hidden
+      if (!gWifiManager.enabled || document.hidden) {
+        scanning = false;
+        gScanPending = true;
+        return;
+      }
+
+      scanning = true;
+      var req = WifiHelper.getAvailableAndKnownNetworks();
+
+      req.onsuccess = function onScanSuccess() {
+        clear(false);
+        var allNetworks = req.result;
+        for (var i = 0; i < allNetworks.length; ++i) {
+          var network = allNetworks[i];
+          // use ssid + security as a composited key
+          var key = network.ssid + '+' +
+            WifiHelper.getSecurity(network).join('+');
+          // keep connected network first, or select the highest strength
+          if (!networks[key] || network.connected) {
+            networks[key] = network;
+          } else {
+            if (!networks[key].connected &&
+                network.relSignalStrength > networks[key].relSignalStrength) {
+              networks[key] = network;
+            }
+          }
+        }
+
+        var networkKeys = Object.getOwnPropertyNames(networks);
+
+        // display network list
+        if (networkKeys.length) {
+          // sort networks by signal strength
+          networkKeys.sort(function(a, b) {
+            return networks[b].relSignalStrength -
+                networks[a].relSignalStrength;
+          });
+
+          // add detected networks
+          for (var i = 0; i < networkKeys.length; i++) {
+            var network = networks[networkKeys[i]];
+            var listItem = newListItem(network, toggleNetwork);
+
+            // put connected network on top of list
+            if (WifiHelper.isConnected(network)) {
+              list.insertBefore(listItem, infoItem.nextSibling);
+            } else {
+              list.insertBefore(listItem, scanItem);
+            }
+            index[networkKeys[i]] = listItem; // add composited key to index
+          }
+        } else {
+          // display a "no networks found" message if necessary
+          list.insertBefore(newExplanationItem('noNetworksFound'), scanItem);
+        }
+
+        // display the "Search Again" button
+        list.dataset.state = 'ready';
+
+        PerformanceTestingHelper.dispatch('settings-panel-wifi-ready');
+
+        // auto-rescan if requested
+        if (autoscan) {
+          window.setTimeout(scan, scanRate);
+        }
+
+        scanning = false;
+      };
+
+      req.onerror = function onScanError(error) {
+        // always try again.
+        scanning = false;
+
+        PerformanceTestingHelper.dispatch('settings-panel-wifi-ready');
+
+        window.setTimeout(scan, scanRate);
+      };
+    }
+
+    // display a message on the network item matching the ssid
+    function display(network, networkStatus) {
+      if (!network) {
+        return;
+      }
+
+      var key = network.ssid + '+' +
+        WifiHelper.getSecurity(network).join('+');
+      var listItem = index[key];
+      var active = list.querySelector('.active');
+      if (active && active != listItem) {
+        active.classList.remove('active');
+        active.querySelector('small').textContent =
+            _('shortStatus-disconnected');
+        active.querySelector('aside').classList.remove('connecting');
+        active.querySelector('aside').classList.remove('connected');
+      }
+      if (listItem) {
+        listItem.classList.add('active');
+        listItem.querySelector('small').textContent =
+                                            _('shortStatus-' + networkStatus);
+        if (networkStatus === 'connecting') {
+          listItem.querySelector('aside').classList.add('connecting');
+        }
+        if (networkStatus === 'connected') {
+          listItem.querySelector('aside').classList.remove('connecting');
+        }
+      }
+    }
+
+    // get WPS available networks
+    function getWpsAvailableNetworks() {
+      var ssids = Object.getOwnPropertyNames(networks);
+      var wpsAvailableNetworks = [];
+      for (var i = 0; i < ssids.length; i++) {
+        var network = networks[ssids[i]];
+        if (WifiHelper.isWpsAvailable(network)) {
+          wpsAvailableNetworks.push(network);
+        }
+      }
+      return wpsAvailableNetworks;
+    }
+
+    // API
+    return {
+      get autoscan() { return autoscan; },
+      set autoscan(value) { autoscan = value; },
+      display: display,
+      clear: clear,
+      scan: scan,
+      get scanning() { return scanning; },
+      getWpsAvailableNetworks: getWpsAvailableNetworks
+    };
+  }) (document.getElementById('wifi-availableNetworks'));
+
+  // saved network list
+  var gKnownNetworkList = (function knownNetworkList(list) {
+    // clear the network list
+    function clear() {
+      while (list.hasChildNodes()) {
+        list.removeChild(list.lastChild);
+      }
+    }
+
+    // propose to forget a network
+    function forgetNetwork(network) {
+      var dialog = document.querySelector('#wifi-manageNetworks form');
+      dialog.hidden = false;
+      dialog.onsubmit = function forget() {
+        gWifiManager.forget(network);
+        scan();
+        dialog.hidden = true;
+        return false;
+      };
+      dialog.onreset = function cancel() {
+        dialog.hidden = true;
+        return false;
+      };
+    }
+
+    // list known networks
+    function scan() {
+      var req = gWifiManager.getKnownNetworks();
+
+      req.onsuccess = function onSuccess() {
+        var allNetworks = req.result;
+        var networks = {};
+        for (var i = 0; i < allNetworks.length; ++i) {
+          var network = allNetworks[i];
+          // use ssid + capabilities as a composited key
+          var key = network.ssid + '+' +
+            WifiHelper.getSecurity(network).join('+');
+          networks[key] = network;
+        }
+        var networkKeys = Object.getOwnPropertyNames(networks);
+        clear();
+
+        // display network list
+        if (networkKeys.length) {
+          networkKeys.sort();
+          for (var i = 0; i < networkKeys.length; i++) {
+            var aItem = newListItem(networks[networkKeys[i]], forgetNetwork);
+            list.appendChild(aItem);
+          }
+        } else {
+          // display a "no known networks" message if necessary
+          list.appendChild(newExplanationItem('noKnownNetworks'));
+        }
+      };
+
+      req.onerror = function onScanError(error) {
+        console.warn('wifi: could not retrieve any known network. ');
+      };
+    }
+
+    // API
+    return {
+      clear: clear,
+      scan: scan
+    };
+  }) (document.getElementById('wifi-knownNetworks'));
+
+  document.getElementById('manageNetworks').onclick = function knownNetworks() {
+    gKnownNetworkList.scan();
+    openDialog('wifi-manageNetworks');
+  };
+
+  // create a certificate list item
+  function newCertificateItem(caName) {
+    var label = document.createElement('label');
+    label.className = 'pack-checkbox';
+    var input = document.createElement('input');
+    input.type = 'checkbox';
+    input.name = caName;
+    input.checked = false;
+    var span = document.createElement('span');
+    span.textContent = caName;
+
+    label.appendChild(input);
+    label.appendChild(span);
+
+    var li = document.createElement('li');
+    li.appendChild(label);
+    return li;
+  }
+
+  function toggleDeleteCertificateBtn(enabled) {
+    document.getElementById('deleteCertificate').disabled = !enabled;
+  }
+
+  function toggleImportCertificateBtn(enabled) {
+    document.getElementById('importCertificate').disabled = !enabled;
+  }
+
+  // imported certificate list
+  var gCertificateList = (function certificateList(list) {
+    var certificateList = [];
+
+    // get list
+    function getList() {
+      return certificateList;
+    }
+
+    // return true:  if more than one selected item
+    // return false: if no selected item
+    function isItemSelected() {
+      return list.querySelector('input[type=checkbox]:checked') != null;
+    }
+
+    // delete the selected certificate items in list
+    function deleteCertificate() {
+      var countItemDeleted = 0;
+      var checkedInputList =
+        list.querySelectorAll('input[type=checkbox]:checked');
+
+      for (var i = 0; i < checkedInputList.length; i++) {
+        var nickname = checkedInputList[i].name;
+        var certRequest = gWifiManager.deleteCert(nickname);
+
+        certRequest.onsuccess = function() {
+          if (++countItemDeleted == checkedInputList.length) {
+            // refresh certificate list
+            scan();
+          }
+        };
+        certRequest.onerror = function() {
+          if (++countItemDeleted == checkedInputList.length) {
+            // refresh certificate list
+            scan();
+          }
+          // Pop out alert message for certificate deletion failed
+          var dialog = document.getElementById('certificate-deletion-failed');
+          dialog.hidden = false;
+          dialog.onsubmit = function confirm() {
+            dialog.hidden = true;
+          };
+        };
+      }
+    }
+
+    // clear the certificate list
+    function clear() {
+      while (list.hasChildNodes()) {
+        list.removeChild(list.lastChild);
+      }
+    }
+
+    // scan and list imported certificates
+    function scan() {
+      clear();
+
+      var certRequest = gWifiManager.getImportedCerts();
+
+      certRequest.onsuccess = function() {
+        var certList = certRequest.result;
+        // save the imported server certificates
+        certificateList = certList.ServerCert;
+
+        // display certificate list
+        if (certificateList.length) {
+          for (var i = 0; i < certificateList.length; i++) {
+            list.appendChild(newCertificateItem(certificateList[i]));
+          }
+          // add event listener for update toggle delete/import cert. buttons
+          var inputItems = list.querySelectorAll('input');
+          for (var i = 0; i < inputItems.length; i++) {
+            inputItems[i].onchange = function() {
+              // To enable/disable delete, import certitifate buttons
+              // via items selected or not.
+              var option = isItemSelected();
+              toggleDeleteCertificateBtn(option);
+              toggleImportCertificateBtn(!option);
+            };
+          }
+        } else {
+          // display "no certificate" message while no any imported certificate
+          list.appendChild(newExplanationItem('noCertificate'));
+        }
+      };
+      certRequest.onerror = function() {
+        console.warn('getImportedCerts failed');
+      };
+
+      toggleDeleteCertificateBtn(false);
+      toggleImportCertificateBtn(true);
+    }
+
+    // Once Bug 917102 landed, we can remove the detection.
+    // Detect platform is supporting certificate or not..
+    if (gWifiManager.getImportedCerts) {
+      // API is ready.
+      scan();
+    } else {
+      // API is not ready yet.
+      // Hide the "Manage certificates" button since API is not ready yet.
+      var manageCertificatesBtn = document.getElementById('manageCertificates');
+      manageCertificatesBtn.parentNode.hidden = true;
+      console.warn('Import certificate API is not ready yet!');
+    }
+
+
+    // API
+    return {
+      getList: getList,
+      scan: scan,
+      deleteCertificate: deleteCertificate
+    };
+  }) (document.getElementById('wifi-certificateList'));
+
+  // when certificate file imported, update the imported certificate list
+  window.addEventListener('certificate-imported', function() {
+    gCertificateList.scan();
+  });
+
+  document.getElementById('manageCertificates').onclick =
+    function knownCertificates() {
+      gCertificateList.scan();
+      openDialog('wifi-manageCertificates');
+  };
+
+  document.getElementById('deleteCertificate').onclick =
+    function deleteCertificate() {
+      gCertificateList.deleteCertificate();
+  };
+
+  document.getElementById('importCertificate').onclick =
+    function importCertificate() {
+      // dispatch event for gSelectCertificateFiles.scan();
+      dispatchEvent(new CustomEvent('scan-certificate-file'));
+      openDialog('wifi-selectCertificateFile');
+  };
+
+  // join hidden network
+  document.getElementById('joinHidden').onclick = function joinHiddenNetwork() {
+    toggleNetwork();
+  };
+
+  // load the imported certificates into select options
+  function loadImportedCertificateOptions(select) {
+    // reset the option to be <option value="none">--</option> only
+    var originLengthOfOptions = select.options.length;
+    for (var i = 0; i < originLengthOfOptions - 1; i++) {
+      select.remove(1);
+    }
+
+    var certificateList = gCertificateList.getList();
+    for (var i = 0; i < certificateList.length; i++) {
+      var option = document.createElement('option');
+      option.text = certificateList[i];
+      option.value = certificateList[i];
+      select.add(option, null);
+    }
+  }
+
+  // UI to connect/disconnect
+  function toggleNetwork(network) {
+    if (!network) {
+      // offline, hidden SSID
+      network = {};
+      wifiDialog('wifi-joinHidden', wifiConnect);
+    } else if (WifiHelper.isConnected(network)) {
+      // online: show status + offer to disconnect
+      wifiDialog('wifi-status', wifiDisconnect);
+    } else if (network.password && (network.password == '*')) {
+      // offline, known network (hence the '*' password value):
+      // no further authentication required.
+      WifiHelper.setPassword(network);
+      wifiConnect();
+    } else {
+      // offline, unknown network: propose to connect
+      var key = WifiHelper.getKeyManagement(network);
+      switch (key) {
+        case 'WEP':
+        case 'WPA-PSK':
+        case 'WPA-EAP':
+          wifiDialog('wifi-auth', wifiConnect, key);
+          break;
+        default:
+          wifiConnect();
+      }
+    }
+
+    function wifiConnect() {
+      gCurrentNetwork = network;
+      gWifiManager.associate(network);
+      settings.createLock().set({'wifi.connect_via_settings': true});
+    }
+
+    function wifiDisconnect() {
+      settings.createLock().set({'wifi.connect_via_settings': false});
+      gWifiManager.forget(network);
+      // get available network list
+      gNetworkList.scan();
+      gCurrentNetwork = null;
+    }
+
+    // generic wifi property dialog
+    function wifiDialog(dialogID, callback, key) {
+      var dialog = document.getElementById(dialogID);
+
+      // authentication fields
+      var identity, password, showPassword, eap,
+          authPhase2, certificate, description;
+
+      if (dialogID != 'wifi-status') {
+        identity = dialog.querySelector('input[name=identity]');
+        identity.value = network.identity || '';
+
+        password = dialog.querySelector('input[name=password]');
+        password.type = 'password';
+        password.value = network.password || '';
+
+        showPassword = dialog.querySelector('input[name=show-pwd]');
+        showPassword.checked = false;
+        showPassword.onchange = function() {
+          password.type = this.checked ? 'text' : 'password';
+        };
+
+        eap = dialog.querySelector('li.eap select');
+        // Once Bug 917102 landed, we could remove the detection.
+        // Detect platform is supporting certificate or not..
+        if (!gWifiManager.getImportedCerts) {
+          console.warn('Import certificate API is not ready yet!');
+          // API is not ready yet.
+          // Remove the EAP methods(PEAP, TLS, TTLS) which are not supported.
+          while (eap.options.length != 1) {
+            eap.remove(1);
+          }
+        }
+
+        authPhase2 = dialog.querySelector('li.auth-phase2 select');
+        certificate = dialog.querySelector('li.server-certificate select');
+        loadImportedCertificateOptions(certificate);
+        description = dialog.querySelector('li.server-certificate-description');
+      }
+
+      if (dialogID === 'wifi-joinHidden') {
+        network.hidden = true;
+
+        // Make sure ssid length is less then 32 bytes.
+        var ssid = dialog.querySelector('input[name=ssid]');
+        ssid.oninput = function() {
+          var ssidStr = ssid.value;
+          // Non-ASCII chars in SSID will be encoded by UTF-8, and length of
+          // each char might be longer than 1 byte.
+          // Use encodeURIComponent() to encode ssid, then calculate correct
+          // length.
+          if (encodeURIComponent(ssidStr).replace(/%[\w\d]{2}/g, '1')
+                .length > 32) {
+            ssid.value = ssidStr.substring(0, ssidStr.length - 1);
+          }
+        };
+      }
+
+      // disable the "OK" button if the password is too short
+      if (password) {
+        var checkPassword = function checkPassword() {
+          dialog.querySelector('button[type=submit]').disabled =
+            !WifiHelper.isValidInput(key,
+                                     password.value,
+                                     identity.value,
+                                     eap.value);
+        };
+        eap.onchange = function() {
+          checkPassword();
+          changeDisplay(key);
+        };
+        password.oninput = checkPassword;
+        identity.oninput = checkPassword;
+        checkPassword();
+      }
+
+      // initialisation
+      var keys = WifiHelper.getSecurity(network);
+      var security = (keys && keys.length) ? keys.join(', ') : '';
+      var sl = Math.min(Math.floor(network.relSignalStrength / 20), 4);
+      var updateBaseStationInfo = function update_base_station_info() {
+        dialog.querySelector('[data-ssid]').textContent = network.ssid;
+        dialog.querySelector('[data-signal]').textContent =
+            _('signalLevel' + sl);
+        dialog.querySelector('[data-security]').textContent =
+            security || _('securityNone');
+        dialog.dataset.security = security;
+      };
+      switch (dialogID) {
+        case 'wifi-status':
+          // we're connected, let's display some connection info
+          var ipAddress = dialog.querySelector('[data-ip]'); // IP address
+          var speed = dialog.querySelector('[data-speed]'); // link speed
+          var updateNetInfo = function() {
+            var info = gWifiManager.connectionInformation;
+            ipAddress.textContent = info.ipAddress || '';
+            speed.textContent =
+                _('linkSpeedMbs', { linkSpeed: info.linkSpeed });
+          };
+          gWifiManager.connectionInfoUpdate = updateNetInfo;
+          updateNetInfo();
+          updateBaseStationInfo();
+        break;
+
+        case 'wifi-auth':
+          // network info -- #wifi-auth
+          updateBaseStationInfo();
+          changeDisplay(security);
+          break;
+
+        case 'wifi-joinHidden':
+          var security = dialog.querySelector('select');
+          var onSecurityChange = function() {
+            key = security.selectedIndex ? security.value : '';
+            WifiHelper.setSecurity(network, [key]);
+            dialog.dataset.security = key;
+            checkPassword();
+            changeDisplay(key);
+          };
+          security.onchange = onSecurityChange;
+          onSecurityChange();
+          break;
+      }
+
+      // change element display
+      function changeDisplay(security) {
+        if (dialogID !== 'wifi-status') {
+          if (security === 'WEP' || security === 'WPA-PSK') {
+            identity.parentNode.style.display = 'none';
+            password.parentNode.style.display = 'block';
+            authPhase2.parentNode.parentNode.style.display = 'none';
+            certificate.parentNode.parentNode.style.display = 'none';
+            description.style.display = 'none';
+          } else if (security === 'WPA-EAP') {
+            if (eap) {
+              switch (eap.value) {
+                case 'SIM':
+                  identity.parentNode.style.display = 'none';
+                  password.parentNode.style.display = 'none';
+                  authPhase2.parentNode.parentNode.style.display = 'none';
+                  certificate.parentNode.parentNode.style.display = 'none';
+                  description.style.display = 'none';
+                  break;
+                case 'PEAP':
+                case 'TLS':
+                case 'TTLS':
+                  identity.parentNode.style.display = 'block';
+                  password.parentNode.style.display = 'block';
+                  authPhase2.parentNode.parentNode.style.display = 'block';
+                  certificate.parentNode.parentNode.style.display = 'block';
+                  description.style.display = 'block';
+                  break;
+                default:
+                  break;
+              }
+            }
+          } else {
+            identity.parentNode.style.display = 'none';
+            password.parentNode.style.display = 'none';
+          }
+        }
+      }
+
+      // reset dialog box
+      function reset() {
+        if (speed) {
+          gWifiManager.connectionInfoUpdate = null;
+        }
+        if (dialogID != 'wifi-status') {
+          identity.value = '';
+          password.value = '';
+          showPassword.checked = false;
+        }
+      }
+
+      // OK|Cancel buttons
+      function submit() {
+        if (dialogID === 'wifi-joinHidden') {
+          network.ssid = dialog.querySelector('input[name=ssid]').value;
+          if (window.MozWifiNetwork !== undefined) {
+            network = new window.MozWifiNetwork(network);
+          }
+        }
+        if (key) {
+          WifiHelper.setPassword(network,
+                                 password.value,
+                                 identity.value,
+                                 eap.value,
+                                 authPhase2.value,
+                                 certificate.value);
+        }
+        if (callback) {
+          callback();
+          if (dialogID === 'wifi-joinHidden') {
+            gKnownNetworkList.scan();
+          }
+        }
+        reset();
+      };
+
+      // show dialog box
+      openDialog(dialogID, submit, reset);
+    }
+  }
+
+  // update network state, called only when wifi enabled.
+  function updateNetworkState() {
+    var networkStatus = gWifiManager.connection.status;
+    /**
+     * gCurrentNetwork : user activated current network
+     * gWifiManager.connection.network : system activated current network
+     *
+     * Main difference between |gCurrentNetwork| and |gWifiManager.connection.
+     * network| is that we can't tell if network is known while connecting by
+     * |gWifiManager.connectiohn.network.known| because it will always be true.
+     * Instead, we use |gCurrentNetwork| to indicate if current connecting
+     * network is new or known network.
+     *
+     * When system connect to network by user's tap on UI, |gCurrentNetwork|
+     * will point to same network as |gWifiManager.connection.network|.
+     * On the other hand, if system connect to network automatically under
+     * conditions like wifi enable, move into AP's range, or reconnect to
+     * other network after delete current connected network, |gCurrentNetwork|
+     * will be null, while |gWifiManager.connection.network| contains
+     * information about current network.
+     */
+    var currentNetwork = gCurrentNetwork || gWifiManager.connection.network;
+    var networkProp = currentNetwork ? {ssid: currentNetwork.ssid} : null;
+
+    // networkStatus has one of the following values:
+    // connecting, associated, connected, connectingfailed, disconnected.
+    gNetworkList.display(currentNetwork, networkStatus);
+
+    gWifiInfoBlock.textContent =
+        _('fullStatus-' + networkStatus, networkProp);
+
+    if (networkStatus === 'connectingfailed' && gCurrentNetwork) {
+      settings.createLock().set({'wifi.connect_via_settings': false});
+      if (gCurrentNetwork.known === false) {
+        // Connection fail on user-activated unknown network, should be wrong
+        // password, delete network and force a new authentication dialog.
+        delete(gCurrentNetwork.password);
+        gWifiManager.forget(gCurrentNetwork);
+      }
+      gCurrentNetwork = null;
+    } else if (networkStatus === 'disconnected') {
+      gCurrentNetwork = null;
+    }
+
+    if (gWpsInProgress) {
+      if (networkStatus !== 'disconnected') {
+        gWpsInfoBlock.textContent = gWifiInfoBlock.textContent;
+      }
+      if (networkStatus === 'connected' ||
+          networkStatus === 'wps-timedout' ||
+          networkStatus === 'wps-failed' ||
+          networkStatus === 'wps-overlapped') {
+        gWpsInProgress = false;
+        wpsStatusReset();
+      }
+    }
+  }
+
+  function setMozSettingsEnabled(value) {
+    gWifiCheckBox.checked = value;
+    if (value) {
+      /**
+       * gWifiManager may not be ready (enabled) at this moment.
+       * To be responsive, show 'initializing' status and 'search...' first.
+       * A 'scan' would be called when gWifiManager is enabled.
+       */
+      gWifiInfoBlock.textContent = _('fullStatus-initializing');
+      gNetworkList.clear(true);
+      document.querySelector('#wps-column').hidden = false;
+    } else {
+      gWifiInfoBlock.textContent = _('disabled');
+      if (gWpsInProgress) {
+        gWpsInfoBlock.textContent = gWifiInfoBlock.textContent;
+      }
+      gNetworkList.clear(false);
+      gNetworkList.autoscan = false;
+      document.querySelector('#wps-column').hidden = true;
+    }
+  }
+
+  var lastMozSettingValue = true;
+
+  // register an observer to monitor wifi.enabled changes
+  settings.addObserver('wifi.enabled', function(event) {
+    if (lastMozSettingValue == event.settingValue)
+      return;
+
+    lastMozSettingValue = event.settingValue;
+    setMozSettingsEnabled(event.settingValue);
+  });
+
+  // startup, update status
+  var req = settings.createLock().get('wifi.enabled');
+  req.onsuccess = function wf_getStatusSuccess() {
+    lastMozSettingValue = req.result['wifi.enabled'];
+    setMozSettingsEnabled(lastMozSettingValue);
+    if (lastMozSettingValue) {
+      /**
+       * At this moment, gWifiManager has probably been enabled.
+       * This means it won't invoke any status changed callback function;
+       * therefore, we have to get network list here.
+       */
+      updateNetworkState();
+      gNetworkList.scan();
+    }
+  };
+});
+
diff --git a/apps/settings/js/wifi_select_certificate_file.js b/apps/settings/js/wifi_select_certificate_file.js
new file mode 100644
index 0000000..0fd296f
--- /dev/null
+++ b/apps/settings/js/wifi_select_certificate_file.js
@@ -0,0 +1,120 @@
+/* -*- Mode: js; js-indent-level: 2; indent-tabs-mode: nil -*- */
+/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */
+
+'use strict';
+
+// handle Wi-Fi select certificate file page
+navigator.mozL10n.once(function wifiSelectCertificateFile() {
+  var gWifiManager = WifiHelper.getWifiManager();
+
+  // select certificate files to import
+  var gSelectCertificateFiles = (function certificateFiles(list) {
+    var certificateFiles = [];
+
+    // parse extension
+    function _parseExtension(filename) {
+      var array = filename.split('.');
+      return array.length > 1 ? array.pop() : '';
+    }
+
+    // parse filename
+    function _parseFilename(path) {
+      return path.slice(path.lastIndexOf('/') + 1, path.lastIndexOf('.'));
+    }
+
+    // clear the certificate files list
+    function clear() {
+      while (list.hasChildNodes()) {
+        list.removeChild(list.lastChild);
+      }
+    }
+
+    // scan and list certificate files from SDCard
+    function scan() {
+      clear();
+      var storages = navigator.getDeviceStorages('sdcard');
+      var cursor = enumerateAll(storages, '');
+
+      cursor.onsuccess = function() {
+        var file = cursor.result;
+        if (file) {
+          var extension = _parseExtension(file.name);
+          var cerExtension = ['cer', 'crt', 'pem', 'der'];
+          if (cerExtension.indexOf(extension) > -1) {
+            certificateFiles.push(file);
+
+            var a = document.createElement('a');
+            a.textContent = _parseFilename(file.name);
+            var inputNickname =
+              document.getElementById('certificate-file-nickname');
+            a.onclick = function settingsNicknameForImportCertificateFile() {
+              // given a default nickname from filename
+              inputNickname.value = a.textContent;
+              openDialog('wifi-enterCertificateNickname', function submit() {
+                var certRequest = gWifiManager.importCert(file,
+                                                          '',
+                                                          inputNickname.value);
+                // Gray out all item of certificate files
+                // since we are importing other file.
+                var items = list.querySelectorAll('li');
+                for (var i = 0; i < items.length; i++) {
+                  items[i].classList.add('disabled');
+                }
+
+                certRequest.onsuccess = function() {
+                  // direct dialog to "wifi-manageCertificates"
+                  Settings.currentPanel = '#wifi-manageCertificates';
+                  // scan certificate list again
+                  // while the panel is ready #wifi-manageCertificates
+                  // dispatch event for gCertificateList.scan();
+                  dispatchEvent(new CustomEvent('certificate-imported'));
+                };
+                certRequest.onerror = function() {
+                  // Pop out alert message for certificate import failed
+                  var dialog =
+                    document.getElementById('certificate-import-failed');
+                  dialog.hidden = false;
+                  dialog.onsubmit = function confirm() {
+                    dialog.hidden = true;
+                  };
+                  // Re-enable all items of certificate files
+                  // since import file process is completed.
+                  var items = list.querySelectorAll('li');
+                  for (var i = 0; i < items.length; i++) {
+                    if (items[i].classList.contains('disabled'))
+                      items[i].classList.remove('disabled');
+                  }
+                };
+              });
+            };
+            var li = document.createElement('li');
+            li.appendChild(a);
+            list.appendChild(li);
+          }
+
+          cursor.continue();
+        }
+      };
+      cursor.onerror = function() {
+        var msg = 'failed to get file:' +
+                  cursor.error.name;
+        console.warn(msg);
+      };
+    }
+
+    // API
+    return {
+      scan: scan
+    };
+  }) (document.getElementById('wifi-certificate-files-List'));
+
+  // scan certificate file while init this page first time
+  gSelectCertificateFiles.scan();
+
+  // when open dialog to select certificate file page,
+  // update the certificate files via device storage
+  window.addEventListener('scan-certificate-file', function() {
+    gSelectCertificateFiles.scan();
+  });
+});
+
diff --git a/apps/settings/locales/settings.en-US.properties b/apps/settings/locales/settings.en-US.properties
index b0bb0fe..f1562cf 100644
--- a/apps/settings/locales/settings.en-US.properties
+++ b/apps/settings/locales/settings.en-US.properties
@@ -262,10 +262,6 @@ wapPushMessages= WAP Push messages
 wapPush=WAP Push
 cellBroadcastMessages=Cell broadcast messages
 cellBroadcast=Cell broadcast
-messagingInformation = Information
-# LOCALIZATION NOTE (messagingSMSC): SMSC stands for Short Message Service Center
-messagingSMSC = SMSC
-unknownSMSC = Unknown number

 # Connectivity :: Cellular & Data
 cellularAndData=Cellular & Data
@@ -620,6 +616,13 @@ notice=Notice
 search-header=Search
 search-engine=Search Engine
 search-suggestions=Search Suggestions
+# LOCALIZATION NOTE (search-suggestions-button, search-suggestions-header):
+# If you leave the original en-US value "{{search-suggestions}}" in the following
+# strings, the localization will be automatically picked from the existing
+# string with ID "search-suggestions". If you need to adapt your localization to
+# the reduced space available in header or button, you can use shorter strings here.
+search-suggestions-button={{search-suggestions}}
+search-suggestions-header={{search-suggestions}}
 search-suggestions-description=The characters you type when entering a search are sent to multiple search providers and will be used to send you search suggestions. Additional data charges may apply when using this feature.

 # Personalization :: Homescreens
@@ -635,8 +638,7 @@ changeHomescreenButton=Change
 description=Description

 # Personalization :: Keyboard
-keyboardSettings=Keyboard Settings
-selectedKeyboards=Selected Keyboards
+installedInputMethods=Installed input methods
 keyboards=Keyboards
 # LOCALIZATION NOTE (keyboards-header): if you leave the original
 # en-US value "{{keyboards}}" in the following string, the localization
@@ -648,14 +650,20 @@ numberKeyboardLayouts=Number layouts
 optionKeyboardLayouts=Option layouts
 keypad=Keypad
 dialpad=Dial Pad
-selectKeyboards=Select Keyboards
-
-# LOCALIZATION NOTE (selectKeyboards-header): if you leave the original
-# en-US value "{{selectKeyboards}}" in the following string, the localization
-# will be automatically picked from the existing string with ID "selectKeyboards".
+selectedKeyboards=Selected keyboards
+# LOCALIZATION NOTE (selectedKeyboards-header): if you leave the original
+# en-US value "{{selectedKeyboards}}" in the following string, the localization
+# will be automatically picked from the existing string with ID "selectedKeyboards".
+# If you need to adapt your localization to the reduced space available
+# in headers, you can use a shorter string here.
+selectedKeyboards-header={{selectedKeyboards}}
+addMoreKeyboards=Add more keyboards
+# LOCALIZATION NOTE (addMoreKeyboards-header): if you leave the original
+# en-US value "{{addMoreKeyboards}}" in the following string, the localization
+# will be automatically picked from the existing string with ID "addMoreKeyboards".
 # If you need to adapt your localization to the reduced space available
 # in headers, you can use a shorter string here.
-selectKeyboards-header={{selectKeyboards}}
+addMoreKeyboards-header={{addMoreKeyboards}}

 mustHaveOneKeyboard=At least one {{type}} keyboard should be selected
 keyboardType-text=text
@@ -782,11 +790,17 @@ incorrect-passcode=Passcode is incorrect
 passcode-doesnt-match=Passcode doesn’t match. Try again.
 confirm-passcode=Confirm passcode
 immediately=Immediately
+after-five-seconds=After 5 seconds
+after-fifteen-seconds=After 15 seconds
+after-thirty-seconds=After 30 seconds
 after-one-minute=After 1 minute
+after-two-minutes=After 2 minutes
 after-five-minutes=After 5 minutes
+after-ten-minutes=After 10 minutes
 after-fifteen-minutes=After 15 minutes
 after-thirty-minutes=After 30 minutes
 after-one-hour=After 1 hour
+after-four-hours=After 4 hours
 require-passcode=Require passcode
 change-passcode=Change passcode

@@ -855,8 +869,8 @@ doNotTrackActions=Tell websites and apps that I do not want to be tracked
 allowTracking=Tell websites and apps that I want to be tracked
 doNotHavePrefOnTracking=Do not tell websites and apps anything about my tracking preferences
 doNotTrack-dt=How does Do Not Track work?
-doNotTrack-dd1=When you turn on Do Not Track, your device tells every website and app (as well as advertisers and other content providers) that you do not want your behavior tracked.
-doNotTrack-dd2=Turning on Do Not Track will not affect your ability to sign in to websites nor cause your device to forget your private information, such as the contents of shopping carts, location information or sign-in information.
+doNotTrack-dd1=When you turn on Do Not Track, your device tells every website and app (as well as advertisers and other content providers) that you don’t want your behavior tracked.
+doNotTrack-dd2=Turning on Do Not Track won’t affect your ability to sign in to websites nor cause your device to forget your private information, such as the contents of shopping carts, location information or sign-in information.


 #=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#
@@ -1112,7 +1126,6 @@ home-gesture=Home gesture
 continuous-transition=Continuous transition
 debug-gaia-enabled=Gaia debug traces
 app-transition=App transition
-app-brandcolor=App brand color
 app-suspending=App suspending
 window-management=Window management

diff --git a/apps/settings/manifest.webapp b/apps/settings/manifest.webapp
index 2f5a8d9..ff6c4c0 100644
--- a/apps/settings/manifest.webapp
+++ b/apps/settings/manifest.webapp
@@ -31,9 +31,7 @@
     "audio-channel-notification":{},
     "audio-channel-alarm":{},
     "downloads":{},
-    "nfc":{ "access": "readonly" },
-    "sms":{},
-    "firefox-accounts": {}
+    "nfc":{ "access": "readonly" }
   },
   "activities": {
     "configure": {
diff --git a/apps/settings/style/apps.css b/apps/settings/style/apps.css
index f9364a0..d806523 100644
--- a/apps/settings/style/apps.css
+++ b/apps/settings/style/apps.css
@@ -45,3 +45,11 @@ html[dir="rtl"] #homescreens ul li img {
 #homescreen [data-type="list"] li:first-child {
   padding-bottom: 1rem;
 }
+
+#homescreen label {
+  display: block;
+  font-size: 1.9rem;
+  line-height: 1.9rem;
+  margin: 0;
+  padding: 1.5rem 1.5rem 1rem;
+}
diff --git a/apps/settings/style/lists.css b/apps/settings/style/lists.css
index a660ad4..9813302 100644
--- a/apps/settings/style/lists.css
+++ b/apps/settings/style/lists.css
@@ -151,9 +151,8 @@ ul li > label.pack-checkbox > .color-preview:before {
   height: 2rem;
   width: 2rem;
   content: "";
-  margin: -1.1rem 0 0 -3rem;
-  top: 50%;
-  position: absolute;
+  display: inline-block;
+  margin: 0 1rem -0.2rem -1rem;
 }

 ul li > label.pack-checkbox > .warning-counter:before {
@@ -194,9 +193,9 @@ ul li > label.pack-checkbox > .memory-monitor:before {

 ul li > label.pack-checkbox > .memory-item:before {
   background-color: lightslategrey;
-  height: 2rem;
-  width: 2rem;
-  margin: -1.1rem 0 0 -3rem;
+  height: 1.2rem;
+  width: 1.2rem;
+  margin: 0 1rem 0.1rem -0.2rem;
 }


@@ -476,11 +475,7 @@ html[dir="rtl"] ul li.bluetooth-device > a{
 }

 html[dir="rtl"] ul li > label.pack-checkbox > .color-preview:before {
-  margin-left: 0;
-  margin-right: -3rem;
+  margin-left: 1rem;
+  margin-right: -1rem;
 }

-html[dir="rtl"] ul li > label.pack-checkbox > .memory-item:before {
-  margin-left: 0;
-  margin-right: -3rem;
-}
diff --git a/apps/settings/style/settings.css b/apps/settings/style/settings.css
index 621db17..ea25a8d 100644
--- a/apps/settings/style/settings.css
+++ b/apps/settings/style/settings.css
@@ -10,6 +10,7 @@ html, body {
   height: 100%;
   font-size: 10px;
   overflow: hidden;
+  background-color: #f4f4f4;
 }


@@ -382,7 +383,7 @@ section ul.operate-certificate {
   display: none;
 }

-#menuItem-callWaiting[data-state="unknown"] .checkbox-label input ~ span:after {
+#menuItem-callWaiting[data-state="unknown"] .checkbox-label {
   display: none;
 }

@@ -763,32 +764,8 @@ section[data-dialog] > header:first-child .icon.icon-back {
 }

 /******************************************************************************
- * Developer and Developer HUD
- *
- * Override default behavior to let checkbox text wrap on multiple lines
- */
-
-#developer ul li > label > span,
-#developer-hud ul li > label > span {
-  overflow: visible;
-  white-space: normal;
-  min-height: 6rem;
-  height: auto;
-  line-height: 2.3rem;
-  padding: 1.9rem 4rem 1.5rem 3rem;
-}
-
-#developer-hud ul li > label > span.color-preview {
-  padding-left: 5rem;
-}
-
-#developer-hud ul li.hud-separator {
-  border-top: 0.1rem solid #e6e6e3;
-}
-
-/******************************************************************************
 * App Permissions
-*
+*
 * Note: The reason why we need this style is because element.hidden will make
 * the CSS specificity 0,0,1,0 (Yes, it is a pseudo class). And because our BB
 * 's CSS specificity is much higher than this, we have to override it again
@@ -930,8 +907,3 @@ html[dir="rtl"] ul li > label.range-icons.volume:before {
 html[dir="rtl"] ul li > label.range-icons.volume input {
   margin-right: 5.8rem;
 }
-
-html[dir="rtl"] #developer-hud ul li > label > span.color-preview {
-  padding-left: 0;
-  padding-right: 5rem;
-}
diff --git a/apps/settings/test/marionette/app/system_app.js b/apps/settings/test/marionette/app/system_app.js
index 98b478b..c2d59fc 100644
--- a/apps/settings/test/marionette/app/system_app.js
+++ b/apps/settings/test/marionette/app/system_app.js
@@ -16,7 +16,7 @@ module.exports = SystemApp;

 SystemApp.Selectors = {
   'actionMenu': 'form[data-z-index-level="action-menu"]',
-  'valueSelector': '.value-selector',
+  'valueSelector': '#value-selector',
   'confirmOkButton': '.appWindow.active .modal-dialog-confirm-ok'
 };

diff --git a/apps/settings/test/marionette/tests/manifest.ini b/apps/settings/test/marionette/tests/manifest.ini
deleted file mode 100644
index e30953b..0000000
--- a/apps/settings/test/marionette/tests/manifest.ini
+++ /dev/null
@@ -1,19 +0,0 @@
-[sound_settings_test.js]
-[language_settings_test.js]
-[root_settings_test.js]
-[bluetooth_settings_test.js]
-[hotspot_wifi_settings_test.js]
-[keyboard_settings_test.js]
-[app_permission_settings_test.js]
-[battery_settings_test.js]
-[support_settings_test.js]
-[media_storage_settings_test.js]
-[notifications_settings_test.js]
-[do_not_track_settings_test.js]
-[improve_settings_test.js]
-[display_settings_test.js]
-[app_storage_settings_test.js]
-[message_settings_test.js]
-[airplane_mode_settings_test.js]
-[ime_uninstallation_test.js]
-[screen_lock_settings_test.js]
diff --git a/apps/settings/test/unit/.jshintrc b/apps/settings/test/unit/.jshintrc
index cb1b65a..3c02925 100644
--- a/apps/settings/test/unit/.jshintrc
+++ b/apps/settings/test/unit/.jshintrc
@@ -14,7 +14,6 @@
     "testRequire",
     "sinon",
     "mocha",
-    "loadBodyHTML",
-    "Promise"
+    "loadBodyHTML"
   ]
 }
diff --git a/apps/settings/test/unit/_about_more_info.html b/apps/settings/test/unit/_about_more_info.html
index 94e020f..a183e89 100644
--- a/apps/settings/test/unit/_about_more_info.html
+++ b/apps/settings/test/unit/_about_more_info.html
@@ -1,5 +1,5 @@
 <li>
-  <small id="deviceInfo-imeis"></small>
+  <small id="deviceInfo-imei"></small>
 </li>
 <li>
   <small id="deviceInfo-iccids">
diff --git a/apps/settings/test/unit/_wifi_utils.html b/apps/settings/test/unit/_wifi_utils.html
deleted file mode 100644
index 91a9440..0000000
--- a/apps/settings/test/unit/_wifi_utils.html
+++ /dev/null
@@ -1,27 +0,0 @@
-<div id="wifi-auth">
-  <div>
-    <input type="text" name="identity">
-  </div>
-  <div>
-    <input type="text" name="password">
-  </div>
-  <div>
-    <li class="auth-phase2">
-      <select></select>
-    </li>
-  </div>
-  <div>
-    <li class="server-certificate">
-      <select></select>
-    </li>
-  </div>
-  <li class="eap">
-    <select>
-      <option value="SIM"></option>
-      <option value="PEAP"></option>
-      <option value="TLS"></option>
-      <option value="TTLS"></option>
-    </select>
-  </li>
-  <li class="server-certificate-description"></li>
-</div>
diff --git a/apps/settings/test/unit/about_more_info_test.js b/apps/settings/test/unit/about_more_info_test.js
index 91668f1..54d5b8d 100644
--- a/apps/settings/test/unit/about_more_info_test.js
+++ b/apps/settings/test/unit/about_more_info_test.js
@@ -105,11 +105,11 @@ suite('about >', function() {
   });

   suite('loadImei >', function() {
-    var deviceInfoImeis;
+    var deviceInfoImei;
     var sandbox = sinon.sandbox.create();

     setup(function() {
-      deviceInfoImeis = document.getElementById('deviceInfo-imeis');
+      deviceInfoImei = document.getElementById('deviceInfo-imei');
     });

     teardown(function() {
@@ -117,28 +117,25 @@ suite('about >', function() {
     });

     test('the list item should be hidden when mozMobileConnections is ' +
-      'unavailable', function(done) {
+      'unavailable', function() {
         navigator.mozMobileConnections = null;
-        AboutMoreInfo.loadImei().then(function() {
-          assert.isTrue(deviceInfoImeis.parentNode.hidden);
-          navigator.mozMobileConnections = MockNavigatorMozMobileConnections;
-        }).then(done, done);
+        AboutMoreInfo.loadImei();
+        assert.isTrue(deviceInfoImei.parentNode.hidden);
+        navigator.mozMobileConnections = MockNavigatorMozMobileConnections;
     });

     test('the list item should be hidden when mozTelephony is unavalilable',
-      function(done) {
+      function() {
         navigator.mozTelephony = null;
-        AboutMoreInfo.loadImei().then(function() {
-          assert.isTrue(deviceInfoImeis.parentNode.hidden);
-          navigator.mozTelephony = MockNavigatorMozTelephony;
-        }).then(done, done);
+        AboutMoreInfo.loadImei();
+        assert.isTrue(deviceInfoImei.parentNode.hidden);
+        navigator.mozTelephony = MockNavigatorMozTelephony;
     });

-    test('should show correct value when getting an IMEI successfully',
-      function(done) {
+    test('should show correct value when with getting imei successfully',
+      function() {
         var req = {
           result: {
-            serviceCode: 'scImei',
             statusMessage: 'fakeImei'
           }
         };
@@ -146,85 +143,40 @@ suite('about >', function() {
           function() {
             return req;
         });
-        var promise = AboutMoreInfo.loadImei();
+        AboutMoreInfo.loadImei();
         req.onsuccess();

-        promise.then(function() {
-          var span = deviceInfoImeis.querySelector('span');
-          assert.equal(span.textContent, 'fakeImei');
-          assert.equal(span.dataset.slot, 0);
-        }).then(done, done);
+        assert.equal(deviceInfoImei.textContent, 'fakeImei');
     });

     test('should show correct value when without correct result',
-      function(done) {
+      function() {
         sandbox.spy(MockL10n, 'localize');
         var req = {};
         sandbox.stub(MockNavigatorMozMobileConnections[0], 'sendMMI',
           function() {
             return req;
         });
-        var promise = AboutMoreInfo.loadImei();
+        AboutMoreInfo.loadImei();
         req.onsuccess();

-        promise.then(function() {
-          var span = deviceInfoImeis.querySelector('span');
-          sinon.assert.calledWith(MockL10n.localize, span, 'unavailable');
-        }).then(done, done);
+        sinon.assert.calledWith(MockL10n.localize, deviceInfoImei,
+          'unavailable');
     });

     test('should show correct value when with getting imei failed',
-      function(done) {
+      function() {
         sandbox.spy(MockL10n, 'localize');
         var req = {};
         sandbox.stub(MockNavigatorMozMobileConnections[0], 'sendMMI',
           function() {
             return req;
         });
-        var promise = AboutMoreInfo.loadImei();
+        AboutMoreInfo.loadImei();
         req.onerror();

-        promise.then(function() {
-          var span = deviceInfoImeis.querySelector('span');
-          sinon.assert.calledWith(MockL10n.localize, span, 'unavailable');
-        }).then(done, done);
-    });
-
-    suite('multiple sim', function() {
-      setup(function() {
-        MockNavigatorMozMobileConnections.mAddMobileConnection();
-      });
-
-      test('should show multiple IMEI codes', function(done) {
-        var reqs = [{
-          result: {
-            serviceCode: 'scImei',
-            statusMessage: 'fakeImei1'
-          }
-        }, {
-          result: {
-            serviceCode: 'scImei',
-            statusMessage: 'fakeImei2'
-          }
-        }];
-
-        reqs.forEach(function(val, index) {
-          sandbox.stub(MockNavigatorMozMobileConnections[index], 'sendMMI',
-            function() { return val; });
-        });
-
-        var promise = AboutMoreInfo.loadImei();
-        reqs.forEach(function(req) { req.onsuccess(); });
-
-        promise.then(function() {
-          var spans = deviceInfoImeis.querySelectorAll('span');
-          reqs.forEach(function(reqs, index) {
-            assert.equal(spans[index].textContent,
-              'IMEI ' + (index + 1) + ': fakeImei' + (index + 1));
-            assert.equal(spans[index].dataset.slot, index);
-          });
-        }).then(done, done);
-      });
+        sinon.assert.calledWith(MockL10n.localize, deviceInfoImei,
+          'unavailable');
     });
   });
 });
diff --git a/apps/settings/test/unit/findmydevice_panel_test.js b/apps/settings/test/unit/findmydevice_panel_test.js
index 36a47a0..9c4ddce 100644
--- a/apps/settings/test/unit/findmydevice_panel_test.js
+++ b/apps/settings/test/unit/findmydevice_panel_test.js
@@ -3,8 +3,6 @@
 /* global HtmlImports */
 /* global FindMyDevice */
 /* global MockSettingsListener */
-/* global MockSettingsHelper */
-/* global IAC_API_WAKEUP_REASON_TRY_DISABLE */

 'use strict';

@@ -16,11 +14,9 @@ require('/shared/js/html_imports.js');

 require('/shared/test/unit/mocks/mocks_helper.js');
 require('/shared/test/unit/mocks/mock_settings_listener.js');
-require('/shared/test/unit/mocks/mock_settings_helper.js');
-require('/shared/js/findmydevice_iac_api.js');

 var mocksForFindMyDevice = new MocksHelper([
-  'SettingsListener', 'SettingsHelper'
+  'SettingsListener'
 ]).init();

 suite('Find My Device panel > ', function() {
@@ -46,7 +42,6 @@ suite('Find My Device panel > ', function() {
       onlogout: null,
       onready: null,
       onerror: null,
-      oncancel: null,

       watch: function(options) {
         this.onlogin = options.onlogin;
@@ -59,8 +54,8 @@ suite('Find My Device panel > ', function() {
         });
       },

-      request: function(options) {
-        this.oncancel = options.oncancel;
+      request: function() {
+        // noop
       },
     };

@@ -101,32 +96,21 @@ suite('Find My Device panel > ', function() {
   });

   test('prompt for login when logged out of FxA', function() {
-    MockSettingsListener.mCallbacks['findmydevice.logged-in'](false);
+    MockMozId.onlogout();
     assert.isFalse(signinSection.hidden);
     assert.isTrue(settingsSection.hidden);
   });

-  test('consider ourselves logged out if onerror fires when not offline',
-  function() {
-    MockMozId.onerror('{"name": "NOT_OFFLINE"}');
-    assert.isFalse(
-      MockSettingsHelper.instances['findmydevice.logged-in'].value);
-  });
-
-  test('persist panel if onerror fires due to being offline', function() {
-    MockSettingsListener.mCallbacks['findmydevice.logged-in'](true);
-    MockMozId.onerror('{"name": "OFFLINE"}');
-    assert.isFalse(settingsSection.hidden);
-    assert.isTrue(signinSection.hidden);
-
-    MockSettingsListener.mCallbacks['findmydevice.logged-in'](false);
-    MockMozId.onerror('{"name": "OFFLINE"}');
+  test('bug 1030597 - prompt for login if onerror fires', function() {
+    signinSection.hidden = true;
+    settingsSection.hidden = true;
+    MockMozId.onerror();
     assert.isTrue(settingsSection.hidden);
     assert.isFalse(signinSection.hidden);
   });

   test('show settings when logged in to FxA', function() {
-    MockSettingsListener.mCallbacks['findmydevice.logged-in'](true);
+    MockMozId.onlogin();
     assert.isFalse(settingsSection.hidden);
     assert.isTrue(signinSection.hidden);
   });
@@ -147,33 +131,19 @@ suite('Find My Device panel > ', function() {

   test('enable button after watch fires onerror', function() {
     loginButton.disabled = true;
-    MockMozId.onerror('{"name": "NOT_OFFLINE"}');
+    MockMozId.onerror();
     assert.isFalse(!!loginButton.disabled);
   });

-  test('auto-enable if not registered when logging in using the login button',
-  function(done) {
-    MockSettingsHelper('findmydevice.registered').set(false);
-
+  test('auto-enable when logging in using the login button', function() {
     MockMozId.onlogout();
     loginButton.click();
     MockMozId.onlogin();

-    MockSettingsHelper('findmydevice.enabled').get(function(enabled) {
-      assert.isTrue(enabled);
-      done();
-    });
-  });
-
-  test('don\'t auto-enable if registered when logging in with the login button',
-  function() {
-    MockSettingsHelper('findmydevice.registered').set(true);
-
-    MockMozId.onlogout();
-    loginButton.click();
-    MockMozId.onlogin();
-
-    assert.isUndefined(MockSettingsHelper.instances['findmydevice.enabled']);
+    var lock = MockSettingsListener.getSettingsLock().locks.pop();
+    assert.deepEqual({
+      'findmydevice.enabled': true
+    }, lock, 'check whether findmydevice.enabled was set automatically');
   });

   test('bug 997310 - don\'t disable on non-interactive login', function() {
@@ -198,37 +168,6 @@ suite('Find My Device panel > ', function() {
     navigator.mozL10n.localize.reset();
   });

-  test('prevent accidental auto-enable on FxA sign-in', function() {
-    MockMozId.onlogout();
-    loginButton.click();
-    assert.equal(true, window.FindMyDevice._interactiveLogin,
-      'ensure _interactiveLogin is true after login button is clicked');
-    MockMozId.oncancel();
-    assert.equal(false, window.FindMyDevice._interactiveLogin,
-      'ensure _interactiveLogin is false after FxA cancel');
-    MockMozId.onlogin();
-    assert.equal(0, MockSettingsListener.getSettingsLock().locks.length,
-      'ensure findmydevice.enabled was not set automatically on FxA login');
-  });
-
-  test('disallow changes when findmydevice.can-disable is false', function() {
-    MockSettingsListener.mCallbacks['findmydevice.can-disable'](false);
-    assert.isTrue(checkbox.disabled,
-      'checkbox is not disabled while findmydevice.can-disable is false');
-    MockSettingsListener.mCallbacks['findmydevice.can-disable'](true);
-    assert.isFalse(checkbox.disabled,
-      'checkbox is disabled while findmydevice.can-disable is true');
-  });
-
-  test('wake up find my device upon a disable attempt', function() {
-    this.sinon.stub(window, 'wakeUpFindMyDevice');
-    checkbox.checked = true;
-    checkbox.click();
-    assert.ok(window.wakeUpFindMyDevice.calledWith(
-        IAC_API_WAKEUP_REASON_TRY_DISABLE));
-    window.wakeUpFindMyDevice.reset();
-  });
-
   suiteTeardown(function() {
     navigator.mozL10n = realL10n;
     navigator.mozId = realMozId;
diff --git a/apps/settings/test/unit/messaging_test.js b/apps/settings/test/unit/messaging_test.js
index 31c996f..ff71f8f 100644
--- a/apps/settings/test/unit/messaging_test.js
+++ b/apps/settings/test/unit/messaging_test.js
@@ -1,16 +1,11 @@
-/* global Messaging,
-          MocksHelper, MockIccHelper, MockL10n,
-          MockNavigatorSettings, MockNavigatormozMobileMessage
-*/
-
 'use strict';

-require('/shared/test/unit/mocks/mock_icc_helper.js');
-require('/shared/test/unit/mocks/mock_settings_listener.js');
-require('/shared/test/unit/mocks/mock_navigator_moz_settings.js');
+requireApp('settings/shared/test/unit/mocks/mock_icc_helper.js');
+requireApp('settings/shared/test/unit/mocks/mock_navigator_moz_settings.js');

-requireApp('settings/test/unit/mock_navigator_moz_mobile_message.js');
 requireApp('settings/test/unit/mock_l10n.js');
+
+requireApp('settings/shared/test/unit/mocks/mock_settings_listener.js');
 requireApp('settings/js/messaging.js');

 var mocksForMessaging = new MocksHelper([
@@ -19,9 +14,8 @@ var mocksForMessaging = new MocksHelper([
 ]).init();

 suite('Messaging settings', function() {
-  var realMozL10n,
-      realMozSettings,
-      realMozMobileMessage;
+  var realMozSettings;
+  var realMozL10n;
   var elementIds;

   mocksForMessaging.attachTestHelpers();
@@ -32,9 +26,6 @@ suite('Messaging settings', function() {
     realMozSettings = navigator.mozSettings;
     navigator.mozSettings = MockNavigatorSettings;

-    realMozMobileMessage = navigator.mozMobileMessage;
-    navigator.mozMobileMessage = MockNavigatormozMobileMessage;
-
     var messagingNodes =
       '<div>' +
         '<ul>' +
@@ -81,12 +72,6 @@ suite('Messaging settings', function() {
             '</label>' +
           '</li>' +
         '</ul>' +
-        '<ul>' +
-          '<li id="menuItem-smsc" aria-disabled="true" class="hint">' +
-            '<a data-l10n-id="messagingSMSC">SMSC</a>' +
-            '<p class="explanation">Unknown</p>' +
-          '</li>' +
-        '</ul>' +
       '</div>';

     // Insert the nodes just inside the body, after its last child.
@@ -96,7 +81,6 @@ suite('Messaging settings', function() {
   suiteTeardown(function() {
     navigator.mozL10n = realMozL10n;
     navigator.mozSettings = realMozSettings;
-    navigator.mozMobileMessage = realMozMobileMessage;
   });

   setup(function() {
@@ -430,18 +414,4 @@ suite('Messaging settings', function() {
       });
     });
   });
-
-  suite('> SMSC', function() {
-    var fakeNumber;
-
-    setup(function() {
-      fakeNumber = MockNavigatormozMobileMessage.SMSC;
-      Messaging.init();
-    });
-
-    test('display server number', function() {
-      var display = document.getElementById('menuItem-smsc').querySelector('p');
-      assert.equal(display.textContent, fakeNumber);
-    });
-  });
 });
diff --git a/apps/settings/test/unit/mock_l10n.js b/apps/settings/test/unit/mock_l10n.js
index be4d3cb..2d6eef6 100644
--- a/apps/settings/test/unit/mock_l10n.js
+++ b/apps/settings/test/unit/mock_l10n.js
@@ -4,8 +4,7 @@ var MockL10n = {
   get: function get(key, params) {
     return key;
   },
-  localize: function localize(element, l10nId){},
-  setAttributes: function localize(element, l10nId){},
+  localize: function localize(element, l10nId) {},
   ready: function(callback) {
     callback();
   },
diff --git a/apps/settings/test/unit/mock_navigator_moz_mobile_message.js b/apps/settings/test/unit/mock_navigator_moz_mobile_message.js
deleted file mode 100644
index 8d93048..0000000
--- a/apps/settings/test/unit/mock_navigator_moz_mobile_message.js
+++ /dev/null
@@ -1,17 +0,0 @@
-/*exported MockNavigatormozMobileMessage */
-
-'use strict';
-
-var MockNavigatormozMobileMessage = {
-  SMSC: '+4400000000',
-  getSmscAddress: function() {
-    return {
-      result: this.SMSC || '0',
-      set onsuccess(callback) {
-        callback.call(this);
-      },
-      set onerror(e) {}
-    };
-  }
-};
-
diff --git a/apps/settings/test/unit/mock_settings.js b/apps/settings/test/unit/mock_settings.js
index 2d6caf4..c837f86 100644
--- a/apps/settings/test/unit/mock_settings.js
+++ b/apps/settings/test/unit/mock_settings.js
@@ -1,14 +1,9 @@
-/* exported MockSettings */
-/* global MockNavigatorSettings */
 'use strict';
 requireApp('settings/test/unit/mock_navigator_settings.js');

 var MockSettings = {
-  currentPanel: '',
   mSuiteSetup: function() {
     this.mozSettings = MockNavigatorSettings;
-  },
-  mSetup: function() {
-    this.currentPanel = '';
   }
 };
+
diff --git a/apps/settings/test/unit/mock_settings_service.js b/apps/settings/test/unit/mock_settings_service.js
index 7d83896..b0ec4ef 100644
--- a/apps/settings/test/unit/mock_settings_service.js
+++ b/apps/settings/test/unit/mock_settings_service.js
@@ -2,10 +2,7 @@
 define(function() {
   'use strict';
   var MockSettingsService = {
-    navigate: function(panelId, options, callback) {
-      if (typeof callback === 'function') {
-        callback();
-      }
+    navigate: function(panelId) {
       return;
     }
   };
diff --git a/apps/settings/test/unit/mock_settings_utils.js b/apps/settings/test/unit/mock_settings_utils.js
deleted file mode 100644
index edf7020..0000000
--- a/apps/settings/test/unit/mock_settings_utils.js
+++ /dev/null
@@ -1,9 +0,0 @@
-define(function() {
-  'use strict';
-
-  var MockSettingsUtils = {
-    openDialog: function(dialogID, userOptions) {}
-  };
-
-  return MockSettingsUtils;
-});
diff --git a/apps/settings/test/unit/mock_wifi.js b/apps/settings/test/unit/mock_wifi.js
deleted file mode 100644
index f4267bf..0000000
--- a/apps/settings/test/unit/mock_wifi.js
+++ /dev/null
@@ -1,12 +0,0 @@
-define(function() {
-  'use strict';
-  var Wifi = {
-    _elements: {
-      wifiAvailableNetworks: document.createElement('div'),
-      infoItem: document.createElement('div'),
-      scanItem: document.createElement('div')
-    }
-  };
-
-  return Wifi;
-});
diff --git a/apps/settings/test/unit/mock_wifi_context.js b/apps/settings/test/unit/mock_wifi_context.js
deleted file mode 100644
index ee974f9..0000000
--- a/apps/settings/test/unit/mock_wifi_context.js
+++ /dev/null
@@ -1,16 +0,0 @@
-define(function() {
-  'use strict';
-
-  var MockWifiContext = {
-    currentNetwork: {},
-    wps: {
-      selectedAp: '',
-      selectedMethod: '',
-      pin: ''
-    },
-    associateNetwork: function(network) {},
-    forgetNetwork: function(network) {}
-  };
-
-  return MockWifiContext;
-});
diff --git a/apps/settings/test/unit/mock_wifi_utils.js b/apps/settings/test/unit/mock_wifi_utils.js
deleted file mode 100644
index 5c00ac4..0000000
--- a/apps/settings/test/unit/mock_wifi_utils.js
+++ /dev/null
@@ -1,27 +0,0 @@
-define(function() {
-  'use strict';
-  var MockWifiUtils = {
-    _network: {},
-    wifiDialog: function(dialogID, options) {
-      var self = this;
-      if (options.callback) {
-        setTimeout(function() {
-          options.callback(self._network);
-        });
-      }
-    },
-    wifiConnect: function() {},
-    wifiDisconnect: function() {},
-    newExplanationItem: function(message) {
-      return document.createElement('div');
-    },
-    checkPassword: function() {
-
-    },
-    changeDisplay: function() {
-
-    }
-  };
-
-  return MockWifiUtils;
-});
diff --git a/apps/settings/test/unit/modules/panel_test.js b/apps/settings/test/unit/modules/panel_test.js
index b00bec8..e274346 100644
--- a/apps/settings/test/unit/modules/panel_test.js
+++ b/apps/settings/test/unit/modules/panel_test.js
@@ -17,54 +17,42 @@ suite('Panel', function() {
       this.panel = null;
     });

-    test('init()', function(done) {
+    test('init()', function() {
       // initialized shoule be false by default.
       assert.isFalse(this.panel.initialized);

-      Promise.resolve(this.panel.init())
-      .then(function() {
-        // initialized shoule be true after initialized.
-        assert.isTrue(this.panel.initialized);
-        done();
-      }.bind(this));
+      this.panel.init();
+      // initialized shoule be true after initialized.
+      assert.isTrue(this.panel.initialized);
     });

-    test('uninit()', function(done) {
-      Promise.resolve(this.panel.init())
-      .then(function() {
-        assert.isTrue(this.panel.initialized);
+    test('uninit()', function() {
+      this.panel.init();
+      assert.isTrue(this.panel.initialized);

-        this.panel.uninit();
-        // initialized shoule be false after uninitialized.
-        assert.isFalse(this.panel.initialized);
-        done();
-      }.bind(this));
+      this.panel.uninit();
+      // initialized shoule be false after uninitialized.
+      assert.isFalse(this.panel.initialized);
     });

-    test('beforeShow()', function(done) {
+    test('beforeShow()', function() {
       var initSpy = sinon.spy(this.panel, 'init');
       var panelElement = document.createElement('div');
       var options = {};

-      Promise.resolve(this.panel.beforeShow(panelElement, options))
-      .then(function() {
-        // init should be called when beforeShow is called at the first time.
-        sinon.assert.calledWith(initSpy, panelElement, options);
-        done();
-      });
+      this.panel.beforeShow(panelElement, options);
+      // init should be called when beforeShow is called at the first time.
+      sinon.assert.calledWith(initSpy, panelElement, options);
     });

-    test('show()', function(done) {
+    test('show()', function() {
       var initSpy = sinon.spy(this.panel, 'init');
       var panelElement = document.createElement('div');
       var options = {};

-      Promise.resolve(this.panel.show(panelElement, options))
-      .then(function() {
-        // init should be called when show is called at the first time.
-        sinon.assert.calledWith(initSpy, panelElement, options);
-        done();
-      });
+      this.panel.show(panelElement, options);
+      // init should be called when show is called at the first time.
+      sinon.assert.calledWith(initSpy, panelElement, options);
     });
   });

@@ -92,17 +80,14 @@ suite('Panel', function() {
       var internalFuncName = convertToInternalFuncName(funcName);
       test(internalFuncName + ' should be called when ' +
            funcName + ' is called',
-        function(done) {
+        function() {
           var spy = sinon.spy(this.mockOptions, internalFuncName);
           var panel = this.Panel(this.mockOptions);
           var panelElement = document.createElement('div');
           var options = {};

-          Promise.resolve(panel[funcName](panelElement, options))
-          .then(function() {
-            sinon.assert.calledWith(spy, panelElement, options);
-            done();
-          });
+          panel[funcName](panelElement, options);
+          sinon.assert.calledWith(spy, panelElement, options);
       });
     });

@@ -110,42 +95,33 @@ suite('Panel', function() {
       var internalFuncName = convertToInternalFuncName(funcName);
       test(internalFuncName + ' should be called when ' +
            funcName + ' is called',
-        function(done) {
+        function() {
           var spy = sinon.spy(this.mockOptions, internalFuncName);
           var panel = this.Panel(this.mockOptions);

-          Promise.resolve(panel[funcName]())
-          .then(function() {
-            sinon.assert.calledOnce(spy);
-            done();
-          });
+          panel[funcName]();
+          sinon.assert.calledOnce(spy);
       });
     });

     test('onUninit should be called when uninit is called',
-      function(done) {
+      function() {
         var spy = sinon.spy(this.mockOptions, 'onUninit');
         var panel = this.Panel(this.mockOptions);

-        Promise.resolve(panel.init())
-        .then(function() {
-          panel.uninit();
-          sinon.assert.calledOnce(spy);
-          done();
-        });
+        panel.init();
+        panel.uninit();
+        sinon.assert.calledOnce(spy);
     });

-    test('onInit should be called only once', function(done) {
+    test('onInit should be called only once', function() {
       var spy = sinon.spy(this.mockOptions, 'onInit');
       var panel = this.Panel(this.mockOptions);

-      Promise.resolve(panel.init())
-      .then(panel.init())
-      .then(function() {
-        // onInit should be called only once.
-        sinon.assert.calledOnce(spy);
-        done();
-      });
+      panel.init();
+      panel.init();
+      // onInit should be called only once.
+      sinon.assert.calledOnce(spy);
     });

     test('onUninit should not be called if the panel is not initialized',
diff --git a/apps/settings/test/unit/modules/panel_utils_test.js b/apps/settings/test/unit/modules/panel_utils_test.js
deleted file mode 100644
index fa1bdca..0000000
--- a/apps/settings/test/unit/modules/panel_utils_test.js
+++ /dev/null
@@ -1,61 +0,0 @@
-'use strict';
-
-suite('PanelUtils', function() {
-  var realL10n;
-  var modules = [
-    'unit/mock_l10n',
-    'modules/panel_utils'
-  ];
-
-  var map = {
-    '*': {
-      'modules/settings_cache': 'unit/mock_settings_cache'
-    }
-  };
-
-  suiteSetup(function(done) {
-    testRequire(modules, map, (function(MockL10n, PanelUtils) {
-      this.PanelUtils = PanelUtils;
-
-      realL10n = window.navigator.mozL10n;
-      window.navigator.mozL10n = MockL10n;
-      done();
-    }).bind(this));
-  });
-
-  suiteTeardown(function() {
-    window.navigator.mozL10n = realL10n;
-  });
-
-  suite('activate', function() {
-    suiteSetup(function() {
-      this.realOpenLink = window.openLink;
-      window.openLink = sinon.spy();
-    });
-
-    suiteTeardown(function() {
-      window.openLink = this.realOpenLink;
-    });
-
-    setup(function() {
-      this.targetElement = document.createElement('div');
-      this.targetLink = document.createElement('a');
-      this.targetElement.appendChild(this.targetLink);
-    });
-
-    teardown(function() {
-      window.openLink.reset();
-    });
-
-    test('The navigated url should be the current url', function() {
-      var originalLink = 'http://www.originallink/';
-      var newLink = 'http://www.newlink/';
-
-      this.targetLink.href = originalLink;
-      this.PanelUtils.activate(this.targetElement);
-      this.targetLink.href = newLink;
-      this.targetLink.onclick();
-      sinon.assert.calledWith(window.openLink, newLink);
-    });
-  });
-});
diff --git a/apps/settings/test/unit/modules/settings_panel_test.js b/apps/settings/test/unit/modules/settings_panel_test.js
index 533a775..eb61456 100644
--- a/apps/settings/test/unit/modules/settings_panel_test.js
+++ b/apps/settings/test/unit/modules/settings_panel_test.js
@@ -59,37 +59,33 @@ suite('SettingsPanel', function() {
       activateSpy.restore();
     });

-    test('uninit()', function(done) {
+    test('uninit()', function() {
       var panelElement = document.createElement('div');
       var settingsCacheRemoveEventListenerSpy =
-        this.sinon.spy(this.SettingsCache, 'removeEventListener');
+        sinon.spy(this.SettingsCache, 'removeEventListener');
       var panelRemoveEventListenerSpy =
-        this.sinon.spy(panelElement, 'removeEventListener');
+        sinon.spy(panelElement, 'removeEventListener');

-      Promise.resolve(this.panel.init(panelElement))
-      .then(function() {
-        assert.isTrue(this.panel.initialized);
-
-        this.panel.uninit();
-        // initialized is false after uninitialized.
-        assert.isFalse(this.panel.initialized);
+      this.panel.init(panelElement);
+      assert.isTrue(this.panel.initialized);

-        // Added listeners should be removed when uninit.
-        sinon.assert.calledWith(settingsCacheRemoveEventListenerSpy,
-          'settingsChange');
-        sinon.assert.calledWith(panelRemoveEventListenerSpy, 'change',
-          this.PanelUtils.onInputChange);
-        sinon.assert.calledWith(panelRemoveEventListenerSpy, 'click',
-          this.PanelUtils.onLinkClick);
+      this.panel.uninit();
+      // initialized is false after uninitialized.
+      assert.isFalse(this.panel.initialized);

-        settingsCacheRemoveEventListenerSpy.restore();
-        panelRemoveEventListenerSpy.restore();
+      // Added listeners should be removed when uninit.
+      sinon.assert.calledWith(settingsCacheRemoveEventListenerSpy,
+        'settingsChange');
+      sinon.assert.calledWith(panelRemoveEventListenerSpy, 'change',
+        this.PanelUtils.onInputChange);
+      sinon.assert.calledWith(panelRemoveEventListenerSpy, 'click',
+        this.PanelUtils.onLinkClick);

-        done();
-      }.bind(this));
+      settingsCacheRemoveEventListenerSpy.restore();
+      panelRemoveEventListenerSpy.restore();
     });

-    test('beforeShow()', function(done) {
+    test('beforeShow()', function() {
       var initSpy = sinon.spy(this.panel, 'init');
       var panelElement = document.createElement('div');
       var options = {};
@@ -99,63 +95,54 @@ suite('SettingsPanel', function() {
       var panelAddEventListenerSpy =
         sinon.spy(panelElement, 'addEventListener');

-      Promise.resolve(this.panel.beforeShow(panelElement, options))
-      .then(function() {
-        // init should be called when beforeShow is called at the first time.
-        sinon.assert.calledWith(initSpy, panelElement, options);
-        // PanelUtils.preset should be called with the panel element.
-        sinon.assert.calledWith(presetSpy, panelElement);
-        // Related listeners should be added.
-        sinon.assert.calledWith(settingsCacheAddEventListenerSpy,
-          'settingsChange');
-        sinon.assert.calledWith(panelAddEventListenerSpy, 'change',
-          this.PanelUtils.onInputChange);
-        sinon.assert.calledWith(panelAddEventListenerSpy, 'click',
-          this.PanelUtils.onLinkClick);
-
-        presetSpy.restore();
-        settingsCacheAddEventListenerSpy.restore();
-        panelAddEventListenerSpy.restore();
-
-        done();
-      }.bind(this));
+      this.panel.beforeShow(panelElement, options);
+      // init should be called when beforeShow is called at the first time.
+      sinon.assert.calledWith(initSpy, panelElement, options);
+      // PanelUtils.preset should be called with the panel element.
+      sinon.assert.calledWith(presetSpy, panelElement);
+      // Related listeners should be added.
+      sinon.assert.calledWith(settingsCacheAddEventListenerSpy,
+        'settingsChange');
+      sinon.assert.calledWith(panelAddEventListenerSpy, 'change',
+        this.PanelUtils.onInputChange);
+      sinon.assert.calledWith(panelAddEventListenerSpy, 'click',
+        this.PanelUtils.onLinkClick);
+
+      presetSpy.restore();
+      settingsCacheAddEventListenerSpy.restore();
+      panelAddEventListenerSpy.restore();
     });

-    test('show()', function(done) {
+    test('show()', function() {
       var initSpy = sinon.spy(this.panel, 'init');
       var panelElement = document.createElement('div');
       var options = {};

-      Promise.resolve(this.panel.show(panelElement, options))
-      .then(function() {
-        // init should be called when show is called at the first time.
-        sinon.assert.calledWith(initSpy, panelElement, options);
-        done();
-      });
+      this.panel.show(panelElement, options);
+      // init should be called when show is called at the first time.
+      sinon.assert.calledWith(initSpy, panelElement, options);
     });

-    test('hide()', function(done) {
+    test('hide()', function() {
       var panelElement = document.createElement('div');
       var settingsCacheRemoveEventListenerSpy =
-        this.sinon.spy(this.SettingsCache, 'removeEventListener');
+        sinon.spy(this.SettingsCache, 'removeEventListener');
       var panelRemoveEventListenerSpy =
-        this.sinon.spy(panelElement, 'removeEventListener');
-
-      Promise.resolve(this.panel.init(panelElement))
-      .then(this.panel.hide())
-      .then(function() {
-        // Added listeners should be removed when hiding.
-        sinon.assert.calledWith(settingsCacheRemoveEventListenerSpy,
-          'settingsChange');
-        sinon.assert.calledWith(panelRemoveEventListenerSpy, 'change',
-          this.PanelUtils.onInputChange);
-        sinon.assert.calledWith(panelRemoveEventListenerSpy, 'click',
-          this.PanelUtils.onLinkClick);
-
-        settingsCacheRemoveEventListenerSpy.restore();
-        panelRemoveEventListenerSpy.restore();
-        done();
-      }.bind(this));
+        sinon.spy(panelElement, 'removeEventListener');
+
+      this.panel.init(panelElement);
+      this.panel.hide();
+
+      // Added listeners should be removed when hiding.
+      sinon.assert.calledWith(settingsCacheRemoveEventListenerSpy,
+        'settingsChange');
+      sinon.assert.calledWith(panelRemoveEventListenerSpy, 'change',
+        this.PanelUtils.onInputChange);
+      sinon.assert.calledWith(panelRemoveEventListenerSpy, 'click',
+        this.PanelUtils.onLinkClick);
+
+      settingsCacheRemoveEventListenerSpy.restore();
+      panelRemoveEventListenerSpy.restore();
     });
   });

@@ -183,18 +170,14 @@ suite('SettingsPanel', function() {
       var internalFuncName = convertToInternalFuncName(funcName);
       test(internalFuncName + ' should be called when ' +
         funcName + ' is called',
-          function(done) {
+          function() {
             var spy = sinon.spy(this.mockOptions, internalFuncName);
             var panel = this.SettingsPanel(this.mockOptions);
             var panelElement = document.createElement('div');
             var options = {};

-            Promise
-            .resolve(panel[funcName](panelElement, options))
-            .then(function() {
-              sinon.assert.calledWith(spy, panelElement, options);
-              done();
-            });
+            panel[funcName](panelElement, options);
+            sinon.assert.calledWith(spy, panelElement, options);
       });
     });

@@ -202,43 +185,33 @@ suite('SettingsPanel', function() {
       var internalFuncName = convertToInternalFuncName(funcName);
       test(internalFuncName + ' shoule be called when ' +
         funcName + ' is called',
-          function(done) {
+          function() {
             var spy = sinon.spy(this.mockOptions, internalFuncName);
             var panel = this.SettingsPanel(this.mockOptions);

-            Promise
-            .resolve(panel[funcName]())
-            .then(function() {
-              sinon.assert.calledOnce(spy);
-              done();
-            });
+            panel[funcName]();
+            sinon.assert.calledOnce(spy);
       });
     });

     test('onUninit should be called when uninit is called',
-      function(done) {
+      function() {
         var spy = sinon.spy(this.mockOptions, 'onUninit');
         var panel = this.SettingsPanel(this.mockOptions);

-        Promise.resolve(panel.init())
-        .then(function() {
-          panel.uninit();
-          sinon.assert.calledOnce(spy);
-          done();
-        });
+        panel.init();
+        panel.uninit();
+        sinon.assert.calledOnce(spy);
     });

-    test('onInit should be called only once', function(done) {
+    test('onInit should be called only once', function() {
       var spy = sinon.spy(this.mockOptions, 'onInit');
       var panel = this.SettingsPanel(this.mockOptions);
       var panelElement = document.createElement('div');

-      Promise.resolve(panel.init(panelElement))
-      .then(panel.init(panelElement))
-      .then(function() {
-        sinon.assert.calledOnce(spy);
-        done();
-      });
+      panel.init(panelElement);
+      panel.init(panelElement);
+      sinon.assert.calledOnce(spy);
     });

     test('onUninit should not be called if it is not initialized', function() {
diff --git a/apps/settings/test/unit/modules/settings_utils_test.js b/apps/settings/test/unit/modules/settings_utils_test.js
deleted file mode 100644
index 2fa70b7..0000000
--- a/apps/settings/test/unit/modules/settings_utils_test.js
+++ /dev/null
@@ -1,115 +0,0 @@
-/* global Settings, MockSettings */
-requireApp('settings/test/unit/mock_settings.js');
-
-mocha.globals(['Settings']);
-
-suite('SettingsUtils', function() {
-  'use strict';
-
-  var realSettings;
-  var settingsUtils;
-  var settingsService;
-  var map = {
-    '*': {
-      'modules/settings_service': 'unit/mock_settings_service'
-    }
-  };
-
-  suiteSetup(function() {
-    realSettings = window.Settings;
-    window.Settings = MockSettings;
-  });
-
-  suiteTeardown(function() {
-    window.Settings = realSettings;
-  });
-
-  setup(function(done) {
-    testRequire([
-      'modules/settings_utils',
-      'unit/mock_settings_service'
-    ], map, function(SettingsUtils, MockSettingsService) {
-      settingsUtils = SettingsUtils;
-      settingsService = MockSettingsService;
-      done();
-    });
-  });
-
-  suite('openDialog', function() {
-    var onSubmitCallback;
-    var onResetCallback;
-    var fakePanel;
-    var fakeSubmitButton;
-    var fakeResetButton;
-
-    setup(function() {
-      this.sinon.spy(settingsService, 'navigate');
-
-      fakePanel = document.createElement('div');
-      fakePanel.id = 'fakePanel';
-      fakeSubmitButton = createButton('submit');
-      fakeResetButton = createButton('reset');
-
-      fakePanel.appendChild(fakeSubmitButton);
-      fakePanel.appendChild(fakeResetButton);
-      document.body.appendChild(fakePanel);
-
-      onSubmitCallback = this.sinon.stub();
-      onResetCallback = this.sinon.stub();
-    });
-
-    teardown(function() {
-      document.body.innerHTML = '';
-    });
-
-    test('if currentDialog is the same, do nothing', function() {
-      Settings.currentPanel = '#dialog0';
-      settingsUtils.openDialog('dialog0', {});
-      assert.isFalse(settingsService.navigate.called);
-    });
-
-    test('if currentPanel is different, then press submit button', function() {
-      Settings.currentPanel = '#root';
-      settingsUtils.openDialog(fakePanel.id, {
-        onSubmit: onSubmitCallback
-      });
-
-      // trigger the button to check following logics
-      fakeSubmitButton.onclick();
-
-      var firstNavigate = settingsService.navigate.getCall(0);
-      var secondNavigate = settingsService.navigate.getCall(1);
-
-      assert.equal(firstNavigate.args[0], fakePanel.id,
-        'we did navigate to that panel');
-      assert.isTrue(onSubmitCallback.called);
-      assert.equal(secondNavigate.args[0], 'root',
-        'we did navigate back to root after clicking submit button');
-    });
-
-    test('if currentPanel is different, then press reset button', function() {
-      Settings.currentPanel = '#root';
-      settingsUtils.openDialog(fakePanel.id, {
-        onReset: onResetCallback
-      });
-
-      // trigger the button to check following logics
-      fakeResetButton.onclick();
-
-      var firstNavigate = settingsService.navigate.getCall(0);
-      var secondNavigate = settingsService.navigate.getCall(1);
-
-      assert.equal(firstNavigate.args[0], fakePanel.id,
-        'we did navigate to that panel');
-      assert.isTrue(onResetCallback.called);
-      assert.equal(secondNavigate.args[0], 'root',
-        'we did navigate back to root after clicking submit button');
-    });
-  });
-
-  function createButton(type) {
-    var button = document.createElement('button');
-    button.setAttribute('type', type);
-    return button;
-  }
-});
diff --git a/apps/settings/test/unit/modules/wifi_context_test.js b/apps/settings/test/unit/modules/wifi_context_test.js
deleted file mode 100644
index 6459b41..0000000
--- a/apps/settings/test/unit/modules/wifi_context_test.js
+++ /dev/null
@@ -1,166 +0,0 @@
-/* global MockL10n, MockNavigatorSettings, MockNavigatorMozWifiManager, Event */
-requireApp('settings/test/unit/mock_l10n.js');
-requireApp('settings/shared/test/unit/mocks/mock_navigator_moz_settings.js');
-requireApp(
-  'settings/shared/test/unit/mocks/mock_navigator_moz_wifi_manager.js');
-
-mocha.globals(['Settings']);
-
-suite('WifiContext', function() {
-  'use strict';
-
-  var realL10n;
-  var realSettings;
-  var wifiHelper;
-  var wifiContext;
-  var wifiManager;
-  var map = {
-    '*': {
-      'modules/settings_cache': 'unit/mock_settings_cache',
-      'shared/wifi_helper': 'shared_mocks/mock_wifi_helper'
-    }
-  };
-
-  suiteSetup(function() {
-    realL10n = window.navigator.mozL10n;
-    window.navigator.mozL10n = MockL10n;
-
-    realSettings = window.navigator.mozSettings;
-    window.navigator.mozSettings = MockNavigatorSettings;
-
-    window.Settings = {};
-    window.Settings.mozSettings = MockNavigatorSettings;
-  });
-
-  suiteTeardown(function() {
-    window.navigator.mozL10n = realL10n;
-    window.navigator.mozSettings = realSettings;
-  });
-
-  setup(function(done) {
-    testRequire([
-      'modules/wifi_context',
-      'shared/wifi_helper'
-    ], map, function(WifiContext, MockWifiHelper) {
-      wifiContext = WifiContext;
-      wifiHelper = MockWifiHelper;
-      wifiManager = wifiHelper.getWifiManager();
-
-      MockNavigatorSettings.mSetup();
-      MockNavigatorMozWifiManager.mSetup();
-      done();
-    });
-  });
-
-  suite('WifiStatusTextChange', function() {
-    var fakeCb;
-
-    setup(function() {
-      fakeCb = sinon.spy();
-      wifiContext.addEventListener('wifiStatusTextChange', fakeCb);
-    });
-
-    teardown(function() {
-      wifiContext.removeEventListener('wifiStatusTextChange', fakeCb);
-    });
-
-    test('when localized, trigger cb', function() {
-      var evt = new Event('localized');
-      window.dispatchEvent(evt);
-      assert.isTrue(fakeCb.called);
-    });
-
-    test('when wifiManger.onenabled, trigger cb', function() {
-      wifiManager.onenabled();
-      assert.isTrue(fakeCb.called);
-    });
-
-    test('when wifiManger.ondisabled, trigger cb', function() {
-      wifiManager.ondisabled();
-      assert.isTrue(fakeCb.called);
-    });
-
-    test('when wifiManger.onstatuschange, trigger cb', function() {
-      wifiManager.onstatuschange();
-      assert.isTrue(fakeCb.called);
-    });
-  });
-
-  suite('WifiEnabled', function() {
-    var fakeCb;
-
-    setup(function() {
-      fakeCb = sinon.spy();
-      wifiContext.addEventListener('wifiEnabled', fakeCb);
-    });
-
-    teardown(function() {
-      wifiContext.removeEventListener('wifiEnabled', fakeCb);
-    });
-
-    test('when wifiManager.onenabled, trigger cb', function() {
-      wifiManager.onenabled();
-      assert.isTrue(fakeCb.called);
-    });
-  });
-
-  suite('WifiStatusChange', function() {
-    var fakeCb;
-
-    setup(function() {
-      fakeCb = sinon.spy();
-      wifiContext.addEventListener('wifiStatusChange', fakeCb);
-    });
-
-    teardown(function() {
-      wifiContext.removeEventListener('wifiStatusChange', fakeCb);
-    });
-
-    test('when wifiManager.onstatuschange, trigger cb', function() {
-      wifiManager.onstatuschange();
-      assert.isTrue(fakeCb.called);
-    });
-  });
-
-  suite('wifiStatusText', function() {
-    suiteTeardown(function() {
-      delete(wifiManager.connection.status);
-    });
-
-    test('wifiManager is enabled, get fullstatus', function() {
-      wifiManager.enabled = true;
-      wifiManager.connection.status = 'disconnected';
-      wifiManager.onstatuschange();
-      assert.equal(wifiContext.wifiStatusText, 'fullStatus-disconnected');
-    });
-
-    test('wifiManager is disabled, get disabled string', function() {
-      wifiManager.enabled = false;
-      wifiManager.onstatuschange();
-      assert.equal(wifiContext.wifiStatusText, 'disabled');
-    });
-  });
-
-  suite('forgetNetwork', function() {
-    setup(function() {
-      this.sinon.spy(wifiManager, 'forget');
-    });
-    test('will bypass to wifiManager', function() {
-      wifiContext.forgetNetwork({});
-      assert.isTrue(wifiManager.forget.called);
-      assert.isNull(wifiContext.currentNetwork);
-    });
-  });
-
-  suite('associateNetwork', function() {
-    setup(function() {
-      this.sinon.spy(wifiManager, 'associate');
-    });
-    test('will bypass to wifiManager', function() {
-      var fakeNetowrk = {};
-      wifiContext.associateNetwork(fakeNetowrk);
-      assert.isTrue(wifiManager.associate.calledWith(fakeNetowrk));
-      assert.equal(wifiContext.currentNetwork, fakeNetowrk);
-    });
-  });
-});
diff --git a/apps/settings/test/unit/modules/wifi_utils_test.js b/apps/settings/test/unit/modules/wifi_utils_test.js
deleted file mode 100644
index 4b69814..0000000
--- a/apps/settings/test/unit/modules/wifi_utils_test.js
+++ /dev/null
@@ -1,174 +0,0 @@
-/* global MockL10n, MockNavigatorSettings, MockNavigatorMozWifiManager,
-          MockNavigatorSettings */
-requireApp('settings/test/unit/mock_l10n.js');
-requireApp('settings/shared/test/unit/mocks/mock_navigator_moz_settings.js');
-requireApp('settings/shared/test/unit/load_body_html_helper.js');
-requireApp(
-  'settings/shared/test/unit/mocks/mock_navigator_moz_wifi_manager.js');
-
-mocha.globals(['MockWifiHelper']);
-
-suite('WifiUtils', function() {
-  'use strict';
-
-  var realL10n;
-  var realSettings;
-  var wifiUtils;
-  var settingsUtils;
-  var map = {
-    '*': {
-      'modules/settings_utils': 'unit/mock_settings_utils',
-      'shared/wifi_helper': 'shared_mocks/mock_wifi_helper'
-    }
-  };
-
-  suiteSetup(function() {
-    realL10n = window.navigator.mozL10n;
-    window.navigator.mozL10n = MockL10n;
-
-    realSettings = window.navigator.mozSettings;
-    window.navigator.mozSettings = MockNavigatorSettings;
-  });
-
-  suiteTeardown(function() {
-    window.navigator.mozL10n = realL10n;
-    window.navigator.mozSettings = realSettings;
-  });
-
-  setup(function(done) {
-    testRequire([
-      'modules/wifi_utils',
-      'unit/mock_settings_utils',
-    ], map, function(WifiUtils, MockSettingsUtils) {
-      wifiUtils = WifiUtils;
-      settingsUtils = MockSettingsUtils;
-
-      MockNavigatorSettings.mSetup();
-      MockNavigatorMozWifiManager.mSetup();
-      done();
-    });
-  });
-
-  test('newExplanationItem', function() {
-    var li = wifiUtils.newExplanationItem('test');
-    assert.equal(li.className, 'explanation');
-    assert.equal(li.textContent, 'test');
-  });
-
-  suite('changeDisplay', function() {
-    var dialog;
-    var eap;
-    var identity;
-    var password;
-    var authPhase2;
-    var certificate;
-    var description;
-
-    setup(function() {
-      loadBodyHTML('./_wifi_utils.html');
-
-      dialog = document.getElementById('wifi-auth');
-      eap = dialog.querySelector('li.eap select');
-      identity = dialog.querySelector('input[name=identity]');
-      password = dialog.querySelector('input[name=password]');
-      authPhase2 = dialog.querySelector('li.auth-phase2 select');
-      certificate = dialog.querySelector('li.server-certificate select');
-      description = dialog.querySelector('li.server-certificate-description');
-    });
-
-    teardown(function() {
-      document.body.innerHTML = '';
-    });
-
-    test('panel is wifi-auth, security is WEP', function() {
-      wifiUtils.changeDisplay(dialog, 'WEP');
-      assert.equal(identity.parentNode.style.display, 'none');
-      assert.equal(password.parentNode.style.display, 'block');
-      assert.equal(authPhase2.parentNode.parentNode.style.display, 'none');
-      assert.equal(certificate.parentNode.parentNode.style.display, 'none');
-      assert.equal(description.style.display, 'none');
-    });
-
-    test('panel is wifi-auth, security is WPA-PSK', function() {
-      wifiUtils.changeDisplay(dialog, 'WPA-PSK');
-      assert.equal(identity.parentNode.style.display, 'none');
-      assert.equal(password.parentNode.style.display, 'block');
-      assert.equal(authPhase2.parentNode.parentNode.style.display, 'none');
-      assert.equal(certificate.parentNode.parentNode.style.display, 'none');
-      assert.equal(description.style.display, 'none');
-    });
-
-    test('panel is wifi-auth, security is WPA-EAP, eap is SIM', function() {
-      eap.value = 'SIM';
-      wifiUtils.changeDisplay(dialog, 'WPA-EAP');
-      assert.equal(identity.parentNode.style.display, 'none');
-      assert.equal(password.parentNode.style.display, 'none');
-      assert.equal(authPhase2.parentNode.parentNode.style.display, 'none');
-      assert.equal(certificate.parentNode.parentNode.style.display, 'none');
-      assert.equal(description.style.display, 'none');
-    });
-
-    test('panel is wifi-auth, security is WPA-EAP, eap is PEAP', function() {
-      eap.value = 'PEAP';
-      wifiUtils.changeDisplay(dialog, 'WPA-EAP');
-      assert.equal(identity.parentNode.style.display, 'block');
-      assert.equal(password.parentNode.style.display, 'block');
-      assert.equal(authPhase2.parentNode.parentNode.style.display, 'block');
-      assert.equal(certificate.parentNode.parentNode.style.display, 'block');
-      assert.equal(description.style.display, 'block');
-    });
-
-    test('panel is wifi-auth, security is WPA-EAP, eap is TLS', function() {
-      eap.value = 'TLS';
-      wifiUtils.changeDisplay(dialog, 'WPA-EAP');
-      assert.equal(identity.parentNode.style.display, 'block');
-      assert.equal(password.parentNode.style.display, 'block');
-      assert.equal(authPhase2.parentNode.parentNode.style.display, 'block');
-      assert.equal(certificate.parentNode.parentNode.style.display, 'block');
-      assert.equal(description.style.display, 'block');
-    });
-
-    test('panel is wifi-auth, security is WPA-EAP, eap is TTLS', function() {
-      eap.value = 'TTLS';
-      wifiUtils.changeDisplay(dialog, 'WPA-EAP');
-      assert.equal(identity.parentNode.style.display, 'block');
-      assert.equal(password.parentNode.style.display, 'block');
-      assert.equal(authPhase2.parentNode.parentNode.style.display, 'block');
-      assert.equal(certificate.parentNode.parentNode.style.display, 'block');
-      assert.equal(description.style.display, 'block');
-    });
-
-    test('panel is wifi-auth, security is none', function() {
-      wifiUtils.changeDisplay(dialog, 'none');
-      assert.equal(identity.parentNode.style.display, 'none');
-      assert.equal(password.parentNode.style.display, 'none');
-    });
-  });
-
-  test('loadImportedCertificateOptions', function() {
-    var selectDOM = document.createElement('select');
-    selectDOM.appendChild(createOption('--'));
-    selectDOM.appendChild(createOption('1'));
-
-    MockNavigatorMozWifiManager._certificateList = [
-      'cert1', 'cert2', 'cert3'
-    ];
-
-    this.sinon.spy(selectDOM, 'remove');
-    this.sinon.spy(selectDOM, 'add');
-    wifiUtils.loadImportedCertificateOptions(selectDOM);
-
-    // we have two options, but we would keep the first one
-    assert.isTrue(selectDOM.remove.calledOnce);
-    // and we would add three options back based on the number of our fake
-    // certificates
-    assert.isTrue(selectDOM.add.calledThrice);
-  });
-
-  function createOption(value) {
-    var dom = document.createElement('option');
-    dom.text = value;
-    dom.value = value;
-    return dom;
-  }
-});
diff --git a/apps/settings/test/unit/panels/keyboard/core_test.js b/apps/settings/test/unit/panels/keyboard/core_test.js
new file mode 100644
index 0000000..d328042
--- /dev/null
+++ b/apps/settings/test/unit/panels/keyboard/core_test.js
@@ -0,0 +1,97 @@
+'use strict';
+
+suite('KeyboardCore', function() {
+  var map = {
+    'panels/keyboard/core': {
+      'modules/mvvm/list_view': 'unit/mock_list_view'
+    }
+  };
+
+  suiteSetup(function(done) {
+    // setup mocks
+    this.mockKeyboardTemplate = function() {};
+    this.mockKeyboards = [];
+    this.mockElements = { listViewRoot: {} };
+
+    testRequire([
+      'unit/mock_keyboard_context',
+      'unit/mock_list_view',
+      'panels/keyboard/core'
+    ], map, function(MockKeyboardContext, MockListView, KeyboardCore) {
+      this.MockKeyboardContext = MockKeyboardContext;
+      this.MockListView = MockListView;
+      this.KeyboardCore = KeyboardCore;
+      done();
+    }.bind(this));
+  });
+
+  setup(function() {
+    this.subject =
+      this.KeyboardCore(this.MockKeyboardContext, this.mockKeyboardTemplate);
+  });
+
+  teardown(function() {
+    this.MockKeyboardContext.mTeardown();
+  });
+
+  test('init', function() {
+    this.MockKeyboardContext.mKeyboards = this.mockKeyboards;
+    sinon.spy(this.subject, '_initAllKeyboardListView');
+
+    this.subject.init(this.mockElements);
+
+    assert.ok(this.subject._initAllKeyboardListView.calledWith(
+      this.mockElements.listViewRoot, this.mockKeyboards,
+      this.mockKeyboardTemplate),
+      '_initAllKeyboardListView should be called with correct parameters');
+  });
+
+  test('when enabled = true', function() {
+    this.subject._listView = { enabled: false };
+    this.subject.enabled = true;
+    assert.ok(this.subject._listView.enabled,
+      'the list view should be enabled');
+  });
+
+  test('when enabled = false' , function() {
+    this.subject._listView = { enabled: true };
+    this.subject.enabled = false;
+    assert.ok(!this.subject._listView.enabled,
+      'the list view should be disabled');
+  });
+
+  suite('_initAllKeyboardListView', function() {
+    setup(function() {
+      this.mockKeyboards = [];
+      this.ListViewStub = sinon.stub().returns({});
+      this.MockListView.mInnerFunction = this.ListViewStub;
+    });
+
+    teardown(function() {
+      this.MockListView.mTeardown();
+    });
+
+    test('when called', function() {
+      this.subject._initAllKeyboardListView(this.mockElements.listViewRoot,
+        this.mockKeyboards, this.mockKeyboardTemplate);
+
+      assert.ok(this.ListViewStub.calledWith(this.mockElements.listViewRoot,
+        this.mockKeyboards, this.mockKeyboardTemplate),
+        'the list view should be created with correct arguments');
+      assert.ok(this.subject._listView, 'the list view should be created');
+    });
+
+    test('when there are no installed keyboards', function() {
+      this.subject._initAllKeyboardListView(this.mockElements.listViewRoot,
+        this.mockKeyboards, this.mockKeyboardTemplate);
+      assert.ok(this.mockElements.listViewRoot.hidden, 'should hide the list');
+    });
+
+    test('when there are installed keyboards', function() {
+      this.mockKeyboards.push({});
+      this.subject._initAllKeyboardListView(this.mockElements.listViewRoot,
+        this.mockKeyboards, this.mockKeyboardTemplate);
+      assert.ok(!this.mockElements.listViewRoot.hidden, 'should show the list');
+    });
+  });
+});
diff --git a/apps/settings/test/unit/panels/keyboard/enabled_layouts_test.js b/apps/settings/test/unit/panels/keyboard/enabled_layouts_test.js
deleted file mode 100644
index bfa81e4..0000000
--- a/apps/settings/test/unit/panels/keyboard/enabled_layouts_test.js
+++ /dev/null
@@ -1,82 +0,0 @@
-'use strict';
-
-suite('KeyboardEnabledLayoutsCore', function() {
-  var map = {
-    'panels/keyboard/enabled_layouts': {
-      'modules/settings_service': 'unit/mock_settings_service',
-      'modules/mvvm/list_view': 'unit/mock_list_view'
-    }
-  };
-
-  suiteSetup(function(done) {
-    // setup mocks
-    this.mockLayoutTemplate = function() {};
-    this.mockEnabledLayouts = [];
-    this.mockElements = { listViewRoot: {} };
-
-    testRequire([
-      'unit/mock_keyboard_context',
-      'unit/mock_list_view',
-      'panels/keyboard/enabled_layouts'
-    ], map, function(MockKeyboardContext, MockListView,
-      KeyboardEnabledLayoutsCore) {
-        this.MockKeyboardContext = MockKeyboardContext;
-        this.MockListView = MockListView;
-        this.KeyboardEnabledLayoutsCore = KeyboardEnabledLayoutsCore;
-        done();
-    }.bind(this));
-  });
-
-  setup(function() {
-    this.MockKeyboardContext.mEnabledLayouts = this.mockEnabledLayouts;
-    this.subject = this.KeyboardEnabledLayoutsCore(this.MockKeyboardContext,
-      this.mockLayoutTemplate);
-  });
-
-  teardown(function() {
-    this.MockKeyboardContext.mTeardown();
-  });
-
-  test('init', function() {
-    sinon.spy(this.subject, '_initEnabledLayoutListView');
-
-    this.subject.init(this.mockElements);
-
-    assert.ok(this.subject._initEnabledLayoutListView.calledWith(
-      this.mockElements.listViewRoot, this.mockEnabledLayouts,
-      this.mockLayoutTemplate),
-      '_initEnabledLayoutListView should be called with correct parameters');
-  });
-
-  test('when enabled = true', function() {
-    this.subject._listView = { enabled: false };
-    this.subject.enabled = true;
-    assert.ok(this.subject._listView.enabled,
-      'the list view should be enabled');
-  });
-
-  test('when enabled = false', function() {
-    this.subject._listView = { enabled: true };
-    this.subject.enabled = false;
-    assert.ok(!this.subject._listView.enabled,
-      'the list view should be disabled');
-  });
-
-  test('_initEnabledLayoutListView', function() {
-    this.ListViewStub = sinon.stub().returns({});
-    this.MockListView.mInnerFunction = this.ListViewStub;
-    var listViewRoot = {};
-    var layouts = [{}];
-    var layoutTemplate = function() {};
-
-    this.subject._initEnabledLayoutListView(listViewRoot, layouts,
-      layoutTemplate);
-
-    assert.ok(this.ListViewStub
-      .calledWith(listViewRoot, layouts, layoutTemplate),
-      'the list view should be created with correct arguments');
-    assert.ok(this.subject._listView, 'the list view should be created');
-
-    this.MockListView.mTeardown();
-  });
-});
diff --git a/apps/settings/test/unit/panels/keyboard/installed_keyboards_test.js b/apps/settings/test/unit/panels/keyboard/installed_keyboards_test.js
deleted file mode 100644
index caddf35..0000000
--- a/apps/settings/test/unit/panels/keyboard/installed_keyboards_test.js
+++ /dev/null
@@ -1,97 +0,0 @@
-'use strict';
-
-suite('KeyboardCore', function() {
-  var map = {
-    'panels/keyboard/installed_keyboards': {
-      'modules/mvvm/list_view': 'unit/mock_list_view'
-    }
-  };
-
-  suiteSetup(function(done) {
-    // setup mocks
-    this.mockKeyboardTemplate = function() {};
-    this.mockKeyboards = [];
-    this.mockElements = { listViewRoot: {} };
-
-    testRequire([
-      'unit/mock_keyboard_context',
-      'unit/mock_list_view',
-      'panels/keyboard/installed_keyboards'
-    ], map, function(MockKeyboardContext, MockListView, KeyboardCore) {
-      this.MockKeyboardContext = MockKeyboardContext;
-      this.MockListView = MockListView;
-      this.KeyboardCore = KeyboardCore;
-      done();
-    }.bind(this));
-  });
-
-  setup(function() {
-    this.subject =
-      this.KeyboardCore(this.MockKeyboardContext, this.mockKeyboardTemplate);
-  });
-
-  teardown(function() {
-    this.MockKeyboardContext.mTeardown();
-  });
-
-  test('init', function() {
-    this.MockKeyboardContext.mKeyboards = this.mockKeyboards;
-    sinon.spy(this.subject, '_initAllKeyboardListView');
-
-    this.subject.init(this.mockElements);
-
-    assert.ok(this.subject._initAllKeyboardListView.calledWith(
-      this.mockElements.listViewRoot, this.mockKeyboards,
-      this.mockKeyboardTemplate),
-      '_initAllKeyboardListView should be called with correct parameters');
-  });
-
-  test('when enabled = true', function() {
-    this.subject._listView = { enabled: false };
-    this.subject.enabled = true;
-    assert.ok(this.subject._listView.enabled,
-      'the list view should be enabled');
-  });
-
-  test('when enabled = false' , function() {
-    this.subject._listView = { enabled: true };
-    this.subject.enabled = false;
-    assert.ok(!this.subject._listView.enabled,
-      'the list view should be disabled');
-  });
-
-  suite('_initAllKeyboardListView', function() {
-    setup(function() {
-      this.mockKeyboards = [];
-      this.ListViewStub = sinon.stub().returns({});
-      this.MockListView.mInnerFunction = this.ListViewStub;
-    });
-
-    teardown(function() {
-      this.MockListView.mTeardown();
-    });
-
-    test('when called', function() {
-      this.subject._initAllKeyboardListView(this.mockElements.listViewRoot,
-        this.mockKeyboards, this.mockKeyboardTemplate);
-
-      assert.ok(this.ListViewStub.calledWith(this.mockElements.listViewRoot,
-        this.mockKeyboards, this.mockKeyboardTemplate),
-        'the list view should be created with correct arguments');
-      assert.ok(this.subject._listView, 'the list view should be created');
-    });
-
-    test('when there are no installed keyboards', function() {
-      this.subject._initAllKeyboardListView(this.mockElements.listViewRoot,
-        this.mockKeyboards, this.mockKeyboardTemplate);
-      assert.ok(this.mockElements.listViewRoot.hidden, 'should hide the list');
-    });
-
-    test('when there are installed keyboards', function() {
-      this.mockKeyboards.push({});
-      this.subject._initAllKeyboardListView(this.mockElements.listViewRoot,
-        this.mockKeyboards, this.mockKeyboardTemplate);
-      assert.ok(!this.mockElements.listViewRoot.hidden, 'should show the list');
-    });
-  });
-});
diff --git a/apps/settings/test/unit/panels/keyboard/panel_test.js b/apps/settings/test/unit/panels/keyboard/panel_test.js
index 29e4c79..6ec6a4d 100644
--- a/apps/settings/test/unit/panels/keyboard/panel_test.js
+++ b/apps/settings/test/unit/panels/keyboard/panel_test.js
@@ -5,8 +5,7 @@ suite('KeyboardPanel', function() {
     '*': {
       'modules/keyboard_context': 'MockKeyboardContext',
       'modules/settings_panel': 'MockSettingsPanel',
-      'panels/keyboard/installed_keyboards': 'MockInstalledKeyboards',
-      'panels/keyboard/enabled_layouts': 'MockEnabledLayouts'
+      'panels/keyboard/core': 'MockCore'
     }
   };

@@ -24,6 +23,18 @@ suite('KeyboardPanel', function() {
       return {};
     });

+    // Define MockCore
+    this.mockCore = {
+      enabled: false,
+      init: function() {}
+    };
+    this.MockCore = function() {
+      return that.mockCore;
+    };
+    define('MockCore', function() {
+      return that.MockCore;
+    });
+
     // Define MockSettingsPanel
     define('MockSettingsPanel', function() {
       return function(options) {
@@ -36,30 +47,6 @@ suite('KeyboardPanel', function() {
       };
     });

-    // Define MockInstalledKeyboards
-    this.mockInstalledKeyboards = {
-      enabled: false,
-      init: function() {}
-    };
-    this.MockInstalledKeyboards = function() {
-      return that.mockInstalledKeyboards;
-    };
-    define('MockInstalledKeyboards', function() {
-      return that.MockInstalledKeyboards;
-    });
-
-    // Define MockEnabledLayouts
-    this.mockEnabledLayouts = {
-      enabled: false,
-      init: function() {}
-    };
-    this.MockEnabledLayouts = function() {
-      return that.mockEnabledLayouts;
-    };
-    define('MockEnabledLayouts', function() {
-      return that.MockEnabledLayouts;
-    });
-
     requireCtx([
       'panels/keyboard/panel'
     ],
@@ -69,23 +56,19 @@ suite('KeyboardPanel', function() {
     });
   });

-  test('Init MockEnabledLayouts when onInit', function() {
-    sinon.spy(this.mockInstalledKeyboards, 'init');
-    sinon.spy(this.mockEnabledLayouts, 'init');
+  test('Init the core when onInit', function() {
+    sinon.spy(this.mockCore, 'init');
     this.panel.init(this.fakeRootElement);
-    sinon.assert.called(this.mockInstalledKeyboards.init);
-    sinon.assert.called(this.mockEnabledLayouts.init);
+    sinon.assert.called(this.mockCore.init);
   });

-  test('Enabled MockEnabledLayouts when onBeforeShow', function() {
+  test('Enabled the core when onBeforeShow', function() {
     this.panel.beforeShow();
-    assert.ok(this.mockInstalledKeyboards.enabled);
-    assert.ok(this.mockEnabledLayouts.enabled);
+    assert.ok(this.mockCore.enabled);
   });

-  test('Disable MockEnabledLayouts when onHide', function() {
+  test('Disable the core when onHide', function() {
     this.panel.hide();
-    assert.ok(!this.mockInstalledKeyboards.enabled);
-    assert.ok(!this.mockEnabledLayouts.enabled);
+    assert.ok(!this.mockCore.enabled);
   });
 });
diff --git a/apps/settings/test/unit/panels/keyboard_add_layouts/core_test.js b/apps/settings/test/unit/panels/keyboard_add_layouts/core_test.js
new file mode 100644
index 0000000..4fbce20
--- /dev/null
+++ b/apps/settings/test/unit/panels/keyboard_add_layouts/core_test.js
@@ -0,0 +1,102 @@
+'use strict';
+
+suite('KeyboardAddLayoutsCore', function() {
+  var map = {
+    'panels/keyboard_add_layouts/core': {
+      'modules/settings_service': 'unit/mock_settings_service',
+      'modules/mvvm/list_view': 'unit/mock_list_view'
+    }
+  };
+
+  suiteSetup(function(done) {
+    // setup mocks
+    this.mockKeybordTemplate = function() {};
+    this.mockKeybordTemplate.listViews =
+      [{ enabled: false }, { enabled: false }];
+    this.mockKeyboards = [];
+    this.mockElements = { listViewRoot: {} };
+
+    testRequire([
+      'unit/mock_keyboard_context',
+      'unit/mock_list_view',
+      'panels/keyboard_add_layouts/core'
+    ], map, function(MockKeyboardContext, MockListView,
+      KeyboardAddLayoutsCore) {
+        this.MockKeyboardContext = MockKeyboardContext;
+        this.MockListView = MockListView;
+        this.KeyboardAddLayoutsCore = KeyboardAddLayoutsCore;
+        done();
+    }.bind(this));
+  });
+
+  setup(function() {
+    this.MockKeyboardContext.mKeyboards = this.mockKeyboards;
+    this.subject = this.KeyboardAddLayoutsCore(this.MockKeyboardContext,
+      this.mockKeybordTemplate);
+  });
+
+  teardown(function() {
+    this.MockKeyboardContext.mTeardown();
+  });
+
+  test('init', function() {
+    this.subject._showEnabledDefaultDialog = function() {};
+    sinon.spy(this.MockKeyboardContext, 'defaultKeyboardEnabled');
+    sinon.spy(this.subject, '_initInstalledLayoutListView');
+
+    this.subject.init(this.mockElements, this.mockKeybordTemplate);
+
+    assert.ok(this.subject._initInstalledLayoutListView.calledWith(
+      this.mockElements.listViewRoot, this.mockKeyboards,
+      this.mockKeybordTemplate),
+      '_initAllKeyboardListView should be called with correct parameters');
+    assert.ok(this.MockKeyboardContext.defaultKeyboardEnabled.calledWith(
+      this.subject._showEnabledDefaultDialog),
+      '_showEnabledDefaultDialog should be set to the keyboard context ' +
+      'correctly');
+
+    this.MockKeyboardContext.defaultKeyboardEnabled.restore();
+  });
+
+  test('when enabled = true', function() {
+    this.subject._keyboardTemplate = this.mockKeybordTemplate;
+    this.subject._listView = { enabled: false };
+    this.subject.enabled = true;
+
+    assert.ok(this.subject._listView.enabled,
+      'the list view should be enabled');
+    assert.ok(this.subject._keyboardTemplate
+      .listViews.every(function(listView) { return listView.enabled; }),
+      'all inner list views should be enabled');
+  });
+
+  test('when enabled = false', function() {
+    this.subject._keyboardTemplate = this.mockKeybordTemplate;
+    this.subject._listView = { enabled: true };
+    this.subject.enabled = false;
+
+    assert.ok(!this.subject._listView.enabled,
+      'the list view should be disabled');
+    assert.ok(!this.subject._keyboardTemplate
+      .listViews.every(function(listView) { return listView.enabled; }),
+      'all inner list views should be disabled');
+  });
+
+  test('_initInstalledLayoutListView', function() {
+    this.ListViewStub = sinon.stub().returns({});
+    this.MockListView.mInnerFunction = this.ListViewStub;
+    var listViewRoot = {};
+    var keyboards = [{}];
+    var keyboardTemplate = function() {};
+
+    this.subject._initInstalledLayoutListView(listViewRoot, keyboards,
+      keyboardTemplate);
+
+    assert.ok(this.ListViewStub
+      .calledWith(listViewRoot, keyboards, keyboardTemplate),
+      'the list view should be created with correct arguments');
+    assert.ok(this.subject._listView, 'the list view should be created');
+
+    this.MockListView.mTeardown();
+  });
+});
diff --git a/apps/settings/test/unit/panels/keyboard_add_layouts/installed_keyboards_test.js b/apps/settings/test/unit/panels/keyboard_add_layouts/installed_keyboards_test.js
deleted file mode 100644
index 4fbce20..0000000
--- a/apps/settings/test/unit/panels/keyboard_add_layouts/installed_keyboards_test.js
+++ /dev/null
@@ -1,102 +0,0 @@
-'use strict';
-
-suite('KeyboardAddLayoutsCore', function() {
-  var map = {
-    'panels/keyboard_add_layouts/core': {
-      'modules/settings_service': 'unit/mock_settings_service',
-      'modules/mvvm/list_view': 'unit/mock_list_view'
-    }
-  };
-
-  suiteSetup(function(done) {
-    // setup mocks
-    this.mockKeybordTemplate = function() {};
-    this.mockKeybordTemplate.listViews =
-      [{ enabled: false }, { enabled: false }];
-    this.mockKeyboards = [];
-    this.mockElements = { listViewRoot: {} };
-
-    testRequire([
-      'unit/mock_keyboard_context',
-      'unit/mock_list_view',
-      'panels/keyboard_add_layouts/core'
-    ], map, function(MockKeyboardContext, MockListView,
-      KeyboardAddLayoutsCore) {
-        this.MockKeyboardContext = MockKeyboardContext;
-        this.MockListView = MockListView;
-        this.KeyboardAddLayoutsCore = KeyboardAddLayoutsCore;
-        done();
-    }.bind(this));
-  });
-
-  setup(function() {
-    this.MockKeyboardContext.mKeyboards = this.mockKeyboards;
-    this.subject = this.KeyboardAddLayoutsCore(this.MockKeyboardContext,
-      this.mockKeybordTemplate);
-  });
-
-  teardown(function() {
-    this.MockKeyboardContext.mTeardown();
-  });
-
-  test('init', function() {
-    this.subject._showEnabledDefaultDialog = function() {};
-    sinon.spy(this.MockKeyboardContext, 'defaultKeyboardEnabled');
-    sinon.spy(this.subject, '_initInstalledLayoutListView');
-
-    this.subject.init(this.mockElements, this.mockKeybordTemplate);
-
-    assert.ok(this.subject._initInstalledLayoutListView.calledWith(
-      this.mockElements.listViewRoot, this.mockKeyboards,
-      this.mockKeybordTemplate),
-      '_initAllKeyboardListView should be called with correct parameters');
-    assert.ok(this.MockKeyboardContext.defaultKeyboardEnabled.calledWith(
-      this.subject._showEnabledDefaultDialog),
-      '_showEnabledDefaultDialog should be set to the keyboard context ' +
-      'correctly');
-
-    this.MockKeyboardContext.defaultKeyboardEnabled.restore();
-  });
-
-  test('when enabled = true', function() {
-    this.subject._keyboardTemplate = this.mockKeybordTemplate;
-    this.subject._listView = { enabled: false };
-    this.subject.enabled = true;
-
-    assert.ok(this.subject._listView.enabled,
-      'the list view should be enabled');
-    assert.ok(this.subject._keyboardTemplate
-      .listViews.every(function(listView) { return listView.enabled; }),
-      'all inner list views should be enabled');
-  });
-
-  test('when enabled = false', function() {
-    this.subject._keyboardTemplate = this.mockKeybordTemplate;
-    this.subject._listView = { enabled: true };
-    this.subject.enabled = false;
-
-    assert.ok(!this.subject._listView.enabled,
-      'the list view should be disabled');
-    assert.ok(!this.subject._keyboardTemplate
-      .listViews.every(function(listView) { return listView.enabled; }),
-      'all inner list views should be disabled');
-  });
-
-  test('_initInstalledLayoutListView', function() {
-    this.ListViewStub = sinon.stub().returns({});
-    this.MockListView.mInnerFunction = this.ListViewStub;
-    var listViewRoot = {};
-    var keyboards = [{}];
-    var keyboardTemplate = function() {};
-
-    this.subject._initInstalledLayoutListView(listViewRoot, keyboards,
-      keyboardTemplate);
-
-    assert.ok(this.ListViewStub
-      .calledWith(listViewRoot, keyboards, keyboardTemplate),
-      'the list view should be created with correct arguments');
-    assert.ok(this.subject._listView, 'the list view should be created');
-
-    this.MockListView.mTeardown();
-  });
-});
diff --git a/apps/settings/test/unit/panels/keyboard_enabled_layouts/core_test.js b/apps/settings/test/unit/panels/keyboard_enabled_layouts/core_test.js
new file mode 100644
index 0000000..33d76ea
--- /dev/null
+++ b/apps/settings/test/unit/panels/keyboard_enabled_layouts/core_test.js
@@ -0,0 +1,82 @@
+'use strict';
+
+suite('KeyboardEnabledLayoutsCore', function() {
+  var map = {
+    'panels/keyboard_enabled_layouts/core': {
+      'modules/settings_service': 'unit/mock_settings_service',
+      'modules/mvvm/list_view': 'unit/mock_list_view'
+    }
+  };
+
+  suiteSetup(function(done) {
+    // setup mocks
+    this.mockLayoutTemplate = function() {};
+    this.mockEnabledLayouts = [];
+    this.mockElements = { listViewRoot: {} };
+
+    testRequire([
+      'unit/mock_keyboard_context',
+      'unit/mock_list_view',
+      'panels/keyboard_enabled_layouts/core'
+    ], map, function(MockKeyboardContext, MockListView,
+      KeyboardEnabledLayoutsCore) {
+        this.MockKeyboardContext = MockKeyboardContext;
+        this.MockListView = MockListView;
+        this.KeyboardEnabledLayoutsCore = KeyboardEnabledLayoutsCore;
+        done();
+    }.bind(this));
+  });
+
+  setup(function() {
+    this.MockKeyboardContext.mEnabledLayouts = this.mockEnabledLayouts;
+    this.subject = this.KeyboardEnabledLayoutsCore(this.MockKeyboardContext,
+      this.mockLayoutTemplate);
+  });
+
+  teardown(function() {
+    this.MockKeyboardContext.mTeardown();
+  });
+
+  test('init', function() {
+    sinon.spy(this.subject, '_initEnabledLayoutListView');
+
+    this.subject.init(this.mockElements);
+
+    assert.ok(this.subject._initEnabledLayoutListView.calledWith(
+      this.mockElements.listViewRoot, this.mockEnabledLayouts,
+      this.mockLayoutTemplate),
+      '_initEnabledLayoutListView should be called with correct parameters');
+  });
+
+  test('when enabled = true', function() {
+    this.subject._listView = { enabled: false };
+    this.subject.enabled = true;
+    assert.ok(this.subject._listView.enabled,
+      'the list view should be enabled');
+  });
+
+  test('when enabled = false', function() {
+    this.subject._listView = { enabled: true };
+    this.subject.enabled = false;
+    assert.ok(!this.subject._listView.enabled,
+      'the list view should be disabled');
+  });
+
+  test('_initEnabledLayoutListView', function() {
+    this.ListViewStub = sinon.stub().returns({});
+    this.MockListView.mInnerFunction = this.ListViewStub;
+    var listViewRoot = {};
+    var layouts = [{}];
+    var layoutTemplate = function() {};
+
+    this.subject._initEnabledLayoutListView(listViewRoot, layouts,
+      layoutTemplate);
+
+    assert.ok(this.ListViewStub
+      .calledWith(listViewRoot, layouts, layoutTemplate),
+      'the list view should be created with correct arguments');
+    assert.ok(this.subject._listView, 'the list view should be created');
+
+    this.MockListView.mTeardown();
+  });
+});
diff --git a/apps/settings/test/unit/panels/keyboard_enabled_layouts/panel_test.js b/apps/settings/test/unit/panels/keyboard_enabled_layouts/panel_test.js
new file mode 100644
index 0000000..7108829
--- /dev/null
+++ b/apps/settings/test/unit/panels/keyboard_enabled_layouts/panel_test.js
@@ -0,0 +1,74 @@
+'use strict';
+
+suite('KeyboardEnabledLayoutsPanel', function() {
+  var map = {
+    '*': {
+      'modules/keyboard_context': 'MockKeyboardContext',
+      'modules/settings_panel': 'MockSettingsPanel',
+      'panels/keyboard_enabled_layouts/core': 'MockCore'
+    }
+  };
+
+  setup(function(done) {
+    this.fakeRootElement = {
+      querySelector: function() {}
+    };
+
+    // Create a new requirejs context
+    var requireCtx = testRequire([], map, function() {});
+    var that = this;
+
+    // Define MockKeyboardContext
+    define('MockKeyboardContext', function() {
+      return {};
+    });
+
+    // Define MockCore
+    this.mockCore = {
+      enabled: false,
+      init: function() {}
+    };
+    this.MockCore = function() {
+      return that.mockCore;
+    };
+    define('MockCore', function() {
+      return that.MockCore;
+    });
+
+    // Define MockSettingsPanel
+    define('MockSettingsPanel', function() {
+      return function(options) {
+        return {
+          init: options.onInit,
+          beforeShow: options.onBeforeShow,
+          beforeHide: options.onBeforeHide,
+          hide: options.onHide
+        };
+      };
+    });
+
+    requireCtx([
+      'panels/keyboard_enabled_layouts/panel'
+    ],
+    function(KeyboardEnabledLayoutsPanel) {
+      that.panel = KeyboardEnabledLayoutsPanel();
+      done();
+    });
+  });
+
+  test('Init the core when onInit', function() {
+    sinon.spy(this.mockCore, 'init');
+    this.panel.init(this.fakeRootElement);
+    sinon.assert.called(this.mockCore.init);
+  });
+
+  test('Enabled the core when onBeforeShow', function() {
+    this.panel.beforeShow();
+    assert.ok(this.mockCore.enabled);
+  });
+
+  test('Disable the core when onHide', function() {
+    this.panel.hide();
+    assert.ok(!this.mockCore.enabled);
+  });
+});
diff --git a/apps/settings/test/unit/setup.js b/apps/settings/test/unit/setup.js
index 75d5d02..accd9d4 100644
--- a/apps/settings/test/unit/setup.js
+++ b/apps/settings/test/unit/setup.js
@@ -45,9 +45,6 @@ requireApp('settings/js/vendor/alameda.js', (function() {
       'unit/mock_moz_apps': {
         exports: 'MockMozApps'
       },
-      'unit/mock_wifi_utils': {
-        exports: 'MockWifiUtils'
-      },
       'shared_mocks/mock_navigator_moz_settings': {
         exports: 'MockNavigatorSettings'
       },
@@ -69,15 +66,6 @@ requireApp('settings/js/vendor/alameda.js', (function() {
       },
       'shared_mocks/mock_settings_url': {
         exports: 'MockSettingsURL'
-      },
-      'shared_mocks/mock_wifi_helper': {
-        exports: 'MockWifiHelper'
-      },
-      'shared_mocks/mock_navigator_moz_wifi_manager': {
-        exports: 'MockNavigatorMozWifiManager'
-      },
-      'shared_mocks/mock_enumerate_all': {
-        exports: 'MockEnumerateAll'
       }
     },
     modules: [
diff --git a/apps/settings/test/unit/sim_settings_helper_test.js b/apps/settings/test/unit/sim_settings_helper_test.js
index d30cead..06312fd 100644
--- a/apps/settings/test/unit/sim_settings_helper_test.js
+++ b/apps/settings/test/unit/sim_settings_helper_test.js
@@ -1,27 +1,20 @@
 'use strict';

 requireApp('settings/shared/test/unit/mocks/mock_navigator_moz_settings.js');
+requireApp('settings/shared/js/sim_settings_helper.js');

 suite('SimSettingsHelper > ', function() {
   var realMozSettings;

-  suiteSetup(function(done) {
+  suiteSetup(function() {
     realMozSettings = window.navigator.mozSettings;
     window.navigator.mozSettings = MockNavigatorSettings;
-
-    // We have to load sim_settings_helper lazily because
-    // mozSettings is not ready at first
-    requireApp('settings/shared/js/sim_settings_helper.js', done);
   });

   suiteTeardown(function() {
     window.navigator.mozSettings = realMozSettings;
   });

-  setup(function() {
-    window.navigator.mozSettings.mSetup();
-  });
-
   // test for SimSettingsHelper.set method
   suite('SimSettingsHelper._set > ', function() {
     suite('outgoingCall > ', function() {
@@ -290,19 +283,9 @@ suite('SimSettingsHelper > ', function() {

   suite('SimSettingsHelper.setServiceOnCard("key", cardIndex) > ', function() {
     var fakeCardIndex = 0;
-    var mSettings;
-    var clock;
-
-    suiteSetup(function() {
-      clock = sinon.useFakeTimers();
-    });
-
-    suiteTeardown(function() {
-      clock.restore();
-    });
+    var mSettings = MockNavigatorSettings.mSettings;

     setup(function() {
-      mSettings = MockNavigatorSettings.mSettings;
       this.sinon.spy(SimSettingsHelper, '_set');
       this.sinon.spy(SimSettingsHelper, '_on');
       this.sinon.spy(SimSettingsHelper, '_setToSettingsDB');
@@ -311,7 +294,6 @@ suite('SimSettingsHelper > ', function() {
     suite('outgoingCall > ', function() {
       setup(function() {
         SimSettingsHelper.setServiceOnCard('outgoingCall', fakeCardIndex);
-        clock.tick(0);
       });

       test('can set on outgoingCall successfully', function() {
@@ -331,7 +313,6 @@ suite('SimSettingsHelper > ', function() {
     suite('outgoingMessages > ', function() {
       setup(function() {
         SimSettingsHelper.setServiceOnCard('outgoingMessages', fakeCardIndex);
-        clock.tick(0);
       });

       test('can set on outgoingMessages successfully', function() {
@@ -345,7 +326,6 @@ suite('SimSettingsHelper > ', function() {
     suite('outgoingData > ', function() {
       setup(function() {
         SimSettingsHelper.setServiceOnCard('outgoingData', fakeCardIndex);
-        clock.tick(0);
       });

       test('can set on outgoingData successfully', function() {
@@ -363,7 +343,6 @@ suite('SimSettingsHelper > ', function() {
     suite('set string index to outgoingData > ', function() {
       setup(function() {
         SimSettingsHelper.setServiceOnCard('outgoingData', '' + fakeCardIndex);
-        clock.tick(0);
       });

       test('can set on service id with number successfully', function() {
@@ -372,62 +351,4 @@ suite('SimSettingsHelper > ', function() {
       });
     });
   });
-
-  suite('SimSettingsHelper._getServiceCallbacks', function() {
-    var services = ['outgoingCall', 'outgoingMessages', 'outgoingData'];
-    services.forEach(function(serviceName) {
-      test(serviceName, function() {
-        assert.isTrue(Array.isArray(
-          SimSettingsHelper._callbacks[serviceName]));
-      });
-    });
-  });
-
-  suite('SimSettingsHelper.observe > ', function() {
-    var spy1;
-    var spy2;
-    var defaultServiceId = 2;
-
-    setup(function() {
-      // Because window.navigator.mozSettings.mSetup() will remove these
-      // observers, we have to make sure to bind them back.
-      SimSettingsHelper._addSettingsObservers();
-
-      spy1 = this.sinon.spy();
-      spy2 = this.sinon.spy();
-    });
-
-    test('outgoingCall', function() {
-      SimSettingsHelper.observe('outgoingCall', spy1);
-      SimSettingsHelper.observe('outgoingCall', spy2);
-
-      MockNavigatorSettings.mTriggerObservers('ril.telephony.defaultServiceId',
-        defaultServiceId);
-
-      assert.isTrue(spy1.called);
-      assert.isTrue(spy2.called);
-    });
-
-    test('outgoingMessages', function() {
-      SimSettingsHelper.observe('outgoingMessages', spy1);
-      SimSettingsHelper.observe('outgoingMessages', spy2);
-
-      MockNavigatorSettings.mTriggerObservers('ril.sms.defaultServiceId',
-        defaultServiceId);
-
-      assert.isTrue(spy1.called);
-      assert.isTrue(spy2.called);
-    });
-
-    test('outgoingData', function() {
-      SimSettingsHelper.observe('outgoingData', spy1);
-      SimSettingsHelper.observe('outgoingData', spy2);
-
-      MockNavigatorSettings.mTriggerObservers('ril.data.defaultServiceId',
-        defaultServiceId);
-
-      assert.isTrue(spy1.called);
-      assert.isTrue(spy2.called);
-    });
-  });
 });
diff --git a/apps/settings/test/unit/vertical_homescreen_test.js b/apps/settings/test/unit/vertical_homescreen_test.js
index 12afdc9..be6714a 100644
--- a/apps/settings/test/unit/vertical_homescreen_test.js
+++ b/apps/settings/test/unit/vertical_homescreen_test.js
@@ -15,14 +15,9 @@ suite('vertical_homescreen.js >', function() {
   var numCols = 4;
   var updateStub = null;
   var updateHandler = null;
-  var colsPrefEnabled = 'cols.preference.enabled';
-  var colsPref = 'grid.cols';
+  var pref = 'grid.cols';
   var realMozSettings = null;

-  var defaultValues = {};
-  defaultValues[colsPref] = numCols;
-  defaultValues[colsPrefEnabled] = true;
-
   suiteTemplate('homescreen', {
     id: 'homescreen'
   });
@@ -49,10 +44,10 @@ suite('vertical_homescreen.js >', function() {
   });

   setup(function(done) {
-    var getStub = sinon.stub(verticalPreferences, 'get', function(key) {
+    var getStub = sinon.stub(verticalPreferences, 'get', function() {
       return {
         then: function(resolve, refect) {
-          resolve(defaultValues[key]);
+          resolve(numCols);
         }
       };
     });
@@ -72,7 +67,6 @@ suite('vertical_homescreen.js >', function() {
     test('Grid layout select initialized correctly ', function() {
       // Four columns (second option -> index 1)
       assertNumberOfColumns(numCols);
-      assert.equal(verticalHomescreen.section.hidden, false);
     });
   });

@@ -83,7 +77,7 @@ suite('vertical_homescreen.js >', function() {
     }

     function assertPreferenceUpdated(id, value, expectedValue) {
-      assert.equal(id, colsPref);
+      assert.equal(id, pref);
       assert.equal(value, expectedValue);
     }

@@ -104,23 +98,23 @@ suite('vertical_homescreen.js >', function() {

   suite('Updating Datastore > ', function() {

-    function dispatchUpdatedEvent(prefName, prefValue) {
+    function dispatchUpdatedEvent(cols) {
       updateHandler.handleEvent({
         type: 'updated',
         target: {
-          name: prefName,
-          value: prefValue
+          name: pref,
+          value: cols
         }
       });
     }

     test('The grid layout select was updated properly ', function() {
       var expectedNumCols = 4;
-      dispatchUpdatedEvent(colsPref, expectedNumCols);
+      dispatchUpdatedEvent(expectedNumCols);
       assertNumberOfColumns(expectedNumCols);

       expectedNumCols = 3;
-      dispatchUpdatedEvent(colsPref, expectedNumCols);
+      dispatchUpdatedEvent(expectedNumCols);
       assertNumberOfColumns(expectedNumCols);
     });
   });
diff --git a/apps/sharedtest/test/unit/bluetooth_helper_test.js b/apps/sharedtest/test/unit/bluetooth_helper_test.js
index 238a11c..f7cc770 100644
--- a/apps/sharedtest/test/unit/bluetooth_helper_test.js
+++ b/apps/sharedtest/test/unit/bluetooth_helper_test.js
@@ -37,14 +37,6 @@ suite('bluetooth helper', function() {
     assert.isTrue(MockBTAdapter.toggleCalls.calledTwice);
   });

-  ['enabled', 'adapteradded'].forEach(function(evtName) {
-    test('should get adapter once ' + evtName, function() {
-      sandbox.spy(MockMozBluetooth, 'getDefaultAdapter');
-      MockMozBluetooth.triggerEventListeners(evtName);
-      assert.isTrue(MockMozBluetooth.getDefaultAdapter.called);
-    });
-  });
-
   suite('public functions and setters', function() {
     setup(function() {
       MockMozBluetooth.triggerOnGetAdapterSuccess();
diff --git a/apps/sharedtest/test/unit/lockscreen_conn_info_manager_test.js b/apps/sharedtest/test/unit/lockscreen_conn_info_manager_test.js
deleted file mode 100644
index 71f39ec..0000000
--- a/apps/sharedtest/test/unit/lockscreen_conn_info_manager_test.js
+++ /dev/null
@@ -1,596 +0,0 @@
-/* globals LockScreenConnInfoManager, MobileOperator, MockMobileconnection,
-           MockMobileOperator, MockNavigatorMozIccManager,
-           MockNavigatorSettings, MockSettingsListener, MockSIMSlot,
-           MockSIMSlotManager, SIMSlotManager */
-'use strict';
-
-require('/shared/test/unit/mocks/mock_l10n.js');
-require('/shared/test/unit/mocks/mock_simslot.js');
-require('/shared/test/unit/mocks/mock_simslot_manager.js');
-require('/shared/test/unit/mocks/mock_navigator_moz_mobile_connections.js');
-require('/shared/test/unit/mocks/mock_navigator_moz_icc_manager.js');
-require('/shared/test/unit/mocks/mock_mobile_operator.js');
-require('/shared/test/unit/mocks/mock_navigator_moz_settings.js');
-require('/shared/test/unit/mocks/mock_settings_listener.js');
-require('/shared/js/lockscreen_connection_info_manager.js');
-
-if (!window.MobileOperator) {
-  window.MobileOperator = null;
-}
-
-if (!window.SettingsListener) {
-  window.SettingsListener = null;
-}
-
-if (!window.SIMSlotManager) {
-  window.SIMSlotManager = null;
-}
-
-suite('system/LockScreenConnInfoManager >', function() {
-  var subject;
-  var realL10n;
-  var realMobileOperator;
-  var realSIMSlotManager;
-  var realIccManager;
-  var realSettingsListener;
-  var realMozSettings;
-  var domConnStates;
-  var DUMMYTEXT1 = 'foo';
-
-  setup(function() {
-    realL10n = navigator.mozL10n;
-    navigator.mozL10n = window.MockL10n;
-
-    realMobileOperator = window.MobileOperator;
-    window.MobileOperator = MockMobileOperator;
-
-    realIccManager = navigator.mozIccManager;
-    navigator.mozIccManager = MockNavigatorMozIccManager;
-
-    realMozSettings = window.navigator.mozSettings;
-    window.navigator.mozSettings = MockNavigatorSettings;
-
-    realSettingsListener = window.SettingsListener;
-    window.SettingsListener = MockSettingsListener;
-
-    realSIMSlotManager = window.SIMSlotManager;
-    window.SIMSlotManager = MockSIMSlotManager;
-
-    domConnStates = document.createElement('div');
-    domConnStates.id = 'lockscreen-conn-states';
-    document.body.appendChild(domConnStates);
-  });
-
-  teardown(function() {
-    navigator.mozL10n = realL10n;
-    window.MobileOperator = realMobileOperator;
-    window.navigator.mozIccManager = realIccManager;
-    window.SettingsListener = realSettingsListener;
-    window.SIMSlotManager = realSIMSlotManager;
-
-    document.body.removeChild(domConnStates);
-    MockSettingsListener.mTeardown();
-  });
-
-  suiteTeardown(function() {
-    MockSIMSlotManager.mTeardown();
-  });
-
-  suite('Update conn states when events', function() {
-    var mockMobileConnection;
-    var iccObj;
-
-    suiteSetup(function() {
-      mockMobileConnection = MockMobileconnection();
-
-      MockMobileOperator.mOperator = 'operator';
-      MockMobileOperator.mCarrier = 'carrier';
-      MockMobileOperator.mRegion = 'region';
-
-      MockSIMSlotManager.mInstances =
-        [new MockSIMSlot(mockMobileConnection, 0)];
-      iccObj = MockSIMSlotManager.mInstances[0].simCard;
-    });
-
-    suiteTeardown(function() {
-      MockMobileOperator.mTeardown();
-    });
-
-    setup(function() {
-      // add a sim card
-      mockMobileConnection.iccId = 'iccid1';
-      mockMobileConnection.voice = {};
-      MockNavigatorMozIccManager.addIcc('iccid1');
-
-      subject = new LockScreenConnInfoManager();
-      subject._initialize(domConnStates);
-
-      this.sinon.stub(MockSIMSlotManager, 'isMultiSIM').returns(false);
-      this.sinon.stub(MockSIMSlotManager, 'noSIMCardOnDevice').returns(false);
-
-      this.sinon.stub(subject, 'updateConnStates');
-      this.sinon.stub(subject, 'updateConnState');
-    });
-
-    teardown(function() {
-      mockMobileConnection.mTeardown();
-      MockNavigatorMozIccManager.mTeardown();
-      subject.updateConnStates.restore();
-      subject.updateConnState.restore();
-    });
-
-    // sim related changes
-    test('voicechange', function() {
-      mockMobileConnection.triggerEventListeners('voicechange', {});
-      sinon.assert.called(subject.updateConnState);
-    });
-
-    ['simslot-cardstatechange',
-     'simslot-iccinfochange'].forEach(function(eventName) {
-      test(eventName, function() {
-        var simInfo = {
-          conn: mockMobileConnection,
-          index: 0
-        };
-        window.dispatchEvent(new CustomEvent(eventName, { detail: simInfo }));
-        sinon.assert.calledWith(subject.updateConnState, simInfo);
-      });
-    });
-
-    test('cellbroadcastmsgchanged', function() {
-      var testLabelName = 'testLabelName';
-      window.dispatchEvent(new CustomEvent('cellbroadcastmsgchanged', {
-        detail: testLabelName
-      }));
-      assert.isTrue(subject.updateConnStates.called);
-      assert.equal(subject._cellbroadcastLabel, testLabelName);
-    });
-
-    test('ril.radio.disabled', function() {
-      var airplaneModeEnabled = true;
-      MockNavigatorSettings.createLock().set({
-        'ril.radio.disabled': airplaneModeEnabled
-      });
-      assert.isTrue(subject.updateConnStates.called);
-      assert.equal(subject._airplaneMode, airplaneModeEnabled);
-    });
-
-    test('ril.telephony.defaultServiceId', function() {
-      var defaultServiceId = 'iccid1';
-      MockNavigatorSettings.createLock().set({
-        'ril.telephony.defaultServiceId': defaultServiceId
-      });
-      assert.isTrue(subject.updateConnStates.called);
-      assert.equal(subject._telephonyDefaultServiceId, defaultServiceId);
-    });
-  });
-
-  suite('Single sim devices', function() {
-    var mockMobileConnection;
-    var domConnstateIDLine;
-    var domConnstateL1;
-    var domConnstateL2;
-    var iccObj;
-
-    suiteSetup(function() {
-      mockMobileConnection = MockMobileconnection();
-
-      MockMobileOperator.mOperator = 'operator';
-      MockMobileOperator.mCarrier = 'carrier';
-      MockMobileOperator.mRegion = 'region';
-
-      MockSIMSlotManager.mInstances =
-        [new MockSIMSlot(mockMobileConnection, 0)];
-      iccObj = MockSIMSlotManager.mInstances[0].simCard;
-
-      subject = new LockScreenConnInfoManager();
-    });
-
-    suiteTeardown(function() {
-      MockMobileOperator.mTeardown();
-    });
-
-    setup(function() {
-      // add a sim card
-      mockMobileConnection.iccId = 'iccid1';
-      mockMobileConnection.voice = {};
-      MockNavigatorMozIccManager.addIcc('iccid1');
-
-      subject._initialize(domConnStates);
-
-      var domConnState = domConnStates.children[0];
-      domConnstateIDLine = domConnState.children[0];
-      domConnstateL1 = domConnState.children[1];
-      domConnstateL2 = domConnState.children[2];
-
-      this.sinon.stub(MockSIMSlotManager, 'isMultiSIM').returns(false);
-      this.sinon.stub(MockSIMSlotManager, 'noSIMCardOnDevice').returns(false);
-    });
-
-    teardown(function() {
-      mockMobileConnection.mTeardown();
-      MockNavigatorMozIccManager.mTeardown();
-    });
-
-    test('2G Mode: should update cell broadcast info on connstate Line 2',
-      function() {
-        mockMobileConnection.voice = {
-          connected: true,
-          type: 'gsm'
-        };
-
-        subject._cellbroadcastLabel = DUMMYTEXT1;
-        subject.updateConnStates();
-        assert.equal(domConnstateL2.textContent, DUMMYTEXT1);
-
-        subject._cellbroadcastLabel = null;
-    });
-
-    test('3G Mode: should update carrier and region info on connstate Line 2',
-      function() {
-        mockMobileConnection.voice = {
-          connected: true,
-          type: 'wcdma'
-        };
-
-        var carrier = 'TIM';
-        var region = 'SP';
-        MobileOperator.mCarrier = carrier;
-        MobileOperator.mRegion = region;
-
-        subject._cellbroadcastLabel = DUMMYTEXT1;
-
-        var l10nSpy = sinon.spy(navigator.mozL10n, 'setAttributes');
-
-        var l10nArgs = {
-          carrier: carrier,
-          region: region
-        };
-
-        subject.updateConnStates();
-
-        assert.ok(l10nSpy.calledWith(domConnstateL2,
-                                     'operator-info',
-                                     l10nArgs));
-
-        navigator.mozL10n.setAttributes.restore();
-
-        subject._cellbroadcastLabel = null;
-    });
-
-    test('Show no network', function() {
-      mockMobileConnection.voice = {
-        connected: true,
-        state: 'notSearching'
-      };
-      subject.updateConnStates();
-      assert.equal(domConnstateL1.dataset.l10nId, 'noNetwork');
-    });
-
-    test('Show searching', function() {
-      mockMobileConnection.voice = {
-        connected: false,
-        emergencyCallsOnly: false
-      };
-      subject.updateConnStates();
-      assert.equal(domConnstateL1.dataset.l10nId, 'searching');
-    });
-
-    test('Show roaming', function() {
-      mockMobileConnection.voice = {
-        connected: true,
-        emergencyCallsOnly: false,
-        roaming: true
-      };
-
-      var l10nSpy = sinon.spy(navigator.mozL10n, 'setAttributes');
-
-      var l10nArgs = {
-        operator: MockMobileOperator.mOperator
-      };
-
-      subject.updateConnStates();
-
-      assert.ok(l10nSpy.calledWith(domConnstateL1,
-                                   'roaming',
-                                   l10nArgs));
-
-      navigator.mozL10n.setAttributes.restore();
-    });
-
-    test('Show localized roaming',
-      function() {
-        mockMobileConnection.voice = {
-          connected: true,
-          emergencyCallsOnly: false,
-          roaming: true
-        };
-
-        var l10nArgs = {
-          operator: 'operator'
-        };
-
-        var l10nSpy = this.sinon.spy(navigator.mozL10n, 'setAttributes');
-        subject.updateConnStates();
-        assert.ok(l10nSpy.calledWith(domConnstateL1, 'roaming', l10nArgs),
-          'Roaming network name displayed localized with proper string');
-
-        navigator.mozL10n.setAttributes.restore();
-    });
-
-    suite('Show correct card states when emergency calls only', function() {
-      test('unknown', function() {
-        mockMobileConnection.voice = {
-          connected: false,
-          emergencyCallsOnly: true
-        };
-        iccObj.cardState = 'unknown';
-
-        subject.updateConnStates();
-        assert.equal(domConnstateL1.dataset.l10nId, 'emergencyCallsOnly');
-        assert.equal(domConnstateL2.dataset.l10nId,
-          'emergencyCallsOnly-unknownSIMState');
-      });
-
-      test('other card state', function() {
-        mockMobileConnection.voice = {
-          connected: false,
-          emergencyCallsOnly: true
-        };
-        iccObj.cardState = 'otherCardState';
-
-        subject.updateConnStates();
-        assert.equal(domConnstateL1.dataset.l10nId, 'emergencyCallsOnly');
-        assert.isFalse(domConnstateL2.hasAttribute('data-l10n-id'));
-      });
-
-      ['pinRequired', 'pukRequired', 'networkLocked',
-       'serviceProviderLocked', 'corporateLocked', 'network1Locked',
-       'network2Locked', 'hrpdNetworkLocked', 'ruimCorporateLocked',
-       'ruimServiceProviderLocked'].forEach(function(cardState) {
-        test(cardState, function() {
-          mockMobileConnection.voice = {
-            connected: false,
-            emergencyCallsOnly: true
-          };
-          iccObj.cardState = cardState;
-
-          subject.updateConnStates();
-          assert.equal(domConnstateL1.dataset.l10nId, 'emergencyCallsOnly');
-          assert.equal(domConnstateL2.dataset.l10nId,
-            'emergencyCallsOnly-' + cardState);
-        });
-      });
-    });
-  });
-
-  suite('Multiple sims devices', function() {
-    var domConnStateList;
-    var mockMobileConnections = [];
-    var iccObj1;
-    var iccObj2;
-
-    suiteSetup(function() {
-      mockMobileConnections = [
-        MockMobileconnection(),
-        MockMobileconnection()
-      ];
-
-      MockMobileOperator.mOperator = 'operator';
-      MockMobileOperator.mCarrier = 'carrier';
-      MockMobileOperator.mRegion = 'region';
-
-      MockSIMSlotManager.mInstances =
-        [new MockSIMSlot(mockMobileConnections[0], 0),
-         new MockSIMSlot(mockMobileConnections[1], 1)];
-
-      iccObj1 = MockSIMSlotManager.mInstances[0].simCard;
-      iccObj2 = MockSIMSlotManager.mInstances[1].simCard;
-
-      subject = new LockScreenConnInfoManager();
-    });
-
-    suiteTeardown(function() {
-      MockMobileOperator.mTeardown();
-    });
-
-    setup(function() {
-      mockMobileConnections[0].iccId = 'iccid1';
-      mockMobileConnections[0].voice = {};
-      MockNavigatorMozIccManager.addIcc('iccid1');
-
-      mockMobileConnections[1].iccId = 'iccid2';
-      mockMobileConnections[1].voice = {};
-      MockNavigatorMozIccManager.addIcc('iccid2');
-
-      subject._initialize(domConnStates);
-
-      domConnStateList = [];
-      Array.prototype.forEach.call(domConnStates.children,
-        function(domConnState) {
-          domConnState.domConnstateIDLine = domConnState.children[0];
-          domConnState.domConnstateL1 = domConnState.children[1];
-          domConnState.domConnstateL2 = domConnState.children[2];
-          domConnStateList.push(domConnState);
-      });
-
-      this.sinon.stub(SIMSlotManager, 'isMultiSIM').returns(true);
-    });
-
-    teardown(function() {
-      mockMobileConnections[0].mTeardown();
-      mockMobileConnections[1].mTeardown();
-      MockNavigatorMozIccManager.mTeardown();
-    });
-
-    suite('No sim card', function() {
-      setup(function() {
-        this.sinon.stub(SIMSlotManager, 'noSIMCardOnDevice').returns(true);
-      });
-
-      test('Should only show one conn state', function() {
-        subject.updateConnStates();
-
-        assert.equal(domConnStateList[0].domConnstateL1.dataset.l10nId,
-          'emergencyCallsOnly-noSIM');
-        assert.isFalse(
-          domConnStateList[1].domConnstateL1.hasAttribute('data-l10n-id'));
-        assert.isFalse(
-          domConnStateList[1].domConnstateL2.hasAttribute('data-l10n-id'));
-      });
-
-      test('Should show emergency call text', function() {
-        mockMobileConnections[0].voice.emergencyCallsOnly = true;
-        subject.updateConnStates();
-
-        assert.equal(domConnStateList[0].domConnstateL1.dataset.l10nId,
-          'emergencyCallsOnly');
-        assert.equal(domConnStateList[0].domConnstateL2.dataset.l10nId,
-          'emergencyCallsOnly-noSIM');
-        assert.isFalse(
-          domConnStateList[1].domConnstateL1.hasAttribute('data-l10n-id'));
-        assert.isFalse(
-          domConnStateList[1].domConnstateL2.hasAttribute('data-l10n-id'));
-      });
-    });
-
-    suite('One sim card inserted', function() {
-      suiteSetup(function() {
-        mockMobileConnections[0].voice = {
-          connected: true,
-          type: 'gsm'
-        };
-        mockMobileConnections[1].voice = {};
-      });
-
-      setup(function() {
-        navigator.mozIccManager.removeIcc('iccid2');
-        MockSIMSlotManager.mInstances[1].isAbsent = function() { return true; };
-      });
-
-      test('Should show sim ID', function() {
-        subject.updateConnStates();
-
-        var simIDLine = domConnStateList[0].domConnstateIDLine;
-        assert.isFalse(simIDLine.hidden);
-
-        assert.equal(simIDLine.dataset.l10nId, 'lockscreen-sim-id');
-        assert.deepEqual(JSON.parse(simIDLine.dataset.l10nArgs), {'n': 1});
-      });
-
-      test('Should show only one conn state', function() {
-        subject.updateConnStates();
-
-        assert.isFalse(domConnStateList[0].hidden);
-        assert.isTrue(domConnStateList[1].hidden);
-      });
-
-      test('Should show airplane mode on connstate 1 Line 1 when in ' +
-        'airplane mode', function() {
-          subject._airplaneMode = true;
-          subject.updateConnStates();
-
-          assert.isFalse(domConnStateList[0].hidden);
-          assert.isTrue(domConnStateList[0].domConnstateIDLine.hidden);
-          assert.equal(domConnStateList[0].domConnstateL1.dataset.l10nId,
-            'airplaneMode');
-          assert.isFalse(
-            domConnStateList[0].domConnstateL2.hasAttribute('data-l10n-id'));
-
-          subject._airplaneMode = false;
-      });
-    });
-
-    suite('Two sim cards inserted', function() {
-      setup(function() {
-        MockSIMSlotManager.mInstances[0].conn.voice = {
-          connected: true,
-          type: 'gsm'
-        };
-        MockSIMSlotManager.mInstances[1].conn.voice = {
-          connected: true,
-          type: 'gsm'
-        };
-        this.sinon.stub(SIMSlotManager, 'noSIMCardOnDevice').returns(false);
-      });
-
-      test('Should show sim IDs', function() {
-        subject.updateConnStates();
-
-        var simIDLine1 = domConnStateList[0].domConnstateIDLine;
-        var simIDLine2 = domConnStateList[1].domConnstateIDLine;
-        assert.isFalse(simIDLine1.hidden);
-        assert.isFalse(simIDLine2.hidden);
-
-        assert.equal(simIDLine1.dataset.l10nId, 'lockscreen-sim-id');
-        assert.deepEqual(JSON.parse(simIDLine1.dataset.l10nArgs), {'n': 1});
-        assert.equal(simIDLine2.dataset.l10nId, 'lockscreen-sim-id');
-        assert.deepEqual(JSON.parse(simIDLine2.dataset.l10nArgs), {'n': 2});
-      });
-
-      test('Should hide sim IDs if all sim cards are not connected to networks',
-        function() {
-          sinon.stub(SIMSlotManager, 'noSIMCardConnectedToNetwork')
-            .returns(true);
-          subject.updateConnStates();
-
-          var simIDLine1 = domConnStateList[0].domConnstateIDLine;
-          var connState1line1 = domConnStateList[0].domConnstateL1;
-          var simIDLine2 = domConnStateList[1].domConnstateIDLine;
-          assert.isTrue(simIDLine1.hidden);
-          assert.isTrue(simIDLine2.hidden);
-          assert.equal(
-            connState1line1.getAttribute('data-l10n-id'),
-            'emergencyCallsOnly');
-          SIMSlotManager.noSIMCardConnectedToNetwork.restore();
-      });
-
-      test('Should show operator names on Line 1', function() {
-        subject.updateConnStates();
-
-        var connState1line1 = domConnStateList[0].domConnstateL1;
-        var connState2line1 = domConnStateList[1].domConnstateL1;
-        assert.equal(connState1line1.textContent, MockMobileOperator.mOperator);
-        assert.equal(connState2line1.textContent, MockMobileOperator.mOperator);
-      });
-
-      test('Should show carrier and region on Line 2', function() {
-        var l10nSpy = sinon.spy(navigator.mozL10n, 'setAttributes');
-
-        var l10nArgs = {
-          carrier: MockMobileOperator.mCarrier,
-          region: MockMobileOperator.mRegion
-        };
-
-        subject.updateConnStates();
-
-        assert.ok(l10nSpy.calledWith(domConnStateList[0].domConnstateL2,
-                                     'operator-info',
-                                     l10nArgs));
-
-        assert.ok(l10nSpy.calledWith(domConnStateList[1].domConnstateL2,
-                                     'operator-info',
-                                     l10nArgs));
-      });
-
-      test('Should display "emergency calls only" if target sim is the ' +
-        'primary one and is emergency calls only', function() {
-          mockMobileConnections[0].voice.emergencyCallsOnly = true;
-          subject._telephonyDefaultServiceId = 0;
-          subject.updateConnStates();
-
-          var connState1line1 = domConnStateList[0].domConnstateL1;
-          assert.equal(connState1line1.dataset.l10nId, 'emergencyCallsOnly');
-      });
-
-      test('Should hide the conn state of the target sim if it is not the ' +
-        'primary one but is emergency calls only', function() {
-          mockMobileConnections[0].voice.emergencyCallsOnly = true;
-          subject._telephonyDefaultServiceId = 1;
-          subject.updateConnStates();
-
-          assert.isTrue(domConnStateList[0].hidden);
-      });
-    });
-  });
-});
diff --git a/apps/sharedtest/test/unit/media_frame_test.js b/apps/sharedtest/test/unit/media_frame_test.js
index 4e73806..5004993 100644
--- a/apps/sharedtest/test/unit/media_frame_test.js
+++ b/apps/sharedtest/test/unit/media_frame_test.js
@@ -1,21 +1,8 @@
 /*
- * Unit tests for the MediaFrame class from shared/js/media/media_frame.js
- */
-/* global Promise */
+  Media Frame unit tests.
+*/
 'use strict';

-// This mock needs to be in place when we load MediaFrame, so it is here
-// rather than in suiteSetup. We remove it in suiteTeardown.
-var realGetFeature = navigator.getFeature;
-navigator.getFeature = function(feature) {
-  if (feature === 'hardware.memory') {
-    return Promise.resolve(4096); // 4gb of memory
-  }
-  else {
-    return Promise.reject();
-  }
-};
-
 var Downsample = require('/shared/js/media/downsample.js');
 var MediaFrame = require('/shared/js/media/media_frame.js');

@@ -39,8 +26,6 @@ suite('Media Frame Unit Tests', function() {
     if (mockDeviceStorage) {
       delete navigator.getDeviceStorage;
     }
-
-    navigator.getFeature = realGetFeature;
   });

   setup(function() {
@@ -51,26 +36,8 @@ suite('Media Frame Unit Tests', function() {
     this.sandbox.restore();
   });

-
-  suite('Runtime memory detection', function() {
-    test('navigator.getFeature() is called', function() {
-      // We're faking 4gb of memory, so we should get 4 * 8mb of decode size
-      assert.equal(MediaFrame.maxImageDecodeSize, 32 * 1024 * 1024);
-    });
-
-    test('computeMaxImageDecodeSize() works correctly', function() {
-      assert.equal(MediaFrame.computeMaxImageDecodeSize(128), 2 * 1024 * 1024);
-      assert.equal(MediaFrame.computeMaxImageDecodeSize(512), 5 * 1024 * 1024);
-      assert.equal(MediaFrame.computeMaxImageDecodeSize(1024), 8 * 1024 * 1024);
-
-      // For low-memory devices, the image size may also depend on
-      // screen size
-      var size = MediaFrame.computeMaxImageDecodeSize(256);
-      assert.ok(size === 3 * 1024 * 1024 || size == 2.5 * 1024 * 1024);
-    });
-  });
-
   suite('#displayImage', function() {
+
     var frame;
     var dummyDiv;
     var dummyJPEGBlob;
@@ -251,79 +218,4 @@ suite('Media Frame Unit Tests', function() {
       this.clock.tick(1);
     });
   });
-
-  suite('Max decode size', function() {
-    var frame;
-    var dummyDiv;
-    var dummyJPEGBlob;
-
-    setup(function() {
-      dummyJPEGBlob = new Blob(['empty-image'], {'type': 'image/jpeg'});
-      dummyDiv = document.createElement('div');
-    });
-
-    test('no decode limits', function() {
-      // Even if the image is really big, we will decode it full size
-      // if no limits are set
-      MediaFrame.maxImageDecodeSize = 0;
-      frame = new MediaFrame(dummyDiv, false);
-      frame.displayImage(dummyJPEGBlob, 10000, 10000);
-      assert.equal(frame.fullSampleSize, Downsample.NONE);
-    });
-
-    test('limit decode size with constructor', function() {
-      MediaFrame.maxImageDecodeSize = 0;
-      // With a 1mp limit, a big image will be downsampled
-      frame = new MediaFrame(dummyDiv, false, 1024 * 1024);
-      frame.displayImage(dummyJPEGBlob, 10000, 10000);
-      assert.notEqual(frame.fullSampleSize, Downsample.NONE);
-
-      // With a 1mp limit, a small image will not be downsampled
-      frame = new MediaFrame(dummyDiv, false, 1024 * 1024);
-      frame.displayImage(dummyJPEGBlob, 1000, 1000);
-      assert.deepEqual(frame.fullSampleSize, Downsample.NONE);
-    });
-
-    test('limit decode size with memory', function() {
-      // Set a 1mp limit
-      MediaFrame.maxImageDecodeSize = 1024*1024;
-
-      // Big images will be downsampled
-      frame = new MediaFrame(dummyDiv, false);
-      frame.displayImage(dummyJPEGBlob, 10000, 10000);
-      assert.notEqual(frame.fullSampleSize, Downsample.NONE);
-
-      // Small images will not be downsampled
-      frame.displayImage(dummyJPEGBlob, 1000, 1000);
-      assert.deepEqual(frame.fullSampleSize, Downsample.NONE);
-    });
-
-    test('memory limit lower than constructor', function() {
-      // Set a 1mp limit based on memory
-      MediaFrame.maxImageDecodeSize = 1024*1024;
-
-      // 4mp images will be downsampled even though constructor allows 5mp
-      frame = new MediaFrame(dummyDiv, false, 5 * 1024 * 1024);
-      frame.displayImage(dummyJPEGBlob, 2000, 2000);
-      assert.notEqual(frame.fullSampleSize, Downsample.NONE);
-
-      // Small images will not be downsampled
-      frame.displayImage(dummyJPEGBlob, 1000, 1000);
-      assert.deepEqual(frame.fullSampleSize, Downsample.NONE);
-    });
-
-    test('constructor limit lower than memory', function() {
-      // Set a 5mp limit based on memory
-      MediaFrame.maxImageDecodeSize = 5*1024*1024;
-
-      // 4mp images will be downsampled even though memory allows 5mp
-      frame = new MediaFrame(dummyDiv, false, 1024 * 1024);
-      frame.displayImage(dummyJPEGBlob, 2000, 2000);
-      assert.notEqual(frame.fullSampleSize, Downsample.NONE);
-
-      // Small images will not be downsampled
-      frame.displayImage(dummyJPEGBlob, 1000, 1000);
-      assert.deepEqual(frame.fullSampleSize, Downsample.NONE);
-    });
-  });
 });
diff --git a/apps/sharedtest/test/unit/simslot_manager_test.js b/apps/sharedtest/test/unit/simslot_manager_test.js
deleted file mode 100644
index 214cc17..0000000
--- a/apps/sharedtest/test/unit/simslot_manager_test.js
+++ /dev/null
@@ -1,101 +0,0 @@
-/* globals MockIccManager, MockNavigatorMozMobileConnections, MocksHelper,
-           MockSIMSlot, SIMSlotManager */
-'use strict';
-
-require('/shared/test/unit/mocks/mock_simslot.js');
-require('/shared/test/unit/mocks/mock_icc_manager.js');
-require('/shared/test/unit/mocks/mock_system.js');
-require('/shared/test/unit/mocks/mock_navigator_moz_mobile_connections.js');
-
-var mocksForSIMSlotManager = new MocksHelper([
-  'SIMSlot', 'NavigatorMozMobileConnections', 'System'
-]).init();
-
-suite('SIMSlotManager', function() {
-  var realIccManager = navigator.mozIccManager;
-  var realMobileConnections = navigator.mozMobileConnections;
-  mocksForSIMSlotManager.attachTestHelpers();
-
-  setup(function(callback) {
-    navigator.mozIccManager = MockIccManager;
-    navigator.mozMobileConnections = MockNavigatorMozMobileConnections;
-    require('/shared/js/simslot_manager.js', callback);
-  });
-
-  teardown(function() {
-    MockNavigatorMozMobileConnections.mTeardown();
-    navigator.mozIccManager = realIccManager;
-    navigator.mozMobileConnections = realMobileConnections;
-  });
-
-  test('isMultiSIM', function() {
-    MockNavigatorMozMobileConnections.mAddMobileConnection();
-    MockNavigatorMozMobileConnections.mAddMobileConnection();
-    var stubAddEventListener = this.sinon.stub(
-      MockIccManager, 'addEventListener');
-    SIMSlotManager.init();
-    assert.isTrue(SIMSlotManager.isMultiSIM());
-    assert.equal(SIMSlotManager.length,
-      MockNavigatorMozMobileConnections.length);
-    assert.isTrue(
-      stubAddEventListener.calledWith('iccdetected', SIMSlotManager));
-  });
-
-  test('get current SIM count', function() {
-    MockIccManager.iccIds = [0, 1, 2];
-    assert.isFalse(SIMSlotManager.noSIMCardOnDevice());
-    MockIccManager.iccIds = [];
-    assert.isTrue(SIMSlotManager.noSIMCardOnDevice());
-  });
-
-  test('noSIMCardConnectedToNetwork', function() {
-    MockIccManager.iccIds = [0, 1];
-    MockNavigatorMozMobileConnections.mAddMobileConnection();
-
-    SIMSlotManager._instances = [];
-    SIMSlotManager.init();
-    MockNavigatorMozMobileConnections[0].voice = { emergencyCallsOnly: true };
-    MockNavigatorMozMobileConnections[1].voice = { emergencyCallsOnly: true };
-    assert.isTrue(SIMSlotManager.noSIMCardConnectedToNetwork());
-    MockNavigatorMozMobileConnections[0].voice.emergencyCallsOnly = false;
-    assert.isFalse(SIMSlotManager.noSIMCardConnectedToNetwork());
-  });
-
-  test('getSlotByIccId', function() {
-    var card1 = document.createElement('div');
-    card1.iccId = 1;
-    var card2 = document.createElement('div');
-    card2.iccId = 2;
-    var slot1 = new MockSIMSlot({ iccId: 1 }, 0, card1);
-    var slot2 = new MockSIMSlot({ iccId: 2 }, 1, card2);
-    var slot3 = new MockSIMSlot({ iccId: null}, 2);
-
-    SIMSlotManager._instances = [slot1, slot2, slot3];
-    assert.deepEqual(SIMSlotManager.getSlotByIccId(1), slot1);
-
-    assert.deepEqual(SIMSlotManager.getSlotByIccId(2), slot2);
-
-    assert.deepEqual(SIMSlotManager.getSlotByIccId(9999), null);
-  });
-
-  test('iccdetected', function() {
-    var stubGetIccById = this.sinon.stub(SIMSlotManager, 'getSlotByIccId');
-    var card1 = document.createElement('div');
-    card1.iccId = 1;
-    var slot = new MockSIMSlot(null, 1, card1);
-    var stubUpdate = this.sinon.stub(slot, 'update');
-    var card2 = document.createElement('div');
-    card2.iccId = 1;
-    var stubGetIccByIdOfIccManager =
-      this.sinon.stub(MockIccManager, 'getIccById');
-    stubGetIccByIdOfIccManager.returns(card2);
-    stubGetIccById.returns(slot);
-    SIMSlotManager.handleEvent({
-      type: 'iccdetected',
-      iccId: 1
-    });
-    assert.isTrue(stubGetIccById.calledWith(1));
-    assert.isTrue(stubUpdate.calledWith(card2));
-    assert.isTrue(SIMSlotManager.ready);
-  });
-});
diff --git a/apps/sharedtest/test/unit/simslot_test.js b/apps/sharedtest/test/unit/simslot_test.js
deleted file mode 100644
index 2ca9154..0000000
--- a/apps/sharedtest/test/unit/simslot_test.js
+++ /dev/null
@@ -1,114 +0,0 @@
-/* globals SIMSlot */
-'use strict';
-
-suite('SIMSlot', function() {
-  suiteSetup(function() {
-  });
-
-  suiteTeardown(function() {
-  });
-
-  setup(function(callback) {
-    require('/shared/js/simslot.js', callback);
-  });
-
-  teardown(function() {
-  });
-
-  test('new', function() {
-    var created = false;
-    window.addEventListener('simslot-created', function() {
-      created = true;
-    });
-    /*jshint unused: false */
-    var slot = new SIMSlot(null, 0);
-    assert.isTrue(created);
-  });
-
-  test('update', function() {
-    var slot = new SIMSlot(null, 0);
-    var card = document.createElement('div');
-    slot.update(card);
-    assert.deepEqual(slot.simCard, card);
-  });
-
-  test('isAbsent', function() {
-    var card = document.createElement('div');
-    card.iccInfo = {
-      iccid: 1
-    };
-    var slot1 = new SIMSlot(null, 0, card);
-    assert.isFalse(slot1.isAbsent());
-
-    var slot2 = new SIMSlot(null, 0);
-    assert.isTrue(slot2.isAbsent());
-  });
-
-  ['permanentBlocked'].forEach(function(absentType) {
-    test('isAbsent: ' + absentType, function() {
-      var card = document.createElement('div');
-      card.cardState = absentType;
-      var slot = new SIMSlot(null, 0, card);
-      assert.isTrue(slot.isAbsent());
-    });
-  });
-
-  ['unknown', 'illegal', 'absent', 'ready', null].forEach(function(lockType) {
-    test('isLocked: ' + lockType, function() {
-      var card = document.createElement('div');
-      card.cardState = lockType;
-      var slot = new SIMSlot(null, 0, card);
-      assert.isFalse(slot.isLocked());
-    });
-  });
-
-  ['pinRequired', 'pukRequired', 'networkLocked',
-   'corporateLocked', 'serviceProviderLocked', 'network1Locked',
-   'network2Locked', 'hrpdNetworkLocked', 'ruimCorporateLocked',
-   'ruimServiceProviderLocked'].forEach(function(lockType) {
-    test('isLocked: ' + lockType, function() {
-      var card = document.createElement('div');
-      card.cardState = lockType;
-      var slot = new SIMSlot(null, 0, card);
-      assert.isTrue(slot.isLocked());
-    });
-  });
-
-  suite('handleEvent', function() {
-    test('cardstatechange', function() {
-      var slot = new SIMSlot(null, 0);
-      var stubPublish = this.sinon.stub(slot, 'publish');
-      slot.handleEvent({
-        type: 'cardstatechange'
-      });
-      assert.isTrue(stubPublish.calledWith('cardstatechange'));
-    });
-
-    test('iccinfochange', function() {
-      var slot = new SIMSlot(null, 0);
-      var stubPublish = this.sinon.stub(slot, 'publish');
-      slot.handleEvent({
-        type: 'iccinfochange'
-      });
-      assert.isTrue(stubPublish.calledWith('iccinfochange'));
-    });
-
-    test('stkcommand', function() {
-      var slot = new SIMSlot(null, 0);
-      var stubPublish = this.sinon.stub(slot, 'publish');
-      slot.handleEvent({
-        type: 'stkcommand'
-      });
-      assert.isTrue(stubPublish.calledWith('stkcommand'));
-    });
-
-    test('stksessionend', function() {
-      var slot = new SIMSlot(null, 0);
-      var stubPublish = this.sinon.stub(slot, 'publish');
-      slot.handleEvent({
-        type: 'stksessionend'
-      });
-      assert.isTrue(stubPublish.calledWith('stksessionend'));
-    });
-  });
-});
diff --git a/apps/sms/index.html b/apps/sms/index.html
index 6262611..b34fc31 100644
--- a/apps/sms/index.html
+++ b/apps/sms/index.html
@@ -45,7 +45,6 @@
     <script defer src="shared/js/sim_picker.js"></script>
     <script defer src="shared/js/multi_sim_action_button.js"></script>
     <script defer src="js/shared_components.js"></script>
-    <script defer src="js/event_dispatcher.js"></script>
     <script defer src="js/navigation.js"></script>
     <script defer src="js/dialog.js"></script>
     <script defer src="js/task_runner.js"></script>
@@ -119,18 +118,13 @@
                 <span data-l10n-id="cancel" class="icon icon-close">close</span>
               </button>
               <menu type="toolbar">
-                <button id="threads-delete-button" data-l10n-id="delete">delete</button>
+                <button id="threads-check-uncheck-all-button" class="edit-button" data-l10n-id="select-all"></button>
               </menu>
-              <h1 id="threads-edit-mode" data-l10n-id="deleteMessages-title">Delete messages</h1>
+              <h1 id="threads-edit-mode" data-l10n-id="selectThreads-title">Select</h1>
             </header>
           </section>
           <menu>
-            <button id="threads-uncheck-all-button" disabled class="edit-button" data-l10n-id="deselect-all">
-              None
-            </button>
-            <button id="threads-check-all-button" class="edit-button" data-l10n-id="select-all">
-              All
-            </button>
+            <button id="threads-delete-button" data-l10n-id="delete">delete</button>
           </menu>
         </form>

@@ -285,23 +279,15 @@
                 <span data-l10n-id="cancel" class="icon icon-close">close</span>
               </button>
               <menu type="toolbar">
-                <button id="messages-delete-button" data-l10n-id="delete">delete</button>
+                <button id="messages-check-uncheck-all-button" class="edit-button" data-l10n-id="select-all"></button>
               </menu>
               <h1 id="messages-edit-mode" data-l10n-id="deleteMessages-title">Delete Messages</h1>
             </header>
           </section>
           <menu>
-            <button id="messages-uncheck-all-button" disabled class="edit-button" data-l10n-id="deselect-all">
-              None
-            </button>
-            <button id="messages-check-all-button" class="edit-button" data-l10n-id="select-all">
-              All
-            </button>
+            <button id="messages-delete-button" data-l10n-id="delete">delete</button>
           </menu>
         </form>
-        <section id="messages-recipient-suggestions" class="article-list hide" data-type="list">
-          <ul class="contact-list"></ul>
-        </section>
       </section>
     </article>

@@ -465,7 +451,7 @@

     <div id="messages-thread-tmpl" class="hide">
       <!--
-      <label class="pack-checkbox danger">
+      <label class="pack-checkbox negative">
         <input type="checkbox" value="${id}" data-mode="${mode}">
         <span></span>
       </label>
diff --git a/apps/sms/js/activity_handler.js b/apps/sms/js/activity_handler.js
index 7e5e8c9..709f5cd 100755
--- a/apps/sms/js/activity_handler.js
+++ b/apps/sms/js/activity_handler.js
@@ -203,7 +203,7 @@ var ActivityHandler = {
     request.onsuccess = function onsuccess() {
       if (!Compose.isEmpty()) {
         if (window.confirm(navigator.mozL10n.get('discard-new-message'))) {
-          ThreadUI.cleanFields();
+          ThreadUI.cleanFields(true);
         } else {
           return;
         }
@@ -473,7 +473,8 @@ var ActivityHandler = {
           }
         }

-        Contacts.findByAddress(message.sender, function gotContact(contact) {
+        Contacts.findByPhoneNumber(message.sender, function gotContact(
+                                                                contact) {
           var sender = message.sender;
           if (!contact) {
             console.error('We got a null contact for sender:', sender);
diff --git a/apps/sms/js/contacts.js b/apps/sms/js/contacts.js
index 4ff89b5..dead46f 100755
--- a/apps/sms/js/contacts.js
+++ b/apps/sms/js/contacts.js
@@ -2,7 +2,7 @@
 /* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */
 (function(exports) {
   'use strict';
-  /*global fb, Settings, Utils */
+  /*global fb, Settings */
   var unknownNumbers = [];

   var filterFns = {
@@ -306,22 +306,6 @@
       });
     },

-    findByAddress: function contacts_findByAddress(fValue, callback) {
-      if (Settings.supportEmailRecipient && Utils.isEmailAddress(fValue)) {
-        this.findExactByEmail(fValue, callback);
-      } else {
-        this.findByPhoneNumber(fValue, callback);
-      }
-    },
-
-    findExactByEmail: function contacts_findExactByEmail(fValue, callback) {
-      return this.findBy({
-        filterBy: ['email'],
-        filterOp: 'equals',
-        filterValue: fValue
-      }, callback);
-    },
-
     addUnknown: function addUnknown(number) {
       var index = unknownNumbers.indexOf(number);
       if (index === -1) {
diff --git a/apps/sms/js/event_dispatcher.js b/apps/sms/js/event_dispatcher.js
deleted file mode 100644
index d48c3d5..0000000
--- a/apps/sms/js/event_dispatcher.js
+++ /dev/null
@@ -1,151 +0,0 @@
-/*global Map, Set */
-
-/* exported EventDispatcher */
-
-(function(exports) {
-  'use strict';
-
-  function ensureValidEventName(eventName) {
-    if (!eventName || typeof eventName !== 'string') {
-      throw new Error('Event name should be a valid non-empty string!');
-    }
-  }
-
-  function ensureValidHandler(handler) {
-    if (typeof handler !== 'function') {
-      throw new Error('Handler should be a function!');
-    }
-  }
-
-  function ensureAllowedEventName(allowedEvents, eventName) {
-    if (allowedEvents && allowedEvents.indexOf(eventName) < 0) {
-      throw new Error('Event "' + eventName + '" is not allowed!');
-    }
-  }
-
-  // Implements publish/subscribe behaviour that can be applied to any object,
-  // so that object can be listened for custom events. "this" context is the
-  // object with Map "listeners" property used to store handlers.
-  var eventDispatcher = {
-    /**
-     * Registers listener function to be executed once event occurs.
-     * @param {string} eventName Name of the event to listen for.
-     * @param {function} handler Handler to be executed once event occurs.
-     */
-    on: function(eventName, handler) {
-      ensureValidEventName(eventName);
-      ensureAllowedEventName(this.allowedEvents, eventName);
-      ensureValidHandler(handler);
-
-      var handlers = this.listeners.get(eventName);
-
-      if (!handlers) {
-        handlers = new Set();
-        this.listeners.set(eventName, handlers);
-      }
-
-      // Set.add ignores handler if it has been already registered
-      handlers.add(handler);
-    },
-
-    /**
-     * Removes registered listener for the specified event.
-     * @param {string} eventName Name of the event to remove listener for.
-     * @param {function} handler Handler to remove, so it won't be executed
-     * next time event occurs.
-     */
-    off: function(eventName, handler) {
-      ensureValidEventName(eventName);
-      ensureAllowedEventName(this.allowedEvents, eventName);
-      ensureValidHandler(handler);
-
-      var handlers = this.listeners.get(eventName);
-
-      if (!handlers) {
-        return;
-      }
-
-      handlers.delete(handler);
-
-      if (!handlers.size) {
-        this.listeners.delete(eventName);
-      }
-    },
-
-    /**
-     * Removes all registered listeners for the specified event.
-     * @param {string} eventName Name of the event to remove all listeners for.
-     */
-    offAll: function(eventName) {
-      ensureValidEventName(eventName);
-      ensureAllowedEventName(this.allowedEvents, eventName);
-
-      var handlers = this.listeners.get(eventName);
-
-      if (!handlers) {
-        return;
-      }
-
-      handlers.clear();
-
-      this.listeners.delete(eventName);
-    },
-
-    /**
-     * Emits specified event so that all registered handlers will be called
-     * with the specified parameters.
-     * @param {string} eventName Name of the event to call handlers for.
-     * @param {Object} parameters Optional parameters that will be passed to
-     * every registered handler.
-     */
-    emit: function(eventName, parameters) {
-      ensureValidEventName(eventName);
-      ensureAllowedEventName(this.allowedEvents, eventName);
-
-      var handlers = this.listeners.get(eventName);
-
-      if (!handlers) {
-        return;
-      }
-
-      handlers.forEach(function(handler) {
-        try {
-          handler(parameters);
-        } catch (e) {
-          console.error(e);
-        }
-      });
-    }
-  };
-
-  exports.EventDispatcher = {
-    /**
-     * Mixes dispatcher methods into target object.
-     * @param {Object} target Object to mix dispatcher methods into.
-     * @param {Array.<string>} allowedEvents Optional list of the allowed event
-     * names that can be emitted and listened for.
-     * @returns {Object} Target object with added dispatcher methods.
-     */
-    mixin: function(target, allowedEvents) {
-      if (!target || typeof target !== 'object') {
-        throw new Error('Object to mix into should be valid object!');
-      }
-
-      if (typeof allowedEvents !== 'undefined' &&
-          !Array.isArray(allowedEvents)) {
-        throw new Error('Allowed events should be a valid array of strings!');
-      }
-
-      Object.keys(eventDispatcher).forEach(function(method) {
-        if (typeof target[method] !== 'undefined') {
-          throw new Error(
-            'Object to mix into already has "' + method + '" property defined!'
-          );
-        }
-        target[method] = eventDispatcher[method].bind(this);
-      }, { listeners: new Map(), allowedEvents: allowedEvents });
-
-      return target;
-    }
-  };
-})(window);
diff --git a/apps/sms/js/information.js b/apps/sms/js/information.js
index 4290984..673040b 100644
--- a/apps/sms/js/information.js
+++ b/apps/sms/js/information.js
@@ -342,7 +342,7 @@ Information.prototype = {
       } else {
         number = participant;
       }
-      Contacts.findByAddress(number, function(results) {
+      Contacts.findByPhoneNumber(number, function(results) {
         var isContact = results !== null && !!results.length;

         if (isContact) {
diff --git a/apps/sms/js/message_manager.js b/apps/sms/js/message_manager.js
index 9e55e63..c76ab2b 100644
--- a/apps/sms/js/message_manager.js
+++ b/apps/sms/js/message_manager.js
@@ -32,11 +32,6 @@ var MessageManager = {
     document.addEventListener('visibilitychange',
                               this.onVisibilityChange.bind(this));

-    this._mozMobileMessage.addEventListener(
-      'deleted',
-      this.onDeleted.bind(this)
-    );
-
     // Callback if needed
     if (typeof callback === 'function') {
       callback();
@@ -97,12 +92,6 @@ var MessageManager = {
     }
   },

-  onDeleted: function(e) {
-    if (e.deletedThreadIds && e.deletedThreadIds.length) {
-      ThreadListUI.onThreadsDeleted(e.deletedThreadIds);
-    }
-  },
-
   onVisibilityChange: function mm_onVisibilityChange(e) {
     LinkActionHandler.reset();
   },
diff --git a/apps/sms/js/navigation.js b/apps/sms/js/navigation.js
index 2b19ee2..5d4e927 100644
--- a/apps/sms/js/navigation.js
+++ b/apps/sms/js/navigation.js
@@ -78,12 +78,20 @@ var Navigation = window.Navigation = {
    * must be an object. It returns whether the current panel is the first
    * argument, and for each property of the second argument, whether its value
    * is equal to the value for the current panel's arguments' same property.
+   *
+   * Called with 1 argument that is an object, it must have 2 properties panel
+   * and args, which have the same meaning as the 2-argument call.
    */
   isCurrentPanel: function n_isCurrentPanel(panel, args) {
     if (!currentPanel || !panel) {
       return false;
     }

+    if (typeof panel === 'object') {
+      args = panel.args;
+      panel = panel.panel;
+    }
+
     if (panel !== currentPanel.panel) {
       return false;
     }
@@ -103,6 +111,14 @@ var Navigation = window.Navigation = {
     return true;
   },

+  /*
+   * Returns the currentPanel object, with 2
+   * properties: panel, args.
+   */
+  getCurrentPanel: function n_getCurrentPanel() {
+    return currentPanel;
+  },
+
   /**
    * Lifecycle methods are called in this order:
    * - previousPanel.beforeLeave
diff --git a/apps/sms/js/startup.js b/apps/sms/js/startup.js
index 380fb3b..42dd4dd 100644
--- a/apps/sms/js/startup.js
+++ b/apps/sms/js/startup.js
@@ -59,7 +59,7 @@ navigator.mozL10n.ready(function localized() {
 });

 window.addEventListener('load', function() {
-  window.dispatchEvent(new CustomEvent('moz-chrome-dom-loaded'));
+  PerformanceTestingHelper.dispatch('load');
   function initUIApp() {
     Navigation.init();
     TimeHeaders.init();
@@ -71,11 +71,8 @@ window.addEventListener('load', function() {
     ThreadListUI.init();
     Information.initDefaultViews();
     ThreadListUI.renderThreads(function() {
-      window.dispatchEvent(new CustomEvent('moz-app-loaded'));
       App.setReady();
     });
-    // dispatch chrome-interactive when all the modules initialized
-    window.dispatchEvent(new CustomEvent('moz-chrome-interactive'));

     // Fetch mmsSizeLimitation
     Settings.init();
diff --git a/apps/sms/js/thread_list_ui.js b/apps/sms/js/thread_list_ui.js
index febd1b4..d2b7a53 100755
--- a/apps/sms/js/thread_list_ui.js
+++ b/apps/sms/js/thread_list_ui.js
@@ -34,7 +34,7 @@ var ThreadListUI = {
     // TODO: https://bugzilla.mozilla.org/show_bug.cgi?id=854413
     [
       'container', 'no-messages',
-      'check-all-button', 'uncheck-all-button',
+      'check-uncheck-all-button',
       'delete-button', 'cancel-button',
       'options-icon', 'edit-mode', 'edit-form', 'draft-saved-banner'
     ].forEach(function(id) {
@@ -51,12 +51,8 @@ var ThreadListUI = {
       'click', this.launchComposer.bind(this)
     );

-    this.checkAllButton.addEventListener(
-      'click', this.toggleCheckedAll.bind(this, true)
-    );
-
-    this.uncheckAllButton.addEventListener(
-      'click', this.toggleCheckedAll.bind(this, false)
+    this.checkUncheckAllButton.addEventListener(
+      'click', this.toggleCheckedAll.bind(this)
     );

     this.deleteButton.addEventListener(
@@ -143,7 +139,7 @@ var ThreadListUI = {
       return;
     }

-    Contacts.findByAddress(number, function gotContact(contacts) {
+    Contacts.findByPhoneNumber(number, function gotContact(contacts) {
       var name = node.getElementsByClassName('name')[0];
       var photo = node.querySelector('span[data-type=img]');
       var title, src, details;
@@ -235,18 +231,16 @@ var ThreadListUI = {
     var selected = ThreadListUI.selectedInputs.length;

     if (selected === ThreadListUI.allInputs.length) {
-      this.checkAllButton.disabled = true;
+      navigator.mozL10n.localize(this.checkUncheckAllButton, 'deselect-all');
     } else {
-      this.checkAllButton.disabled = false;
+      navigator.mozL10n.localize(this.checkUncheckAllButton, 'select-all');
     }
     if (selected) {
-      this.uncheckAllButton.disabled = false;
       this.deleteButton.disabled = false;
       navigator.mozL10n.localize(this.editMode, 'selected', {n: selected});
     } else {
-      this.uncheckAllButton.disabled = true;
       this.deleteButton.disabled = true;
-      navigator.mozL10n.localize(this.editMode, 'deleteMessages-title');
+      navigator.mozL10n.localize(this.editMode, 'selectThreads-title');
     }
   },

@@ -261,17 +255,16 @@ var ThreadListUI = {
     this.checkInputs();
   },

-  toggleCheckedAll: function thlui_select(value) {
+  toggleCheckedAll: function thlui_select() {
+    var selected = ThreadListUI.selectedInputs.length;
+    var allSelected = (selected === ThreadListUI.allInputs.length);
     var inputs = this.container.querySelectorAll(
       'input[type="checkbox"]' +
-      // value ?
-      //   true : query for currently unselected threads
-      //   false: query for currently selected threads
-      (value ? ':not(:checked)' : ':checked')
+      (!allSelected ? ':not(:checked)' : ':checked')
     );
     var length = inputs.length;
     for (var i = 0; i < length; i++) {
-      inputs[i].checked = value;
+      inputs[i].checked = !allSelected;
     }
     this.checkInputs();
   },
@@ -320,7 +313,16 @@ var ThreadListUI = {

     function checkDone(threadId) {
       /* jshint validthis: true */
-      this.deleteThread(threadId);
+      // Threads.delete will handle deleting
+      // any Draft objects associated with the
+      // specified threadId.
+      Threads.delete(threadId);
+
+      // Cleanup the DOM
+      this.removeThread(threadId);
+
+      // Remove notification if exist
+      Utils.closeNotificationsForThread(threadId);

       if (--count === 0) {
         this.cancelEdit();
@@ -431,10 +433,9 @@ var ThreadListUI = {
       }]
     };

-    // Add delete option when list is not empty
     if (ThreadListUI.noMessages.classList.contains('hide')) {
       params.items.unshift({
-        l10nId: 'deleteMessages-label',
+        l10nId: 'selectThreads-label',
         method: this.startEdit.bind(this)
       });
     }
@@ -521,10 +522,7 @@ var ThreadListUI = {

       this.appendThread(thread);
       if (--firstPanelCount === 0) {
-        // dispatch visually-complete and content-interactive when rendered
-        // threads could fill up the top of the visiable area
-        window.dispatchEvent(new CustomEvent('moz-app-visually-complete'));
-        window.dispatchEvent(new CustomEvent('moz-content-interactive'));
+        PerformanceTestingHelper.dispatch('above-the-fold-ready');
       }
     }

@@ -535,12 +533,7 @@ var ThreadListUI = {
        * this is done to prevent races between renering threads and drafts. */
       this.finalizeRendering(!(hasThreads || Drafts.size));

-      if (firstPanelCount > 0) {
-        // dispatch visually-complete and content-interactive when rendering
-        // ended but threads could not fill up the top of the visiable area
-        window.dispatchEvent(new CustomEvent('moz-app-visually-complete'));
-        window.dispatchEvent(new CustomEvent('moz-content-interactive'));
-      }
+      PerformanceTestingHelper.dispatch('startup-path-done');
     }

     var renderingOptions = {
@@ -642,19 +635,6 @@ var ThreadListUI = {
     return li;
   },

-  deleteThread: function(threadId) {
-    // Threads.delete will handle deleting
-    // any Draft objects associated with the
-    // specified threadId.
-    Threads.delete(threadId);
-
-    // Cleanup the DOM
-    this.removeThread(threadId);
-
-    // Remove notification if exist
-    Utils.closeNotificationsForThread(threadId);
-  },
-
   insertThreadContainer:
     function thlui_insertThreadContainer(group, timestamp) {
     // We look for placing the group in the right place.
@@ -721,14 +701,6 @@ var ThreadListUI = {
     this.updateThread(message, { unread: true });
   },

-  onThreadsDeleted: function thlui_onThreadDeleted(ids) {
-    ids.forEach(function(threadId) {
-      if (Threads.has(threadId)) {
-        this.deleteThread(threadId);
-      }
-    }, this);
-  },
-
   /**
    * Append a thread to the global threads container. Creates a time container
    * (i.e. for a day or some other time period) for this thread if it doesn't
diff --git a/apps/sms/js/thread_ui.js b/apps/sms/js/thread_ui.js
index c843560..2784ce8 100755
--- a/apps/sms/js/thread_ui.js
+++ b/apps/sms/js/thread_ui.js
@@ -94,13 +94,13 @@ var ThreadUI = global.ThreadUI = {
     // Fields with 'messages' label
     [
       'container', 'subheader', 'to-field', 'recipients-list', 'recipient',
-      'input', 'compose-form', 'check-all-button', 'uncheck-all-button',
+      'input', 'compose-form', 'check-uncheck-all-button',
       'contact-pick-button', 'back-button', 'close-button', 'send-button',
       'attach-button', 'delete-button', 'cancel-button', 'subject-input',
       'new-message-notice', 'options-icon', 'edit-mode', 'edit-form',
       'tel-form', 'header-text', 'max-length-notice', 'convert-notice',
       'resize-notice', 'dual-sim-information', 'new-message-notice',
-      'subject-max-length-notice', 'counter-label', 'recipient-suggestions'
+      'subject-max-length-notice', 'counter-label'
     ].forEach(function(id) {
       this[Utils.camelCase(id)] = document.getElementById('messages-' + id);
     }, this);
@@ -171,12 +171,8 @@ var ThreadUI = global.ThreadUI = {
       'click', this.close.bind(this)
     );

-    this.checkAllButton.addEventListener(
-      'click', this.toggleCheckedAll.bind(this, true)
-    );
-
-    this.uncheckAllButton.addEventListener(
-      'click', this.toggleCheckedAll.bind(this, false)
+    this.checkUncheckAllButton.addEventListener(
+      'click', this.toggleCheckedAll.bind(this)
     );

     this.cancelButton.addEventListener(
@@ -274,11 +270,6 @@ var ThreadUI = global.ThreadUI = {
       this.updateHeaderData.bind(this)
     );

-    this.recipientSuggestions.addEventListener(
-      'click',
-      this.onRecipientSuggestionClick.bind(this)
-    );
-
     this.tmpl = templateIds.reduce(function(tmpls, name) {
       tmpls[Utils.camelCase(name)] =
         Template('messages-' + name + '-tmpl');
@@ -287,6 +278,9 @@ var ThreadUI = global.ThreadUI = {

     this.initRecipients();

+    // Initialized here, but used in ThreadUI.cleanFields
+    this.previousPanel = null;
+
     this.multiSimActionButton = null;

     this.timeouts.update = null;
@@ -355,7 +349,8 @@ var ThreadUI = global.ThreadUI = {
       }

       // Clean search result after recipient count change.
-      this.toggleRecipientSuggestions();
+      this.container.textContent = '';
+
     }).bind(this);

     if (this.recipients) {
@@ -372,7 +367,7 @@ var ThreadUI = global.ThreadUI = {
       this.recipients.on('add', recipientsChanged);
       this.recipients.on('remove', recipientsChanged);
     }
-    this.toggleRecipientSuggestions();
+    this.container.textContent = '';
   },

   initSentAudio: function thui_initSentAudio() {
@@ -380,13 +375,9 @@ var ThreadUI = global.ThreadUI = {
       return;
     }

-    this.sentAudio = new Audio();
-    this.sentAudio.preload = 'none';
-    this.sentAudio.src = '/sounds/sent.opus';
-    this.sentAudio.mozAudioChannelType = 'notification';
-
-    // TODO move sentAudioEnabled management to Settings
     this.sentAudioKey = 'message.sent-sound.enabled';
+    this.sentAudio = new Audio('/sounds/sent.opus');
+    this.sentAudio.mozAudioChannelType = 'notification';
     this.sentAudioEnabled = false;

     // navigator.mozSettings may not be defined in all environments
@@ -546,7 +537,6 @@ var ThreadUI = global.ThreadUI = {
       LazyLoader.load([simPickerElt], function() {
         navigator.mozL10n.translate(simPickerElt);
       });
-      this.initSentAudio();
     }

     var next = args.meta.next.panel;
@@ -569,11 +559,6 @@ var ThreadUI = global.ThreadUI = {
     // get an event whenever the panel changes?
     Threads.currentId = args.id;

-    var prevPanel = args.meta.prev && args.meta.prev.panel;
-
-    if (prevPanel !== 'group-view' && prevPanel !== 'report-view') {
-      this.initializeRendering();
-    }
     return this.updateHeaderData();
   },

@@ -625,10 +610,6 @@ var ThreadUI = global.ThreadUI = {
     }

     ThreadListUI.mark(threadId, 'read');
-
-    // nothing urgent, let's do it when the main thread has some time
-    setTimeout(MessageManager.markThreadRead.bind(MessageManager, threadId));
-
     return Utils.closeNotificationsForThread(threadId);
   },

@@ -643,15 +624,13 @@ var ThreadUI = global.ThreadUI = {
   afterLeave: function thui_afterLeave(args) {
     if (Navigation.isCurrentPanel('thread-list')) {
       this.container.textContent = '';
-      this.cleanFields();
+      this.cleanFields(true);
       Threads.currentId = null;
     }
     if (!Navigation.isCurrentPanel('composer')) {
       this.threadMessages.classList.remove('new');

       this.recipients.length = 0;
-
-      this.toggleRecipientSuggestions();
     }

     if (!Navigation.isCurrentPanel('thread')) {
@@ -685,15 +664,15 @@ var ThreadUI = global.ThreadUI = {
     }
     /**
      * Choose the appropriate contact resolver:
-     *  - if we have a phone number and no contact, rely on findByAddress
+     *  - if we have a phone number and no contact, rely on findByPhoneNumber
      *    to get a contact matching the number;
      *  - if we have a contact object and no phone number, just use a dummy
      *    source that returns the contact.
      */
-    var findByAddress = Contacts.findByAddress.bind(Contacts);
+    var findByPhoneNumber = Contacts.findByPhoneNumber.bind(Contacts);
     var number = activity.number;
     if (activity.contact && !number) {
-      findByAddress = function dummySource(contact, cb) {
+      findByPhoneNumber = function dummySource(contact, cb) {
         cb(activity.contact);
       };
       number = activity.contact.number || activity.contact.tel[0].value;
@@ -702,7 +681,7 @@ var ThreadUI = global.ThreadUI = {
     // Add recipients and fill+focus the Compose area.
     if (activity.contact && number) {
       Utils.getContactDisplayInfo(
-        findByAddress, number, function onData(data) {
+        findByPhoneNumber, number, function onData(data) {
           data.source = 'contacts';
           ThreadUI.recipients.add(data);
           Compose.fromMessage(activity);
@@ -733,7 +712,7 @@ var ThreadUI = global.ThreadUI = {
       // Recipients will exist for draft messages in threads
       // Otherwise find them from draft recipient numbers
       draft.recipients.forEach(function(number) {
-        Contacts.findByAddress(number, function(records) {
+        Contacts.findByPhoneNumber(number, function(records) {
           if (records.length) {
             this.recipients.add(
               Utils.basicContact(number, records[0])
@@ -763,7 +742,7 @@ var ThreadUI = global.ThreadUI = {
     // instead of in afterEnter: Bug 1010223

     Threads.currentId = null;
-    this.cleanFields();
+    this.cleanFields(true);
     this.initRecipients();
     this.updateComposerHeader();
     this.container.textContent = '';
@@ -877,20 +856,6 @@ var ThreadUI = global.ThreadUI = {
     this.forceScrollViewToBottom();
   },

-  /**
-   * Fires once user clicks on any recipient in the suggestions list.
-   */
-  onRecipientSuggestionClick: function(event) {
-    event.stopPropagation();
-    event.preventDefault();
-
-    // Since the "dataset" DOMStringMap property is essentially
-    // just an object of properties that exactly match the properties
-    // used for recipients, push the whole dataset object into
-    // the current recipients list as a new entry.
-    this.recipients.add(event.target.dataset).focus();
-  },
-
   // Message composer type changed:
   messageComposerTypeHandler: function thui_messageComposerTypeHandler() {
     this.updateCounter();
@@ -937,25 +902,19 @@ var ThreadUI = global.ThreadUI = {
     // Ensure that Recipients does not trigger focus on
     // itself, which causes the keyboard to appear.
     Recipients.View.isFocusable = false;
-    var contactProperties = ['tel'];
-
-    if (Settings.supportEmailRecipient) {
-      contactProperties.push('email');
-    }

     var activity = new MozActivity({
       name: 'pick',
       data: {
-        type: 'webcontacts/select',
-        contactProperties: contactProperties
+        type: 'webcontacts/tel'
       }
     });

     activity.onsuccess = (function() {
       if (!activity.result ||
-          !activity.result.select ||
-          !activity.result.select.length ||
-          !activity.result.select[0].value) {
+          !activity.result.tel ||
+          !activity.result.tel.length ||
+          !activity.result.tel[0].value) {
         console.error('The pick activity result is invalid.');
         return;
       }
@@ -963,7 +922,7 @@ var ThreadUI = global.ThreadUI = {
       Recipients.View.isFocusable = true;

       var data = Utils.basicContact(
-        activity.result.select[0].value, activity.result.contact
+        activity.result.tel[0].value, activity.result
       );
       data.source = 'contacts';

@@ -1085,7 +1044,7 @@ var ThreadUI = global.ThreadUI = {
     }

     return this._onNavigatingBack().then(function() {
-      this.cleanFields();
+      this.cleanFields(true);
       Navigation.toPanel('thread-list');
     }.bind(this)).catch(function(e) {
       e && console.error('Unexpected error while navigating back: ', e);
@@ -1191,6 +1150,8 @@ var ThreadUI = global.ThreadUI = {
   },

   enableSend: function thui_enableSend() {
+    this.initSentAudio();
+
     // should disable if we have no message input
     var disableSendMessage = Compose.isEmpty() || Compose.isResizing;
     var messageNotLong = this.updateCounter();
@@ -1368,17 +1329,13 @@ var ThreadUI = global.ThreadUI = {
     var threadMessages = this.threadMessages;
     var number = thread.participants[0];
     var phoneDetails;
-    var address;

     // The carrier banner is meaningless and confusing in
     // group message mode.
     if (thread.participants.length === 1 &&
         (contacts && contacts.length)) {

-      address = Settings.supportEmailRecipient && Utils.isEmailAddress(number) ?
-                contacts[0].email : contacts[0].tel;
-
-      phoneDetails = Utils.getPhoneDetails(number, address);
+      phoneDetails = Utils.getPhoneDetails(number, contacts[0].tel);

       if (phoneDetails) {
         carrierTag.innerHTML = SharedComponents.phoneDetails(phoneDetails);
@@ -1424,7 +1381,7 @@ var ThreadUI = global.ThreadUI = {
     this.headerText.dataset.number = number;

     return new Promise(function(resolve, reject) {
-      Contacts.findByAddress(number, function gotContact(contacts) {
+      Contacts.findByPhoneNumber(number, function gotContact(contacts) {
         // For the basic display, we only need the first contact's information
         // e.g. for 3 contacts, the app displays:
         //
@@ -1515,6 +1472,12 @@ var ThreadUI = global.ThreadUI = {
       }
     }).bind(this);

+    function onMessagesDone() {
+      setTimeout(
+        MessageManager.markThreadRead.bind(MessageManager, filter.threadId)
+      );
+    }
+
     var onRenderMessage = (function renderMessage(message) {
       if (this._stopRenderingNextStep) {
         // stop the iteration
@@ -1528,10 +1491,8 @@ var ThreadUI = global.ThreadUI = {
       return true;
     }).bind(this);

-    if (this._stopRenderingNextStep) {
-      // we were already asked to stop rendering, before even starting
-      return;
-    }
+    // We initialize all params before rendering
+    this.initializeRendering();

     var filter = new MozSmsFilter();
     filter.threadId = threadId;
@@ -1541,7 +1502,8 @@ var ThreadUI = global.ThreadUI = {
       each: onRenderMessage,
       filter: filter,
       invert: false,
-      end: onMessagesRendered
+      end: onMessagesRendered,
+      done: onMessagesDone
     };

     MessageManager.getMessages(renderingOptions);
@@ -1792,17 +1754,21 @@ var ThreadUI = global.ThreadUI = {
     this.checkInputs();
   },

-  toggleCheckedAll: function thui_select(value) {
+  clear: function thui_clear() {
+    this.initRecipients();
+  },
+
+  toggleCheckedAll: function thui_select() {
+    var selected = this.selectedInputs;
+    var allInputs = this.allInputs;
+    var allSelected = (selected.length === allInputs.length);
     var inputs = this.container.querySelectorAll(
       'input[type="checkbox"]' +
-      // value ?
-      //   true : query for currently unselected threads
-      //   false: query for currently selected threads
-      (value ? ':not(:checked)' : ':checked')
+      (!allSelected ? ':not(:checked)' : ':checked')
     );
     var length = inputs.length;
     for (var i = 0; i < length; i++) {
-      inputs[i].checked = value;
+      inputs[i].checked = !allSelected;
       this.chooseMessage(inputs[i]);
     }
     this.checkInputs();
@@ -1827,10 +1793,10 @@ var ThreadUI = global.ThreadUI = {
       }
     });

-    // If we are on a thread, we can call to DeleteMessages
+    // If we are on a thread, we can call to SelectMessages
     if (Navigation.isCurrentPanel('thread')) {
       params.items.push({
-        l10nId: 'deleteMessages-label',
+        l10nId: 'selectMessages-label',
         method: this.startEdit.bind(this)
       });
     }
@@ -1967,15 +1933,18 @@ var ThreadUI = global.ThreadUI = {

     var isAnySelected = selected.length > 0;

-    // Manage buttons enabled\disabled state
-    this.checkAllButton.disabled = selected.length === allInputs.length;
-    this.uncheckAllButton.disabled = !isAnySelected;
-    this.deleteButton.disabled = !isAnySelected;
+    if (selected.length === allInputs.length) {
+      navigator.mozL10n.localize(this.checkUncheckAllButton, 'deselect-all');
+    } else {
+      navigator.mozL10n.localize(this.checkUncheckAllButton, 'select-all');
+    }

     if (isAnySelected) {
+      this.deleteButton.disabled = false;
       navigator.mozL10n.localize(this.editMode, 'selected',
         {n: selected.length});
     } else {
+      this.deleteButton.disabled = true;
       navigator.mozL10n.localize(this.editMode, 'deleteMessages-title');
     }
   },
@@ -2166,21 +2135,33 @@ var ThreadUI = global.ThreadUI = {
     }
   },

-  cleanFields: function thui_cleanFields() {
-    // Compose.clear might cause a conversion from mms -> sms
-    // Therefore we're reseting the message type here because
-    // in messageComposerTypeHandler we're using this value to know
-    // if the message type changed, and to display the convertNotice
-    // accordingly
-    this.composeForm.dataset.messageType = 'sms';
+  cleanFields: function thui_cleanFields(forceClean) {
+    var clean = (function clean() {
+      // Compose.clear might cause a conversion from mms -> sms
+      // Therefore we're reseting the message type here because
+      // in messageComposerTypeHandler we're using this value to know
+      // if the message type changed, and to display the convertNotice
+      // accordingly
+      this.composeForm.dataset.messageType = 'sms';

-    Compose.clear();
+      Compose.clear();

-    // reset the counter
-    this.counterLabel.dataset.counter = '';
-    this.counterLabel.classList.remove('has-counter');
+      // reset the counter
+      this.counterLabel.dataset.counter = '';
+      this.counterLabel.classList.remove('has-counter');
+    }).bind(this);

+    // TODO understand this : bug 1009568
+    if (Navigation.isCurrentPanel(this.previousPanel) ||
+        (this.previousPanel && this.previousPanel.panel === 'composer')) {
+      if (forceClean) {
+        clean();
+      }
+    } else {
+      clean();
+    }
     this.enableSend();
+    this.previousPanel = Navigation.getCurrentPanel();
   },

   onSendClick: function thui_onSendClick() {
@@ -2235,7 +2216,7 @@ var ThreadUI = global.ThreadUI = {
     }

     // Clean composer fields (this lock any repeated click in 'send' button)
-    this.cleanFields();
+    this.cleanFields(true);

     // If there was a draft, it just got sent
     // so delete it
@@ -2528,7 +2509,7 @@ var ThreadUI = global.ThreadUI = {

   toFieldKeypress: function(event) {
     if (event.keyCode === 13 || event.keyCode === event.DOM_VK_ENTER) {
-      this.toggleRecipientSuggestions();
+      this.container.textContent = '';
     }
   },

@@ -2554,7 +2535,7 @@ var ThreadUI = global.ThreadUI = {
       // character in the recipient input field,
       // eg. type "a", then delete it.
       // Always remove the the existing results.
-      this.toggleRecipientSuggestions();
+      this.container.textContent = '';
       return;
     }

@@ -2671,13 +2652,30 @@ var ThreadUI = global.ThreadUI = {
       return;
     }

-    this.toggleRecipientSuggestions();
+    this.container.textContent = '';
     if (!contacts || !contacts.length) {
       return;
     }

     // There are contacts that match the input.
-    var suggestionList = document.createDocumentFragment();
+
+    // TODO Modify in Bug 861227 in order to create a standalone element
+    var ul = document.createElement('ul');
+    ul.classList.add('contact-list');
+    ul.addEventListener('click', function ulHandler(event) {
+      event.stopPropagation();
+      event.preventDefault();
+      // Since the "dataset" DOMStringMap property is essentially
+      // just an object of properties that exactly match the properties
+      // used for recipients, push the whole dataset object into
+      // the current recipients list as a new entry.
+      this.recipients.add(
+        event.target.dataset
+      ).focus();
+
+      // Clean up the event listener
+      ul.removeEventListener('click', ulHandler);
+    }.bind(this));

     // Render each contact in the contacts results
     var renderer = ContactRenderer.flavor('suggestion');
@@ -2687,7 +2685,7 @@ var ThreadUI = global.ThreadUI = {
       var rendererArg = {
         contact: contact,
         input: fValue,
-        target: suggestionList,
+        target: ul,
         skip: this.recipients.numbers
       };
       if (contact.source != 'unknown') {
@@ -2698,7 +2696,7 @@ var ThreadUI = global.ThreadUI = {
       }
     }, this);

-    this.toggleRecipientSuggestions(suggestionList);
+    this.container.appendChild(ul);
   },

   onHeaderActivation: function thui_onHeaderActivation() {
@@ -2744,15 +2742,8 @@ var ThreadUI = global.ThreadUI = {

     var inMessage = opts.inMessage || false;
     var number = opts.number || '';
-    var tel, email;
-
-    if (Settings.supportEmailRecipient && Utils.isEmailAddress(number)) {
-      email = number || '';
-    } else {
-      tel = number || '';
-    }

-    Contacts.findByAddress(number, function(results) {
+    Contacts.findByPhoneNumber(number, function(results) {
       var isContact = results && results.length;
       var contact = results[0];
       var id;
@@ -2772,8 +2763,7 @@ var ThreadUI = global.ThreadUI = {
       }

       this.prompt({
-        number: tel,
-        email: email,
+        number: number,
         header: fragment || number,
         contactId: id,
         isContact: isContact,
@@ -3002,24 +2992,6 @@ var ThreadUI = global.ThreadUI = {
     if (!opts || (opts && !opts.autoSave)) {
       ThreadListUI.onDraftSaved();
     }
-  },
-
-  /**
-   * Shows recipient suggestions if available, otherwise removes it from the DOM
-   * and hides suggestions container.
-   * @param {DocumentFragment} suggestions DocumentFragment node that contains
-   * recipient suggestion to display.
-   */
-  toggleRecipientSuggestions: function(suggestions) {
-    var contactList = this.recipientSuggestions.querySelector('.contact-list');
-
-    this.recipientSuggestions.classList.toggle('hide', !suggestions);
-
-    if (!suggestions) {
-      contactList.textContent = '';
-    } else {
-      contactList.appendChild(suggestions);
-    }
   }
 };

diff --git a/apps/sms/js/utils.js b/apps/sms/js/utils.js
index a49dd90..ebf717e 100644
--- a/apps/sms/js/utils.js
+++ b/apps/sms/js/utils.js
@@ -163,9 +163,6 @@
      * 3. If for some reason a single contact has two phone numbers with the
      * same type and the same carrier then "type" and "phone number" will be
      * returned;
-     *
-     * note: The argument "tels" can actually contain "emails" too.
-     *
      */
     getPhoneDetails: function ut_getPhoneDetails(input, tels) {
       var length = tels.length;
diff --git a/apps/sms/locales/sms.en-US.properties b/apps/sms/locales/sms.en-US.properties
index 0147896..6602726 100755
--- a/apps/sms/locales/sms.en-US.properties
+++ b/apps/sms/locales/sms.en-US.properties
@@ -1,6 +1,7 @@
 # Headers
 messages              = Messages
 deleteMessages-title  = Delete messages
+selectThreads-title   = Select

 # Contact title
 thread-header-text        = {[ plural(n) ]}
@@ -31,6 +32,8 @@ selected[other]   = {{n}} selected

 # Options menu
 deleteMessages-label  = Delete Messages
+selectThreads-label   = Select Threads
+selectMessages-label  = Select Messages
 settings              = Settings
 add-subject            = Add subject
 remove-subject         = Remove subject
diff --git a/apps/sms/style/composer.css b/apps/sms/style/composer.css
index 32e6124..efa7498 100644
--- a/apps/sms/style/composer.css
+++ b/apps/sms/style/composer.css
@@ -218,10 +218,10 @@ form[role="search"] button[type="submit"]:after {
 }

 #messages-send-button {
-  height: 4rem;
+  height: 4.5rem;
   overflow: visible;
-  background: #fff url(images/icons/actionicon_sms_send_30x30.png)
-              no-repeat center center / 3rem;
+  background-image: url(images/icons/actionicon_sms_send_30x90.png);
+  background-position: center -4.5rem;
 }

 #messages-send-button:after {
@@ -229,8 +229,7 @@ form[role="search"] button[type="submit"]:after {
 }

 #messages-send-button[disabled] {
-  background-blend-mode: luminosity;
-  opacity: 0.625;
+  background-position: center 0;
 }

 #messages-input.ignoreEvents {
@@ -296,7 +295,7 @@ form[role="search"] button[type="submit"]:after {

 .sim-indication {
   position: absolute;
-  top: 0.3rem;
+  top: 0.6rem;
   right: 1.9rem;

   display: none;
@@ -316,9 +315,14 @@ button[disabled] .sim-indication {
   display: block;
 }

+.has-preferred-sim #messages-send-button {
+  height: 4.5rem;
+  padding-top: 0.5rem;
+}
+
 .has-preferred-sim #messages-send-button:before {
   position: absolute;
-  top: 1rem;
+  top: 1.2rem;
   left: 0;
   right: 0;

diff --git a/apps/sms/style/icons/sms_126.png b/apps/sms/style/icons/sms_126.png
index 2cf3be8..13b310f 100644
Binary files a/apps/sms/style/icons/sms_126.png and b/apps/sms/style/icons/sms_126.png differ
diff --git a/apps/sms/style/icons/sms_142.png b/apps/sms/style/icons/sms_142.png
index f097bfb..e279816 100644
Binary files a/apps/sms/style/icons/sms_142.png and b/apps/sms/style/icons/sms_142.png differ
diff --git a/apps/sms/style/icons/sms_189.png b/apps/sms/style/icons/sms_189.png
index 5da8b08..9ebd5bc 100644
Binary files a/apps/sms/style/icons/sms_189.png and b/apps/sms/style/icons/sms_189.png differ
diff --git a/apps/sms/style/icons/sms_284.png b/apps/sms/style/icons/sms_284.png
index 9ff1bc6..b55ce5f 100644
Binary files a/apps/sms/style/icons/sms_284.png and b/apps/sms/style/icons/sms_284.png differ
diff --git a/apps/sms/style/icons/sms_84.png b/apps/sms/style/icons/sms_84.png
index 498967c..cdd6ff5 100644
Binary files a/apps/sms/style/icons/sms_84.png and b/apps/sms/style/icons/sms_84.png differ
diff --git a/apps/sms/style/images/SMS_200x200_bubble.png b/apps/sms/style/images/SMS_200x200_bubble.png
index aaa7efb..8e14f4a 100644
Binary files a/apps/sms/style/images/SMS_200x200_bubble.png and b/apps/sms/style/images/SMS_200x200_bubble.png differ
diff --git a/apps/sms/style/images/SMS_200x200_bubble@1.5x.png b/apps/sms/style/images/SMS_200x200_bubble@1.5x.png
index 04a2262..2cab4ea 100644
Binary files a/apps/sms/style/images/SMS_200x200_bubble@1.5x.png and b/apps/sms/style/images/SMS_200x200_bubble@1.5x.png differ
diff --git a/apps/sms/style/images/SMS_200x200_bubble@2.25x.png b/apps/sms/style/images/SMS_200x200_bubble@2.25x.png
deleted file mode 100644
index 93703ab..0000000
Binary files a/apps/sms/style/images/SMS_200x200_bubble@2.25x.png and /dev/null differ
diff --git a/apps/sms/style/images/SMS_200x200_bubble@2x.png b/apps/sms/style/images/SMS_200x200_bubble@2x.png
index b045f6f..7584e25 100644
Binary files a/apps/sms/style/images/SMS_200x200_bubble@2x.png and b/apps/sms/style/images/SMS_200x200_bubble@2x.png differ
diff --git a/apps/sms/style/images/SMS_bubble@2.25x.png b/apps/sms/style/images/SMS_bubble@2.25x.png
new file mode 100644
index 0000000..120c755
Binary files /dev/null and b/apps/sms/style/images/SMS_bubble@2.25x.png differ
diff --git a/apps/sms/style/images/add_contact.png b/apps/sms/style/images/add_contact.png
new file mode 100644
index 0000000..4642d69
Binary files /dev/null and b/apps/sms/style/images/add_contact.png differ
diff --git a/apps/sms/style/images/add_contact@1.5x.png b/apps/sms/style/images/add_contact@1.5x.png
new file mode 100644
index 0000000..05ace6b
Binary files /dev/null and b/apps/sms/style/images/add_contact@1.5x.png differ
diff --git a/apps/sms/style/images/add_contact@2.25x.png b/apps/sms/style/images/add_contact@2.25x.png
new file mode 100644
index 0000000..2703cc2
Binary files /dev/null and b/apps/sms/style/images/add_contact@2.25x.png differ
diff --git a/apps/sms/style/images/check-delete.png b/apps/sms/style/images/check-delete.png
new file mode 100644
index 0000000..ed1f267
Binary files /dev/null and b/apps/sms/style/images/check-delete.png differ
diff --git a/apps/sms/style/images/check-delete@1.5x.png b/apps/sms/style/images/check-delete@1.5x.png
new file mode 100644
index 0000000..02b9f14
Binary files /dev/null and b/apps/sms/style/images/check-delete@1.5x.png differ
diff --git a/apps/sms/style/images/check-delete@2.25x.png b/apps/sms/style/images/check-delete@2.25x.png
new file mode 100644
index 0000000..f84fa0f
Binary files /dev/null and b/apps/sms/style/images/check-delete@2.25x.png differ
diff --git a/apps/sms/style/images/check-delete@2x.png b/apps/sms/style/images/check-delete@2x.png
new file mode 100644
index 0000000..7befd67
Binary files /dev/null and b/apps/sms/style/images/check-delete@2x.png differ
diff --git a/apps/sms/style/images/icons/actionicon_sms_send_30x30.png b/apps/sms/style/images/icons/actionicon_sms_send_30x30.png
deleted file mode 100644
index b084d94..0000000
Binary files a/apps/sms/style/images/icons/actionicon_sms_send_30x30.png and /dev/null differ
diff --git a/apps/sms/style/images/icons/actionicon_sms_send_30x30@1.5x.png b/apps/sms/style/images/icons/actionicon_sms_send_30x30@1.5x.png
deleted file mode 100644
index a5b8d3d..0000000
Binary files a/apps/sms/style/images/icons/actionicon_sms_send_30x30@1.5x.png and /dev/null differ
diff --git a/apps/sms/style/images/icons/actionicon_sms_send_30x30@2.25x.png b/apps/sms/style/images/icons/actionicon_sms_send_30x30@2.25x.png
deleted file mode 100644
index 1f6647e..0000000
Binary files a/apps/sms/style/images/icons/actionicon_sms_send_30x30@2.25x.png and /dev/null differ
diff --git a/apps/sms/style/images/icons/actionicon_sms_send_30x30@2x.png b/apps/sms/style/images/icons/actionicon_sms_send_30x30@2x.png
deleted file mode 100644
index a4e59c1..0000000
Binary files a/apps/sms/style/images/icons/actionicon_sms_send_30x30@2x.png and /dev/null differ
diff --git a/apps/sms/style/images/icons/actionicon_sms_send_30x90.png b/apps/sms/style/images/icons/actionicon_sms_send_30x90.png
new file mode 100644
index 0000000..e5fffa0
Binary files /dev/null and b/apps/sms/style/images/icons/actionicon_sms_send_30x90.png differ
diff --git a/apps/sms/style/images/icons/actionicon_sms_send_30x90@1.5x.png b/apps/sms/style/images/icons/actionicon_sms_send_30x90@1.5x.png
new file mode 100644
index 0000000..4574cfd
Binary files /dev/null and b/apps/sms/style/images/icons/actionicon_sms_send_30x90@1.5x.png differ
diff --git a/apps/sms/style/images/icons/actionicon_sms_send_30x90@2.25x.png b/apps/sms/style/images/icons/actionicon_sms_send_30x90@2.25x.png
new file mode 100644
index 0000000..926624b
Binary files /dev/null and b/apps/sms/style/images/icons/actionicon_sms_send_30x90@2.25x.png differ
diff --git a/apps/sms/style/images/icons/actionicon_sms_send_30x90@2x.png b/apps/sms/style/images/icons/actionicon_sms_send_30x90@2x.png
new file mode 100644
index 0000000..be9bdde
Binary files /dev/null and b/apps/sms/style/images/icons/actionicon_sms_send_30x90@2x.png differ
diff --git a/apps/sms/style/images/pattern.png b/apps/sms/style/images/pattern.png
new file mode 100644
index 0000000..af03f56
Binary files /dev/null and b/apps/sms/style/images/pattern.png differ
diff --git a/apps/sms/style/images/pattern@1.5x.png b/apps/sms/style/images/pattern@1.5x.png
new file mode 100755
index 0000000..af03f56
Binary files /dev/null and b/apps/sms/style/images/pattern@1.5x.png differ
diff --git a/apps/sms/style/sms.css b/apps/sms/style/sms.css
index 505105f..439668a 100755
--- a/apps/sms/style/sms.css
+++ b/apps/sms/style/sms.css
@@ -186,10 +186,14 @@ form[role="dialog"][data-type="edit"] > menu {
 }

 /* Lists: edit mode */
+.edit #threads-container[data-type="list"] ul {
+  padding: 0 0rem;
+}
+
 .edit [data-type="list"] li > label {
   opacity: 1;
   pointer-events: auto;
-  left: -1.4rem;
+  left: -1.5rem;
 }

 .edit [data-type="list"] li > .pack-checkbox input ~ span:after {
@@ -199,7 +203,8 @@ form[role="dialog"][data-type="edit"] > menu {
 }

 .edit [data-type="list"] li > a > aside.icon-unread {
-  opacity: 0;
+  opacity: 1;
+  left: 3.5rem;
 }

 .edit [data-type="list"] li > a > p {
@@ -574,6 +579,7 @@ section[role="region"].new > header:first-child form {
 #threads-no-messages {
   background-image: url('images/SMS_200x200_bubble.png');
   background-repeat: no-repeat;
+  background-attachment: fixed;
   background-position: center;
   background-size: 20rem;
   overflow-y: auto;
@@ -608,8 +614,6 @@ section[role="region"].new .subheader {

 #messages-to-field {
   position: relative;
-  /* To be above .article-list's with z-index = 5 */
-  z-index: 6;

   display: none;
   min-height: 5.5rem;
@@ -719,29 +723,15 @@ Do not remove.
   background: none;
 }

-#messages-recipient-suggestions {
+.article-list[data-type="list"] ul.contact-list {
   position: absolute;
-  /* 10.5rem (5 rem from app header + 5.5rem from "To" panel heights) */
-  top: 10.5rem;
-
+  width: calc(100% - 3.1rem);
+  z-index: 5;
   overflow-y: auto;
-
-  max-height: calc(100% - 10.5rem);
-  width: 100%;
-}
-
-#messages-recipient-suggestions li:first-child {
-  margin-top: 0;
-}
-
-.article-list[data-type="list"] ul.contact-list {
   overflow-x: hidden;
-  overflow-y: auto;
-
-  width: calc(100% - 3.1rem);
+  max-height: calc(100% - 5rem);
   padding: 0 1.5rem;
-
-  background: #fff;
+  background: white;
 }

 body[role="application"] form[role="dialog"][data-type="action"] > section:first-child{
diff --git a/apps/sms/test/marionette/manifest.ini b/apps/sms/test/marionette/manifest.ini
deleted file mode 100644
index 130629b..0000000
--- a/apps/sms/test/marionette/manifest.ini
+++ /dev/null
@@ -1 +0,0 @@
-[phone_number_service_test.js]
diff --git a/apps/sms/test/unit/activity_handler_test.js b/apps/sms/test/unit/activity_handler_test.js
index 438616e..d559e05 100755
--- a/apps/sms/test/unit/activity_handler_test.js
+++ b/apps/sms/test/unit/activity_handler_test.js
@@ -115,7 +115,8 @@ suite('ActivityHandler', function() {
   });

   suite('"share" activity', function() {
-    var shareActivity;
+    var shareActivity, blobs, names;
+    var arr = [];
     var panelPromise;

     setup(function() {
@@ -147,6 +148,23 @@ suite('ActivityHandler', function() {
       ActivityHandler.leaveActivity();
     });

+    test('test for pushing an attachments to an array', function() {
+      blobs = shareActivity.source.data.blobs;
+      names = shareActivity.source.data.filenames;
+      assert.ok(arr.length === 0);
+
+      blobs.forEach(function(blob, idx) {
+        var attachment = new Attachment(blob, {
+          name: names[idx],
+          isDraft: true
+        });
+        arr.push(attachment);
+      });
+      ThreadUI.cleanFields(true);
+      //checks an array length after pushing the data to an array
+      assert.ok(arr.length > 0);
+    });
+
     test('moves to the composer panel', function() {

       MockNavigatormozSetMessageHandler.mTrigger('activity', shareActivity);
@@ -315,7 +333,7 @@ suite('ActivityHandler', function() {
       var sendSpy;
       setup(function() {
         sendSpy = this.sinon.spy(window, 'Notification');
-        this.sinon.stub(Contacts, 'findByAddress')
+        this.sinon.stub(Contacts, 'findByPhoneNumber')
           .yields([{name: [contactName]}]);

         MockNavigatormozApps.mTriggerLastRequestSuccess();
@@ -335,7 +353,7 @@ suite('ActivityHandler', function() {
       setup(function() {
         sendSpy = this.sinon.spy(window, 'Notification');
         message.sender = phoneNumber;
-        this.sinon.stub(Contacts, 'findByAddress')
+        this.sinon.stub(Contacts, 'findByPhoneNumber')
           .yields([{
             name: [''],
             tel: {'value': phoneNumber}
@@ -350,28 +368,6 @@ suite('ActivityHandler', function() {
       });
     });

-    suite('[Email]contact without name (after getSelf)', function() {
-      var emailAddress = 'a@b.com';
-      var sendSpy;
-
-      setup(function() {
-        sendSpy = this.sinon.spy(window, 'Notification');
-        message.sender = emailAddress;
-        this.sinon.stub(Contacts, 'findByAddress')
-          .yields([{
-            name: [''],
-            email: {'value': emailAddress}
-          }]);
-        MockNavigatormozApps.mTriggerLastRequestSuccess();
-      });
-
-      test('email in notification title when contact without name', function() {
-        sinon.assert.called(sendSpy);
-        var notification = sendSpy.firstCall.thisValue;
-        assert.equal(notification.title, emailAddress);
-      });
-    });
-
     suite('after getSelf', function() {
       var sendSpy;
       setup(function() {
@@ -527,7 +523,7 @@ suite('ActivityHandler', function() {
     suite('contact retrieved (after getSelf)', function() {
       var contactName = 'contact';
       setup(function() {
-        this.sinon.stub(Contacts, 'findByAddress')
+        this.sinon.stub(Contacts, 'findByPhoneNumber')
           .yields([{name: [contactName]}]);

         MockNavigatormozApps.mTriggerLastRequestSuccess();
@@ -545,7 +541,7 @@ suite('ActivityHandler', function() {

       setup(function() {
         message.sender = phoneNumber;
-        this.sinon.stub(Contacts, 'findByAddress')
+        this.sinon.stub(Contacts, 'findByPhoneNumber')
           .yields([{
             name: [''],
             tel: {value: phoneNumber}
@@ -559,26 +555,6 @@ suite('ActivityHandler', function() {
         sinon.assert.calledWith(window.Notification, expected);
       });
     });
-
-    suite('[Email]contact without name (after getSelf)', function() {
-      var emailAddress = 'a@b.com';
-
-      setup(function() {
-        message.sender = emailAddress;
-        this.sinon.stub(Contacts, 'findByAddress')
-          .yields([{
-            name: [''],
-            email: {value: emailAddress}
-          }]);
-        MockNavigatormozApps.mTriggerLastRequestSuccess();
-      });
-
-      test('email in notification title when contact without name', function() {
-        var expected = 'dsds-notification-title-with-sim' +
-          '{"sim":"sim-name-0","sender":"a@b.com"}';
-        sinon.assert.calledWith(window.Notification, expected);
-      });
-    });
   });

   suite('user clicked the notification', function() {
@@ -695,7 +671,7 @@ suite('ActivityHandler', function() {

     setup(function() {
       // find no contact in here
-      this.sinon.stub(Contacts, 'findByAddress').callsArgWith(1, []);
+      this.sinon.stub(Contacts, 'findByPhoneNumber').callsArgWith(1, []);
       this.sinon.spy(Navigation, 'toPanel');
     });

diff --git a/apps/sms/test/unit/contacts_test.js b/apps/sms/test/unit/contacts_test.js
index 60fae02..24a3681 100755
--- a/apps/sms/test/unit/contacts_test.js
+++ b/apps/sms/test/unit/contacts_test.js
@@ -651,118 +651,6 @@ suite('Contacts', function(done) {
     });
   });

-  suite('Contacts.findByAddress', function() {
-
-    test('removes spaces', function(done) {
-      var mozContacts = navigator.mozContacts;
-
-      Contacts.findByAddress('+33 1 23 45 67 89', function(contacts) {
-        done(function() {
-          assert.equal(
-            mozContacts.mHistory[0].filter.filterValue, '+33123456789'
-          );
-        });
-      });
-    });
-
-    test('The mozContacts find() call returned an error', function(done) {
-      Contacts.findByAddress('callonerror', function(contacts) {
-        done(function() {
-          assert.equal(contacts.length, 0);
-        });
-      });
-    });
-
-    test('Local number found.', function(done) {
-      Contacts.findByAddress(targetLocalNumber, function(contacts) {
-        done(function() {
-          assert.equal(contacts.length, 1);
-          assert.isTrue(!contacts[0].isFbContact);
-          assert.equal(contacts[0].name[0], localContactName);
-        });
-      });
-    });
-
-    test('Local email found.', function(done) {
-      Contacts.findByAddress(targetLocalEmail, function(contacts) {
-        done(function() {
-          assert.equal(contacts.length, 1);
-          assert.isTrue(!contacts[0].isFbContact);
-          assert.equal(contacts[0].name[0], localContactName);
-        });
-      });
-    });
-
-    test('Local number not found. FB Number found', function(done) {
-      Contacts.findByAddress(targetFbNumber, function(contacts) {
-        done(function() {
-          assert.equal(contacts.length, 1);
-          assert.equal(contacts[0].name[0], fbContactName);
-          assert.equal(contacts[0].isFbContact, true);
-        });
-      });
-    });
-
-    test('Local number not found. FB Number not found either', function(done) {
-      Contacts.findByAddress(notFoundNumber, function(contacts) {
-        done(function() {
-          assert.equal(contacts.length, 0);
-        });
-      });
-    });
-
-    test('Local email not found. FB Number not found either', function(done) {
-      Contacts.findByAddress(notFoundEmail, function(contacts) {
-        done(function() {
-          assert.equal(contacts.length, 0);
-        });
-      });
-    });
-
-    test('Local number not found. FB returns error', function(done) {
-      fb.inError = true;
-
-      Contacts.findByAddress(targetFbNumber, function(contacts) {
-        done(function() {
-          assert.equal(contacts.length, 0);
-          delete window.fb.inError;
-        });
-      });
-    });
-  });
-
-  suite('Contacts.findExactByEmail', function() {
-
-    test('Local email found.', function(done) {
-      Contacts.findExactByEmail(targetLocalEmail, function(contacts) {
-        done(function() {
-          assert.equal(contacts.length, 1);
-          assert.isTrue(!contacts[0].isFbContact);
-          assert.equal(contacts[0].name[0], localContactName);
-        });
-      });
-    });
-
-    test('Local email not found. FB Email not found either', function(done) {
-      Contacts.findExactByEmail(notFoundEmail, function(contacts) {
-        done(function() {
-          assert.equal(contacts.length, 0);
-        });
-      });
-    });
-
-    test('Local email not found. FB returns error', function(done) {
-      fb.inError = true;
-
-      Contacts.findExactByEmail(targetLocalEmail, function(contacts) {
-        done(function() {
-          assert.equal(contacts.length, 1);
-          delete window.fb.inError;
-        });
-      });
-    });
-  });
-
   suite('Contacts.addUnknown', function() {

     test('For adding an unknown contact', function() {
diff --git a/apps/sms/test/unit/event_dispatcher_test.js b/apps/sms/test/unit/event_dispatcher_test.js
deleted file mode 100644
index 321b8db..0000000
--- a/apps/sms/test/unit/event_dispatcher_test.js
+++ /dev/null
@@ -1,404 +0,0 @@
-/*global
-        EventDispatcher,
-        Set
-*/
-
-'use strict';
-
-require('/js/event_dispatcher.js');
-
-suite('EventDispatcher >', function() {
-  var originalObject = {
-    property: 3,
-    method: () => {}
-  };
-
-  var originalRestrictedObject = {
-    property: 3,
-    method: () => {}
-  };
-
-  var allowedEvents = ['allowed-event-1', 'allowed-event-2'];
-
-  var eventTarget = null,
-      restrictedEventTarget = null;
-
-  suiteSetup(function() {
-    eventTarget = EventDispatcher.mixin(originalObject);
-    restrictedEventTarget = EventDispatcher.mixin(
-      originalRestrictedObject,
-      allowedEvents
-    );
-  });
-
-  suite('mixin >', function() {
-    test('throws if object to mix into is not valid object', function() {
-      assert.throws(() => EventDispatcher.mixin());
-      assert.throws(() => EventDispatcher.mixin(null));
-      assert.throws(() => EventDispatcher.mixin(() => {}));
-      assert.throws(() => EventDispatcher.mixin(3));
-    });
-
-    test('throws if object to mix into already has dispatcher methods',
-    function() {
-      var CustomClass = function() {};
-      EventDispatcher.mixin(CustomClass.prototype);
-
-      assert.throws(() => EventDispatcher.mixin({ on: () => {} }));
-      assert.throws(() => EventDispatcher.mixin({ on: null }));
-      assert.throws(() => EventDispatcher.mixin({ off: () => {} }));
-      assert.throws(() => EventDispatcher.mixin({ off: 'day off' }));
-      assert.throws(() => EventDispatcher.mixin({ offAll: () => {} }));
-      assert.throws(() => EventDispatcher.mixin({ emit: () => {} }));
-      assert.throws(() => EventDispatcher.mixin(new CustomClass()));
-      assert.throws(() => EventDispatcher.mixin(EventDispatcher.mixin({})));
-    });
-
-    test('throws if invalid array is passed for allowedEvents', function() {
-      assert.throws(() => EventDispatcher.mixin({}, null));
-      assert.throws(() => EventDispatcher.mixin({}, 'event'));
-      assert.throws(() => EventDispatcher.mixin({}, new Set()));
-    });
-
-    test('correctly adds methods to target object', function() {
-      assert.equal(typeof eventTarget.on, 'function');
-      assert.equal(typeof eventTarget.off, 'function');
-      assert.equal(typeof eventTarget.offAll, 'function');
-      assert.equal(typeof eventTarget.emit, 'function');
-
-      assert.strictEqual(eventTarget, originalObject);
-      assert.strictEqual(eventTarget.method, originalObject.method);
-      assert.strictEqual(eventTarget.property, originalObject.property);
-    });
-  });
-
-  suite('on >', function() {
-    setup(function() {
-      eventTarget.offAll('event');
-    });
-
-    test('throws if event name is not valid string', function() {
-      assert.throws(() => eventTarget.on());
-      assert.throws(() => eventTarget.on('', () => {}));
-      assert.throws(() => eventTarget.on(null, () => {}));
-    });
-
-    test('throws if handler is not function', function() {
-      assert.throws(() => eventTarget.on('event'));
-      assert.throws(() => eventTarget.on('event', null));
-      assert.throws(() => eventTarget.on('event', {}));
-    });
-
-    test('successfully registers handler', function() {
-      var expectedHandler = sinon.stub(),
-          unexpectedHandler = sinon.stub();
-
-      eventTarget.on('not-expected-event', unexpectedHandler);
-      eventTarget.on('event', expectedHandler);
-
-      eventTarget.emit('event');
-      sinon.assert.calledOnce(expectedHandler);
-
-      eventTarget.emit('event');
-      sinon.assert.calledTwice(expectedHandler);
-      sinon.assert.notCalled(unexpectedHandler);
-    });
-
-    test('successfully registers multiple handlers', function() {
-      var expectedHandler1 = sinon.stub(),
-          expectedHandler2 = sinon.stub(),
-          unexpectedHandler = sinon.stub();
-
-      eventTarget.on('not-expected-event', unexpectedHandler);
-      eventTarget.on('event', expectedHandler1);
-      eventTarget.on('event', expectedHandler2);
-
-      eventTarget.emit('event');
-
-      sinon.assert.notCalled(unexpectedHandler);
-      sinon.assert.calledOnce(expectedHandler1);
-      sinon.assert.calledOnce(expectedHandler2);
-      sinon.assert.callOrder(expectedHandler1, expectedHandler2);
-    });
-
-    suite('with allowed events >', function() {
-      setup(function() {
-        allowedEvents.forEach((event) => restrictedEventTarget.offAll(event));
-      });
-
-      test('throws if event name is not allowed', function() {
-        assert.throws(() => restrictedEventTarget.on('event'));
-      });
-
-      test('successfully registers handler for allowed event', function() {
-        var expectedHandler = sinon.stub(),
-            unexpectedHandler = sinon.stub();
-
-        restrictedEventTarget.on('allowed-event-2', unexpectedHandler);
-        restrictedEventTarget.on('allowed-event-1', expectedHandler);
-
-        restrictedEventTarget.emit('allowed-event-1');
-        sinon.assert.calledOnce(expectedHandler);
-
-        restrictedEventTarget.emit('allowed-event-1');
-        sinon.assert.calledTwice(expectedHandler);
-        sinon.assert.notCalled(unexpectedHandler);
-      });
-    });
-  });
-
-  suite('off >', function() {
-    setup(function() {
-      eventTarget.offAll('event');
-    });
-
-    test('throws if event name is not valid string', function() {
-      assert.throws(() => eventTarget.off());
-      assert.throws(() => eventTarget.off('', () => {}));
-      assert.throws(() => eventTarget.off(null, () => {}));
-    });
-
-    test('throws if handler is not function', function() {
-      assert.throws(() => eventTarget.off('event'));
-      assert.throws(() => eventTarget.off('event', null));
-      assert.throws(() => eventTarget.off('event', {}));
-    });
-
-    test('successfully unregisters handler', function() {
-      var handler = sinon.stub();
-
-      eventTarget.on('event', handler);
-      eventTarget.emit('event');
-
-      sinon.assert.calledOnce(handler);
-
-      eventTarget.off('event', handler);
-      eventTarget.emit('event');
-
-      sinon.assert.calledOnce(handler);
-    });
-
-    test('unregisters correct handler', function() {
-      var handler1 = sinon.stub(),
-          handler2 = sinon.stub(),
-          handler3 = sinon.stub();
-
-      eventTarget.on('event', handler1);
-      eventTarget.on('event', handler2);
-      eventTarget.emit('event');
-
-      sinon.assert.calledOnce(handler1);
-      sinon.assert.calledOnce(handler2);
-
-      eventTarget.off('event', handler3);
-      eventTarget.emit('event');
-
-      sinon.assert.calledTwice(handler1);
-      sinon.assert.calledTwice(handler2);
-
-      eventTarget.off('event', handler1);
-      eventTarget.emit('event');
-
-      sinon.assert.calledTwice(handler1);
-      sinon.assert.calledThrice(handler2);
-
-      eventTarget.off('event', handler2);
-      eventTarget.emit('event');
-
-      sinon.assert.calledTwice(handler1);
-      sinon.assert.calledThrice(handler2);
-    });
-
-    suite('with allowed events >', function() {
-      setup(function() {
-        allowedEvents.forEach((event) => restrictedEventTarget.offAll(event));
-      });
-
-      test('throws if event name is not allowed', function() {
-        assert.throws(() => restrictedEventTarget.off('event'));
-      });
-
-      test('successfully unregisters handler for allowed event', function() {
-         var handler = sinon.stub();
-
-        restrictedEventTarget.on('allowed-event-1', handler);
-        restrictedEventTarget.emit('allowed-event-1');
-
-        sinon.assert.calledOnce(handler);
-
-        restrictedEventTarget.off('allowed-event-1', handler);
-        restrictedEventTarget.emit('allowed-event-1');
-
-        sinon.assert.calledOnce(handler);
-      });
-    });
-  });
-
-  suite('offAll >', function() {
-    setup(function() {
-      eventTarget.offAll('event');
-    });
-
-    test('throws if event name is not valid string', function() {
-      assert.throws(() => eventTarget.offAll());
-      assert.throws(() => eventTarget.offAll(''));
-      assert.throws(() => eventTarget.offAll(null));
-    });
-
-    test('successfully unregisters all handlers', function() {
-      var handler1 = sinon.stub(),
-          handler2 = sinon.stub();
-
-      eventTarget.on('event', handler1);
-      eventTarget.on('event', handler2);
-      eventTarget.emit('event');
-
-      sinon.assert.calledOnce(handler1);
-      sinon.assert.calledOnce(handler2);
-
-      eventTarget.offAll('other-event');
-      eventTarget.emit('event');
-
-      sinon.assert.calledTwice(handler1);
-      sinon.assert.calledTwice(handler2);
-
-      eventTarget.offAll('event');
-      eventTarget.emit('event');
-
-      sinon.assert.calledTwice(handler1);
-      sinon.assert.calledTwice(handler2);
-    });
-
-    suite('with allowed events >', function() {
-      setup(function() {
-        allowedEvents.forEach((event) => restrictedEventTarget.offAll(event));
-      });
-
-      test('throws if event name is not allowed', function() {
-        assert.throws(() => restrictedEventTarget.offAll('event'));
-      });
-
-      test('successfully unregisters all handlers for allowed event',
-      function() {
-        var handler1 = sinon.stub(),
-          handler2 = sinon.stub();
-
-        restrictedEventTarget.on('allowed-event-1', handler1);
-        restrictedEventTarget.on('allowed-event-1', handler2);
-        restrictedEventTarget.emit('allowed-event-1');
-
-        sinon.assert.calledOnce(handler1);
-        sinon.assert.calledOnce(handler2);
-
-        restrictedEventTarget.offAll('allowed-event-2');
-        restrictedEventTarget.emit('allowed-event-1');
-
-        sinon.assert.calledTwice(handler1);
-        sinon.assert.calledTwice(handler2);
-
-        restrictedEventTarget.offAll('allowed-event-1');
-        restrictedEventTarget.emit('allowed-event-1');
-
-        sinon.assert.calledTwice(handler1);
-        sinon.assert.calledTwice(handler2);
-      });
-    });
-  });
-
-  suite('emit >', function() {
-    setup(function() {
-      eventTarget.offAll('event');
-      eventTarget.offAll('other-event');
-      eventTarget.offAll('event-1');
-    });
-
-    test('throws if event name is not valid string', function() {
-      assert.throws(() => eventTarget.emit());
-      assert.throws(() => eventTarget.emit('', {}));
-      assert.throws(() => eventTarget.emit(null, {}));
-    });
-
-    test('execute all handlers in the right order', function() {
-      var expectedHandler1 = sinon.stub(),
-          expectedHandler2 = sinon.stub(),
-          unexpectedHandler = sinon.stub();
-
-      eventTarget.on('event', expectedHandler1);
-      eventTarget.on('event', expectedHandler2);
-      eventTarget.on('other-event', unexpectedHandler);
-
-      eventTarget.emit('event');
-
-      sinon.assert.notCalled(unexpectedHandler);
-      sinon.assert.calledOnce(expectedHandler1);
-      sinon.assert.calledOnce(expectedHandler2);
-      sinon.assert.callOrder(expectedHandler1, expectedHandler2);
-    });
-
-    test('passes correct parameters to the handlers', function() {
-      var handler1 = sinon.stub(),
-          handler2 = sinon.stub(),
-          handler3 = sinon.stub();
-
-      var parameters1 = {
-        id: 1
-      };
-
-      var parameters2 = 'hello!';
-
-      eventTarget.on('event', handler1);
-      eventTarget.on('event-1', handler2);
-      eventTarget.on('other-event', handler3);
-
-      eventTarget.emit('event', parameters1);
-      eventTarget.emit('event-1', parameters2);
-      eventTarget.emit('other-event');
-
-      sinon.assert.calledWith(handler1, parameters1);
-      sinon.assert.calledWith(handler2, parameters2);
-      sinon.assert.calledWith(handler3, undefined);
-    });
-
-    test('execute all handlers even if exception occurs', function() {
-      var handler1 = sinon.stub().throws('Type Error'),
-          handler2 = sinon.stub();
-
-      eventTarget.on('event', handler1);
-      eventTarget.on('event', handler2);
-
-      eventTarget.emit('event');
-
-      sinon.assert.calledOnce(handler1);
-      sinon.assert.calledOnce(handler2);
-      sinon.assert.callOrder(handler1, handler2);
-    });
-
-    suite('with allowed events >', function() {
-      setup(function() {
-        allowedEvents.forEach((event) => restrictedEventTarget.offAll(event));
-      });
-
-      test('throws if event name is not allowed', function() {
-        assert.throws(() => restrictedEventTarget.emit('event'));
-      });
-
-      test('execute all handlers for allowed event in the right order',
-      function() {
-        var expectedHandler1 = sinon.stub(),
-            expectedHandler2 = sinon.stub(),
-            unexpectedHandler = sinon.stub();
-
-        restrictedEventTarget.on('allowed-event-1', expectedHandler1);
-        restrictedEventTarget.on('allowed-event-1', expectedHandler2);
-        restrictedEventTarget.on('allowed-event-2', unexpectedHandler);
-
-        restrictedEventTarget.emit('allowed-event-1');
-
-        sinon.assert.notCalled(unexpectedHandler);
-        sinon.assert.calledOnce(expectedHandler1);
-        sinon.assert.calledOnce(expectedHandler2);
-        sinon.assert.callOrder(expectedHandler1, expectedHandler2);
-      });
-    });
-  });
-});
diff --git a/apps/sms/test/unit/media/pixel.jpg b/apps/sms/test/unit/media/pixel.jpg
new file mode 100644
index 0000000..bb4522f
Binary files /dev/null and b/apps/sms/test/unit/media/pixel.jpg differ
diff --git a/apps/sms/test/unit/message_manager_test.js b/apps/sms/test/unit/message_manager_test.js
index 5ead9f5..e9c327a 100644
--- a/apps/sms/test/unit/message_manager_test.js
+++ b/apps/sms/test/unit/message_manager_test.js
@@ -7,7 +7,6 @@
         ReportView,
         Settings,
         SMIL,
-        ThreadListUI,
         ThreadUI,
         Threads
 */
@@ -725,26 +724,4 @@ suite('message_manager.js >', function() {
         this.mockEvent.message);
     });
   });
-
-  suite('onDeleted', function() {
-    setup(function() {
-      this.sinon.spy(ThreadListUI, 'onThreadsDeleted');
-    });
-
-    test('calls ThreadListUI.onThreadsDeleted', function() {
-      MessageManager.onDeleted({
-        deletedThreadIds : [1, 2]
-      });
-
-      sinon.assert.calledWith(ThreadListUI.onThreadsDeleted, [1, 2]);
-    });
-
-    test('does not call ThreadListUI.onThreadsDeleted', function() {
-      MessageManager.onDeleted({
-        deletedThreadIds : null
-      });
-
-      sinon.assert.notCalled(ThreadListUI.onThreadsDeleted);
-    });
-  });
 });
diff --git a/apps/sms/test/unit/mock_contacts.js b/apps/sms/test/unit/mock_contacts.js
index 9f4c319..20b070e 100644
--- a/apps/sms/test/unit/mock_contacts.js
+++ b/apps/sms/test/unit/mock_contacts.js
@@ -27,16 +27,6 @@ var MockContacts = {
     this.mCallCallback(callback, result);
   },

-  findByAddress: function mc_findByAddress(value, callback) {
-    var result = MockContact.list();
-    this.mCallCallback(callback, result);
-  },
-
-  findExactByEmail: function mc_findExactByEmail(value, callback) {
-    var result = MockContact.list();
-    this.mCallCallback(callback, result);
-  },
-
   findByString: function mc_findByString(value, callback) {
     var result = MockContact.list();
     this.mCallCallback(callback, result);
diff --git a/apps/sms/test/unit/mock_navigation.js b/apps/sms/test/unit/mock_navigation.js
index 8d39d27..a915dd5 100644
--- a/apps/sms/test/unit/mock_navigation.js
+++ b/apps/sms/test/unit/mock_navigation.js
@@ -7,6 +7,7 @@

 var MockNavigation = {
   init: function() {},
+  getCurrentPanel: function() {},
   isCurrentPanel: function() {},
   toPanel: function() { return Promise.resolve(); }
 };
diff --git a/apps/sms/test/unit/mock_thread_list_ui.js b/apps/sms/test/unit/mock_thread_list_ui.js
index 9caaa3b..ebdbbec 100644
--- a/apps/sms/test/unit/mock_thread_list_ui.js
+++ b/apps/sms/test/unit/mock_thread_list_ui.js
@@ -26,7 +26,6 @@ var MockThreadListUI = {
   insertThreadContainer: function() {},
   onMessageSending: function() {},
   onMessageReceived: function() {},
-  onThreadsDeleted: function() {},
   appendThread: function() {},
   createThreadContainer: function() {},
   updateContactsInfo: function() {},
diff --git a/apps/sms/test/unit/mock_utils.js b/apps/sms/test/unit/mock_utils.js
index 70fbbdc..60dc726 100644
--- a/apps/sms/test/unit/mock_utils.js
+++ b/apps/sms/test/unit/mock_utils.js
@@ -1,6 +1,6 @@
 'use strict';

-/* global Utils, Promise */
+/* global Utils */
 /* exported MockUtils */

 var MockUtils = {
@@ -31,7 +31,7 @@ var MockUtils = {
   basicContact: Utils.basicContact,
   asyncLoadRevokeURL: Utils.asyncLoadRevokeURL,
   isEmailAddress: Utils.isEmailAddress,
-  closeNotificationsForThread: () => Promise.resolve(),
+  closeNotificationsForThread: Utils.closeNotificationsForThread,
   imageToDataUrl: Utils.imageToDataUrl,
   imageUrlToDataUrl: Utils.imageUrlToDataUrl,
   Promise: Utils.Promise
diff --git a/apps/sms/test/unit/sms_test.js b/apps/sms/test/unit/sms_test.js
index 6688228..f6cf03a 100644
--- a/apps/sms/test/unit/sms_test.js
+++ b/apps/sms/test/unit/sms_test.js
@@ -301,27 +301,29 @@ suite('SMS App Unit-Test', function() {
         for (i = inputs.length - 1; i >= 0; i--) {
           inputs[i].checked = true;
         }
+        var checkUncheckAllButton =
+          document.getElementById('threads-check-uncheck-all-button');

-        var checkAllButton =
-          document.getElementById('threads-check-all-button');
-        var uncheckAllButton =
-          document.getElementById('threads-uncheck-all-button');
-
+        navigator.mozL10n.localize.reset();
         ThreadListUI.checkInputs();
-        assert.isTrue(checkAllButton.disabled);
-        assert.isFalse(uncheckAllButton.disabled);
+        sinon.assert.calledWith(
+          navigator.mozL10n.localize, checkUncheckAllButton, 'deselect-all');
         // Deactivate all inputs
         for (i = inputs.length - 1; i >= 0; i--) {
           inputs[i].checked = false;
         }
+        navigator.mozL10n.localize.reset();
         ThreadListUI.checkInputs();
-        assert.isFalse(checkAllButton.disabled);
-        assert.isTrue(uncheckAllButton.disabled);
+        sinon.assert.calledWith(
+          navigator.mozL10n.localize, checkUncheckAllButton, 'select-all');
+        assert.isFalse(checkUncheckAllButton.disabled);
         // Activate only one
         inputs[0].checked = true;
+        navigator.mozL10n.localize.reset();
         ThreadListUI.checkInputs();
-        assert.isFalse(checkAllButton.disabled);
-        assert.isFalse(uncheckAllButton.disabled);
+        sinon.assert.calledWith(
+          navigator.mozL10n.localize, checkUncheckAllButton, 'select-all');
+        assert.isFalse(checkUncheckAllButton.disabled);
       });

       test('Select all while receiving new thread', function(done) {
@@ -330,6 +332,8 @@ suite('SMS App Unit-Test', function() {

         var checkboxes =
           ThreadListUI.container.querySelectorAll('input[type=checkbox]');
+        var checkUncheckAllButton =
+          document.getElementById('threads-check-uncheck-all-button');
         assert.equal(5,
           [].slice.call(checkboxes).filter(function(i) {
             return i.checked;
@@ -356,11 +360,9 @@ suite('SMS App Unit-Test', function() {
         // new checkbox should have been added
         assert.equal(checkboxes[0].checked, false);

-        // Select all and Deselect all should both be enabled
-        assert.isFalse(document.getElementById('threads-check-all-button')
-          .hasAttribute('disabled'), 'Check all enabled');
-        assert.isFalse(document.getElementById('threads-uncheck-all-button')
-          .hasAttribute('disabled'), 'Uncheck all enabled');
+        // Select-Deselect all should both be enabled
+        assert.isFalse(checkUncheckAllButton
+          .hasAttribute('disabled'), 'Check-Uncheck all enabled');

         done();
       });
@@ -453,14 +455,11 @@ suite('SMS App Unit-Test', function() {
           ThreadUI.chooseMessage(inputs[i]);
         }

-        var checkAllButton =
-          document.getElementById('messages-check-all-button');
-        var uncheckAllButton =
-          document.getElementById('messages-uncheck-all-button');
+        var checkUncheckAllButton =
+          document.getElementById('messages-check-uncheck-all-button');

         ThreadUI.checkInputs();
-        assert.isTrue(checkAllButton.disabled);
-        assert.isFalse(uncheckAllButton.disabled);
+        assert.isFalse(checkUncheckAllButton.disabled);

         // Deactivate all inputs
         for (i = inputs.length - 1; i >= 0; i--) {
@@ -468,15 +467,13 @@ suite('SMS App Unit-Test', function() {
           ThreadUI.chooseMessage(inputs[i]);
         }
         ThreadUI.checkInputs();
-        assert.isFalse(checkAllButton.disabled);
-        assert.isTrue(uncheckAllButton.disabled);
+        assert.isFalse(checkUncheckAllButton.disabled);

         // Activate only one
         inputs[0].checked = true;
         ThreadUI.chooseMessage(inputs[0]);
         ThreadUI.checkInputs();
-        assert.isFalse(checkAllButton.disabled);
-        assert.isFalse(uncheckAllButton.disabled);
+        assert.isFalse(checkUncheckAllButton.disabled);
       });

       test('Select all while receiving new message', function(done) {
@@ -485,6 +482,8 @@ suite('SMS App Unit-Test', function() {

         var checkboxes =
           ThreadUI.container.querySelectorAll('input[type=checkbox]');
+        var checkUncheckAllButton =
+          document.getElementById('messages-check-uncheck-all-button');
         assert.equal(checkboxes.length, 5);
         assert.equal(checkboxes.length,
           [].slice.call(checkboxes).filter(function(i) {
@@ -510,11 +509,9 @@ suite('SMS App Unit-Test', function() {
         assert.equal(checkboxes[2].checked, true);
         assert.equal(checkboxes[5].checked, false);

-        // Select all and Deselect all should both be enabled
-        assert.isFalse(document.getElementById('messages-check-all-button')
-          .hasAttribute('disabled'), 'Check all enabled');
-        assert.isFalse(document.getElementById('messages-uncheck-all-button')
-          .hasAttribute('disabled'), 'Uncheck all enabled');
+        // Select-Deselect all should both be enabled
+        assert.isFalse(checkUncheckAllButton
+          .hasAttribute('disabled'), 'Check-Uncheck all enabled');

         // now delete the selected messages...
         MessageManager.deleteMessage = stub(function(list, itCb) {
diff --git a/apps/sms/test/unit/thread_list_ui_test.js b/apps/sms/test/unit/thread_list_ui_test.js
index ebd57ca..920304e 100644
--- a/apps/sms/test/unit/thread_list_ui_test.js
+++ b/apps/sms/test/unit/thread_list_ui_test.js
@@ -1,8 +1,7 @@
 /*global mocha, MocksHelper, loadBodyHTML, MockL10n, ThreadListUI,
          MessageManager, WaitingScreen, Threads, Template, MockMessages,
          MockThreadList, MockTimeHeaders, Draft, Drafts, Thread, ThreadUI,
-         MockOptionMenu, Utils, Contacts, MockContact, Navigation, MockDialog,
-         MockSettings
+         MockOptionMenu, Utils, Contacts, MockContact, Navigation, MockDialog
          */

 'use strict';
@@ -35,7 +34,6 @@ requireApp('sms/test/unit/mock_action_menu.js');
 require('/shared/test/unit/mocks/mock_performance_testing_helper.js');
 require('/shared/test/unit/mocks/mock_sticky_header.js');
 require('/test/unit/mock_navigation.js');
-require('/test/unit/mock_settings.js');

 var mocksHelperForThreadListUI = new MocksHelper([
   'asyncStorage',
@@ -175,13 +173,13 @@ suite('thread_list_ui', function() {
       assert.equal(optionItems[1].l10nId, 'cancel');
     });

-    test('show delete/settings/cancel options when list existed', function() {
+    test('show select/settings/cancel options when list existed', function() {
       ThreadListUI.setEmpty(false);
       ThreadListUI.showOptions();

       var optionItems = MockOptionMenu.calls[0].items;
       assert.equal(optionItems.length, 3);
-      assert.equal(optionItems[0].l10nId, 'deleteMessages-label');
+      assert.equal(optionItems[0].l10nId, 'selectThreads-label');
       assert.equal(optionItems[1].l10nId, 'settings');
       assert.equal(optionItems[2].l10nId, 'cancel');
     });
@@ -673,28 +671,6 @@ suite('thread_list_ui', function() {
         });
       });
     });
-
-    test('onThreadsDeleted', function() {
-      var threadIds = [3, 4, 5];
-      this.sinon.stub(Threads, 'has', (id) => threadIds.indexOf(id) >= 0);
-
-      threadIds.forEach(function(threadId) {
-        var thread = Thread.create(MockMessages.sms({
-          threadId: threadId,
-          timestamp: +(new Date())
-        }));
-
-        ThreadListUI.appendThread(thread);
-
-        assert.ok(document.getElementById('thread-' + threadId));
-      });
-
-      ThreadListUI.onThreadsDeleted([3, 4, 6]);
-
-      assert.ok(!document.getElementById('thread-3'));
-      assert.ok(!document.getElementById('thread-4'));
-      assert.ok(document.getElementById('thread-5'));
-    });
   });

   suite('createThread', function() {
@@ -1127,7 +1103,7 @@ suite('thread_list_ui', function() {
     var node, pictureContainer;

     setup(function() {
-      this.sinon.stub(Contacts, 'findByAddress');
+      this.sinon.stub(Contacts, 'findByPhoneNumber');
       var thread = {
         id: 1,
         participants: ['555'],
@@ -1153,7 +1129,7 @@ suite('thread_list_ui', function() {

       var contactInfo = MockContact.list();
       contactInfo[0].photo = [new Blob(['test'], { type: 'image/jpeg' })];
-      Contacts.findByAddress.yield(contactInfo);
+      Contacts.findByPhoneNumber.yield(contactInfo);

       var photo = node.querySelector('span[data-type=img]');
       assert.include(photo.style.backgroundImage, 'blob:');
@@ -1164,57 +1140,7 @@ suite('thread_list_ui', function() {

     test('display correctly a contact without a picture', function() {
       var contactInfo = MockContact.list();
-      Contacts.findByAddress.yield(contactInfo);
-
-      var photo = node.querySelector('span[data-type=img]');
-      assert.isFalse(photo.style.backgroundImage.contains('blob:'));
-      assert.isTrue(pictureContainer.classList.contains('empty'));
-    });
-  });
-
-  suite('[Email]setContact', function() {
-    var node, pictureContainer;
-
-    setup(function() {
-      this.sinon.stub(Contacts, 'findByAddress');
-      var thread = {
-        id: 1,
-        participants: ['a@b.com'],
-        lastMessageType: 'mms',
-        body: 'Hello a@b.com',
-        timestamp: Date.now(),
-        unreadCount: 0
-      };
-
-      Threads.set(1, thread);
-      node = ThreadListUI.createThread(thread);
-      pictureContainer = node.querySelector('.pack-end');
-
-      ThreadListUI.setContact(node);
-    });
-
-    teardown(function() {
-      ThreadListUI.container.textContent = '';
-    });
-
-    test('[Email]display the picture of a contact', function() {
-      MockSettings.supportEmailRecipient = true;
-      pictureContainer.classList.add('empty');
-
-      var contactInfo = MockContact.list();
-      contactInfo[0].photo = [new Blob(['test'], { type: 'image/jpeg' })];
-      Contacts.findByAddress.yield(contactInfo);
-
-      var photo = node.querySelector('span[data-type=img]');
-      assert.include(photo.style.backgroundImage, 'blob:');
-      assert.isFalse(pictureContainer.classList.contains('empty'));
-      assert.include(node.dataset.photoUrl, 'blob:');
-    });
-
-    test('[Email]display correctly a contact without a picture', function() {
-      MockSettings.supportEmailRecipient = true;
-      var contactInfo = MockContact.list();
-      Contacts.findByAddress.yield(contactInfo);
+      Contacts.findByPhoneNumber.yield(contactInfo);

       var photo = node.querySelector('span[data-type=img]');
       assert.isFalse(photo.style.backgroundImage.contains('blob:'));
diff --git a/apps/sms/test/unit/thread_ui_test.js b/apps/sms/test/unit/thread_ui_test.js
index b7ab738..9d1c975 100755
--- a/apps/sms/test/unit/thread_ui_test.js
+++ b/apps/sms/test/unit/thread_ui_test.js
@@ -8,8 +8,7 @@
          ActivityPicker, KeyEvent, MockNavigatorSettings, MockContactRenderer,
          Draft, MockStickyHeader, MultiSimActionButton, Promise, KeyboardEvent,
          MockLazyLoader, WaitingScreen, Navigation, MockDialog, MockSettings,
-         FocusEvent,
-         DocumentFragment
+         FocusEvent
 */

 'use strict';
@@ -112,7 +111,6 @@ suite('thread_ui.js >', function() {
   var threadMessages;
   var mainWrapper;
   var headerText;
-  var recipientSuggestions;

   var realMozL10n;
   var realMozMobileMessage;
@@ -200,9 +198,6 @@ suite('thread_ui.js >', function() {
     threadMessages = document.getElementById('thread-messages');
     mainWrapper = document.getElementById('main-wrapper');
     headerText = document.getElementById('messages-header-text');
-    recipientSuggestions = document.getElementById(
-      'messages-recipient-suggestions'
-    );

     this.sinon.useFakeTimers();

@@ -314,7 +309,7 @@ suite('thread_ui.js >', function() {
     test('composer cleared', function() {
       Compose.append('foo');
       subject.textContent = 'foo';
-      ThreadUI.cleanFields();
+      ThreadUI.cleanFields(true);
       assert.equal(Compose.getContent(), '');
       assert.equal(Compose.getSubject(), '');
     });
@@ -327,7 +322,6 @@ suite('thread_ui.js >', function() {
         unknownRenderer = new MockContactRenderer();
         sinon.spy(suggestionRenderer, 'render');
         sinon.spy(unknownRenderer, 'render');
-        this.sinon.spy(ThreadUI, 'toggleRecipientSuggestions');

         this.sinon.stub(ContactRenderer, 'flavor').throws();
         ContactRenderer.flavor.withArgs('suggestion')
@@ -364,22 +358,18 @@ suite('thread_ui.js >', function() {
         sinon.assert.calledWithMatch(suggestionRenderer.render, {
           contact: contact,
           input: '999',
-          target: sinon.match.instanceOf(DocumentFragment)
+          target: container.querySelector('ul.contact-list')
         });

         sinon.assert.calledWithMatch(unknownRenderer.render, {
           contact: unknown,
-          input: '999',
-          target: sinon.match.instanceOf(DocumentFragment)
+           input: '999',
+           target: container.querySelector('ul.contact-list')
         });
-
-        sinon.assert.calledWith(
-          ThreadUI.toggleRecipientSuggestions,
-          sinon.match.instanceOf(DocumentFragment)
-        );
       });

       test('does not display entered recipients', function() {
+
         sinon.assert.calledWithMatch(suggestionRenderer.render, {
             skip: ['888']
         });
@@ -388,45 +378,6 @@ suite('thread_ui.js >', function() {
         });
       });
     });
-
-    test('toggling suggestions list', function() {
-      var contactList = recipientSuggestions.querySelector('.contact-list');
-      recipientSuggestions.classList.add('hide');
-      contactList.textContent = '';
-
-      var documentFragment = document.createDocumentFragment(),
-          suggestionNode = document.createElement('li');
-      suggestionNode.innerHTML =
-        '<a class="suggestion">' +
-          '<p class="name">Jean Dupont</p>' +
-          '<p class="number">0123456789</p>' +
-        '</a>';
-      documentFragment.appendChild(suggestionNode);
-
-      ThreadUI.toggleRecipientSuggestions(documentFragment);
-
-      assert.isFalse(
-        recipientSuggestions.classList.contains('hide'),
-        'Recipient suggestions should be visible'
-      );
-      assert.equal(
-        contactList.firstElementChild,
-        suggestionNode,
-        'Recipient suggestions should contain correct data'
-      );
-      assert.equal(contactList.childNodes.length, 1);
-
-
-      ThreadUI.toggleRecipientSuggestions();
-
-      assert.isTrue(
-        recipientSuggestions.classList.contains('hide'),
-        'Recipient suggestions should be hidden'
-      );
-      assert.equal(
-        contactList.textContent, '', 'Recipient suggestions should be cleared'
-      );
-    });
   });

   suite('enableSend() >', function() {
@@ -1198,13 +1149,15 @@ suite('thread_ui.js >', function() {
         node.textContent = '999';

         // fake markup for some contact suggestions
-        recipientSuggestions.querySelector('.contact-list').innerHTML =
-          '<li>' +
-            '<a class="suggestion">' +
-              '<p class="name">Jean Dupont</p>' +
-              '<p class="number">0123456789</p>' +
-            '</a>' +
-          '</li>';
+        container.innerHTML =
+          '<ul class="contact-list">' +
+            '<li>' +
+              '<a class="suggestion">' +
+                '<p class="name">Jean Dupont</p>' +
+                '<p class="number">0123456789</p>' +
+              '</a>' +
+            '</li>' +
+          '</ul>';

         this.sinon.spy(ThreadUI.recipients, 'add');
         this.sinon.stub(Navigation, 'isCurrentPanel');
@@ -1221,7 +1174,6 @@ suite('thread_ui.js >', function() {

       test('Recipient assimilation is called when focus on subject',
       function() {
-        this.sinon.spy(ThreadUI, 'toggleRecipientSuggestions');
         subject.dispatchEvent(new FocusEvent('focus'));

         // recipient added and container is cleared
@@ -1230,8 +1182,7 @@ suite('thread_ui.js >', function() {
           number: '999',
           source: 'manual'
         });
-
-        sinon.assert.calledWithExactly(ThreadUI.toggleRecipientSuggestions);
+        assert.equal(container.textContent, '');
       });
     });

@@ -2795,123 +2746,80 @@ suite('thread_ui.js >', function() {
   suite('renderMessages()', function() {
     setup(function() {
       this.sinon.stub(MessageManager, 'getMessages');
-
-      ThreadUI.initializeRendering();
+      this.sinon.stub(MessageManager, 'markThreadRead');
+      ThreadUI.renderMessages(1);
     });

-    suite('nominal behavior', function() {
-      setup(function() {
-        ThreadUI.renderMessages(1);
-      });
-
-      test('infinite rendering test', function() {
-        var chunkSize = ThreadUI.CHUNK_SIZE;
-        var message;
-
-        for (var i = 1; i < chunkSize; i++) {
-          MessageManager.getMessages.yieldTo(
-            'each', MockMessages.sms({ id: i })
-          );
-          message = document.getElementById('message-' + i);
-          assert.ok(
-            message.classList.contains('hidden'),
-            'message-' + i + ' should be hidden'
-          );
-        }
-
-        MessageManager.getMessages.yieldTo(
-          'each', MockMessages.sms({ id: i })
-        );
-
-        assert.isNull(
-          container.querySelector('.hidden'),
-          'all previously hidden messages should now be displayed'
-        );
+    test('we mark messages as read', function() {
+      MessageManager.getMessages.yieldTo('done');
+      this.sinon.clock.tick();
+      assert.ok(MessageManager.markThreadRead.calledWith(1));
+    });

-        MessageManager.getMessages.yieldTo(
-          'each', MockMessages.sms({ id: ++i })
-        );
+    test('infinite rendering test', function() {
+      var chunkSize = ThreadUI.CHUNK_SIZE;
+      var message;

+      for (var i = 1; i < chunkSize; i++) {
+        MessageManager.getMessages.yieldTo('each', MockMessages.sms({ id: i }));
         message = document.getElementById('message-' + i);
         assert.ok(
           message.classList.contains('hidden'),
           'message-' + i + ' should be hidden'
         );
-      });
+      }

-      suite('scrolling behavior for first chunk', function() {
-        setup(function() {
-          this.sinon.stub(Navigation, 'isCurrentPanel').returns(false);
-          Navigation.isCurrentPanel.withArgs('thread').returns(true);
+      MessageManager.getMessages.yieldTo(
+        'each', MockMessages.sms({ id: i })
+      );

-          this.sinon.stub(HTMLElement.prototype, 'scrollIntoView');
+      assert.isNull(
+        container.querySelector('.hidden'),
+        'all previously hidden messages should now be displayed'
+      );

-          for (var i = 1; i < ThreadUI.CHUNK_SIZE; i++) {
-            MessageManager.getMessages.yieldTo(
-              'each', MockMessages.sms({ id: i })
-            );
-          }
-        });
+      MessageManager.getMessages.yieldTo(
+        'each', MockMessages.sms({ id: ++i })
+      );

-        test('should scroll to the end', function() {
-          MessageManager.getMessages.yieldTo(
-            'each', MockMessages.sms({ id: ThreadUI.CHUNK_SIZE })
-          );
+      message = document.getElementById('message-' + i);
+      assert.ok(
+        message.classList.contains('hidden'),
+        'message-' + i + ' should be hidden'
+      );
+    });

-          sinon.assert.called(HTMLElement.prototype.scrollIntoView);
-        });
+    suite('scrolling behavior for first chunk', function() {
+      setup(function() {
+        this.sinon.stub(Navigation, 'isCurrentPanel').returns(false);
+        Navigation.isCurrentPanel.withArgs('thread').returns(true);

-        test('should not scroll to the end if in the wrong panel', function() {
-          Navigation.isCurrentPanel.withArgs('thread').returns(false);
+        this.sinon.stub(HTMLElement.prototype, 'scrollIntoView');

+        for (var i = 1; i < ThreadUI.CHUNK_SIZE; i++) {
           MessageManager.getMessages.yieldTo(
-            'each', MockMessages.sms({ id: ThreadUI.CHUNK_SIZE })
+            'each', MockMessages.sms({ id: i })
           );
-
-          sinon.assert.notCalled(HTMLElement.prototype.scrollIntoView);
-        });
-      });
-    });
-
-    suite('calling stopRendering then renderMessages', function() {
-      setup(function() {
-        ThreadUI.stopRendering();
-        ThreadUI.renderMessages(1);
+        }
       });

-      test('getMessages should not be called', function() {
-        sinon.assert.notCalled(MessageManager.getMessages);
-      });
-    });
-  });
-
-  suite('more complex renderMessages behavior,', function() {
-    var transitionArgs;
+      test('should scroll to the end', function() {
+        MessageManager.getMessages.yieldTo(
+          'each', MockMessages.sms({ id: ThreadUI.CHUNK_SIZE })
+        );

-    setup(function() {
-      Threads.set(1, {
-        participants: ['999']
+        sinon.assert.called(HTMLElement.prototype.scrollIntoView);
       });

-      transitionArgs = {
-        id: '1',
-        meta: {
-          next: { panel: 'thread', args: { id: '1' } },
-          prev: { panel: 'thread-list', args: {} }
-        }
-      };
-    });
-
-    test('renderMessages does not render if we pressed back', function() {
-      this.sinon.stub(MessageManager, 'getMessages');
-      this.sinon.stub(Navigation, 'isCurrentPanel').returns(false);
+      test('should not scroll to the end if in the wrong panel', function() {
+        Navigation.isCurrentPanel.withArgs('thread').returns(false);

-      ThreadUI.beforeEnter(transitionArgs);
-      document.getElementById('messages-back-button').click();
+        MessageManager.getMessages.yieldTo(
+          'each', MockMessages.sms({ id: ThreadUI.CHUNK_SIZE })
+        );

-      Navigation.isCurrentPanel.withArgs('thread').returns(true);
-      ThreadUI.afterEnter(transitionArgs);
-      sinon.assert.notCalled(MessageManager.getMessages);
+        sinon.assert.notCalled(HTMLElement.prototype.scrollIntoView);
+      });
     });
   });

@@ -3841,14 +3749,12 @@ suite('thread_ui.js >', function() {
   });

   suite('updateCarrier', function() {
-    var contacts = [], number, email, detailsEmail;
+    var contacts = [], number;
     var carrierTag;

     suiteSetup(function() {
       contacts.push(new MockContact());
       number = contacts[0].tel[0].value;
-      email = contacts[0].email[0].value;
-      detailsEmail = Utils.getContactDetails(email, contacts);
     });

     setup(function() {
@@ -3920,26 +3826,6 @@ suite('thread_ui.js >', function() {
         assert.ok(carrierTag.querySelector('.has-phone-type'));
         assert.ok(carrierTag.querySelector('.has-phone-carrier'));
       });
-
-      test(' If there is one participant (email) & contacts', function() {
-        MockSettings.supportEmailRecipient = true;
-        var thread = {
-          participants: [email]
-        };
-
-        ThreadUI.updateCarrier(thread, contacts, detailsEmail);
-        assert.isTrue(threadMessages.classList.contains('has-carrier'));
-      });
-
-      test(' If there is one participant (email) & no contacts', function() {
-        MockSettings.supportEmailRecipient = true;
-        var thread = {
-          participants: [email]
-        };
-
-        ThreadUI.updateCarrier(thread, [], detailsEmail);
-        assert.isFalse(threadMessages.classList.contains('has-carrier'));
-      });
     });
   });

@@ -4655,7 +4541,7 @@ suite('thread_ui.js >', function() {
           });

           this.sinon.stub(
-            MockContacts, 'findByAddress', function(phone, fn) {
+            MockContacts, 'findByPhoneNumber', function(phone, fn) {

             fn([new MockContact()]);

@@ -4672,7 +4558,7 @@ suite('thread_ui.js >', function() {
           });

           this.sinon.stub(
-            MockContacts, 'findByAddress', function(phone, fn) {
+            MockContacts, 'findByPhoneNumber', function(phone, fn) {

             fn([new MockContact()]);

@@ -5136,7 +5022,7 @@ suite('thread_ui.js >', function() {
         var activity = MockMozActivity.instances[0];

         activity.result = {
-          select: [{ value: true }]
+          tel: [{ value: true }]
         };

         MockMozActivity.instances[0].onsuccess();
@@ -5144,25 +5030,6 @@ suite('thread_ui.js >', function() {
         assert.isTrue(Recipients.View.isFocusable);
       });
     });
-
-    test('pick in the case of Settings.supportEmailRecipient = true',
-    function() {
-      MockSettings.supportEmailRecipient = true;
-      ThreadUI.requestContact();
-
-      var requestedProps = MockMozActivity.calls[0].data.contactProperties;
-      assert.include(requestedProps, 'tel');
-      assert.include(requestedProps, 'email');
-    });
-
-    test('pick in the case of Settings.supportEmailRecipient = false',
-    function() {
-      MockSettings.supportEmailRecipient = false;
-      ThreadUI.requestContact();
-
-      var requestedProps = MockMozActivity.calls[0].data.contactProperties;
-      assert.include(requestedProps, 'tel');
-    });
   });

   suite('recipient handling >', function() {
@@ -5232,6 +5099,18 @@ suite('thread_ui.js >', function() {
     });
   });

+  suite('initSentAudio', function() {
+    test('calling function does not throw uncaught exception ', function() {
+      assert.doesNotThrow(ThreadUI.initSentAudio);
+    });
+
+    test('correctly creates the audio element', function() {
+      ThreadUI.initSentAudio();
+      assert.isTrue(ThreadUI.sentAudio.src.endsWith('/sounds/sent.opus'));
+      assert.equal(ThreadUI.sentAudio.mozAudioChannelType, 'notification');
+    });
+  });
+
   suite('saveDraft() > ', function() {
     var addSpy, updateSpy, bannerSpy, arg;

@@ -5868,8 +5747,8 @@ suite('thread_ui.js >', function() {
       test('should show option for adding subject', function() {
         assert.equal(options[0].l10nId, 'add-subject');
       });
-      test('should show option for deleting messages', function() {
-        assert.equal(options[1].l10nId, 'deleteMessages-label');
+      test('should show option for selecting messages', function() {
+        assert.equal(options[1].l10nId, 'selectMessages-label');
       });
     });
   });
@@ -6234,6 +6113,7 @@ suite('thread_ui.js >', function() {
     });
   });

+
   function beforeEnterGeneralTests(getTransitionArgs) {
     suite('beforeEnter()', function() {
       var transitionArgs;
@@ -6272,25 +6152,8 @@ suite('thread_ui.js >', function() {
         sinon.assert.calledWith(MockL10n.translate, simPickerElt);
         sinon.assert.calledWith(MockLazyLoader.load, [simPickerElt]);
       });
-
-      test('loads the audio played when a message is sent', function() {
-        var sentAudio = ThreadUI.sentAudio;
-
-        assert.isTrue(
-          sentAudio.src.endsWith('/sounds/sent.opus'),
-          'sentAudio properly loaded'
-        );
-        assert.equal(
-          sentAudio.mozAudioChannelType, 'notification',
-          'sentAudio uses the right audio channel'
-        );
-
-        assert.equal(
-          sentAudio.preload, 'none',
-          'the file is not preloaded'
-        );
-      });
     });
+
   }

   suite('switch to composer >', function() {
@@ -6326,7 +6189,7 @@ suite('thread_ui.js >', function() {
         });

         test(' all fields cleaned', function() {
-          sinon.assert.called(ThreadUI.cleanFields);
+          sinon.assert.calledWith(ThreadUI.cleanFields, true);
         });

         test(' layout updated', function() {
@@ -6406,7 +6269,6 @@ suite('thread_ui.js >', function() {

       this.sinon.stub(Navigation, 'isCurrentPanel').returns(false);
       this.sinon.stub(ThreadListUI, 'mark');
-      this.sinon.stub(MessageManager, 'markThreadRead');
       this.sinon.stub(ThreadUI, 'renderMessages');
       this.sinon.stub(Threads, 'get').returns({});
       this.sinon.stub(Compose, 'fromDraft');
@@ -6448,12 +6310,10 @@ suite('thread_ui.js >', function() {
           .returns(true);
       });

-      test('we mark messages as read', function() {
+      test('calls ThreadListUI.mark', function() {
         ThreadUI.afterEnter(transitionArgs);

         sinon.assert.calledWith(ThreadListUI.mark, threadId, 'read');
-        this.sinon.clock.tick();
-        sinon.assert.calledWith(MessageManager.markThreadRead, threadId);
       });

       test('renders messages', function() {
diff --git a/apps/sms/test/unit/utils_test.js b/apps/sms/test/unit/utils_test.js
index f3b1562..c989cfd 100644
--- a/apps/sms/test/unit/utils_test.js
+++ b/apps/sms/test/unit/utils_test.js
@@ -739,6 +739,8 @@ suite('Utils', function() {
       'default_quality_resized.jpg': null
     };

+    this.timeout(5000);
+
     suiteSetup(function(done) {
       // load test blobs for image resize testing
       var assetsNeeded = 0;
@@ -1524,3 +1526,4 @@ test('extend()', function() {
     'does not copy over properties from prototype'
   );
 });
+
diff --git a/apps/system/fxa/elements/fxa-coppa.html b/apps/system/fxa/elements/fxa-coppa.html
index 9855a32..14a8d44 100644
--- a/apps/system/fxa/elements/fxa-coppa.html
+++ b/apps/system/fxa/elements/fxa-coppa.html
@@ -4,7 +4,7 @@
       <h3 data-l10n-id="fxa-age-verification">
         Age verification
       </h3>
-      <ul class="fxa-verification-wrapper">
+      <ul>
         <li>
           <span class="button icon icon-dialog">
             <select id="fxa-age-select">
diff --git a/apps/system/fxa/elements/fxa-email.html b/apps/system/fxa/elements/fxa-email.html
index a4e903a..70ec9dd 100644
--- a/apps/system/fxa/elements/fxa-email.html
+++ b/apps/system/fxa/elements/fxa-email.html
@@ -2,12 +2,11 @@
   <template>
     <section class="vertical">
       <div class="fxa-logo"></div>
-      <p class="fxa-intro" data-l10n-id="fxa-use-email-to-sign-in">
+      <p class="keyboard-hide" data-l10n-id="fxa-use-email-to-sign-in">
         Use your email address to create an account or sign in.
       </p>
       <input id="fxa-email-input" data-l10n-id="fxa-enter-email-input" type="email" placeholder="Enter your email" required="" x-inputmode="verbatim">
-
-      <p id="fxa-notice" class="fine-print" data-l10n-id="fxa-notice">
+      <p id="fxa-notice">
         By proceeding, I agree to the <a class="disabled">Terms of Service</a> and <a class="disabled">Privacy Notice</a> of Firefox cloud services.
       </p>
     </section>
diff --git a/apps/system/fxa/elements/fxa-enter-password.html b/apps/system/fxa/elements/fxa-enter-password.html
index 9fa2502..6aa693d 100644
--- a/apps/system/fxa/elements/fxa-enter-password.html
+++ b/apps/system/fxa/elements/fxa-enter-password.html
@@ -2,15 +2,15 @@
   <template>
     <section class="vertical">
       <h3 data-l10n-id="fxa-enter-password-title">Enter Your Password</h3>
-      <p id="fxa-hello-known-user">Hello, <a id="fxa-known-user-email">holaENTER@email.com</a></p>
+      <p id="fxa-hello-user">Hello, <a id="fxa-user-email">holaENTER@email.com</a></p>
       <input id="fxa-pw-input" type="password" placeholder="Password" required pattern=".{8,}" data-l10n-id="fxa-password" x-inputmode="verbatim">
-      <p class="fine-print"><a id="fxa-forgot-password" data-l10n-id="fxa-forgot-your-password">Forgot your password?</a></p>
-      <div id="show-pw-wrapper">
+      <p class="forgot-password"><a id="fxa-forgot-password" data-l10n-id="fxa-forgot-your-password">Forgot your password?</a></p>
+      <div class="horizontal">
+        <p data-l10n-id="fxa-show-password">Show password</p>
         <label class="pack-checkbox" for="fxa-show-pw">
           <input id="fxa-show-pw" type="checkbox">
           <span></span>
         </label>
-        <p data-l10n-id="fxa-show-password">Show password</p>
       </div>
       <script src='js/screens/fxam_enter_password.js'></script>
     </section>
diff --git a/apps/system/fxa/elements/fxa-refresh-auth.html b/apps/system/fxa/elements/fxa-refresh-auth.html
index 30f43e4..dd2747a 100644
--- a/apps/system/fxa/elements/fxa-refresh-auth.html
+++ b/apps/system/fxa/elements/fxa-refresh-auth.html
@@ -3,13 +3,13 @@
     <section class="vertical">
       <p id="fxa-password-refresh" data-l10n-id="fxa-password-refresh">Please enter your Firefox Account password to continue.</p>
       <input id="fxa-pw-input-refresh" type="password" placeholder="Password" required="" pattern=".{8,}" data-l10n-id="fxa-password">
-      <p class="fine-print"><a id="fxa-forgot-password-refresh" data-l10n-id="fxa-forgot-your-password">Forgot your password?</a></p>
-      <div id="show-pw-wrapper">
+      <p class="forgot-password"><a id="fxa-forgot-password-refresh" data-l10n-id="fxa-forgot-your-password">Forgot your password?</a></p>
+      <div class="horizontal">
+        <p data-l10n-id="fxa-show-password">Show password</p>
         <label class="pack-checkbox" for="fxa-show-pw-refresh">
           <input id="fxa-show-pw-refresh" type="checkbox">
           <span></span>
         </label>
-        <p data-l10n-id="fxa-show-password">Show password</p>
       </div>
       <script src='js/screens/fxam_refresh_auth.js'></script>
     </section>
diff --git a/apps/system/fxa/elements/fxa-set-password.html b/apps/system/fxa/elements/fxa-set-password.html
index cd4dd4f..02f1314 100644
--- a/apps/system/fxa/elements/fxa-set-password.html
+++ b/apps/system/fxa/elements/fxa-set-password.html
@@ -4,15 +4,15 @@
       <h3 data-l10n-id="fxa-create-password-title">Create A Password</h3>
       <p id="fxa-hello-user">Hello, <a id="fxa-user-set-email">holaSET@email.com</a></p>
       <input id="fxa-pw-set-input" type="password" placeholder="Password" required="" pattern=".{8,}" data-l10n-id="fxa-password" x-inputmode="verbatim">
-      <p class="fine-print" data-l10n-id="fxa-password-length-requirement">
+      <p data-l10n-id="fxa-password-length-requirement">
         Your password must be at least 8 characters long.
       </p>
-      <div id="show-pw-wrapper">
+      <div class="horizontal">
+        <p data-l10n-id="fxa-show-password">Show password</p>
         <label class="pack-checkbox" for="fxa-show-pw-set">
           <input id="fxa-show-pw-set" type="checkbox">
           <span></span>
         </label>
-        <p data-l10n-id="fxa-show-password">Show password</p>
       </div>
       <script src='js/screens/fxam_set_password.js'></script>
     </section>
diff --git a/apps/system/fxa/js/fxam_ui.js b/apps/system/fxa/js/fxam_ui.js
index 6643b6c..667eeac 100644
--- a/apps/system/fxa/js/fxam_ui.js
+++ b/apps/system/fxa/js/fxam_ui.js
@@ -43,9 +43,6 @@ var FxaModuleUI = {
   increaseMaxStepsBy: function(inc) {
     this.maxSteps = this.maxSteps + inc;
   },
-  decreaseMaxStepsBy: function(dec) {
-    this.maxSteps = this.maxSteps - dec;
-  },
   loadScreen: function(params) {
     var currentScreen = document.querySelector('.current');
     var nextScreen = params.panel;
diff --git a/apps/system/fxa/js/screens/fxam_coppa.js b/apps/system/fxa/js/screens/fxam_coppa.js
index 465d895..ff0e3cc 100644
--- a/apps/system/fxa/js/screens/fxam_coppa.js
+++ b/apps/system/fxa/js/screens/fxam_coppa.js
@@ -9,7 +9,7 @@
  * error.
  */

-/* global FxaModuleUI, FxaModule, FxaModuleStates, FxaModuleNavigation */
+/* global FxaModuleUI, FxaModule, FxaModuleStates */
 /* exported FxaModuleCoppa */

 var FxaModuleCoppa = (function() {
@@ -32,16 +32,15 @@ var FxaModuleCoppa = (function() {

     _enableNext(this.fxaAgeSelect.value);

-    // If COPPA is part of the sign up flow, then we need to add a step to the
-    // progress bar. Don't increment if the user is moving backwards, though.
-    if (!FxaModuleNavigation.backAnim) {
-      FxaModuleUI.increaseMaxStepsBy(1);
-    }
-
     if (this.initialized) {
       return;
     }

+    // By default, the sign in flow has 3 steps. If the login flow turns into a
+    // a sign up one, we need to increment the number of steps in one because
+    // of the introduction of the COPPA screen.
+    FxaModuleUI.increaseMaxStepsBy(1);
+
     this.fxaAgeSelect.addEventListener('change', (function onSelectChange(e) {
       _enableNext(this.fxaAgeSelect.value);
     }).bind(this));
@@ -59,9 +58,5 @@ var FxaModuleCoppa = (function() {
     gotoNextStepCallback(FxaModuleStates.SET_PASSWORD);
   };

-  Module.onBack = function onBack() {
-    FxaModuleUI.decreaseMaxStepsBy(1);
-  };
-
   return Module;
 })();
diff --git a/apps/system/fxa/js/screens/fxam_enter_password.js b/apps/system/fxa/js/screens/fxam_enter_password.js
index b805e2c..7923270 100644
--- a/apps/system/fxa/js/screens/fxam_enter_password.js
+++ b/apps/system/fxa/js/screens/fxam_enter_password.js
@@ -76,7 +76,8 @@ var FxaModuleEnterPassword = (function() {
       _ = navigator.mozL10n.get;
       // Cache DOM elements
       this.importElements(
-        'fxa-hello-known-user',
+        'fxa-hello-user',
+        'fxa-user-email',
         'fxa-pw-input',
         'fxa-show-pw',
         'fxa-forgot-password'
@@ -121,14 +122,13 @@ var FxaModuleEnterPassword = (function() {
     }

     this.isFTU = !!(options && options.isftu);
+    this.fxaUserEmail.textContent = options.email;
     this.email = options.email;

-    var helloUserText = _('fxa-hello-user');
-    helloUserText = helloUserText.replace(
-      '{{email}}',
-      '<a id="fxa-known-user-email">' + this.email + '</a>'
-    );
-    this.fxaHelloKnownUser.innerHTML = helloUserText;
+    navigator.mozL10n.localize(this.fxaHelloUser, 'fxa-hello-user', {
+      email: ''
+    });
+    this.fxaUserEmail.textContent = this.email;

     _cleanForm(
       this.fxaPwInput,
diff --git a/apps/system/fxa/js/screens/fxam_set_password.js b/apps/system/fxa/js/screens/fxam_set_password.js
index 9159526..6c52fd0 100644
--- a/apps/system/fxa/js/screens/fxam_set_password.js
+++ b/apps/system/fxa/js/screens/fxam_set_password.js
@@ -63,6 +63,7 @@ var FxaModuleSetPassword = (function() {
       _ = navigator.mozL10n.get;
       // Cache DOM elements
       this.importElements(
+        'fxa-user-set-email',
         'fxa-pw-set-input',
         'fxa-show-pw-set',
         'fxa-hello-user'
@@ -86,12 +87,10 @@ var FxaModuleSetPassword = (function() {

     this.email = options.email;

-    var helloUserText = _('fxa-hello-user');
-    helloUserText = helloUserText.replace(
-      '{{email}}',
-      '<a id="fxa-user-set-email">' + this.email + '</a>'
-    );
-    this.fxaHelloUser.innerHTML = helloUserText;
+    navigator.mozL10n.localize(this.fxaHelloUser, 'fxa-hello-user', {
+      email: ''
+    });
+    this.fxaUserSetEmail.textContent = this.email;

     _cleanForm(
       this.fxaPwSetInput,
diff --git a/apps/system/fxa/js/screens/fxam_signup_success.js b/apps/system/fxa/js/screens/fxam_signup_success.js
index 3a28bd0..a7f5b73 100644
--- a/apps/system/fxa/js/screens/fxam_signup_success.js
+++ b/apps/system/fxa/js/screens/fxam_signup_success.js
@@ -15,15 +15,14 @@ var FxaModuleSignupSuccess = (function() {
   Module.init = function init(options) {
     options = options || {};
     this.importElements(
+      'fxa-summary-email',
       'fxa-will-send-email'
     );

-    var willSendText = navigator.mozL10n.get('fxa-will-send-email');
-    willSendText = willSendText.replace(
-      '{{email}}',
-      '<strong>' + options.email + '</strong>'
-    );
-    this.fxaWillSendEmail.innerHTML = willSendText;
+    navigator.mozL10n.localize(this.fxaWillSendEmail, 'fxa-will-send-email', {
+      email: ''
+    });
+    this.fxaSummaryEmail.textContent = options.email;
   };

   Module.onNext = function onNext(done) {
diff --git a/apps/system/fxa/style/fxa.css b/apps/system/fxa/style/fxa.css
index 19cd3bb..c919427 100644
--- a/apps/system/fxa/style/fxa.css
+++ b/apps/system/fxa/style/fxa.css
@@ -32,12 +32,10 @@ body {

 h3 {
   text-align: left;
-  margin: 0 0 1rem;
 }

-label {
-  width:100%;
-  display:block;
+input {
+  -moz-user-select: text;
 }

 ul {
@@ -49,18 +47,18 @@ ul {
  * Navigation bar based on a flex model
  * * * * * * * * * * * * * * * * * * * * * * * */

+.horizontal {
+  display: flex;
+  justify-content: space-between;
+  align-items: center;
+}
+
 .navigation {
-  position: absolute;
-  background: #f4f4f4;
+  position: relative;
+  background: rgba(0,0,0,0.05);
   border-top: 0.1rem solid #a6a6a6;
-  padding: .75rem 1.5rem;
-  box-sizing: border-box;
-  margin: 0;
-  left: 0;
-  right:0;
-  bottom: 0;
-  overflow: hidden;
-  display: block;
+  padding: .5rem;
+  -moz-box-sizing: border-box;
 }

 /* Overwrite this property from Building Blocks */
@@ -69,26 +67,22 @@ ul {
 }

 .navigation button.left {
-  margin-right: 1rem;
+  margin-right: .25rem;
 }

-.navigation button.left, .navigation button.right {
-  width: calc((100% / 2) - 0.5rem);
-  float: left;
-  position: relative;
+.navigation button.right {
+  margin-left: .25rem;
 }

 /* When there is only one option, we remove the margin */
+.navigation-single-button button{
+  margin: 0;
+}

 .navigation-single-button button.left {
   display: none;
 }

-.navigation.navigation-single-button button.right {
-  margin: 0;
-  width: 100%
-}
-
 .navigation-back-only button {
   margin: 0;
 }
@@ -130,30 +124,22 @@ ul {
 .ff_account,
 .screen {
   font-family: sans-serif;
-  font-size: 1.7rem;
-  line-height:2.3rem;
+  font-size: 1.6rem;
   width: 100%;
   height: 100%;
   position: absolute;
   overflow: scroll;
   display: none;
-  padding: 1.5rem;
-  box-sizing: border-box;
+  padding: 1rem;
+  -moz-box-sizing: border-box;
   text-align: center;
 }

-.screen p.fxa-intro {
-  text-align: left;
-  line-height: 2.3rem;
-  font-size: 1.7rem;
-  margin: 0 1.5rem 1rem;
-}
-
 .screen p {
   text-align: left;
-  line-height: 1.9rem;
-  font-size: 1.5rem;
-  margin: 0 0 1rem;
+  line-height: 1.6rem;
+  font-size: 1.6rem;
+  margin: 1rem 0;
 }

 .current {
@@ -165,57 +151,26 @@ ul {
  */

 #fxa-hello-user {
-  white-space: nowrap;
   width: 100%;
-  overflow: hidden;
-  text-overflow: ellipsis;
 }

 #fxa-user-email,
 #fxa-user-set-email {
+  display: inline-block;
+  text-overflow: ellipsis;
+  max-width: 100%;
   white-space: nowrap;
   overflow: hidden;
-  text-decoration: none;
-}
-
-p.fine-print {
-    font-size: 1.2rem;
-    line-height: 1.6rem;
-    margin: 0 1.5rem;
 }

-/*
-* Verification Screen Styles
-*/
-
-ul.fxa-verification-wrapper {
-  margin: 0;
-  padding: 0;
-}

-ul.fxa-verification-wrapper li {
-  list-style: none;
-  margin: 0;
-  padding: 0;
-}

 /*
  * Password screen styles
  */

-#show-pw-wrapper {
-  width: 100%;
-  display: block;
-}
-
-#show-pw-wrapper p {
-  float: left;
-  display: block;
-  margin: 1.5rem 0;
-}
-
-#show-pw-wrapper > label {
-  float: left;
+.fxa-password .forgot-password {
+  font-size: 1rem;
 }

 /* Animate next screen */
@@ -265,11 +220,11 @@ ul.fxa-verification-wrapper li {

 .fxa-logo {
   background-image: url('fxa_logo.png');
-  background-size: 14rem auto;
   background-repeat: no-repeat;
-  margin: 0 auto;
-  width: 14rem;
-  height: 15rem;
+  background-size: 16.4rem;
+  margin: 1.4rem auto 0;
+  width: 17rem;
+  height: 17.5rem;
 }

 p.fxa-envelope {
@@ -279,10 +234,8 @@ p.fxa-envelope {
   padding-left: 8rem;
   padding-top: 1rem;
   line-height: 2rem;
-  min-height: 6.4rem;
-  max-width:100%;
-  overflow: hidden; /* short email addresses will only take up one line*/
-  text-overflow: ellipsis;
+  min-height: 6.4rem; /* short email addresses will only take up one line*/
+                      /* force the entire envelope image to be displayed */
 }

 #fxa-error-overlay {
@@ -322,6 +275,7 @@ form[role=dialog].show {
   display: block;
 }

+
 /*
  * Classes to ensure functionality
  */
diff --git a/apps/system/index.html b/apps/system/index.html
index 921a103..6fb4a15 100644
--- a/apps/system/index.html
+++ b/apps/system/index.html
@@ -45,8 +45,8 @@
     -->

     <!-- SIMSlot -->
-    <script type="text/javascript" defer src="shared/js/simslot.js"></script>
-    <script type="text/javascript" defer src="shared/js/simslot_manager.js"></script>
+    <script type="text/javascript" defer src="js/simslot.js"></script>
+    <script type="text/javascript" defer src="js/simslot_manager.js"></script>
     <script type="text/javascript" defer src="js/sim_settings_helper.js"></script>


@@ -176,9 +176,8 @@
     <!-- LockScreen -->
     <link rel="stylesheet" type="text/css" href="style/lockscreen/lockscreen.css">
     <script defer src="/shared/js/lockscreen_slide.js"></script>
-    <script defer src="/shared/js/lockscreen_connection_info_manager.js"></script>
+    <script defer src="js/lockscreen_connection_info_manager.js"></script>
     <script defer src="js/lockscreen.js"></script>
-    <script defer src="js/lockscreen_notifications.js"></script>

     <!-- Airplane Mode -->
     <script defer src="js/airplane_mode.js"></script>
@@ -313,7 +312,6 @@
     <!-- Windows -->
     <!-- Any module that wants to intercept the Home button and prevent the -->
     <!-- homescreen from being displayed must come before this script. -->
-    <link rel="stylesheet" type="text/css" href="style/window_layout.css">
     <link rel="stylesheet" type="text/css" href="style/window.css">
     <script defer src="js/base_ui.js"></script>
     <script defer src="js/browser_context_menu.js"></script>
@@ -402,7 +400,6 @@
     <script defer src="js/fxa_manager.js"></script>

     <!-- Find My Device -->
-    <script defer src="shared/js/findmydevice_iac_api.js"></script>
     <script defer src="js/findmydevice_launcher.js"></script>

     <!-- Mobile ID -->
@@ -429,7 +426,7 @@
             <input id="rocketbar-input" type="text" x-inputmode="verbatim" dir="auto"
               placeholder="Search or enter address" data-l10n-id="search-or-enter-address" value="">
             </input>
-            <button type="button" id="rocketbar-clear" data-l10n-id="clear" aria-label="Clear"></button>
+            <button type="button" id="rocketbar-clear"></button>
             <button type="button" id="rocketbar-cancel"
                     data-l10n-id="close">Close</button>
           </form>
@@ -492,15 +489,7 @@

       <!-- Utility Tray -->
       <div id="utility-tray" data-z-index-level="utility-tray">
-        <!-- Placeholder for notifications -->
-        <div id="notifications-placeholder"></div>
-
-        <div id="utility-tray-grippy" role="button" data-l10n-id="utilityTrayGrippy">
-        </div>
-      </div>
-
-      <!-- Notifications -->
-      <div id="utility-tray-notifications" data-z-index-level="utility-tray-notifications">
+        <!-- notifications -->
         <div id="notification-bar">
           <span id="notification-some" data-l10n-id="notifications">Notifications</span>

@@ -591,6 +580,9 @@
           <div class="separator"></div>
           <a href="#" id="quick-settings-full-app" data-enabled="false" role="button" data-l10n-id="settingsButton"></a>
         </div>
+
+        <div id="utility-tray-grippy" role="button" data-l10n-id="utilityTrayGrippy">
+        </div>
       </div>

       <div id="windows" data-z-index-level="app">
@@ -722,79 +714,72 @@
         </div> <!-- end of #modal-dialog -->
       </div> <!-- end of #overlay-dialog -->

-      <div id="value-selector-template" hidden>
-      <!--
-        <div data-z-index-level="value-selector" class="value-selector" id="${id}">
-          <form class="value-selector-select-option-popup" role="dialog" data-type="value-selector" hidden>
-            <section class="value-selector-container">
-              <h1 class="value-selector-options-title" data-l10n-id="choose-option">Choose your option</h1>
-              <ol class="value-selector-options-container" role="listbox"></ol>
-            </section>
-            <menu class="value-selector-select-options-buttons">
-              <button class="value-option-confirm affirmative full" data-type="ok" data-l10n-id="ok">OK</button>
-            </menu>
-          </form>
-          <div class="value-selector-time-picker-popup" role="dialog" data-type="time-selector" hidden>
-            <h1 data-l10n-id="select-time">Select time</h1>
-            <div class="value-selector-time-picker">
-              <div class="value-selector-time-picker-container picker-container">
-                <div class="picker-bar-background"></div>
-                <div class="value-picker-hours-wrapper">
-                  <div class="value-picker-hours animation-on"></div>
-                </div>
-                <div class="value-picker-minutes-wrapper">
-                  <div class="value-picker-minutes animation-on"></div>
-                </div>
-                <div class="value-picker-hour24-wrapper">
-                  <div class="value-picker-hour24-state animation-on"></div>
-                </div>
-                <div class="value-indicator">
-                  <div aria-hidden="true" class="value-indicator-colon hours-minutes-separator">:</div>
-                </div>
+      <!-- value selector -->
+      <div id="value-selector" hidden data-z-index-level="value-selector">
+        <!-- popup of options for select element -->
+        <form id="select-option-popup" role="dialog" data-type="value-selector">
+          <section id="value-selector-container" class="value-selector-container">
+            <h1 data-l10n-id="choose-option">Choose your option</h1>
+            <ol role="listbox">
+            </ol>
+          </section>
+          <menu id="select-options-buttons">
+            <button class="value-option-confirm affirmative full" data-type="ok" data-l10n-id="ok">OK</button>
+          </menu>
+        </form>
+
+        <!-- Time Picker -->
+        <div id="time-picker-popup" role="dialog" data-type="time-selector" hidden>
+          <h1 data-l10n-id="select-time">Select time</h1>
+          <div id="time-picker">
+            <div class="picker-container">
+              <div class="picker-bar-background"></div>
+              <div class="value-picker-hours-wrapper">
+                <div class="value-picker-hours animation-on"></div>
+              </div>
+              <div class="value-picker-minutes-wrapper">
+                <div class="value-picker-minutes animation-on"></div>
+              </div>
+              <div class="value-picker-hour24-wrapper">
+                <div class="value-picker-hour24-state animation-on"></div>
+              </div>
+              <div class="value-indicator">
+                <div class="value-indicator-colon" id="hours-minutes-separator">:</div>
               </div>
             </div>
-            <menu class="value-selector-time-picker-buttons" data-items="2">
-              <button class="value-selector-cancel" data-type="cancel" data-l10n-id="cancel">Cancel</button>
-              <button class="value-selector-confirm affirmative" data-type="ok" data-l10n-id="ok">OK</button>
-            </menu>
           </div>
-          <div role="dialog" data-type="date-selector" class="value-selector-spin-date-picker-popup" hidden>
-            <h1 data-l10n-id="select-day">Select day</h1>
-            <div class="value-selector-spin-date-picker">
-              <div class="picker-container">
-                <div class="picker-bar-background"></div>
-                <div class="value-picker-date-wrapper">
-                  <div class="value-picker-date animation-on"></div>
-                  <div class="value-picker-date animation-on"></div>
-                  <div class="value-picker-date animation-on"></div>
-                  <div class="value-picker-date animation-on"></div>
-                </div>
-                <div class="value-picker-month-wrapper">
-                  <div class="value-picker-month animation-on"></div>
-                </div>
-                <div class="value-picker-year-wrapper">
-                  <div class="value-picker-year animation-on"></div>
-                </div>
-                <div class="value-indicator"></div>
+          <menu id="time-picker-buttons" data-items="2">
+            <button class="value-selector-cancel" data-type="cancel" data-l10n-id="cancel">Cancel</button>
+            <button class="value-selector-confirm affirmative" data-type="ok" data-l10n-id="ok">OK</button>
+          </menu>
+        </div>
+
+        <!-- Spin Date Picker -->
+        <div role="dialog" data-type="date-selector" id="spin-date-picker-popup" hidden>
+          <h1 data-l10n-id="select-day">Select day</h1>
+          <div id="spin-date-picker">
+            <div class="picker-container">
+              <div class="picker-bar-background"></div>
+              <div class="value-picker-date-wrapper">
+                <div class="value-picker-date animation-on"></div>
+                <div class="value-picker-date animation-on"></div>
+                <div class="value-picker-date animation-on"></div>
+                <div class="value-picker-date animation-on"></div>
+              </div>
+              <div class="value-picker-month-wrapper">
+                <div class="value-picker-month animation-on"></div>
               </div>
+              <div class="value-picker-year-wrapper">
+                <div class="value-picker-year animation-on"></div>
+              </div>
+              <div class="value-indicator"></div>
             </div>
-            <menu class="value-selector-spin-date-picker-buttons" data-items="2">
-              <button class="value-selector-cancel" data-type="cancel" data-l10n-id="cancel">Cancel</button>
-              <button class="value-option-confirm affirmative" data-type="ok" data-l10n-id="ok">OK</button>
-            </menu>
           </div>
+          <menu id="spin-date-picker-buttons" data-items="2">
+            <button class="value-selector-cancel" data-type="cancel" data-l10n-id="cancel">Cancel</button>
+            <button class="value-option-confirm affirmative" data-type="ok" data-l10n-id="ok">OK</button>
+          </menu>
         </div>
-      -->
-      </div>
-
-      <div id="value-selector-option-template" hidden>
-      <!--
-      <li role="option" data-option-index="${index}" aria-selected="${checked}">
-        <label role="presentation" for="${for}">
-          <span>${text}</span>
-        </label>
-      </li>
-      -->
       </div>

       <div id="permission-screen" data-z-index-level="permission-screen">
@@ -1005,8 +990,6 @@
             </div>
             <div id="notifications-lockscreen-container">
             </div>
-            <div id="lockscreen-notification-arrow">
-            </div>
             <div id="lockscreen-message" hidden></div>
             <div id="lockscreen-area"></div>
             <div id="lockscreen-media-container" hidden>
@@ -1104,10 +1087,10 @@
         <form role="dialog" data-type="value-selector" class="ime-menu value-selector-container" data-z-index-level="action-menu">
           <section>
             <h1>${title}</h1>
-            <ol class="value-selector-options-container ime-menu-list" aria-multiselectable="false" role="listbox">
+            <ol class="ime-menu-list" aria-multiselectable="false" role="listbox">
             </ol>
           </section>
-          <menu class="value-selector-select-options-buttons">
+          <menu id="select-options-buttons">
             <button class="value-selector-cancel full" data-type="cancel" data-action="cancel" data-l10n-id="cancel">${cancelLabel}</button>
           </menu>
         </div>
diff --git a/apps/system/js/activity_window.js b/apps/system/js/activity_window.js
index b9e98d3..14bc7db 100644
--- a/apps/system/js/activity_window.js
+++ b/apps/system/js/activity_window.js
@@ -167,14 +167,12 @@
             '" id="activity-window-' + _id++ + '">' +
             '<div class="screenshot-overlay"></div>' +
             '<div class="fade-overlay"></div>' +
-            '<div class="statusbar-overlay"></div>' +
             '</div>';
   };

   ActivityWindow.SUB_COMPONENTS = {
     'transitionController': window.AppTransitionController,
     'modalDialog': window.AppModalDialog,
-    'valueSelector': window.ValueSelector,
     'authDialog': window.AppAuthenticationDialog,
     'contextmenu': window.BrowserContextMenu,
     'childWindowFactory': window.ChildWindowFactory
diff --git a/apps/system/js/app_usage_metrics.js b/apps/system/js/app_usage_metrics.js
index 0370d50..dffc44c 100644
--- a/apps/system/js/app_usage_metrics.js
+++ b/apps/system/js/app_usage_metrics.js
@@ -153,6 +153,9 @@

     SettingsListener.observe(AUM.TELEMETRY_ENABLED_KEY,
                              false, this.metricsEnabledListener);
+
+    // Return this so we can write |var aum = new AppUsageMetrics().start();|
+    return this;
   };

   // This method shuts everything down and is only exposed for unit testing.
diff --git a/apps/system/js/app_window.js b/apps/system/js/app_window.js
index afff4de..92f2a65 100644
--- a/apps/system/js/app_window.js
+++ b/apps/system/js/app_window.js
@@ -1,4 +1,4 @@
-/* global SettingsListener, OrientationManager */
+/* global SettingsListener, OrientationManager, StatusBar */
 'use strict';

 (function(exports) {
@@ -300,10 +300,6 @@
    * @return {Boolean} The instance is active or not.
    */
   AppWindow.prototype.isActive = function aw_isActive() {
-    if (!this.element) {
-      return false;
-    }
-
     if (this.element.classList.contains('will-become-active')) {
       return true;
     }
@@ -392,9 +388,7 @@
       return;
     }

-    if (!this.isHomescreen) {
-      this._killed = true;
-    }
+    this._killed = true;

     if (DEBUG) {
       AppWindow[this.instanceID] = null;
@@ -496,8 +490,8 @@
     return '<div class=" ' + this.CLASS_LIST +
             ' " id="' + this.instanceID +
             '" transition-state="closed">' +
-              '<div class="screenshot-overlay"></div>' +
-              '<div class="statusbar-overlay"></div>' +
+              '<div class="screenshot-overlay">' +
+              '</div>' +
               '<div class="identification-overlay">' +
                 '<div>' +
                   '<div class="icon"></div>' +
@@ -559,7 +553,6 @@
     // End intentional

     this.screenshotOverlay = this.element.querySelector('.screenshot-overlay');
-    this.statusbarOverlay = this.element.querySelector('.statusbar-overlay');
     this.fadeOverlay = this.element.querySelector('.fade-overlay');

     var overlay = '.identification-overlay';
@@ -649,14 +642,13 @@
     ['mozbrowserclose', 'mozbrowsererror', 'mozbrowservisibilitychange',
      'mozbrowserloadend', 'mozbrowseractivitydone', 'mozbrowserloadstart',
      'mozbrowsertitlechange', 'mozbrowserlocationchange',
-     'mozbrowsermetachange', 'mozbrowsericonchange', 'mozbrowserasyncscroll',
+     'mozbrowsericonchange', 'mozbrowserasyncscroll',
      '_localized', '_swipein', '_swipeout', '_kill_suspended',
      '_orientationchange', '_focus'];

   AppWindow.SUB_COMPONENTS = {
     'transitionController': window.AppTransitionController,
     'modalDialog': window.AppModalDialog,
-    'valueSelector': window.ValueSelector,
     'authDialog': window.AppAuthenticationDialog,
     'contextmenu': window.BrowserContextMenu,
     'childWindowFactory': window.ChildWindowFactory,
@@ -685,7 +677,7 @@
     'mozbrowsertitlechange',
     'mozbrowserusernameandpasswordrequired',
     'mozbrowseropensearch',
-    'mozbrowsermetachange'
+    'mozbrowsertitlechange'
   ];

   AppWindow.prototype.openAnimation = 'enlarge';
@@ -761,6 +753,9 @@
     // Resize only the overlays not the app
     var width = self.layoutManager.width;
     var height = self.layoutManager.height + this.calibratedHeight();
+    if (this.isFullScreen()) {
+      height += StatusBar.height;
+    }

     this.iframe.style.width = this.width + 'px';
     this.iframe.style.height = this.height + 'px';
@@ -797,11 +792,8 @@
         var calleeBottom = this.getBottomMostWindow();
         caller.calleeWindow = null;
         this.callerWindow = null;
-        // No transition when the callee is caller
-        if (callerBottom !== calleeBottom) {
-          callerBottom.open('in-from-left');
-          calleeBottom.close('out-to-right');
-        }
+        callerBottom.open('in-from-left');
+        calleeBottom.close('out-to-right');
       }
     };

@@ -838,7 +830,7 @@
       this.title = evt.detail;
       this.publish('titlechange');

-      if (this.identificationTitle && !this.manifest) {
+      if (this.identificationTitle) {
         this.identificationTitle.textContent = this.title;
       }
     };
@@ -905,26 +897,6 @@
       this.publish('scroll');
     };

-  AppWindow.prototype._handle_mozbrowsermetachange =
-    function aw__handle_mozbrowsermetachange(evt) {
-      var detail = evt.detail;
-      if (detail.name !== 'theme-color' || !detail.type) {
-        return;
-      }
-
-      // If the theme-color meta is removed, let's reset the color.
-      var color = '';
-
-      // Otherwise, set it to the color that has been asked.
-      if (detail.type !== 'removed') {
-        color = detail.content;
-      }
-      this.themeColor = color;
-      this.statusbarOverlay.style.backgroundColor = color;
-
-      this.publish('themecolorchange');
-    };
-
   AppWindow.prototype._registerEvents = function aw__registerEvents() {
     if (this.element === null) {
       this._dump();
@@ -1006,8 +978,6 @@

   AppWindow.prototype.queueShow = function aw_queueShow() {
     this.element.classList.add('will-become-active');
-    // bug 1033921: notify current app changed
-    this.publish('will-become-active');
   };

   AppWindow.prototype.cancelQueuedShow = function aw_cancelQueuedShow() {
@@ -1016,7 +986,6 @@

   AppWindow.prototype.queueHide = function aw_queueHide() {
     this.element.classList.add('will-become-inactive');
-    this.publish('will-become-inactive');
   };

   /**
@@ -1420,7 +1389,7 @@
    * fade out to window to black.
    */
   AppWindow.prototype.fadeOut = function aw__fadeout() {
-    if (!this.isActive() && this.element) {
+    if (!this.isActive()) {
       this.element.classList.add('fadeout');
       this.debug(' fade out >>>> ');
     }
diff --git a/apps/system/js/app_window_factory.js b/apps/system/js/app_window_factory.js
index 6d80f67..148e7fe 100644
--- a/apps/system/js/app_window_factory.js
+++ b/apps/system/js/app_window_factory.js
@@ -24,7 +24,6 @@
    * @class AppWindowFactory
    */
   function AppWindowFactory() {
-    this.preHandleEvent = this.preHandleEvent.bind(this);
   }

   AppWindowFactory.prototype = {
@@ -46,13 +45,24 @@
       }
       this._started = true;

-      window.addEventListener('webapps-launch', this.preHandleEvent);
-      window.addEventListener('webapps-close', this.preHandleEvent);
-      window.addEventListener('open-app', this.preHandleEvent);
-      window.addEventListener('applicationready', (function appReady(e) {
-        window.removeEventListener('applicationready', appReady);
-        this._handlePendingEvents();
-      }).bind(this));
+      /**
+       * Wait for applicationready event to do the following work.
+       *
+       * @listens webapps-launch
+       */
+      if (applications.ready) {
+        window.addEventListener('webapps-launch', this);
+        window.addEventListener('webapps-close', this);
+        window.addEventListener('open-app', this);
+      } else {
+        var self = this;
+        window.addEventListener('applicationready', function appReady(e) {
+          window.removeEventListener('applicationready', appReady);
+          window.addEventListener('webapps-launch', self);
+          window.addEventListener('webapps-close', self);
+          window.addEventListener('open-app', self);
+        });
+      }
     },

     /**
@@ -65,33 +75,9 @@
       }
       this._started = false;

-      window.removeEventListener('webapps-launch', this.preHandleEvent);
-      window.removeEventListener('webapps-close', this.preHandleEvent);
-      window.removeEventListener('open-app', this.preHandleEvent);
-    },
-
-    /**
-     * Queue events until AppWindowFactory is ready to handle them.
-     */
-    _queueEvents: [],
-
-    _queuePendingEvent: function(evt) {
-      this._queueEvents.push(evt);
-    },
-
-    _handlePendingEvents: function() {
-      this._queueEvents.forEach((function(evt) {
-        this.handleEvent(evt);
-      }).bind(this));
-      this._queueEvents = [];
-    },
-
-    preHandleEvent: function(evt) {
-      if (applications.ready) {
-        this.handleEvent(evt);
-      } else {
-        this._queuePendingEvent(evt);
-      }
+      window.removeEventListener('webapps-launch', this);
+      window.removeEventListener('webapps-close', this);
+      window.removeEventListener('open-app', this);
     },

     handleEvent: function awf_handleEvent(evt) {
@@ -176,7 +162,7 @@
       if (config.manifest.role === 'search') {
         return;
       }
-      var app = AppWindowManager.getApp(config.origin, config.manifestURL);
+      var app = AppWindowManager.getApp(config.origin);
       if (app) {
         app.reviveBrowser();
       } else if (config.origin !== homescreenLauncher.origin) {
diff --git a/apps/system/js/app_window_manager.js b/apps/system/js/app_window_manager.js
index ec40be0..d64c6d9 100644
--- a/apps/system/js/app_window_manager.js
+++ b/apps/system/js/app_window_manager.js
@@ -42,13 +42,11 @@
     /**
      * Match app origin and get the first matching one.
      * @param  {String} origin The origin to be matched.
-     * @param  {String} [manifestURL] The manifestURL to be matched.
      * @return {AppWindow}        The app window object matched.
      */
-    getApp: function awm_getApp(origin, manifestURL) {
+    getApp: function awm_getApp(origin) {
       for (var id in this._apps) {
-        if (this._apps[id].origin === origin &&
-            (!manifestURL || this._apps[id].manifestURL === manifestURL)) {
+        if (this._apps[id].origin == origin) {
           return this._apps[id];
         }
       }
@@ -56,11 +54,11 @@
     },

     /**
-     * Get all apps.
+     * Match app origin and get the first matching one.
      * @return {Object} The running app window references stored
      *                  by its instanceID.
      */
-    getApps: function awm_getApps() {
+    getApps: function awm_getApps(origin) {
       return this._apps;
     },

@@ -87,7 +85,7 @@
         homescreenLauncher.getHomescreen(true);

       if (!appNext) {
-        this.debug('no next app.');
+        console.warn('no next app.');
         return;
       }

@@ -101,7 +99,7 @@

       if (appCurrent && appCurrent.instanceID == appNext.instanceID) {
         // Do nothing.
-        this.debug('the app has been displayed.');
+        console.warn('the app has been displayed.');
         return;
       }

@@ -251,8 +249,6 @@
       window.addEventListener('appopening', this);
       window.addEventListener('localized', this);

-      window.addEventListener('mozChromeEvent', this);
-
       this._settingsObserveHandler = {
         // continuous transition controlling
         'continuous-transition.enabled': {
@@ -273,13 +269,6 @@
               this.broadcastMessage('kill_suspended');
             }
           }.bind(this)
-        },
-
-        'app-themecolor.enabled': {
-          defaultValue: false,
-          callback: function(value) {
-            screenElement.classList.toggle('themecolor-active', value);
-          }
         }
       };

@@ -326,7 +315,6 @@
       window.removeEventListener('permissiondialoghide', this);
       window.removeEventListener('appopening', this);
       window.removeEventListener('localized', this);
-      window.removeEventListener('mozChromeEvent', this);

       for (var name in this._settingsObserveHandler) {
         SettingsListener.unobserve(
@@ -341,7 +329,6 @@
     handleEvent: function awm_handleEvent(evt) {
       this.debug('handling ' + evt.type);
       var activeApp = this._activeApp;
-      var detail = evt.detail;
       switch (evt.type) {
         case 'permissiondialoghide':
           activeApp && activeApp.broadcast('focus');
@@ -437,6 +424,8 @@
           break;

         case 'hidewindow':
+          var detail = evt.detail;
+
           if (activeApp &&
               activeApp.origin !== homescreenLauncher.origin) {
             // This is coming from attention screen.
@@ -465,32 +454,15 @@
           break;

         case 'showwindow':
-          var fireActivity = () => {
-            // Need to invoke activity
-            var a = new window.MozActivity(detail.activity);
-            a.onerror = function ls_activityError() {
-              console.log('MozActivity: activity error.');
-            };
-          };
-
           if (activeApp && activeApp.origin !== homescreenLauncher.origin) {
             activeApp.setVisible(true);
-            // If we need to invoke activity after we show the window.
-            if (detail && detail.activity) {
-              fireActivity();
-            }
           } else {
-            // If we only have activity, we don't open the homescreen.
-            if (detail && detail.activity) {
-              fireActivity();
-            } else {
-              var home = homescreenLauncher.getHomescreen(true); // jshint ignore:line
-              if (home) {
-                if (home.isActive()) {
-                  home.setVisible(true);
-                } else {
-                  this.display();
-                }
+            var home = homescreenLauncher.getHomescreen(true); // jshint ignore:line
+            if (home) {
+              if (home.isActive()) {
+                home.setVisible(true);
+              } else {
+                this.display();
               }
             }
           }
@@ -565,22 +537,11 @@
           if (document.mozFullScreen) {
             document.mozCancelFullScreen();
           }
-          activeApp && activeApp.getTopMostWindow().broadcast(
-            'sheetstransitionstart');
           break;

         case 'localized':
           this.broadcastMessage('localized');
           break;
-
-        case 'mozChromeEvent':
-          if (!activeApp || !evt.detail ||
-            evt.detail.type !== 'inputmethod-contextchange') {
-            return;
-          }
-          activeApp.getTopMostWindow().broadcast('inputmethod-contextchange',
-            evt.detail);
-          break;
       }
     },

@@ -668,7 +629,16 @@
     linkWindowActivity: function awm_linkWindowActivity(config) {
       var caller;
       var callee = this.getApp(config.origin);
-      caller = this._activeApp.getTopMostWindow();
+      var origin = window.location.origin;
+
+      // if caller is system app, we would change the caller to homescreen
+      // so that we won't go back to the wrong place
+      if (config.parentApp && config.parentApp.match(origin)) {
+        caller = homescreenLauncher.getHomescreen(true);
+      } else {
+        caller = this._activeApp.getTopMostWindow();
+      }
+
       callee.callerWindow = caller;
       caller.calleeWindow = callee;
     },
@@ -697,10 +667,9 @@
      * @param {String} origin The origin of the running app window to be killed.
      * @memberOf module:AppWindowManager
      */
-    kill: function awm_kill(origin, manifestURL) {
+    kill: function awm_kill(origin) {
       for (var id in this._apps) {
-        if (this._apps[id].origin === origin &&
-            (!manifestURL || this._apps[id].manifestURL === manifestURL)) {
+        if (this._apps[id].origin === origin) {
           this._apps[id].kill();
         }
       }
@@ -717,7 +686,7 @@
     _updateActiveApp: function awm__changeActiveApp(instanceID) {
       this._activeApp = this._apps[instanceID];
       if (!this._activeApp) {
-        this.debug('no active app alive: ' + instanceID);
+        console.warn('no active app alive: ', instanceID);
       }
       if (this._activeApp && this._activeApp.isFullScreen()) {
         screenElement.classList.add('fullscreen-app');
diff --git a/apps/system/js/attention_screen.js b/apps/system/js/attention_screen.js
index 868c9b2..fbf4ce1 100644
--- a/apps/system/js/attention_screen.js
+++ b/apps/system/js/attention_screen.js
@@ -27,14 +27,6 @@ var AttentionScreen = {
             !this.mainScreen.classList.contains('active-statusbar'));
   },

-  get statusHeight() {
-    if (this.isVisible() && !this.isFullyVisible()) {
-      return this.attentionScreen.getBoundingClientRect().height;
-    }
-
-    return 0;
-  },
-
   init: function as_init() {
     window.addEventListener('mozbrowseropenwindow', this.open.bind(this), true);

@@ -179,8 +171,7 @@ var AttentionScreen = {

   // Make sure visibililty state of all attention screens are set correctly
   _updateFrameVisibility: function as_updateFrameVisibility(activeFrame) {
-    var selector = 'iframe:not([data-hidden])';
-    var frames = this.attentionScreen.querySelectorAll(selector);
+    var frames = this.attentionScreen.querySelectorAll('iframe');
     var i = frames.length - 1;

     // In case someone call this function w/o checking for frame first
@@ -251,7 +242,6 @@ var AttentionScreen = {
       });

       iframe.dataset.hidden = 'hidden';
-      iframe.classList.remove('active');
       iframe.blur();
     } else {
       this.attentionScreen.removeChild(iframe);
@@ -393,19 +383,24 @@ var AttentionScreen = {
     this.mainScreen.classList.add('active-statusbar');

     var attentionScreen = this.attentionScreen;
-    var safetyTimeout = null;
-    var finish = (function() {
-      clearTimeout(safetyTimeout);
-      attentionScreen.removeEventListener('transitionend', finish);
+    attentionScreen.addEventListener('transitionend', function trWait() {
+      attentionScreen.removeEventListener('transitionend', trWait);

-      // transition completed, entering "status-mode" and informing
-      // the rest of the system
+      // transition completed, entering "status-mode" (40px height iframe)
       attentionScreen.classList.add('status-mode');
-      this.dispatchEvent('status-active');
-    }).bind(this);
+    });

-    attentionScreen.addEventListener('transitionend', finish);
-    safetyTimeout = setTimeout(finish, 500);
+    // The only way to hide attention screen is the home/holdhome event.
+    // So we don't fire any origin information here.
+    // The expected behavior is restore homescreen visibility to 'true'
+    // in the Window Manager.
+    // Make sure the status-active event is sent after the 'home' event has
+    // dispatched. Otherwise we can end up in a race where the 'foreground'
+    // application perceived by the screen manager is not the homescreen, but
+    // the last visible app since events dispatching are synchronous.
+    setTimeout(function(self) {
+      self.dispatchEvent('status-active');
+    }, 0, this);
   },

   // If the lock request fails, request again later.
diff --git a/apps/system/js/bluetooth_transfer.js b/apps/system/js/bluetooth_transfer.js
index ce85b6c..7878a00 100644
--- a/apps/system/js/bluetooth_transfer.js
+++ b/apps/system/js/bluetooth_transfer.js
@@ -133,7 +133,6 @@ var BluetoothTransfer = {
     if (NfcHandoverManager.isHandoverInProgress()) {
       // Bypassing confirm dialog while incoming file transfer via NFC Handover
       this.debug('Incoming file via NFC Handover. Bypassing confirm dialog');
-      NfcHandoverManager.transferStarted();
       this.acceptReceive(evt);
       return;
     }
diff --git a/apps/system/js/bootstrap.js b/apps/system/js/bootstrap.js
index 3447d04..5b0c3a6 100644
--- a/apps/system/js/bootstrap.js
+++ b/apps/system/js/bootstrap.js
@@ -10,8 +10,7 @@
          MediaRecording, AppWindowFactory, SystemDialogManager,
          applications, Rocketbar, LayoutManager, PermissionManager,
          HomeSearchbar, SoftwareButtonManager, Accessibility,
-         TextSelectionDialog, InternetSharing, SleepMenu, AppUsageMetrics,
-         LockScreenNotifications*/
+         TextSelectionDialog, InternetSharing, SleepMenu, AppUsageMetrics */
 'use strict';


@@ -38,6 +37,8 @@ window.addEventListener('load', function startup() {
    */
   function registerGlobalEntries() {
     /** @global */
+    window.appWindowFactory = new AppWindowFactory();
+    window.appWindowFactory.start();
     window.activityWindowManager = new ActivityWindowManager();
     window.activityWindowManager.start();
     /** @global */
@@ -71,7 +72,7 @@ window.addEventListener('load', function startup() {
       FtuLauncher.retrieve();
     });
     /** @global */
-    window.homescreenLauncher.start();
+    window.homescreenLauncher = new HomescreenLauncher().start();
   }

   if (applications.ready) {
@@ -108,23 +109,14 @@ window.addEventListener('load', function startup() {
   window.activities = new Activities();
   window.accessibility = new Accessibility();
   window.accessibility.start();
-  window.appUsageMetrics = new AppUsageMetrics();
-  window.appUsageMetrics.start();
-  window.appWindowFactory = new AppWindowFactory();
-  window.appWindowFactory.start();
-  window.developerHUD = new DeveloperHUD();
-  window.developerHUD.start();
-  window.dialerAgent = new DialerAgent();
-  window.dialerAgent.start();
-  window.homeGesture = new HomeGesture();
-  window.homeGesture.start();
-  window.homescreenLauncher = new HomescreenLauncher();
+  window.appUsageMetrics = new AppUsageMetrics().start();
+  window.developerHUD = new DeveloperHUD().start();
+  window.dialerAgent = new DialerAgent().start();
+  window.homeGesture = new HomeGesture().start();
   window.homeSearchbar = new HomeSearchbar();
   window.internetSharing = new InternetSharing();
   window.internetSharing.start();
-  window.lockScreenNotifications = new LockScreenNotifications();
-  window.layoutManager = new LayoutManager();
-  window.layoutManager.start();
+  window.layoutManager = new LayoutManager().start();
   window.permissionManager = new PermissionManager();
   window.permissionManager.start();
   window.places = new Places();
@@ -133,24 +125,21 @@ window.addEventListener('load', function startup() {
   window.rocketbar = new Rocketbar();
   window.sleepMenu = new SleepMenu();
   window.sleepMenu.start();
-  window.softwareButtonManager = new SoftwareButtonManager();
-  window.softwareButtonManager.start();
+  window.softwareButtonManager = new SoftwareButtonManager().start();
   window.sourceView = new SourceView();
   window.taskManager = new TaskManager();
   window.taskManager.start();
   window.telephonySettings = new TelephonySettings();
   window.telephonySettings.start();
   window.ttlView = new TTLView();
-  window.visibilityManager = new VisibilityManager();
-  window.visibilityManager.start();
+  window.visibilityManager = new VisibilityManager().start();
   window.wallpaperManager = new window.WallpaperManager();
   window.wallpaperManager.start();

   // unit tests call init() manually
   if (navigator.mozL10n) {
     navigator.mozL10n.once(function l10n_ready() {
-      window.mediaRecording = new MediaRecording();
-      window.mediaRecording.start();
+      window.mediaRecording = new MediaRecording().start();
     });
   }

diff --git a/apps/system/js/browser_mixin.js b/apps/system/js/browser_mixin.js
index b7b2272..b18d60d 100644
--- a/apps/system/js/browser_mixin.js
+++ b/apps/system/js/browser_mixin.js
@@ -157,20 +157,6 @@
     },

     /**
-     * Set aria-hidden attribute on browser's element to handle its screen
-     * reader visibility.
-     * @type {Boolean} visible A flag indicating if the element should be screen
-     * reader visible.
-     */
-    _setVisibleForScreenReader:
-      function bm__setVisibleForScreenReader(visible) {
-        if (this.browser && this.browser.element) {
-          this.debug('aria-hidden on browser element:' + !visible);
-          this.browser.element.setAttribute('aria-hidden', !visible);
-        }
-      },
-
-    /**
      * Fire a DOM Request to detect the history has previous page or not.
      * @param  {Function} callback Called when DOM Request is done.
      */
diff --git a/apps/system/js/captive_portal.js b/apps/system/js/captive_portal.js
index fed48de..7ff6936 100644
--- a/apps/system/js/captive_portal.js
+++ b/apps/system/js/captive_portal.js
@@ -1,27 +1,18 @@
 /* -*Mode: js; js-indent-level: 2; indent-tabs-mode: nil -**/
 /* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */
-
-/* global
-   BrowserFrame,
-   EntrySheet,
-   FtuLauncher,
-   Notification,
-   MozActivity
-*/
-
 'use strict';

 var CaptivePortal = {
   eventId: null,
   settings: null,
   notification: null,
-  notificationPrefix: 'captivePortal:',
-  captiveNotification_onClick: null,
+  captiveNotification_onTap: null,

   handleLogin: function cp_handleLogin(id, url) {
     var wifiManager = window.navigator.mozWifiManager;
     var _ = window.navigator.mozL10n.get;
     var settings = window.navigator.mozSettings;
+    var self = this;
     var icon = window.location.protocol + '//' + window.location.hostname +
       '/style/icons/captivePortal.png';

@@ -42,44 +33,32 @@ var CaptivePortal = {
       return;
     }

-    this.captiveNotification_onClick = (function() {
-      this.notification.removeEventListener('click',
-                                            this.captiveNotification_onClick);
-      this.captiveNotification_onClick = null;
-      var activity = new MozActivity({
+    this.notification = NotificationScreen.addNotification({
+      id: id, title: '', text: message, icon: icon
+    });
+    this.captiveNotification_onTap = function() {
+      self.notification.removeEventListener('tap',
+                                            self.captiveNotification_onTap);
+      self.captiveNotification_onTap = null;
+      NotificationScreen.removeNotification(id);
+      new MozActivity({
         name: 'view',
         data: { type: 'url', url: url }
       });
-      this.notification.close();
-      activity.onerror = function() {
-        console.error('CaptivePortal Activity error: ' + this.error);
-      };
-    }).bind(this);
-
-    var options = {
-      body: message,
-      icon: icon,
-      tag: this.notificationPrefix + networkName
     };
-
-    this.notification = new Notification('', options);
-    this.notification.addEventListener('click',
-      this.captiveNotification_onClick);
-    this.notification.addEventListener('close', (function() {
-      this.notification = null;
-    }).bind(this));
+    this.notification.addEventListener('tap', this.captiveNotification_onTap);
   },

   dismissNotification: function dismissNotification(id) {
     if (id === this.eventId) {
-      if (this.notification) {
-        if (this.captiveNotification_onClick) {
-          this.notification.removeEventListener('click',
-                                              this.captiveNotification_onClick);
-          this.captiveNotification_onClick = null;
+      if (this.notification && this.notification.parentNode) {
+        if (this.captiveNotification_onTap) {
+          this.notification.removeEventListener('tap',
+                                                this.captiveNotification_onTap);
+          this.captiveNotification_onTap = null;
         }
-
-        this.notification.close();
+        NotificationScreen.removeNotification(id);
+        this.notification = null;
       }

       if (this.entrySheet) {
@@ -104,7 +83,6 @@ var CaptivePortal = {
         break;
       case 'captive-portal-login-abort':
         this.handleLoginAbort(evt.detail.id);
-        break;
       case 'captive-portal-login-success':
         this.handleLoginSuccess(evt.detail.id);
         break;
@@ -112,25 +90,8 @@ var CaptivePortal = {
   },

   init: function cp_init() {
-    var promise = Notification.get();
-    var prefix = this.notificationPrefix;
-    promise.then(function(notifications) {
-      notifications.forEach(function(notification) {
-        if (!notification) {
-          return;
-        }
-
-        // We just care about notification with tag 'captivePortal:'
-        if (!notification.tag || !notification.tag.startsWith(prefix)) {
-          return;
-        }
-
-        notification.close();
-      });
-    }).then((function() {
-      window.addEventListener('mozChromeEvent', this);
-    }).bind(this));
-    return promise;
+    var self = this;
+    window.addEventListener('mozChromeEvent', this);
   }
 };

diff --git a/apps/system/js/child_window_factory.js b/apps/system/js/child_window_factory.js
index a3b7a07..1a595cb 100644
--- a/apps/system/js/child_window_factory.js
+++ b/apps/system/js/child_window_factory.js
@@ -1,6 +1,6 @@
 'use strict';
 /* global AppWindow, PopupWindow, ActivityWindow, SettingsListener,
-          AttentionScreen, MozActivity */
+          AttentionScreen */

 (function(exports) {
   var ENABLE_IN_APP_SHEET = false;
@@ -10,7 +10,7 @@
   /**
    * ChildWindowFactory is a submodule of AppWindow,
    * its responsbility is to:
-   *
+   *
    * (1) deal with window.open request
    *     from mozbrowser iframe to open a proper new window.
    * (2) deal with launchactivity request to open activity window.
@@ -53,23 +53,10 @@
         // XXX: Launch wrapper window here.
         return;
       }
-
-      // <a href="" target="_blank"> should never be part of the app
-      if (evt.detail.name == '_blank') {
-        this.launchActivity(evt);
-        evt.stopPropagation();
-        return;
-      }
-
       var caught = false;
       switch (evt.detail.features) {
         case 'dialog':
-          // Only open popupWindow by app/http/https prefix
-          if (/^(app|http|https):\/\//i.test(evt.detail.url)) {
-            caught = this.createPopupWindow(evt);
-          } else {
-            caught = this.launchActivity(evt);
-          }
+          caught = this.createPopupWindow(evt);
           break;
         case 'attention':
           // Open attentionWindow
@@ -177,20 +164,5 @@
     activity.open();
   };

-  ChildWindowFactory.prototype.launchActivity = function(evt) {
-    var activity = new MozActivity({
-      name: 'view',
-      data: {
-        type: 'url',
-        url: evt.detail.url
-      }
-    });
-    activity.onerror = function() {
-      console.warn('view activity error:', activity.error.name);
-    };
-
-    return true;
-  };
-
   exports.ChildWindowFactory = ChildWindowFactory;
 }(window));
diff --git a/apps/system/js/cost_control.js b/apps/system/js/cost_control.js
index 5979356..15794b1 100644
--- a/apps/system/js/cost_control.js
+++ b/apps/system/js/cost_control.js
@@ -92,12 +92,6 @@
     widgetFrame.setVisible(true);
   }

-  function _showWidgetIfLoaded() {
-    if (widgetFrame) {
-      widgetFrame.setVisible(true);
-    }
-  }
-
   function _hideWidget() {
     // It's not necessary to update the widget when it is hidden.
     window.removeEventListener('moznetworkupload', _onNetworkActivity);
@@ -109,6 +103,5 @@

   // Listen to utilitytray show
   window.addEventListener('utilitytrayshow', _showWidget);
-  window.addEventListener('utility-tray-overlayopening', _showWidgetIfLoaded);
   window.addEventListener('utilitytrayhide', _hideWidget);
 }());
diff --git a/apps/system/js/devtools/developer_hud.js b/apps/system/js/devtools/developer_hud.js
index d79dd01..1e92101 100644
--- a/apps/system/js/devtools/developer_hud.js
+++ b/apps/system/js/devtools/developer_hud.js
@@ -16,6 +16,7 @@

     start: function() {
       window.addEventListener('developer-hud-update', this);
+      return this;
     },

     stop: function() {
diff --git a/apps/system/js/dialer_agent.js b/apps/system/js/dialer_agent.js
index b03a991..5420caa 100644
--- a/apps/system/js/dialer_agent.js
+++ b/apps/system/js/dialer_agent.js
@@ -97,6 +97,8 @@
     AttentionScreen.attentionScreen.appendChild(callScreen);

     callScreen.setVisible(false);
+
+    return this;
   };

   DialerAgent.prototype.stop = function da_stop() {
diff --git a/apps/system/js/findmydevice_launcher.js b/apps/system/js/findmydevice_launcher.js
index b8fe693..ba7db1d 100644
--- a/apps/system/js/findmydevice_launcher.js
+++ b/apps/system/js/findmydevice_launcher.js
@@ -1,13 +1,20 @@
-/* global DUMP */
 /* global SettingsHelper */
-/* global wakeUpFindMyDevice */
-/* global IAC_API_WAKEUP_REASON_ENABLED */
-/* global IAC_API_WAKEUP_REASON_LOGIN */
-/* global IAC_API_WAKEUP_REASON_LOGOUT */
-/* global IAC_API_WAKEUP_REASON_STALE_REGISTRATION */

 'use strict';

+// XXX keep this in sync with apps/findmydevice/js/findmydevice.js
+const IAC_API_WAKEUP_REASON_ENABLED = 0;
+const IAC_API_WAKEUP_REASON_STALE_REGISTRATION = 1;
+
+function wakeUpFindMyDevice(reason) {
+  navigator.mozApps.getSelf().onsuccess = function() {
+    var app = this.result;
+    app.connect('findmydevice-wakeup').then(function(ports) {
+      ports[0].postMessage(reason);
+    });
+  };
+}
+
 navigator.mozSettings.addObserver('findmydevice.enabled', function(event) {
   if (event.settingValue === true) {
     // make sure Find My Device is registered if it's enabled
@@ -26,20 +33,3 @@ window.addEventListener('lockscreen-appclosing', function(event) {
   var helper = SettingsHelper('lockscreen.lock-message');
   helper.set('');
 });
-
-window.addEventListener('mozFxAccountsUnsolChromeEvent', function(event) {
-  if (!event || !event.detail) {
-    return;
-  }
-
-  var eventName = event.detail.eventName;
-  var loggedInHelper = SettingsHelper('findmydevice.logged-in');
-  DUMP('findmydevice received ' + eventName + ' FxA event in the System app');
-  if (eventName === 'onlogin' || eventName === 'onverified') {
-    loggedInHelper.set(true);
-    wakeUpFindMyDevice(IAC_API_WAKEUP_REASON_LOGIN);
-  } else if (eventName === 'onlogout') {
-    loggedInHelper.set(false);
-    wakeUpFindMyDevice(IAC_API_WAKEUP_REASON_LOGOUT);
-  }
-});
diff --git a/apps/system/js/ftu_launcher.js b/apps/system/js/ftu_launcher.js
index e473bee..6a8ed5c 100644
--- a/apps/system/js/ftu_launcher.js
+++ b/apps/system/js/ftu_launcher.js
@@ -13,9 +13,6 @@ var FtuLauncher = {
   /* The origin of FTU */
   _ftuOrigin: '',

-  /* The FTU ping service instance */
-  _ftuPing: null,
-
   /* Store that if FTU is currently running */
   _isRunningFirstTime: false,

@@ -29,10 +26,6 @@ var FtuLauncher = {
     return this._ftuOrigin;
   },

-  getFtuPing: function fl_getFtuPing() {
-    return this._ftuPing;
-  },
-
   setBypassHome: function fl_setBypassHome(value) {
     this._bypassHomeEvent = value;
   },
@@ -175,11 +168,7 @@ var FtuLauncher = {
   // Used by Bootstrap module.
   retrieve: function fl_retrieve() {
     var self = this;
-    if (!this._ftuPing) {
-      this._ftuPing = new FtuPing();
-    }
-
-    this._ftuPing.ensurePing();
+    FtuPing.ensurePing();

     // launch FTU when a version upgrade is detected
     VersionHelper.getVersionInfo().then(function(versionInfo) {
diff --git a/apps/system/js/ftu_ping.js b/apps/system/js/ftu_ping.js
index 212c5de..6acb191 100644
--- a/apps/system/js/ftu_ping.js
+++ b/apps/system/js/ftu_ping.js
@@ -8,399 +8,402 @@
 /**
  * A simple ping that is kicked off on first time use
  */
-(function(exports) {
+var FtuPing = (function() {
   var DEBUG = false;

-  const FTU_PING_ACTIVATION = 'ftu.pingActivation';
-  const FTU_PING_ENABLED = 'ftu.pingEnabled';
-  const FTU_PING_ID = 'ftu.pingID';
-  const FTU_PING_MAX_NETWORK_FAILS = 'ftu.pingMaxNetworkFails';
-  const FTU_PING_NETWORK_FAIL_COUNT = 'ftu.pingNetworkFailCount';
-  const FTU_PING_URL = 'ftu.pingURL';
-  const FTU_PING_TIMEOUT = 'ftu.pingTimeout';
-  const FTU_PING_TRY_INTERVAL = 'ftu.pingTryInterval';
+  var debug = DEBUG ? function(msg) {
+    dump('[FtuPing] ' + msg + '\n');
+  } : function() {};

-  const DEFAULT_TRY_INTERVAL = 60 * 60 * 1000;
-  const DEFAULT_MAX_NETWORK_FAILS = 24;
-  const DEFAULT_PING_TIMEOUT = 60 * 1000;
+  var FTU_PING_ACTIVATION = 'ftu.pingActivation';
+  var FTU_PING_ENABLED = 'ftu.pingEnabled';
+  var FTU_PING_ID = 'ftu.pingID';
+  var FTU_PING_MAX_NETWORK_FAILS = 'ftu.pingMaxNetworkFails';
+  var FTU_PING_NETWORK_FAIL_COUNT = 'ftu.pingNetworkFailCount';
+  var FTU_PING_URL = 'ftu.pingURL';
+  var FTU_PING_TIMEOUT = 'ftu.pingTimeout';
+  var FTU_PING_TRY_INTERVAL = 'ftu.pingTryInterval';
+
+  var DEFAULT_TRY_INTERVAL = 60 * 60 * 1000;
+  var DEFAULT_MAX_NETWORK_FAILS = 24;
+  var DEFAULT_PING_TIMEOUT = 60 * 1000;

   // Used by the telemetry server to help identify the payload format
-  const PING_PAYLOAD_VERSION = 3;
+  var PING_PAYLOAD_VERSION = 3;

-  // Settings to observe value changes for while the ping has not been sent
-  const OBSERVE_SETTINGS = ['deviceinfo.os',
-                            'deviceinfo.software',
-                            'deviceinfo.platform_build_id',
-                            'deviceinfo.platform_version',
-                            'deviceinfo.product_model',
-                            'deviceinfo.firmware_revision',
-                            'deviceinfo.hardware',
-                            'app.update.channel'];
-
-  function FtuPing() {
-  }
+  // whether or not required properties have been loaded
+  var pingReady = false;
+  var pingReadyCallback = null;

-  FtuPing.prototype = {
-    // whether or not required properties have been loaded
-    _pingReady: false,
-    _pingReadyCallback: null,
+  // interval timer for first time ping
+  var pingTimer = null;

-    // interval timer for first time ping
-    _pingTimer: null,
+  // time between ping tries
+  var tryInterval = DEFAULT_TRY_INTERVAL;

-    // time between ping tries
-    _tryInterval: DEFAULT_TRY_INTERVAL,
+  // URL for first time ping
+  var pingURL = null;

-    // URL for first time ping
-    _pingURL: null,
+  // Whether or not FTU ping is enabled
+  var pingEnabled = true;

-    // Whether or not FTU ping is enabled
-    _pingEnabled: true,
+  // The number of times to wait for SIM / voice network data before sending
+  // the ping anyway
+  var maxNetworkFails = DEFAULT_MAX_NETWORK_FAILS;

-    // The number of times to wait for SIM / voice network data before sending
-    // the ping anyway
-    _maxNetworkFails: DEFAULT_MAX_NETWORK_FAILS,
+  // Number of network failures accrued
+  var networkFailCount = 0;

-    // Number of network failures accrued
-    _networkFailCount: 0,
+  // Data used in ping
+  var pingData = {};

-    // Data used in ping
-    _pingData: {},
+  // Timeout for ping requests
+  var pingTimeout = DEFAULT_PING_TIMEOUT;

-    // Timeout for ping requests
-    _pingTimeout: DEFAULT_PING_TIMEOUT,
-    _settingObserver: null,
+  // Settings to observe value changes for while the ping has not been sent
+  var observeSettings = ['deviceinfo.os',
+                         'deviceinfo.software',
+                         'deviceinfo.platform_build_id',
+                         'deviceinfo.platform_version',
+                         'deviceinfo.product_model',
+                         'deviceinfo.firmware_revision',
+                         'deviceinfo.hardware',
+                         'app.update.channel'];
+
+  function reset() {
+    pingReady = false;
+    pingReadyCallback = null;
+    pingTimer = null;
+    tryInterval = DEFAULT_TRY_INTERVAL;
+    pingTimeout = DEFAULT_PING_TIMEOUT;
+
+    pingURL = null;
+    pingEnabled = true;
+
+    maxNetworkFails = DEFAULT_MAX_NETWORK_FAILS;
+    networkFailCount = 0;
+
+    pingData = {};
+  }

-    debug: function fp_debug(msg) {
-      if (DEBUG) {
-        dump('[FtuPing] ' + msg + '\n');
-      }
-    },
-
-    reset: function fp_reset() {
-      this._pingReady = false;
-      this._pingReadyCallback = null;
-      this._pingTimer = null;
-      this._tryInterval = DEFAULT_TRY_INTERVAL;
-      this._pingTimeout = DEFAULT_PING_TIMEOUT;
-      this._settingObserver = null;
-
-      this._pingURL = null;
-      this._pingEnabled = true;
-
-      this._maxNetworkFails = DEFAULT_MAX_NETWORK_FAILS;
-      this._networkFailCount = 0;
-
-      this._pingData = {};
-    },
-
-    initSettings: function fp_initSettings(callback) {
-      this.reset();
-
-      this._pingData.ver = PING_PAYLOAD_VERSION;
-      this._pingData.screenHeight = window.screen.height;
-      this._pingData.screenWidth = window.screen.width;
-      this._pingData.devicePixelRatio = window.devicePixelRatio;
-      this._pingData.locale = window.navigator.language;
-
-      var self = this;
-      this.getAsyncStorageItems([FTU_PING_ID, FTU_PING_ACTIVATION,
-                                 FTU_PING_ENABLED,
-                                 FTU_PING_NETWORK_FAIL_COUNT], function(items) {
-
-          self._pingData.pingID = items[FTU_PING_ID];
-          self._pingData.activationTime = items[FTU_PING_ACTIVATION];
-          self._pingEnabled = items[FTU_PING_ENABLED];
-
-          if (!self._pingData.pingID) {
-            self._pingData.pingID = uuid();
-            window.asyncStorage.setItem(FTU_PING_ID, self._pingData.pingID);
-          }
+  function initSettings(callback) {
+    reset();

-          if (!self._pingData.activationTime) {
-            self._pingData.activationTime = Date.now();
-            window.asyncStorage.setItem(FTU_PING_ACTIVATION,
-                                        self._pingData.activationTime);
-          }
+    pingData.ver = PING_PAYLOAD_VERSION;
+    pingData.screenHeight = window.screen.height;
+    pingData.screenWidth = window.screen.width;
+    pingData.devicePixelRatio = window.devicePixelRatio;
+    pingData.locale = window.navigator.language;

-          if (self._pingEnabled === null) {
-            self._pingEnabled = true;
-          }
+    getAsyncStorageItems([FTU_PING_ID, FTU_PING_ACTIVATION, FTU_PING_ENABLED,
+                          FTU_PING_NETWORK_FAIL_COUNT], function(items) {

-          if (typeof(items[FTU_PING_NETWORK_FAIL_COUNT]) === 'number') {
-            self._networkFailCount = items[FTU_PING_NETWORK_FAIL_COUNT];
-          }
+        pingData.pingID = items[FTU_PING_ID];
+        pingData.activationTime = items[FTU_PING_ACTIVATION];
+        pingEnabled = items[FTU_PING_ENABLED];
+
+        if (!pingData.pingID) {
+          pingData.pingID = uuid();
+          window.asyncStorage.setItem(FTU_PING_ID, pingData.pingID);
+        }

-          var allSettings = [FTU_PING_URL, FTU_PING_TRY_INTERVAL,
-                             FTU_PING_TIMEOUT, FTU_PING_MAX_NETWORK_FAILS].
-                            concat(OBSERVE_SETTINGS);
-
-          self.getSettings(allSettings, function(settings) {
-            self._pingURL = settings[FTU_PING_URL];
-            self._tryInterval = settings[FTU_PING_TRY_INTERVAL] ||
-                                self._tryInterval;
-            self._pingTimeout = settings[FTU_PING_TIMEOUT] || self._pingTimeout;
-            self._maxNetworkFails = settings[FTU_PING_MAX_NETWORK_FAILS] ||
-                                    self._maxNetworkFails;
-
-            var mozSettings = window.navigator.mozSettings;
-            if (!self._settingObserver) {
-              self._settingObserver = self.onSettingChanged.bind(self);
-            }
-
-            OBSERVE_SETTINGS.forEach(function(observeSetting) {
-              self._pingData[observeSetting] = settings[observeSetting];
-              mozSettings.addObserver(observeSetting, self._settingObserver);
-            });
-
-            if (callback) {
-              callback();
-            }
+        if (!pingData.activationTime) {
+          pingData.activationTime = Date.now();
+          window.asyncStorage.setItem(FTU_PING_ACTIVATION,
+                                      pingData.activationTime);
+        }
+
+        if (pingEnabled === null) {
+          pingEnabled = true;
+        }
+
+        if (typeof(items[FTU_PING_NETWORK_FAIL_COUNT]) === 'number') {
+          networkFailCount = items[FTU_PING_NETWORK_FAIL_COUNT];
+        }
+
+        var allSettings = [FTU_PING_URL, FTU_PING_TRY_INTERVAL,
+                           FTU_PING_TIMEOUT, FTU_PING_MAX_NETWORK_FAILS].
+                          concat(observeSettings);
+
+        getSettings(allSettings, function(settings) {
+          pingURL = settings[FTU_PING_URL];
+          tryInterval = settings[FTU_PING_TRY_INTERVAL] || tryInterval;
+          pingTimeout = settings[FTU_PING_TIMEOUT] || pingTimeout;
+          maxNetworkFails = settings[FTU_PING_MAX_NETWORK_FAILS] ||
+                            maxNetworkFails;
+
+          var mozSettings = window.navigator.mozSettings;
+          observeSettings.forEach(function(observeSetting) {
+            pingData[observeSetting] = settings[observeSetting];
+            mozSettings.addObserver(observeSetting, onSettingChanged);
           });
-      });
-    },
-
-    getAsyncStorageItems: function fp_getAsyncStorageItems(itemKeys, callback) {
-      var itemsLeft = itemKeys.length;
-      var items = {};
-      itemKeys.forEach(function(key) {
-        window.asyncStorage.getItem(key, function(value) {
-          itemsLeft--;
-          items[key] = value;
-          if (itemsLeft === 0 && callback) {
-            callback(items);
+
+          if (callback) {
+            callback();
           }
         });
+    });
+  }
+
+  function getAsyncStorageItems(itemKeys, callback) {
+    var itemsLeft = itemKeys.length;
+    var items = {};
+    itemKeys.forEach(function(key) {
+      window.asyncStorage.getItem(key, function(value) {
+        itemsLeft--;
+        items[key] = value;
+        if (itemsLeft === 0 && callback) {
+          callback(items);
+        }
       });
-    },
-
-    getSettings: function fp_getSettings(settingKeys, callback) {
-      var settingsLeft = settingKeys.length;
-      var settings = {};
-      var lock = window.navigator.mozSettings.createLock();
-      settingKeys.forEach(function(key) {
-        var request = lock.get(key);
-        request.onsuccess = function(evt) {
-          var value = request.result[key];
-          settingsLeft--;
-          settings[key] = value;
-          if (settingsLeft === 0 && callback) {
-            callback(settings);
-          }
-        };
-      });
-    },
+    });
+  }

-    ensurePing: function fp_ensurePing() {
-      this.initSettings(this.startPing.bind(this));
-    },
+  function getSettings(settingKeys, callback) {
+    var settingsLeft = settingKeys.length;
+    var settings = {};
+    var lock = window.navigator.mozSettings.createLock();
+    settingKeys.forEach(function(key) {
+      var request = lock.get(key);
+      request.onsuccess = function(evt) {
+        var value = request.result[key];
+        settingsLeft--;
+        settings[key] = value;
+        if (settingsLeft === 0 && callback) {
+          callback(settings);
+        }
+      };
+    });
+  }

-    onSettingChanged: function fp_onSettingChanged(evt) {
-      this._pingData[evt.settingName] = evt.settingValue;
-    },
+  function ensurePing() {
+    initSettings(function() {
+      FtuPing.startPing();
+    });
+  }

-    startPing: function fp_startPing() {
-      if (this._pingEnabled === false) {
-        this.debug('FTU ping disabled');
-        return;
-      }
+  function onSettingChanged(evt) {
+    pingData[evt.settingName] = evt.settingValue;
+  }

-      if (!this._pingURL) {
-        this.debug('No FTU ping URL');
-        return;
-      }
-      if (this._pingTimer !== null) {
-          return;
-      }
+  function startPing() {
+    if (pingEnabled === false) {
+      debug('FTU ping disabled');
+      return;
+    }

-      this.debug('Starting FTU ping');
-      this._pingTimer = setInterval(this.tryPing.bind(this), this._tryInterval);
-    },
+    if (!pingURL) {
+      debug('No FTU ping URL');
+      return;
+    }
+    if (pingTimer !== null) {
+        return;
+    }

-    maybeThrowNetworkFailure: function fp_maybeThrowNetworkFailure(message) {
-        this._networkFailCount++;
-        window.asyncStorage.setItem(FTU_PING_NETWORK_FAIL_COUNT,
-                                    this._networkFailCount);
+    debug('Starting FTU ping');
+    pingTimer = setInterval(tryPing, tryInterval);
+  }

-        if (this._networkFailCount < this._maxNetworkFails) {
-          throw message + ' (' + this._networkFailCount + ' of ' +
-                this._maxNetworkFails + ' failures)';
-        } else {
-          this.debug('Warning: ' + message);
-        }
-    },
+  function maybeThrowNetworkFailure(message) {
+      networkFailCount++;
+      window.asyncStorage.setItem(FTU_PING_NETWORK_FAIL_COUNT,
+                                  networkFailCount);

-    checkMobileNetwork: function fp_checkMobileNetwork() {
-      // Wait until we have a valid network connection
-      if (SIMSlotManager.noSIMCardConnectedToNetwork()) {
-        this.maybeThrowNetworkFailure('No SIM cards connected to a network');
+      if (networkFailCount < maxNetworkFails) {
+        throw message + ' (' + networkFailCount + ' of ' + maxNetworkFails +
+              ' failures)';
+      } else {
+        debug('Warning: ' + message);
       }
+  }

-      var conns = window.navigator.mozMobileConnections;
-      if (!conns || conns.length === 0) {
-        this.maybeThrowNetworkFailure('No mobile connections');
-        return;
-      }
+  function checkMobileNetwork() {
+    // Wait until we have a valid network connection
+    if (SIMSlotManager.noSIMCardConnectedToNetwork()) {
+        maybeThrowNetworkFailure('No SIM cards connected to a network');
+    }

-      var slots = SIMSlotManager.getSlots().filter(function(slot) {
-        return !slot.isAbsent() && !slot.isLocked();
-      });
+    var conns = window.navigator.mozMobileConnections;
+    if (!conns || conns.length === 0) {
+      maybeThrowNetworkFailure('No mobile connections');
+      return;
+    }

-      if (slots.length === 0) {
-        this.maybeThrowNetworkFailure('No unlocked or active SIM cards found');
-        return;
-      }
+    var slots = SIMSlotManager.getSlots().filter(function(slot) {
+      return !slot.isAbsent() && !slot.isLocked();
+    });

-      var conn = slots[0].conn;
-      var iccObj = navigator.mozIccManager.getIccById(conn.iccId);
-      var iccInfo = iccObj ? iccObj.iccInfo : null;
-      var voiceNetwork = conn.voice ? conn.voice.network : null;
+    if (slots.length === 0) {
+      maybeThrowNetworkFailure('No unlocked or active SIM cards found');
+      return;
+    }

-      if (!iccInfo && !voiceNetwork) {
-        this.maybeThrowNetworkFailure('No voice network or ICC info');
-        return;
-      }
+    var conn = slots[0].conn;
+    var iccObj = navigator.mozIccManager.getIccById(conn.iccId);
+    var iccInfo = iccObj ? iccObj.iccInfo : null;
+    var voiceNetwork = conn.voice ? conn.voice.network : null;

-      this._pingData.network = MobileOperator.userFacingInfo(conn);
-      if (voiceNetwork) {
-        this._pingData.network.mnc = voiceNetwork.mnc;
-        this._pingData.network.mcc = voiceNetwork.mcc;
-      }
+    if (!iccInfo && !voiceNetwork) {
+      maybeThrowNetworkFailure('No voice network or ICC info');
+      return;
+    }

-      if (iccInfo) {
-        this._pingData.icc = {
-          mnc: iccInfo.mnc,
-          mcc: iccInfo.mcc,
-          spn: iccInfo.spn
-        };
-      }
-    },
-
-    tryPing: function fp_tryPing() {
-      try {
-        this.checkMobileNetwork();
-        if (this._networkFailCount >= this._maxNetworkFails) {
-          this.debug('Max voice network failures reached, pinging anyway!');
-          if (this._pingData.network === undefined) {
-            this._pingData.network = null;
-          }
+    pingData.network = MobileOperator.userFacingInfo(conn);
+    if (voiceNetwork) {
+      pingData.network.mnc = voiceNetwork.mnc;
+      pingData.network.mcc = voiceNetwork.mcc;
+    }

-          if (this._pingData.icc === undefined) {
-            this._pingData.icc = null;
-          }
+    if (iccInfo) {
+      pingData.icc = {
+        mnc: iccInfo.mnc,
+        mcc: iccInfo.mcc,
+        spn: iccInfo.spn
+      };
+    }
+  }
+
+  function tryPing() {
+    try {
+      checkMobileNetwork();
+      if (networkFailCount >= maxNetworkFails) {
+        debug('Max number of voice network failures reached, pinging anyway!');
+        if (pingData.network === undefined) {
+          pingData.network = null;
         }

-        if (!this._pingData['deviceinfo.os']) {
-          this.debug('No OS information, holding off');
-          return false;
+        if (pingData.icc === undefined) {
+          pingData.icc = null;
         }
+      }

-        this.ping();
-        return true;
-      } catch (e) {
-        this.debug('Error while trying FTU ping: ' + e);
+      if (!pingData['deviceinfo.os']) {
+        debug('No OS information, holding off');
         return false;
       }
-    },
-
-    generatePingURL: function fp_generatePingURL() {
-      var version = this._pingData['deviceinfo.platform_version'] || 'unknown';
-      var updateChannel = this._pingData['app.update.channel'] || 'unknown';
-      var buildId = this._pingData['deviceinfo.platform_build_id'] || 'unknown';
-
-      var uriParts = [
-        this._pingURL,
-        encodeURIComponent(this._pingData.pingID),
-        'ftu',                             // 'reason'
-        'FirefoxOS',                       // 'appName'
-        encodeURIComponent(version),       // 'appVersion'
-        encodeURIComponent(updateChannel), // 'appUpdateChannel'
-        encodeURIComponent(buildId)        // 'appBuildID'
-      ];
-
-      return uriParts.join('/');
-    },
-
-    ping: function fp_ping() {
-      var url = this.generatePingURL();
-      this._pingData.pingTime = Date.now();
-
-      if (DEBUG) {
-        this.debug(url);
-        this.debug(JSON.stringify(this._pingData));
-      }

-      var xhr = new XMLHttpRequest({ mozSystem: true, mozAnon: true });
-      xhr.timeout = this._pingTimeout;
+      FtuPing.ping();
+      return true;
+    } catch (e) {
+      debug('Error while trying FTU ping: ' + e);
+      return false;
+    }
+  }

-      var self = this;
-      xhr.onload = function() {
-        self.pingSuccess(xhr.responseText);
-      };
+  function generatePingURL() {
+    var version = pingData['deviceinfo.platform_version'] || 'unknown';
+    var updateChannel = pingData['app.update.channel'] || 'unknown';
+    var buildId = pingData['deviceinfo.platform_build_id'] || 'unknown';
+
+    var uriParts = [
+      pingURL,
+      encodeURIComponent(pingData.pingID),
+      'ftu',                             // 'reason'
+      'FirefoxOS',                       // 'appName'
+      encodeURIComponent(version),       // 'appVersion'
+      encodeURIComponent(updateChannel), // 'appUpdateChannel'
+      encodeURIComponent(buildId)        // 'appBuildID'
+    ];
+
+    return uriParts.join('/');
+  }

-      xhr.ontimeout = function() {
-        self.pingError('Timed out');
-      };
+  function ping() {
+    var url = generatePingURL();
+    pingData.pingTime = Date.now();

-      xhr.onerror = function() {
-        self.pingError(xhr.statusText);
-      };
+    debug(url);
+    debug(JSON.stringify(pingData));

-      xhr.open('POST', url, true);
-      xhr.setRequestHeader('Content-type', 'application/json');
-      xhr.responseType = 'text';
-      xhr.send(JSON.stringify(this._pingData));
-    },
+    var xhr = new XMLHttpRequest({ mozSystem: true, mozAnon: true });
+    xhr.timeout = pingTimeout;

-    pingSuccess: function fp_pingSuccess(result) {
-      if (result !== 'OK') {
-        this.debug('Ping response unexpected: ' + result);
-        return;
-      }
+    xhr.onload = function() {
+      FtuPing.pingSuccess(xhr.responseText);
+    };

-      this._pingEnabled = false;
-      window.asyncStorage.setItem(FTU_PING_ENABLED, false);
+    xhr.ontimeout = function() {
+      FtuPing.pingError('Timed out');
+    };

-      var settings = window.navigator.mozSettings;
-      OBSERVE_SETTINGS.forEach(function(setting) {
-        settings.removeObserver(setting, this._settingObserver);
-      }, this);
+    xhr.onerror = function() {
+      FtuPing.pingError(xhr.statusText);
+    };

-      clearInterval(this._pingTimer);
-    },
+    xhr.open('POST', url, true);
+    xhr.setRequestHeader('Content-type', 'application/json');
+    xhr.responseType = 'text';
+    xhr.send(JSON.stringify(pingData));
+  }

-    pingError: function fp_pingError(message) {
-      this.debug('Ping error: ' + message);
-    },
+  function pingSuccess(result) {
+    if (result !== 'OK') {
+      debug('Ping response unexpected: ' + result);
+      return;
+    }

-    isEnabled: function fp_isEnabled() {
-      return this._pingEnabled;
-    },
+    pingEnabled = false;
+    window.asyncStorage.setItem(FTU_PING_ENABLED, false);

-    getPingURL: function fp_getPingURL() {
-      return this._pingURL;
-    },
+    var settings = window.navigator.mozSettings;
+    observeSettings.forEach(function(setting) {
+      settings.removeObserver(setting, onSettingChanged);
+    });

-    getPingData: function fp_getPingData() {
-      return this._pingData;
-    },
+    clearInterval(pingTimer);
+  }

-    getNetworkFailCount: function fp_getNetworkFailCount() {
-      return this._networkFailCount;
-    },
+  function pingError(message) {
+    debug('Ping error: ' + message);
+  }

-    getTryInterval: function fp_getTryInterval() {
-      return this._tryInterval;
-    },
+  function isEnabled() {
+    return pingEnabled;
+  }

-    getPingTimeout: function fp_getPingTimeout() {
-      return this._pingTimeout;
-    },
+  function getPingURL() {
+    return pingURL;
+  }

-    getMaxNetworkFails: function fp_getMaxNetworkFails() {
-      return this._maxNetworkFails;
-    }
-  };
+  function getPingData() {
+    return pingData;
+  }
+
+  function getNetworkFailCount() {
+    return networkFailCount;
+  }
+
+  function getTryInterval() {
+    return tryInterval;
+  }

-  exports.FtuPing = FtuPing;
-}(window));
+  function getPingTimeout() {
+    return pingTimeout;
+  }
+
+  function getMaxNetworkFails() {
+    return maxNetworkFails;
+  }
+
+  return {
+    checkMobileNetwork: checkMobileNetwork,
+    ensurePing: ensurePing,
+    generatePingURL: generatePingURL,
+    getAsyncStorageItems: getAsyncStorageItems,
+    getMaxNetworkFails: getMaxNetworkFails,
+    getNetworkFailCount: getNetworkFailCount,
+    getPingData: getPingData,
+    getPingTimeout: getPingTimeout,
+    getPingURL: getPingURL,
+    getSettings: getSettings,
+    getTryInterval: getTryInterval,
+    initSettings: initSettings,
+    isEnabled: isEnabled,
+    ping: ping,
+    pingError: pingError,
+    pingSuccess: pingSuccess,
+    reset: reset,
+    startPing: startPing,
+    tryPing: tryPing
+  };
+})();
diff --git a/apps/system/js/hardware_buttons.js b/apps/system/js/hardware_buttons.js
index e7d7388..9c77db3 100644
--- a/apps/system/js/hardware_buttons.js
+++ b/apps/system/js/hardware_buttons.js
@@ -1,6 +1,6 @@
 'use strict';

-/* global ScreenManager, SettingsListener */
+/* global ScreenManager */

 (function(exports) {

@@ -76,7 +76,6 @@
    **/
   var HardwareButtons = function HardwareButtons() {
     this._started = false;
-    this._softwareHome = false;
   };

   /**
@@ -124,10 +123,6 @@
     window.addEventListener('mozChromeEvent', this);

     window.addEventListener('softwareButtonEvent', this);
-
-    SettingsListener.observe('software-button.enabled', false, function(value) {
-      this._softwareHome = value;
-    }.bind(this));
   };

   /**
@@ -189,15 +184,6 @@
    */
   HardwareButtons.prototype.handleEvent = function hb_handleEvent(evt) {
     var type = evt.detail.type;
-
-    // When the software home button is displayed we ignore the hardware
-    // home button if there is one
-    var hardwareHomeEvent = (evt.type == 'mozChromeEvent') &&
-                            type.startsWith('home-button');
-    if (this._softwareHome && hardwareHomeEvent) {
-      return;
-    }
-
     switch (type) {
       case 'home-button-press':
       case 'home-button-release':
diff --git a/apps/system/js/home_gesture.js b/apps/system/js/home_gesture.js
index 97376e6..d415d9e 100644
--- a/apps/system/js/home_gesture.js
+++ b/apps/system/js/home_gesture.js
@@ -82,6 +82,8 @@
             this.toggle(value);
           }.bind(this));
       }
+
+      return this;
     },

     /**
@@ -96,14 +98,14 @@

       if (enable) {
         this.publish('homegesture-enabled');
-        window.addEventListener('lockscreen-appclose', this);
+        window.addEventListener('lockscreen-appclosing', this);
         window.addEventListener('lockscreen-appopened', this);
         window.addEventListener('utilitytrayshow', this);
         window.addEventListener('utilitytrayhide', this);
         this.homeBar.classList.add('visible');
       } else {
         this.publish('homegesture-disabled');
-        window.removeEventListener('lockscreen-appclose', this);
+        window.removeEventListener('lockscreen-appclosing', this);
         window.removeEventListener('lockscreen-appopened', this);
         window.removeEventListener('utilitytrayshow', this);
         window.removeEventListener('utilitytrayhide', this);
@@ -145,7 +147,7 @@
         case 'utilitytrayshow':
           this.homeBar.classList.remove('visible');
           break;
-        case 'lockscreen-appclose':
+        case 'lockscreen-appclosing':
         case 'utilitytrayhide':
           this.homeBar.classList.add('visible');
           break;
diff --git a/apps/system/js/home_searchbar.js b/apps/system/js/home_searchbar.js
index f7260c7..0b8609e 100644
--- a/apps/system/js/home_searchbar.js
+++ b/apps/system/js/home_searchbar.js
@@ -1,5 +1,5 @@
 'use strict';
-/* global Rocketbar */
+/* global Rocketbar, AttentionScreen */

 (function(exports) {

@@ -13,132 +13,135 @@
     Rocketbar.call(this);
   }

-  HomeSearchbar.prototype = Object.create(Rocketbar.prototype);
+  HomeSearchbar.prototype = {

-  /**
-   * We stop listening to events when Rocketbar is enabled.
-   * @memberof HomeSearchbar.prototype
-   */
-  HomeSearchbar.prototype.start = function() {
-    this.removeEventListeners();
-    this.body.classList.remove('homesearch-enabled');
-    this.enabled = false;
-  };
+    __proto__: Rocketbar.prototype,

-  /**
-   * We start listening to events when Rocketbar is disabled.
-   * @memberof HomeSearchbar.prototype
-   */
-  HomeSearchbar.prototype.stop = function() {
-    this.addEventListeners();
-    this.body.classList.add('homesearch-enabled');
-    this.enabled = true;
-  };
+    /**
+     * We stop listening to events when Rocketbar is enabled.
+     * @memberof HomeSearchbar.prototype
+     */
+    start: function() {
+      this.removeEventListeners();
+      this.body.classList.remove('homesearch-enabled');
+      this.enabled = false;
+    },

-  /**
-   * Add event listeners. Called when Rocketbar is disabled, but homesearch
-   * is enabled. Only adds listeners that the home search feature needs.
-   * @memberof Rocketbar.prototype
-   */
-  HomeSearchbar.prototype.addEventListeners = function() {
-    // Listen for events from window manager
-    window.addEventListener('apploading', this);
-    window.addEventListener('appforeground', this);
-    window.addEventListener('apptitlechange', this);
-    window.addEventListener('home', this);
-    window.addEventListener('lockscreen-appopened', this);
-    window.addEventListener('appopened', this);
-    window.addEventListener('launchactivity', this, true);
-    window.addEventListener('searchterminated', this);
-    window.addEventListener('permissiondialoghide', this);
-    window.addEventListener('attentionscreenshow', this);
-    window.addEventListener('status-inactive', this);
+    /**
+     * We start listening to events when Rocketbar is disabled.
+     * @memberof HomeSearchbar.prototype
+     */
+    stop: function() {
+      this.addEventListeners();
+      this.body.classList.add('homesearch-enabled');
+      this.enabled = true;
+    },

-    // Listen for events from Rocketbar
-    this.input.addEventListener('focus', this);
-    this.input.addEventListener('blur', this);
-    this.input.addEventListener('input', this);
-    this.cancel.addEventListener('click', this);
-    this.clearBtn.addEventListener('click', this);
-    this.form.addEventListener('submit', this);
-    this.backdrop.addEventListener('click', this);
+    /**
+     * Add event listeners. Called when Rocketbar is disabled, but homesearch
+     * is enabled. Only adds listeners that the home search feature needs.
+     * @memberof Rocketbar.prototype
+     */
+    addEventListeners: function() {
+      // Listen for events from window manager
+      window.addEventListener('apploading', this);
+      window.addEventListener('appforeground', this);
+      window.addEventListener('apptitlechange', this);
+      window.addEventListener('home', this);
+      window.addEventListener('lockscreen-appopened', this);
+      window.addEventListener('appopened', this);
+      window.addEventListener('launchactivity', this, true);
+      window.addEventListener('searchcrashed', this);
+      window.addEventListener('permissiondialoghide', this);
+      window.addEventListener('attentionscreenshow', this);

-    // Listen for messages from search app
-    window.addEventListener('iac-search-results', this);
-  };
+      // Listen for events from Rocketbar
+      this.input.addEventListener('focus', this);
+      this.input.addEventListener('blur', this);
+      this.input.addEventListener('input', this);
+      this.cancel.addEventListener('click', this);
+      this.clearBtn.addEventListener('click', this);
+      this.form.addEventListener('submit', this);
+      this.backdrop.addEventListener('click', this);

+      // Listen for messages from search app
+      window.addEventListener('iac-search-results', this);
+    },

-  /**
-   * General event handler interface.
-   * Only dispatches necessary events for the HomeSearchbar.
-   * Ignores events that would be necessary for the full Rocketbar.
-   * @param {Event} e Event.
-   * @memberof HomeSearchbar.prototype
-   */
-  HomeSearchbar.prototype.handleEvent = function(e) {
-    switch(e.type) {
-      case 'apploading':
-      case 'appforeground':
-      case 'appopened':
-      case 'attentionscreenshow':
-      case 'status-inactive':
-        this.rocketbar.classList.remove('expanded');
-        this.screen.classList.remove('rocketbar-expanded');
-        this.exitHome();
-        this.hideResults();
-        this.deactivate();
-        break;
-      case 'home':
-        this.handleHome(e);
-        break;
-      case 'lockscreen-appopened':
-        this.handleLock(e);
-        break;
-      case 'focus':
-        this.handleFocus(e);
-        break;
-      case 'blur':
-        this.handleBlur(e);
-        break;
-      case 'input':
-        this.handleInput(e);
-        break;
-      case 'click':
-        if (e.target == this.cancel) {
-          this.handleCancel(e);
-        } else if (e.target == this.clearBtn) {
-          this.clear();
-        } else if (e.target == this.backdrop) {
+
+    /**
+     * General event handler interface.
+     * Only dispatches necessary events for the HomeSearchbar.
+     * Ignores events that would be necessary for the full Rocketbar.
+     * @param {Event} e Event.
+     * @memberof HomeSearchbar.prototype
+     */
+    handleEvent: function(e) {
+      switch(e.type) {
+        case 'apploading':
+        case 'appforeground':
+        case 'appopened':
+        case 'attentionscreenshow':
+          this.rocketbar.classList.remove('expanded');
+          this.screen.classList.remove('rocketbar-expanded');
+          this.exitHome();
+          this.hideResults();
           this.deactivate();
-        }
-        break;
-      case 'launchactivity':
-        this.handleActivity(e);
-        break;
-      case 'searchterminated':
-        this.handleSearchTerminated(e);
-        break;
-      case 'submit':
-        this.handleSubmit(e);
-        break;
-      case 'iac-search-results':
-        this.handleSearchMessage(e);
-        break;
-      case 'permissiondialoghide':
-        if (this.active) {
-          this.focus();
-        }
-        break;
+          break;
+        case 'home':
+          this.handleHome(e);
+          break;
+        case 'lockscreen-appopened':
+          this.handleLock(e);
+          break;
+        case 'focus':
+          this.handleFocus(e);
+          break;
+        case 'blur':
+          this.handleBlur(e);
+          break;
+        case 'input':
+          this.handleInput(e);
+          break;
+        case 'click':
+          if (e.target == this.cancel) {
+            this.handleCancel(e);
+          } else if (e.target == this.clearBtn) {
+            this.clear();
+          } else if (e.target == this.backdrop) {
+            this.deactivate();
+          }
+          break;
+        case 'launchactivity':
+          this.handleActivity(e);
+          break;
+        case 'searchcrashed':
+          this.handleSearchCrashed(e);
+          break;
+        case 'submit':
+          this.handleSubmit(e);
+          break;
+        case 'iac-search-results':
+          if (AttentionScreen.isVisible()) {
+            AttentionScreen.maximize();
+          } else {
+            this.handleSearchMessage(e);
+          }
+          break;
+        case 'permissiondialoghide':
+          if (this.active) {
+            this.focus();
+          }
+          break;
+      }
+    },
+
+    // Preventing the RocketBar implementation from triggering a background
+    // scale change before getting stuck because of the lack of transitionend.
+    enterHome: function() {
     }
   };

-  // Preventing the RocketBar implementation from triggering a background
-  // scale change before getting stuck because of the lack of transitionend.
-  HomeSearchbar.prototype.enterHome = function() {};
-
-  // Prevent the rocketbar input from being manually shown
-  HomeSearchbar.prototype.show = function() { };
-
   exports.HomeSearchbar = HomeSearchbar;

 }(window));
diff --git a/apps/system/js/homescreen_launcher.js b/apps/system/js/homescreen_launcher.js
index f14c63e..2ad8a86 100644
--- a/apps/system/js/homescreen_launcher.js
+++ b/apps/system/js/homescreen_launcher.js
@@ -42,6 +42,8 @@

     _ready: false,

+    _screen: document.getElementById('screen'),
+
     /**
      * Homescreen launcher is ready or not. Homescreen launcher is ready
      * only when it is done retrieving 'homescreen.manifestURL'
@@ -110,8 +112,9 @@
      */
     start: function hl_start() {
       if (this._started) {
-        return;
+        return this;
       }
+
       this._started = true;
       if (applications.ready) {
         this._fetchSettings();
@@ -128,8 +131,12 @@
       window.addEventListener('cardviewbeforeclose', this);
       window.addEventListener('shrinking-start', this);
       window.addEventListener('shrinking-stop', this);
+      window.addEventListener('homescreenopened', this);
+      window.addEventListener('homescreenclosing', this);
+      window.addEventListener('homescreenclosed', this);
       window.addEventListener('software-button-enabled', this);
       window.addEventListener('software-button-disabled', this);
+      return this;
     },

     /**
@@ -155,6 +162,9 @@
       window.removeEventListener('cardviewbeforeclose', this);
       window.removeEventListener('shrinking-start', this);
       window.removeEventListener('shrinking-stop', this);
+      window.removeEventListener('homescreenopened', this);
+      window.removeEventListener('homescreenclosing', this);
+      window.removeEventListener('homescreenclosed', this);
       window.removeEventListener('software-button-enabled', this);
       window.removeEventListener('software-button-disabled', this);
       this._started = false;
@@ -211,6 +221,13 @@
           // To resume the homescreen after shrinking UI is over.
           this.getHomescreen().showFadeOverlay();
           break;
+        case 'homescreenopened':
+          this._screen.classList.add('on-homescreen');
+          break;
+        case 'homescreenclosing':
+        case 'homescreenclosed':
+          this._screen.classList.remove('on-homescreen');
+          break;
         case 'software-button-enabled':
         case 'software-button-disabled':
           var homescreen = this.getHomescreen();
diff --git a/apps/system/js/homescreen_window.js b/apps/system/js/homescreen_window.js
index ba8b54d..c2b0a4f 100644
--- a/apps/system/js/homescreen_window.js
+++ b/apps/system/js/homescreen_window.js
@@ -106,7 +106,6 @@
   HomescreenWindow.SUB_COMPONENTS = {
     'transitionController': window.AppTransitionController,
     'modalDialog': window.AppModalDialog,
-    'valueSelector': window.ValueSelector,
     'authDialog': window.AppAuthenticationDialog,
     'childWindowFactory': window.ChildWindowFactory
   };
@@ -159,10 +158,14 @@
     }
   };

+  HomescreenWindow.prototype.kill = function hw_kill() {
+    this.destroy();
+    this.publish('terminated');
+  };
+
   HomescreenWindow.prototype.view = function hw_view() {
     return '<div class="appWindow homescreen" id="homescreen">' +
               '<div class="fade-overlay"></div>' +
-              '<div class="statusbar-overlay"></div>' +
            '</div>';
   };

diff --git a/apps/system/js/icc_worker.js b/apps/system/js/icc_worker.js
index 0e81804..58e602c 100644
--- a/apps/system/js/icc_worker.js
+++ b/apps/system/js/icc_worker.js
@@ -326,7 +326,7 @@ var icc_worker = {
       'icc.data': JSON.stringify(message)
     });
     reqIccData.onsuccess = function icc_getIccData() {
-      if (AppWindowManager.getApp(application)) {
+      if (AppWindowManager.getApps(application)) {
         return DUMP('Settings is running. Ignoring');
       }
       navigator.mozApps.mgmt.getAll().onsuccess = function gotApps(evt) {
diff --git a/apps/system/js/keyboard_manager.js b/apps/system/js/keyboard_manager.js
index 8055fde..e706ca8 100644
--- a/apps/system/js/keyboard_manager.js
+++ b/apps/system/js/keyboard_manager.js
@@ -93,7 +93,6 @@ var KeyboardManager = {
   },
   hasActiveKeyboard: false,
   isOutOfProcessEnabled: false,
-  totalMemory: 0,

   init: function km_init() {
     // generate typeTable
@@ -111,15 +110,6 @@ var KeyboardManager = {
         this.isOutOfProcessEnabled = value;
       }.bind(this));

-    if ('getFeature' in navigator) {
-      navigator.getFeature('hardware.memory').then(function(mem) {
-        this.totalMemory = mem;
-      }.bind(this), function() {
-        console.error('KeyboardManager: ' +
-          'Failed to retrive total memory of the device.');
-      });
-    }
-
     this.keyboardFrameContainer = document.getElementById('keyboards');

     this.notifIMEContainer =
@@ -422,15 +412,7 @@ var KeyboardManager = {
     keyboard.setAttribute('mozpasspointerevents', 'true');
     keyboard.setAttribute('mozapp', layout.manifestURL);

-    var manifest =
-      window.applications.getByManifestURL(layout.manifestURL).manifest;
-    var isCertifiedApp = (manifest.type === 'certified');
-
-    // oop is always enabled for non-certified app,
-    // and optionally enabled to certified apps if
-    // available memory is more than 512MB.
-    if (this.isOutOfProcessEnabled &&
-        (!isCertifiedApp || this.totalMemory >= 512)) {
+    if (this.isOutOfProcessEnabled) {
       console.log('=== Enable keyboard: ' + layout.origin + ' run as OOP ===');
       keyboard.setAttribute('remote', 'true');
       keyboard.setAttribute('ignoreuserfocus', 'true');
diff --git a/apps/system/js/layout_manager.js b/apps/system/js/layout_manager.js
index b4802c8..45c5f39 100644
--- a/apps/system/js/layout_manager.js
+++ b/apps/system/js/layout_manager.js
@@ -1,5 +1,5 @@
-/* global KeyboardManager, softwareButtonManager, System,
-          AttentionScreen */
+/* global KeyboardManager, softwareButtonManager, StatusBar,
+          System */
 'use strict';

 (function(exports) {
@@ -55,7 +55,7 @@
     get height() {
       var height = window.innerHeight -
         (this.keyboardEnabled ? KeyboardManager.getHeight() : 0) -
-        AttentionScreen.statusHeight -
+        StatusBar.height -
         softwareButtonManager.height;

       // Normalizing the height so that it always translates to an integral
@@ -111,6 +111,7 @@
       window.addEventListener('mozfullscreenchange', this);
       window.addEventListener('software-button-enabled', this);
       window.addEventListener('software-button-disabled', this);
+      return this;
     },

     handleEvent: function lm_handleEvent(evt) {
diff --git a/apps/system/js/lockscreen.js b/apps/system/js/lockscreen.js
index 26d6cf0..7054098 100755
--- a/apps/system/js/lockscreen.js
+++ b/apps/system/js/lockscreen.js
@@ -326,28 +326,23 @@
         if (evt.detail.type === 'status') {
           switch (evt.detail.data.playStatus) {
             case 'PLAYING':
+              this.notificationsContainer.classList.add('collapsed');
+              break;
             case 'PAUSED':
-              window.lockScreenNotifications.collapseNotifications();
-              window.lockScreenNotifications.adjustContainerVisualHints();
+              this.notificationsContainer.classList.add('collapsed');
               break;
             case 'STOPPED':
+              this.notificationsContainer.classList.remove('collapsed');
+              break;
             case 'mozinterruptbegin':
-              window.lockScreenNotifications.expandNotifications();
-              window.lockScreenNotifications.adjustContainerVisualHints();
+              this.notificationsContainer.classList.remove('collapsed');
               break;
           }
         }
         break;
       case 'appterminated':
         if (evt.detail.origin === this.mediaPlaybackWidget.origin) {
-          window.lockScreenNotifications.expandNotifications();
-          window.lockScreenNotifications.adjustContainerVisualHints();
-        }
-        break;
-      case 'scroll':
-        if (this.notificationsContainer === evt.target) {
-          window.lockScreenNotifications.adjustContainerVisualHints();
-          break;
+          this.notificationsContainer.classList.remove('collapsed');
         }
         break;
     }
@@ -490,8 +485,6 @@
       }
     }).bind(this));

-    this.notificationsContainer.addEventListener('scroll', this);
-
     navigator.mozL10n.ready(this.l10nInit.bind(this));

     // when lockscreen is just initialized,
@@ -506,8 +499,6 @@
     // Clock always uses one Timeouts/Intervals so it's safe in
     // other scenarios (such as turning on lockscreen after boot in settings)
     this.clock.start(this.refreshClock.bind(this));
-
-    window.lockScreenNotifications.bindLockScreen(this);
   };

   LockScreen.prototype.initUnlockerEvents =
@@ -1113,7 +1104,7 @@
         'alt-camera', 'alt-camera-button', 'slide-handle',
         'passcode-pad', 'camera', 'accessibility-camera',
         'accessibility-unlock', 'panel-emergency-call', 'canvas', 'message',
-        'notification-arrow', 'masked-background'];
+        'masked-background'];

     var toCamelCase = function toCamelCase(str) {
       return str.replace(/\-(.)/g, function replacer(str, p1) {
diff --git a/apps/system/js/lockscreen_connection_info_manager.js b/apps/system/js/lockscreen_connection_info_manager.js
new file mode 100644
index 0000000..f9bbcaf
--- /dev/null
+++ b/apps/system/js/lockscreen_connection_info_manager.js
@@ -0,0 +1,311 @@
+'use strict';
+
+(function(exports) {
+  var _lockedStateMsgMap = {
+    'unknown': 'emergencyCallsOnly-unknownSIMState',
+    'pinRequired': 'emergencyCallsOnly-pinRequired',
+    'pukRequired': 'emergencyCallsOnly-pukRequired',
+    'networkLocked': 'emergencyCallsOnly-networkLocked',
+    'serviceProviderLocked': 'emergencyCallsOnly-serviceProviderLocked',
+    'corporateLocked': 'emergencyCallsOnly-corporateLocked',
+    'network1Locked': 'emergencyCallsOnly-network1Locked',
+    'network2Locked': 'emergencyCallsOnly-network2Locked',
+    'hrpdNetworkLocked' : 'emergencyCallsOnly-hrpdNetworkLocked',
+    'ruimCorporateLocked' : 'emergencyCallsOnly-ruimCorporateLocked',
+    'ruimServiceProviderLocked' : 'emergencyCallsOnly-ruimServiceProviderLocked'
+  };
+
+  /*
+  * Types of 2G Networks
+  */
+  var _NETWORKS_2G = ['gsm', 'gprs', 'edge'];
+
+  /**
+   * Constructor of LockScreenConnInfoManager. LockScreenConnInfoManager updates
+   * mobile connection related information on lockscreen.
+   *
+   * @param {HTMLElement} root The root element of connection states.
+   * @constructor LockScreenConnInfoManager
+   */
+  var LockScreenConnInfoManager = function(root) {
+    if (root) {
+      this._initialize(root);
+    }
+  };
+
+  var LockScreenConnInfoManagerPrototype = {
+    _connStates: null,
+    _settings: null,
+    _cellbroadcastLabel: null,
+    /*
+     * Telephony default service ID
+     */
+    _telephonyDefaultServiceId: 0,
+    /*
+     * Airplane mode
+     */
+    _airplaneMode: false
+  };
+
+  /**
+   * Initialize connection state elements and event handlers.
+   *
+   * @param {HTMLElement} root The root element of connection states.
+   */
+  LockScreenConnInfoManagerPrototype._initialize =
+    function lscs_initialize(root) {
+      this._connStates = root;
+      this._settings = navigator.mozSettings;
+
+      this._connStates.hidden = false;
+      SIMSlotManager.getSlots().forEach(function(simslot, index) {
+        // connection state
+        this._connStates.appendChild(this._createConnStateElement());
+        simslot.conn.addEventListener('voicechange',
+          (function(index) {
+            this.updateConnState(simslot);
+        }).bind(this));
+      }, this);
+
+      // event handlers
+      navigator.mozL10n.ready(this.updateConnStates.bind(this));
+
+      window.addEventListener('simslot-cardstatechange', (function(evt) {
+        this.updateConnState(evt.detail);
+      }).bind(this));
+
+      window.addEventListener('simslot-iccinfochange', (function(evt) {
+        this.updateConnState(evt.detail);
+      }).bind(this));
+
+      // Handle incoming CB messages that need to be displayed.
+      window.addEventListener('cellbroadcastmsgchanged', (function(evt) {
+        this._cellbroadcastLabel = evt.detail;
+        this.updateConnStates();
+      }).bind(this));
+
+      this._settings.addObserver('ril.radio.disabled', (function(evt) {
+        this._airplaneMode = evt.settingValue;
+        this.updateConnStates();
+      }).bind(this));
+
+      this._settings.addObserver('ril.telephony.defaultServiceId',
+        (function(evt) {
+          this._telephonyDefaultServiceId = evt.settingValue;
+          this.updateConnStates();
+      }).bind(this));
+
+      // update UI
+      var req = SettingsListener.getSettingsLock().get('ril.radio.disabled');
+      req.onsuccess = (function() {
+        this._airplaneMode = !!req.result['ril.radio.disabled'];
+        var req2 =
+          SettingsListener.getSettingsLock()
+            .get('ril.telephony.defaultServiceId');
+        req2.onsuccess = (function() {
+          this._telephonyDefaultServiceId =
+            req2.result['ril.telephony.defaultServiceId'] || 0;
+          this.updateConnStates();
+        }).bind(this);
+      }).bind(this);
+  };
+
+  /**
+   * Create connection state element.
+   *
+   * @this {LockScreenConnInfoManager}
+   */
+  LockScreenConnInfoManagerPrototype._createConnStateElement =
+    function lscs_createConnStateElement() {
+      //
+      // <div>
+      //   <span></span>
+      //   <span class="connstate-line"></span>
+      //   <span class="connstate-line"></span>
+      // </div>
+      //
+
+      var div = document.createElement('div');
+      var span = document.createElement('span');
+      var line1 = document.createElement('span');
+      var line2 = document.createElement('span');
+
+      line1.className = line2.className = 'connstate-line';
+      div.appendChild(span);
+      div.appendChild(line1);
+      div.appendChild(line2);
+
+      return div;
+  };
+
+  /**
+   * Update states of all sim slots.
+   *
+   * @this {LockScreenConnInfoManager}
+   */
+  LockScreenConnInfoManagerPrototype.updateConnStates =
+    function lscs_updateConnStates() {
+      SIMSlotManager.getSlots().forEach((function(simslot) {
+        this.updateConnState(simslot);
+      }).bind(this));
+  };
+
+  /**
+   * This is a helper function that uses a flag dataset.content
+   * to determine if the line has content or not.
+   *
+   * The content of the connstateLine may come from l10nId or manually
+   * injected text content.
+   */
+  function lineText(node, l10nId, l10nArgs, text) {
+    if (!l10nId && !text) {
+      node.setAttribute('data-content', true);
+    } else {
+      node.removeAttribute('data-content');
+    }
+
+    navigator.mozL10n.localize(node, l10nId, l10nArgs);
+
+    if (text) {
+      node.textContent = text;
+    }
+  }
+
+  /**
+   * Update the state of a sim slot.
+   *
+   * @param {SIMSlot} simslot
+   * @this {LockScreenConnInfoManager}
+   */
+  LockScreenConnInfoManagerPrototype.updateConnState =
+    function lscs_updateConnState(simslot) {
+      var conn = simslot.conn;
+      var index = simslot.index;
+
+      var connstate = this._connStates.children[index];
+      var simIDLine = connstate.children[0];
+      var connstateLines =
+        Array.prototype.slice.call(
+          connstate.querySelectorAll('.connstate-line'));
+      var iccObj = simslot.simCard;
+      var voice = conn.voice;
+
+      connstate.hidden = false;
+
+      // Set sim ID line
+      if (SIMSlotManager.isMultiSIM()) {
+        simIDLine.hidden = false;
+        lineText(simIDLine, 'lockscreen-sim-id', {n: (index + 1)});
+      } else {
+        simIDLine.hidden = true;
+      }
+
+      // Reset Lines
+      connstateLines.forEach(function(line) {
+        lineText(line);
+      });
+      var nextLine = function() {
+        for (var i = 0; i < connstateLines.length; i++) {
+          var line = connstateLines[i];
+          if (line.hasAttribute('data-content')) {
+            return line;
+          }
+        }
+        return connstateLines[connstateLines.length - 1];
+      };
+
+      // Airplane mode
+      if (this._airplaneMode) {
+        // Only show one airplane mode status
+        if (index == 0) {
+          lineText(nextLine(), 'airplaneMode');
+        } else {
+          connstate.hidden = true;
+        }
+        simIDLine.hidden = true;
+        return;
+      }
+
+      // If there is no sim card on the device, we only show one information.
+      if (SIMSlotManager.noSIMCardOnDevice()) {
+        if (index == 0) {
+          if (voice.emergencyCallsOnly) {
+            lineText(nextLine(), 'emergencyCallsOnly');
+            lineText(nextLine(), 'emergencyCallsOnly-noSIM');
+          } else {
+            lineText(nextLine(), 'emergencyCallsOnly-noSIM');
+          }
+        }
+        simIDLine.hidden = true;
+        return;
+      } else if (SIMSlotManager.noSIMCardConnectedToNetwork()) {
+        if (index == 0) {
+          lineText(nextLine(), 'emergencyCallsOnly');
+        }
+        simIDLine.hidden = true;
+        return;
+      }
+
+      // If there are multiple sim slots and only one sim card inserted, we
+      // only show the state of the inserted sim card.
+      if (SIMSlotManager.isMultiSIM() &&
+          navigator.mozIccManager.iccIds.length == 1 &&
+          simslot.isAbsent()) {
+        connstate.hidden = true;
+        return;
+      }
+
+      // Possible value of voice.state are:
+      // 'notSearching', 'searching', 'denied', 'registered',
+      // where the latter three mean the phone is trying to grab the network.
+      // See https://bugzilla.mozilla.org/show_bug.cgi?id=777057
+      if (voice && 'state' in voice && voice.state == 'notSearching') {
+        lineText(nextLine(), 'noNetwork');
+        return;
+      }
+
+      if (!voice.connected && !voice.emergencyCallsOnly) {
+        // "Searching"
+        // voice.state can be any of the latter three values.
+        // (it's possible that the phone is briefly 'registered'
+        // but not yet connected.)
+        lineText(nextLine(), 'searching');
+        return;
+      }
+
+      if (voice.emergencyCallsOnly) {
+        if (this._telephonyDefaultServiceId == index) {
+          lineText(nextLine(), 'emergencyCallsOnly');
+          lineText(nextLine(), _lockedStateMsgMap[iccObj.cardState]);
+        } else {
+          connstate.hidden = true;
+        }
+        return;
+      }
+
+      var operatorInfos = MobileOperator.userFacingInfo(conn);
+      var operator = operatorInfos.operator;
+      var is2G = _NETWORKS_2G.some(function checkConnectionType(elem) {
+        return (conn.voice.type == elem);
+      });
+
+      if (voice.roaming) {
+        var l10nArgs = { operator: operator };
+        lineText(nextLine(), 'roaming', l10nArgs);
+      } else {
+        lineText(nextLine(), null, null, operator);
+      }
+
+
+      if (this._cellbroadcastLabel && is2G) {
+        lineText(nextLine(), null, null, this._cellbroadcastLabel);
+      } else if (operatorInfos.carrier) {
+        var l10nArgs = { carrier: operatorInfos.carrier,
+                         region: operatorInfos.region };
+        lineText(nextLine(), 'operator-info', l10nArgs);
+      }
+  };
+
+  LockScreenConnInfoManager.prototype = LockScreenConnInfoManagerPrototype;
+  exports.LockScreenConnInfoManager = LockScreenConnInfoManager;
+})(window);
diff --git a/apps/system/js/lockscreen_notifications.js b/apps/system/js/lockscreen_notifications.js
deleted file mode 100644
index 8f14956..0000000
--- a/apps/system/js/lockscreen_notifications.js
+++ /dev/null
@@ -1,191 +0,0 @@
-/* -*- Mode: js; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /
-/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */
-'use strict';
-
-(function(exports) {
-  /**
-   * Manage Notifications in Lockscreen:
-   * Handle notification changes from Notifications, and
-   * update Lockscreen visuals accordingly.
-   *
-   * @constructor LockScreenNotifications
-   */
-  var LockScreenNotifications = function() {};
-
-  LockScreenNotifications.prototype = {
-    /*
-     * The LockScreen this module is operating on
-     */
-    _lockScreen: null
-  };
-
-  /**
-   * Bind lockscreen onto this module
-   *
-   * @this {LockScreenNotifications}
-   * @memberof LockScreenNotifications
-   * @param bindLockScreen the lockScreen instance
-   */
-  LockScreenNotifications.prototype.bindLockScreen =
-  function lsn_bindLockScreen(lockScreen) {
-    this._lockScreen = lockScreen;
-  };
-
-  /**
-   * When we have notifications, show bgcolor from wallpaper
-   * Remove the simple gradient at the same time
-   *
-   * @memberof LockScreenNotifications
-   * @this {LockScreenNotifications}
-   */
-  LockScreenNotifications.prototype.showColoredMaskBG =
-  function lsn_showColoredMaskBG() {
-    this._lockScreen.maskedBackground.style.backgroundColor =
-      this._lockScreen.maskedBackground.dataset.wallpaperColor;
-
-    this._lockScreen.maskedBackground.classList.remove('blank');
-  };
-
-  /**
-   * When we don't have notifications, use the
-   * simple gradient as lockscreen's masked background
-   *
-   * @memberof LockScreenNotifications
-   * @this {LockScreenNotifications}
-   */
-  LockScreenNotifications.prototype.hideColoredMaskBG =
-  function lsn_hideColoredMaskBG() {
-    this._lockScreen.maskedBackground.style.backgroundColor = 'transparent';
-    this._lockScreen.maskedBackground.classList.add('blank');
-  };
-
-  /**
-   * We use a smaller notifications container when we have a media player
-   * widget on the lockscreen. This function collapses the container.
-   *
-   * @memberof LockScreenNotifications
-   * @this {LockScreenNotifications}
-   */
-  LockScreenNotifications.prototype.collapseNotifications =
-  function lsn_collapseNotifications() {
-    this._lockScreen.notificationsContainer.classList.add('collapsed');
-    this._lockScreen.notificationArrow.classList.add('collapsed');
-  };
-
-  /**
-   * ...and this function expands the container.
-   *
-   * @memberof LockScreenNotifications
-   * @this {LockScreenNotifications}
-   */
-  LockScreenNotifications.prototype.expandNotifications =
-  function lsn_expandNotifications() {
-    this._lockScreen.notificationsContainer.classList.remove('collapsed');
-    this._lockScreen.notificationArrow.classList.remove('collapsed');
-  };
-
-  /**
-   * adjust the container's visual hints: masks and "more notification" arrow
-   * @memberof LockScreenNotifications
-   * @this {LockScreenNotifications}
-   */
-  LockScreenNotifications.prototype.adjustContainerVisualHints =
-  function lsn_adjustContainerVisualHints() {
-    var notificationsContainer = this._lockScreen.notificationsContainer;
-
-    /* mask:
-     * the gradient masks only show when:
-     * - "top" mask: when the user scrolls to bottom (this is a solid mask)
-     * - "both" mask: when the user scrolls in between (this is a gradient mask)
-     * (but we need to rule out the situation that
-     * the container isn't actually scrollable)
-     */
-    if(notificationsContainer.clientHeight ===
-       notificationsContainer.scrollHeight){
-      // no mask if the container can't be scrolled
-      this._setMaskVisibility(false, false);
-    }else{
-      if(notificationsContainer.scrollTop +
-      notificationsContainer.clientHeight ===
-      notificationsContainer.scrollHeight){
-        // user scrolls to bottom -> top mask
-        this._setMaskVisibility(true, false);
-      }else if(0 === notificationsContainer.scrollTop){
-        // user scrolls to top -> no mask
-        this._setMaskVisibility(false, false);
-      }else{
-        // anything in between -> "both" mask
-        this._setMaskVisibility(false, true);
-      }
-    }
-
-    /*
-     * arrow:
-     * The "more notifications" arrow only shows
-     * when the user is on the top of the container
-     * and the container is scrollable
-     */
-    this._setArrowVisibility(
-      0 === notificationsContainer.scrollTop &&
-      notificationsContainer.clientHeight <
-      notificationsContainer.scrollHeight
-    );
-  };
-
-  /**
-   * Sets the masks' visibility.
-   *
-   * @private
-   * @memberof LockScreenNotifications
-   * @this {LockScreenNotifications}
-   * @param top Boolen shows top solid mask or not
-   * @param both Boolen shows top-and-bottom gradient masks or not
-   */
-  LockScreenNotifications.prototype._setMaskVisibility =
-  function lsn__setMaskVisibility(top, both) {
-    var notificationsContainer = this._lockScreen.notificationsContainer;
-
-    if(top){
-      notificationsContainer.classList.add('masked-top');
-    }else{
-      notificationsContainer.classList.remove('masked-top');
-    }
-
-    if(both){
-      notificationsContainer.classList.add('masked-both');
-    }else{
-      notificationsContainer.classList.remove('masked-both');
-    }
-  };
-
-  /**
-   * Sets the arrow's visibility.
-   *
-   * @private
-   * @memberof LockScreenNotifications
-   * @this {LockScreenNotifications}
-   * @param top Boolen shows top solid mask or not
-   * @param both Boolen shows top-and-bottom gradient masks or not
-   */
-  LockScreenNotifications.prototype._setArrowVisibility =
-  function lsn__setArrowVisibility(visible) {
-    var notificationArrow = this._lockScreen.notificationArrow;
-
-    if(visible){
-      notificationArrow.classList.add('visible');
-    }else{
-      notificationArrow.classList.remove('visible');
-    }
-  };
-
-  /**
-   * Scrolls the notifications to the top
-   */
-  LockScreenNotifications.prototype.scrollToTop =
-  function lsn_scrollToTop() {
-    this._lockScreen.notificationsContainer.scrollTop = 0;
-  };
-
-  /** @exports LockScreenWindowManager */
-  exports.LockScreenNotifications = LockScreenNotifications;
-})(window);
diff --git a/apps/system/js/lockscreen_window.js b/apps/system/js/lockscreen_window.js
index 1af8e7c..5e28a71 100644
--- a/apps/system/js/lockscreen_window.js
+++ b/apps/system/js/lockscreen_window.js
@@ -1,5 +1,6 @@
 /* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /
 /* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */
+/* global StatusBar */
 'use strict';

 (function(exports) {
@@ -92,7 +93,7 @@
     var height, width;

     // We want the lockscreen to go below the StatusBar
-    height = self.layoutManager.height;
+    height = self.layoutManager.height + StatusBar.height;
     width = self.layoutManager.width;

     this.width = width;
diff --git a/apps/system/js/lockscreen_window_manager.js b/apps/system/js/lockscreen_window_manager.js
index 3464f0f..70a3039 100644
--- a/apps/system/js/lockscreen_window_manager.js
+++ b/apps/system/js/lockscreen_window_manager.js
@@ -347,7 +347,14 @@
       // we close the window.
       var activeApp = window.AppWindowManager ?
             window.AppWindowManager.getActiveApp() : null;
-      if (!activeApp) {
+      if (detail && detail.activity) {
+        // Need to invoke activity
+        var a = new window.MozActivity(detail.activity);
+        a.onerror = function ls_activityError() {
+          console.log('MozActivity: lockscreen invoke activity error.');
+        };
+        this.closeApp();
+      } else if (!activeApp) {
         this.closeApp();
       } else {
         activeApp.ready(this.closeApp.bind(this));
diff --git a/apps/system/js/media_recording.js b/apps/system/js/media_recording.js
index bf70bd9..9c6a84e 100644
--- a/apps/system/js/media_recording.js
+++ b/apps/system/js/media_recording.js
@@ -33,6 +33,7 @@
       this.container = document.getElementById('media-recoding-status-list');

       window.addEventListener('mozChromeEvent', this);
+      return this;
     },

     /**
diff --git a/apps/system/js/mobileid_dialog.js b/apps/system/js/mobileid_dialog.js
index c4a1b79..4adc447 100644
--- a/apps/system/js/mobileid_dialog.js
+++ b/apps/system/js/mobileid_dialog.js
@@ -20,105 +20,106 @@
     this.publish('created');
   };

-  MobileIdDialog.prototype = Object.create(window.SystemDialog.prototype);
-
-  MobileIdDialog.prototype.customID = 'mobileid-dialog';
-
-  MobileIdDialog.prototype.DEBUG = false;
-
-  MobileIdDialog.prototype.panel = null;
-  MobileIdDialog.prototype.iframe = null;
-
-  MobileIdDialog.prototype.view = function mobileid_view() {
-    return '<div id="' + this.instanceID + '" role="dialog" hidden></div>';
-  };
-
-  MobileIdDialog.prototype.createIframe =
-  function mobileid_getIFrame(onLoaded) {
-    this.iframe = document.createElement('iframe');
-    this.iframe.id = 'mobileid-iframe';
-    this.iframe.src = '/mobile_id/index.html';
-    this.iframe.style.width = '100%';
-    this.iframe.style.height = '100%';
-    this.getView().appendChild(this.iframe);
-    this.iframe.onload = function onLoaded() {
-      if (typeof this.options.onLoaded === 'function') {
-        this.options.onLoaded();
+  MobileIdDialog.prototype = {
+
+    __proto__: window.SystemDialog.prototype,
+
+    customID: 'mobileid-dialog',
+
+    DEBUG: false,
+
+    panel: null,
+    iframe: null,
+
+    view: function mobileid_view() {
+      return '<div id="' + this.instanceID + '" role="dialog" hidden></div>';
+    },
+
+    createIframe: function mobileid_getIFrame(onLoaded) {
+      this.iframe = document.createElement('iframe');
+      this.iframe.id = 'mobileid-iframe';
+      this.iframe.src = '/mobile_id/index.html';
+      this.iframe.style.width = '100%';
+      this.iframe.style.height = '100%';
+      this.getView().appendChild(this.iframe);
+      this.iframe.onload = function onLoaded() {
+        if (typeof this.options.onLoaded === 'function') {
+          this.options.onLoaded();
+        }
+        // We open with a transition
+        this.open(function onOpened() {
+          // Once the iframe is loaded, we send the params to render
+          this.dispatchEvent('shown');
+        }.bind(this));
+      }.bind(this);
+
+      return this.iframe;
+    },
+
+    dispatchEvent: function mobileid_dispatchEvent(eventName, params) {
+      if (!this.iframe) {
+        return;
       }
-      // We open with a transition
-      this.open(function onOpened() {
-        // Once the iframe is loaded, we send the params to render
-        this.dispatchEvent('shown');
-      }.bind(this));
-    }.bind(this);
-
-    return this.iframe;
-  };

-  MobileIdDialog.prototype.dispatchEvent =
-  function mobileid_dispatchEvent(eventName, params) {
-    if (!this.iframe) {
-      return;
+      var event = new CustomEvent(
+        eventName,
+        {
+          detail: params
+        }
+      );
+      this.iframe.contentWindow.dispatchEvent(event);
+    },
+
+    getView: function mobileid_getIFrame() {
+      return document.getElementById(this.instanceID);
+    },
+
+    open: function mobileid_open(onOpened) {
+      // Cache the main panel
+      this.panel = this.getView();
+      // Show it
+      this.show();
+      // If something should happen after the transition
+      // we add a listener
+      var onTransitionEnd = function onOpenedAnimation() {
+        this.panel.classList.remove('opening');
+        this.panel.removeEventListener('animationend', onTransitionEnd);
+
+        if (typeof onOpened === 'function') {
+          onOpened();
+        }
+      }.bind(this);
+
+      this.panel.addEventListener(
+        'animationend',
+        onTransitionEnd
+      );
+      // Add a transition to show it properly
+      this.panel.classList.add('opening');
+    },
+
+    close: function mobileid_close(onClosed) {
+      var onTransitionEnd = function onClosedAnimation() {
+        this.panel.removeEventListener('animationend', onTransitionEnd);
+        this.panel.innerHTML = '';
+        this.panel.classList.remove('closing');
+        this.panel.classList.remove('opening');
+        this.panel = null;
+
+        if (typeof onClosed === 'function') {
+          onClosed();
+        }
+
+        this.hide();
+      }.bind(this);
+
+      this.panel.addEventListener(
+        'animationend',
+        onTransitionEnd
+      );
+
+      this.panel.classList.add('closing');
     }
-
-    var event = new CustomEvent(
-      eventName,
-      {
-        detail: params
-      }
-    );
-    this.iframe.contentWindow.dispatchEvent(event);
-  };
-
-  MobileIdDialog.prototype.getView = function mobileid_getIFrame() {
-    return document.getElementById(this.instanceID);
-  };
-
-  MobileIdDialog.prototype.open = function mobileid_open(onOpened) {
-    // Cache the main panel
-    this.panel = this.getView();
-    // Show it
-    this.show();
-    // If something should happen after the transition
-    // we add a listener
-    var onTransitionEnd = function onOpenedAnimation() {
-      this.panel.classList.remove('opening');
-      this.panel.removeEventListener('animationend', onTransitionEnd);
-
-      if (typeof onOpened === 'function') {
-        onOpened();
-      }
-    }.bind(this);
-
-    this.panel.addEventListener(
-      'animationend',
-      onTransitionEnd
-    );
-    // Add a transition to show it properly
-    this.panel.classList.add('opening');
-  };
-
-  MobileIdDialog.prototype.close = function mobileid_close(onClosed) {
-    var onTransitionEnd = function onClosedAnimation() {
-      this.panel.removeEventListener('animationend', onTransitionEnd);
-      this.panel.innerHTML = '';
-      this.panel.classList.remove('closing');
-      this.panel.classList.remove('opening');
-      this.panel = null;
-
-      if (typeof onClosed === 'function') {
-        onClosed();
-      }
-
-      this.hide();
-    }.bind(this);
-
-    this.panel.addEventListener(
-      'animationend',
-      onTransitionEnd
-    );
-
-    this.panel.classList.add('closing');
   };

   exports.MobileIdDialog = MobileIdDialog;
diff --git a/apps/system/js/mock_simslot.js b/apps/system/js/mock_simslot.js
new file mode 100644
index 0000000..265c2fa
--- /dev/null
+++ b/apps/system/js/mock_simslot.js
@@ -0,0 +1,30 @@
+/* exported MockSIMSlot */
+'use strict';
+
+var MockSIMSlot = function(conn, index) {
+  this.conn = conn;
+  this.index = index;
+  this.absent = false;
+  this.locked = false;
+  this.simCard = {
+    cardState: null
+  };
+  this.update = function() {};
+  this.isAbsent = function() { return this.absent; };
+  this.isLocked = function() { return this.locked; };
+  // Inject method
+  ['sendStkResponse', 'sendStkMenuSelection',
+    'sendStkTimerExpiration', 'sendStkEventDownload'].forEach(function(name) {
+      this[name] = function() {};
+    }, this);
+
+  // Inject dom request
+  ['getCardLock', 'unlockCardLock', 'setCardLock',
+    'getCardLockRetryCount', 'readContacts',
+    'updateContact', 'iccOpenChannel', 'iccExchangeAPDU',
+    'iccCloseChannel'].forEach(function(name) {
+      this[name] = function() {
+        return {};
+      };
+    }, this);
+};
diff --git a/apps/system/js/mock_simslot_manager.js b/apps/system/js/mock_simslot_manager.js
new file mode 100644
index 0000000..05864e7
--- /dev/null
+++ b/apps/system/js/mock_simslot_manager.js
@@ -0,0 +1,23 @@
+/* exported MockSIMSlotManager */
+'use strict';
+var MockSIMSlotManager = {
+  ready: false,
+  mInstances: [],
+  getSlots: function mssm_getSlots() {
+    return this.mInstances;
+  },
+  get length() {
+    return this.mInstances.length;
+  },
+  isMultiSIM: function mssm_isMultiSIM() {
+    return (this.mInstances.length > 1);
+  },
+  isSIMCardAbsent: function mssm_isSIMCardAbsent(i) {
+    return this.mInstances[i].isAbsent();
+  },
+  noSIMCardOnDevice: function() {},
+  noSIMCardConnectedToNetwork: function() {},
+  mTeardown: function mssm_mTeardown() {
+    this.mInstances = [];
+  }
+};
diff --git a/apps/system/js/net_error.js b/apps/system/js/net_error.js
index c57e8b3..f37dce8 100644
--- a/apps/system/js/net_error.js
+++ b/apps/system/js/net_error.js
@@ -43,9 +43,9 @@
       case 'app':
         return false;

-      // If we are in a "browser" frame, we are either in a browser tab/system
+      // If we are in a "browser" frame, we are either in a browser tab/system
       // bookmark, or mozbrowser iframe within in app. Since system
-      // bookmarks are considered unframed, we must perform a check here to
+      // bookmarks are considered unframed, we must perform a check here to
       // distinguish between the two cases.
       case 'browser':
         return manifestURL !== window.SYSTEM_MANIFEST;
@@ -217,36 +217,40 @@
     ErrorView.call(this, error, title, message);
   };

-  FramedErrorView.prototype = Object.create(ErrorView.prototype);
+  FramedErrorView.prototype = {
+    __proto__: ErrorView.prototype,

-  FramedErrorView.prototype.applyStyle = function few_applyStyle() {
-    ErrorView.prototype.applyStyle.call(this);
-    document.body.classList.add('framed');
-  };
+    applyStyle: function few_applyStyle() {
+      ErrorView.prototype.applyStyle.call(this);
+      document.body.classList.add('framed');
+    },

-  FramedErrorView.prototype.addHandlers = function few_addHandlers() {
-    document.body.onclick = function bodyClick() {
-      document.getElementById('retry-icon').classList.remove('still');
-      NetError.reload(true);
-    };
+    addHandlers: function few_addHandlers() {
+      document.body.onclick = function bodyClick() {
+        document.getElementById('retry-icon').classList.remove('still');
+        NetError.reload(true);
+      };
+    }
   };

   var AppErrorView = function(error, title, message) {
     ErrorView.call(this, error, title, message);
   };

-  AppErrorView.prototype = Object.create(ErrorView.prototype);
+  AppErrorView.prototype = {
+    __proto__: ErrorView.prototype,

-  AppErrorView.prototype.applyStyle = function few_applyStyle() {
-    ErrorView.prototype.applyStyle.call(this);
-    document.body.classList.add('no-frame');
-  };
+    applyStyle: function few_applyStyle() {
+      ErrorView.prototype.applyStyle.call(this);
+      document.body.classList.add('no-frame');
+    },

-  AppErrorView.prototype.addHandlers = function aew_addHandlers() {
-    document.getElementById('retry-btn').onclick = function retryClick() {
-      NetError.reload(true);
-    };
-    document.getElementById('close-btn').onclick = closeWindow;
+    addHandlers: function aew_addHandlers() {
+      document.getElementById('retry-btn').onclick = function retryClick() {
+        NetError.reload(true);
+      };
+      document.getElementById('close-btn').onclick = closeWindow;
+    }
   };

   // Dns error view
@@ -254,24 +258,26 @@
     AppErrorView.call(this, error, title, message);
   };

-  DnsErrorAppErrorView.prototype = Object.create(AppErrorView.prototype);
+  DnsErrorAppErrorView.prototype = {
+    __proto__: AppErrorView.prototype,

-  DnsErrorAppErrorView.prototype.populateMessages =
-  function noew_populateMessages() {
-    localizeElement(this.title, this.titleText);
-    localizeElement(this.message, this.messageText, { name: this.error.u });
+    populateMessages: function noew_populateMessages() {
+      localizeElement(this.title, this.titleText);
+      localizeElement(this.message, this.messageText, { name: this.error.u });
+    }
   };

   var DnsErrorFramedErrorView = function(error, title, message) {
     FramedErrorView.call(this, error, title, message);
   };

-  DnsErrorFramedErrorView.prototype = Object.create(FramedErrorView.prototype);
+  DnsErrorFramedErrorView.prototype = {
+    __proto__: FramedErrorView.prototype,

-  DnsErrorFramedErrorView.prototype.populateMessages =
-  function noew_populateMessages() {
-    localizeElement(this.title, this.titleText);
-    localizeElement(this.message, this.messageText, { name: this.error.u });
+    populateMessages: function noew_populateMessages() {
+      localizeElement(this.title, this.titleText);
+      localizeElement(this.message, this.messageText, { name: this.error.u });
+    }
   };

   // Offline view
@@ -280,44 +286,44 @@
     this.node = document.getElementById('net-error-action-menu');
   };

-  NetOfflineAppErrorView.prototype = Object.create(AppErrorView.prototype);
-
-  NetOfflineAppErrorView.prototype.populateMessages =
-  function noew_populateMessages() {
-    if (hasHistory()) {
-      localizeElement(this.title, 'network-error-in-app');
-    } else {
-      getAppName((function localizeTitle(appName) {
-        localizeElement(this.title, 'network-error-launching', {
-          name: appName
-        });
-      }).bind(this));
-    }
-  };
+  NetOfflineAppErrorView.prototype = {
+    __proto__: AppErrorView.prototype,
+
+    populateMessages: function noew_populateMessages() {
+      if (hasHistory()) {
+        localizeElement(this.title, 'network-error-in-app');
+      } else {
+        getAppName((function localizeTitle(appName) {
+          localizeElement(this.title, 'network-error-launching', {
+            name: appName
+          });
+        }).bind(this));
+      }
+    },

-  NetOfflineAppErrorView.prototype.addHandlers = function noew_addHandlers() {
-    addConnectionHandlers();
-    document.getElementById('settings-btn').onclick = showSettingsView;
-    document.getElementById('cancel-btn').onclick = cancel;
+    addHandlers: function noew_addHandlers() {
+      addConnectionHandlers();
+      document.getElementById('settings-btn').onclick = showSettingsView;
+      document.getElementById('cancel-btn').onclick = cancel;
+    }
   };

   var NetOfflineFramedErrorView = function(error) {
     FramedErrorView.call(this, error);
   };

-  NetOfflineFramedErrorView.prototype =
-    Object.create(FramedErrorView.prototype);
+  NetOfflineFramedErrorView.prototype = {
+    __proto__: FramedErrorView.prototype,

-  NetOfflineFramedErrorView.prototype.populateMessages =
-  function noew_populateMessages() {
-    localizeElement(this.title, 'unable-to-connect');
-    localizeElement(this.message, 'tap-to-check-settings');
-  };
+    populateMessages: function noew_populateMessages() {
+      localizeElement(this.title, 'unable-to-connect');
+      localizeElement(this.message, 'tap-to-check-settings');
+    },

-  NetOfflineFramedErrorView.prototype.addHandlers =
-  function noew_addHandlers() {
-    addConnectionHandlers();
-    document.body.onclick = showSettingsView;
+    addHandlers: function noew_addHandlers() {
+      addConnectionHandlers();
+      document.body.onclick = showSettingsView;
+    }
   };

   // Confirm views
@@ -325,11 +331,13 @@
     AppErrorView.call(this, error, title, message);
   };

-  ConfirmAppErrorView.prototype = Object.create(AppErrorView.prototype);
+  ConfirmAppErrorView.prototype = {
+    __proto__: AppErrorView.prototype,

-  ConfirmAppErrorView.prototype.applyStyle = function caew_applyStyle() {
-    AppErrorView.prototype.applyStyle.call(this);
-    document.body.classList.add('dialog');
+    applyStyle: function caew_applyStyle() {
+      AppErrorView.prototype.applyStyle.call(this);
+      document.body.classList.add('dialog');
+    }
   };

   // Alert view
@@ -337,11 +345,13 @@
     AppErrorView.call(this, error, title, message);
   };

-  AlertAppErrorView.prototype = Object.create(AppErrorView.prototype);
+  AlertAppErrorView.prototype = {
+    __proto__: AppErrorView.prototype,

-  AlertAppErrorView.prototype.applyStyle = function aaew_applyStyle() {
-    AppErrorView.prototype.applyStyle.call(this);
-    document.body.classList.add('dialog', 'alert');
+    applyStyle: function aaew_applyStyle() {
+      AppErrorView.prototype.applyStyle.call(this);
+      document.body.classList.add('dialog', 'alert');
+    },
   };

   var views = {
diff --git a/apps/system/js/nfc_handover_manager.js b/apps/system/js/nfc_handover_manager.js
index f7a5d18..f525495 100644
--- a/apps/system/js/nfc_handover_manager.js
+++ b/apps/system/js/nfc_handover_manager.js
@@ -4,7 +4,7 @@
 /* Copyright © 2013, Deutsche Telekom, Inc. */

 /* globals dump, BluetoothTransfer, NDEFUtils, NfcConnectSystemDialog,
-           NDEF, NfcUtils, NotificationHelper */
+           NDEF */
 /* exported NfcHandoverManager */
 'use strict';

@@ -69,22 +69,6 @@ var NfcHandoverManager = {
   sendFileQueue: [],

   /**
-   * The length of the timeout in milliseconds to wait for an outstanding
-   * handover response.
-   * @type {Number}
-   * @memberof NfcHandoverManager.prototype
-   */
-  responseTimeoutMillis: 6000,
-
-  /**
-   * Set whenever a timeout is defined while waiting for an outstanding handover
-   * response.
-   * @type {Object}
-   * @memberof NfcHandoverManager.prototype
-   */
-  responseTimeoutFunction: null,
-
-  /**
    * Set to true during a file transfer that was initiated by another device.
    * @type {boolean}
    * @memberof NfcHandoverManager.prototype
@@ -300,49 +284,6 @@ var NfcHandoverManager = {
   },

   /**
-   * Show an error notification when file transfer failed.
-   * @param {String} name Optional file name.
-   * @memberof NfcHandoverManager.prototype
-   */
-  _showFailedNotification: function _showFailedNotification(title, name) {
-    var _ = navigator.mozL10n.get;
-    var fileName = (name !== undefined) ? name : '';
-    var icon = 'style/bluetooth_transfer/images/icon_bluetooth.png';
-    NotificationHelper.send(_(title),
-                            fileName,
-                            icon);
-  },
-
-  /**
-   * This function will be called after a timeout when we did not receive the
-   * Hs record within three seconds. At this point we cancel the file transfer.
-   * @memberof NfcHandoverManager.prototype
-   */
-  _cancelSendFileTransfer: function _cancelSendFileTransfer() {
-    this._debug('_cancelSendFileTransfer');
-    this.responseTimeoutFunction = null;
-    var job = this.sendFileQueue.pop();
-    job.onerror();
-    this._showFailedNotification('transferFinished-sentFailed-title',
-                                 job.blob.name);
-    this._restoreBluetoothStatus();
-  },
-
-  /**
-   * This function will be called after a timeout when we did not receive
-   * the Hs record within three seconds. At this point we cancel the file
-   * transfer.
-   * @memberof NfcHandoverManager.prototype
-   */
-  _cancelIncomingFileTransfer: function _cancelIncomingFileTransfer() {
-    this._debug('_cancelIncomingFileTransfer');
-    this.responseTimeoutFunction = null;
-    this.incomingFileTransferInProgress = false;
-    this._showFailedNotification('transferFinished-receivedFailed-title');
-    this._restoreBluetoothStatus();
-  },
-
-  /**
    * Performs bluetooth file transfer if this.sendFileRequest exists
    * to other device
    * @param {string} mac MAC address of the other device
@@ -376,16 +317,7 @@ var NfcHandoverManager = {
       return;
     }

-    var nfcPeer;
-    try {
-      nfcPeer = this.nfc.getNFCPeer(session);
-    } catch (ex) {
-      this._debug('NFC peer went away during doHandoverRequest');
-      this._showFailedNotification('transferFinished-receivedFailed-title');
-      this._restoreBluetoothStatus();
-      return;
-    }
-
+    var nfcPeer = this.nfc.getNFCPeer(session);
     var cps = this.bluetooth.enabled ? NDEF.CPS_ACTIVE : NDEF.CPS_ACTIVATING;
     var mac = this.defaultAdapter.address;
     var hs = NDEFUtils.encodeHandoverSelect(mac, cps);
@@ -397,13 +329,8 @@ var NfcHandoverManager = {
     };
     req.onerror = function() {
       self._debug('sendNDEF(hs) failed');
-      self._clearTimeout();
       self._restoreBluetoothStatus();
     };
-    this._clearTimeout();
-    this.responseTimeoutFunction =
-      setTimeout(this._cancelIncomingFileTransfer.bind(this),
-                 this.responseTimeoutMillis);
   },

   /**
@@ -428,20 +355,10 @@ var NfcHandoverManager = {
       var onerror = function() {
         self._dispatchSendFileStatus(1, requestId);
       };
-      var nfcPeer;
-      try {
-        nfcPeer = this.nfc.getNFCPeer(session);
-      } catch (ex) {
-        this._debug('NFC peer went away during initiateFileTransfer');
-        onerror();
-        this._restoreBluetoothStatus();
-        this._showFailedNotification('transferFinished-sentFailed-title',
-                                     blob.name);
-        return;
-      }
       var job = {session: session, blob: blob, requestId: requestId,
                  onsuccess: onsuccess, onerror: onerror};
       this.sendFileQueue.push(job);
+      var nfcPeer = this.nfc.getNFCPeer(session);
       var cps = this.bluetooth.enabled ? NDEF.CPS_ACTIVE : NDEF.CPS_ACTIVATING;
       var mac = this.defaultAdapter.address;
       var hr = NDEFUtils.encodeHandoverRequest(mac, cps);
@@ -453,15 +370,8 @@ var NfcHandoverManager = {
         self._debug('sendNDEF(hr) failed');
         onerror();
         self.sendFileQueue.pop();
-        self._clearTimeout();
         self._restoreBluetoothStatus();
-        self._showFailedNotification('transferFinished-sentFailed-title',
-                                     blob.name);
       };
-      this._clearTimeout();
-      this.responseTimeoutFunction =
-        setTimeout(this._cancelSendFileTransfer.bind(this),
-                   this.responseTimeoutMillis);
   },

   /**
@@ -503,21 +413,6 @@ var NfcHandoverManager = {
   },

   /**
-   * Clears timeout that handles the case an outstanding handover message
-   * has not been received within a certain timeframe.
-   * @memberof NfcHandoverManager.prototype
-   */
-  _clearTimeout: function _clearTimeout() {
-    this._debug('_clearTimeout');
-    if (this.responseTimeoutFunction != null) {
-      // Clear the timeout that handles error
-      this._debug('clearing timeout');
-      clearTimeout(this.responseTimeoutFunction);
-      this.responseTimeoutFunction = null;
-    }
-  },
-
-  /**
    * Dispatches status of file sending to mozNfc.
    * @param {number} status status of file send operation
    * @param {string} request ID of the operation
@@ -553,9 +448,8 @@ var NfcHandoverManager = {
    * @param {Array} ndef NDEF message containing simplified pairing record
    * @memberof NfcHandoverManager.prototype
    */
-  _handleSimplifiedPairingRecord:
-  function _handleSimplifiedPairingRecord(ndef) {
-    this._debug('_handleSimplifiedPairingRecord');
+  handleSimplifiedPairingRecord: function handleSimplifiedPairingRecord(ndef) {
+    this._debug('handleSimplifiedPairingRecord');
     var pairingRecord = ndef[0];
     var btssp = NDEFUtils.parseBluetoothSSP(pairingRecord);
     this._debug('Simplified pairing with: ' + btssp.mac);
@@ -567,9 +461,8 @@ var NfcHandoverManager = {
    * @param {Array} ndef NDEF message containing handover select record
    * @memberof NfcHandoverManager.prototype
    */
-  _handleHandoverSelect: function _handleHandoverSelect(ndef) {
-    this._debug('_handleHandoverSelect');
-    this._clearTimeout();
+  handleHandoverSelect: function handleHandoverSelect(ndef) {
+    this._debug('handleHandoverSelect');
     var btssp = this._getBluetoothSSP(ndef);
     if (btssp == null) {
       return;
@@ -588,45 +481,13 @@ var NfcHandoverManager = {
    * @param {Array} ndef NDEF message containing handover request record
    * @memberof NfcHandoverManager.prototype
    */
-  _handleHandoverRequest: function _handleHandoverRequest(ndef, session) {
-    this._debug('_handleHandoverRequest');
+  handleHandoverRequest: function handleHandoverRequest(ndef, session) {
+    this._debug('handleHandoverRequest');
     this._saveBluetoothStatus();
     this._doAction({callback: this._doHandoverRequest, args: [ndef, session]});
   },

   /**
-   * Checks if the first record of NDEF message is a handover record.
-   * If yes the NDEF message is handled according to handover record type.
-   * @param {Array} ndefMsg array of NDEF records
-   * @param {string} session session token
-   * @returns {boolean} true if handover record was found and handled, false
-   * if no handover record was found
-   * @memberof NfcHandoverManager.prototype
-   */
-  tryHandover: function(ndefMsg, session) {
-    if (!Array.isArray(ndefMsg) || !ndefMsg.length) {
-      return false;
-    }
-
-    var record = ndefMsg[0];
-    if (record.tnf === NDEF.TNF_WELL_KNOWN) {
-      if (NfcUtils.equalArrays(record.type, NDEF.RTD_HANDOVER_SELECT)) {
-        this._handleHandoverSelect(ndefMsg);
-        return true;
-      } else if (NfcUtils.equalArrays(record.type, NDEF.RTD_HANDOVER_REQUEST)) {
-        this._handleHandoverRequest(ndefMsg, session);
-        return true;
-      }
-    } else if ((record.tnf === NDEF.TNF_MIME_MEDIA) &&
-        NfcUtils.equalArrays(record.type, NDEF.MIME_BLUETOOTH_OOB)) {
-      this._handleSimplifiedPairingRecord(ndefMsg);
-      return true;
-    }
-
-    return false;
-  },
-
-  /**
    * Trigger a file transfer with a remote device via BT.
    * @param {String} session NFC session ID.
    * @param {Blob} blob File to be sent.
@@ -651,14 +512,6 @@ var NfcHandoverManager = {
   },

   /**
-   * BluetoothTransfer notifies us that a file transfer has started.
-   * @memberof NfcHandoverManager.prototype
-   */
-  transferStarted: function transferStarted() {
-    this._clearTimeout();
-  },
-
-  /**
    * Tells NfcHandoverManager that a BT file transfer
    * has been completed.
    * @param details succeeded True if file transfer was successfull.
diff --git a/apps/system/js/nfc_manager.js b/apps/system/js/nfc_manager.js
index 56680cb..1514b1e 100644
--- a/apps/system/js/nfc_manager.js
+++ b/apps/system/js/nfc_manager.js
@@ -46,7 +46,7 @@ var NfcManager = {
       if (optObject) {
         output += JSON.stringify(optObject);
       }
-      dump(output + '\n');
+      dump(output);
     }
   },

@@ -153,36 +153,20 @@ var NfcManager = {
    * Parses NDEF message and returns options object which is used to create
    * MozActivity. It checks the first NDEF record and basing on tnf value
    * passes the record for further parsing of paylod and type to helper methods.
-   * If first record is valid, options object will contain the whole NDEF
+   * If first record is valid, options object will contain the whole NDEF
    * message, so the app can access other records and handle them appropriately.
    * TODO: together with helper methods should be moved to different file
    * TODO: more appropriate name needed
    * @param {Array} NDEF message - an array of NDEF records
    * @returns {Object} options - object used to construct MozActivity
-   * @returns {Array} options.data.records - NDEF message
+   * @returns {Array} options.data.records - NDEF message
    */
   handleNdefMessage: function nm_handleNdefMessage(ndefMsg) {
     var options = null;

-    var record = ndefMsg[0] || { tnf: NDEF.TNF_EMPTY };
-
-    var smartPoster = ndefMsg.filter(function isSmartPoster(r) {
-      return NfcUtils.equalArrays(r.type, NDEF.RTD_SMART_POSTER);
-    })[0];
-
-    // NFCForum-SmartPoster_RTD_1.0, 3.4:
-    // If an NDEF message contains one or multiple URI [URI] records
-    // in addition to the Smart Poster record at the top level (i.e.,
-    // not nested), the Smart Poster record overrides them. The NDEF
-    // application MUST use only the Smart Poster record.
-    if (record.tnf === NDEF.TNF_WELL_KNOWN &&
-        NfcUtils.equalArrays(record.type, NDEF.RTD_URI) &&
-        smartPoster) {
-
-      record = smartPoster;
-    }
-
+    var record = (ndefMsg.length !== 0) ? ndefMsg[0] : { tnf: NDEF.TNF_EMPTY };
     this._debug('RECORD: ' + JSON.stringify(record));
+
     switch (+record.tnf) {
       case NDEF.TNF_EMPTY:
         options = this.createActivityOptionsWithType('empty');
@@ -363,11 +347,34 @@ var NfcManager = {
     window.dispatchEvent(new CustomEvent('nfc-tech-discovered'));
     window.navigator.vibrate([25, 50, 125]);

-    if (NfcHandoverManager.tryHandover(msg.records, msg.sessionToken)) {
-      return;
+    if (msg.records.length !== 0) {
+      /* First check for handover messages that
+       * are handled by the handover manager.
+       */
+      var firstRecord = msg.records[0];
+      if ((firstRecord.tnf == NDEF.TNF_MIME_MEDIA) &&
+          NfcUtils.equalArrays(firstRecord.type, NDEF.MIME_BLUETOOTH_OOB)) {
+        this._debug('Handle simplified pairing record');
+        NfcHandoverManager.handleSimplifiedPairingRecord(msg.records);
+        return;
+      }
+      if ((firstRecord.tnf == NDEF.TNF_WELL_KNOWN) &&
+          NfcUtils.equalArrays(firstRecord.type, NDEF.RTD_HANDOVER_SELECT)) {
+        this._debug('Handle Handover Select');
+        NfcHandoverManager.handleHandoverSelect(msg.records);
+        return;
+      }
+      if ((firstRecord.tnf == NDEF.TNF_WELL_KNOWN) &&
+          NfcUtils.equalArrays(firstRecord.type, NDEF.RTD_HANDOVER_REQUEST)) {
+        this._debug('Handle Handover Request');
+        NfcHandoverManager.handleHandoverRequest(msg.records, msg.sessionToken);
+        return;
+      }
     }

+    this._debug('msg.techList: ' + msg.techList);
     var tech = this.getPrioritizedTech(msg.techList);
+    // One shot try. Fallback directly to tag.
     switch (tech) {
       case 'P2P':
         if (!msg.records.length) {
@@ -427,7 +434,9 @@ var NfcManager = {
     } else if (NfcUtils.equalArrays(record.type, NDEF.RTD_URI)) {
       return this.formatURIRecord(record);
     } else if (NfcUtils.equalArrays(record.type, NDEF.RTD_SMART_POSTER)) {
-      return this.formatSmartPosterRecords(record);
+      // Smartposters can be multipart NDEF messages.
+      // The meaning and actions are application dependent.
+      return this.createActivityOptionsWithType('smartposter');
     } else {
       this._debug('Unknown record type: ' + JSON.stringify(record));
     }
@@ -502,61 +511,6 @@ var NfcManager = {
     return options;
   },

-  formatSmartPosterRecords: function nm_formatSmartPosterRecords(smartposter) {
-    this._debug('formatSmartPosterRecords');
-
-    // Smart poster contains embedded records in it's payload.
-    var buffer = NfcUtils.createBuffer(smartposter.payload);
-    var records = NfcUtils.parseNDEF(buffer);
-
-    // First, decode URI. It's treated specially, because it's the only
-    // mandatory record in a smart poster.
-    var URIRecords = records.filter(function (record) {
-      return NfcUtils.equalArrays(record.type, NDEF.RTD_URI);
-    });
-
-    if (URIRecords.length !== 1) {
-      this._debug('Invalid smart poster message. Should contain exactly ' +
-        'one URI record, but contains ' + URIRecords.length);
-      return null;
-    }
-
-    var options = this.formatURIRecord(URIRecords[0]);
-    var data = options.data;
-
-    // Now decode all other records and attach their data
-    // to URI options.
-    for (var r = 0; r < records.length; r += 1) {
-      var record = records[r];
-      var typeStr = NfcUtils.toUTF8(record.type);
-
-      if (NfcUtils.equalArrays(record.type, NDEF.RTD_TEXT)) {
-        data.text = data.text || {};
-
-        var textData = this.formatTextRecord(record).data;
-
-        if (data.text[textData.language]) {
-          // According to NFCForum-SmartPoster_RTD_1.0 3.3.2,
-          // there MUST NOT be two or more records with
-          // the same language identifier.
-          return null;
-        }
-
-        data.text[textData.language] = textData.text;
-      } else if ('act' === typeStr) {
-        data.action = record.payload[0];
-      } else if (NDEF.TNF_MIME_MEDIA === record.tnf) {
-        data.icons = data.icons || [];
-        data.icons.push({
-          type: NfcUtils.toUTF8(record.type),
-          bytes: record.payload
-        });
-      }
-    }
-
-    return options;
-  },
-
   formatMimeMedia: function nm_formatMimeMedia(record) {
     this._debug('HandleMimeMedia');
     if (this.isTypeMatch(record.type,
diff --git a/apps/system/js/notifications.js b/apps/system/js/notifications.js
index 157faf3..b200ca8 100644
--- a/apps/system/js/notifications.js
+++ b/apps/system/js/notifications.js
@@ -186,6 +186,7 @@ var NotificationScreen = {
     if (!target.dataset.notificationId)
       return;

+    evt.preventDefault();
     this._notification = target;
     this._containerWidth = this.container.clientWidth;
   },
@@ -293,7 +294,7 @@ var NotificationScreen = {
     this.lockScreenContainer = this.lockScreenContainer ||
       document.getElementById('notifications-lockscreen-container');
     var notificationNode = document.createElement('div');
-    notificationNode.classList.add('notification');
+    notificationNode.className = 'notification';
     notificationNode.setAttribute('role', 'link');

     notificationNode.dataset.notificationId = detail.id;
@@ -313,45 +314,38 @@ var NotificationScreen = {
       notificationNode.appendChild(icon);
     }

+    var time = document.createElement('span');
+    var timestamp = detail.timestamp ? new Date(detail.timestamp) : new Date();
+    time.classList.add('timestamp');
+    time.dataset.timestamp = timestamp;
+    time.textContent = this.prettyDate(timestamp);
+    notificationNode.appendChild(time);
+
     var dir = (detail.bidi === 'ltr' ||
                detail.bidi === 'rtl') ?
           detail.bidi : 'auto';

-    var titleContainer = document.createElement('div');
-    titleContainer.classList.add('title-container');
-    titleContainer.lang = detail.lang;
-    titleContainer.dir = dir;
-
     var title = document.createElement('div');
     title.classList.add('title');
     title.textContent = detail.title;
+    notificationNode.appendChild(title);
     title.lang = detail.lang;
     title.dir = dir;
-    titleContainer.appendChild(title);
-
-    var time = document.createElement('span');
-    var timestamp = detail.timestamp ? new Date(detail.timestamp) : new Date();
-    time.classList.add('timestamp');
-    time.dataset.timestamp = timestamp;
-    time.textContent = this.prettyDate(timestamp);
-    titleContainer.appendChild(time);
-
-    notificationNode.appendChild(titleContainer);

     var message = document.createElement('div');
     message.classList.add('detail');
     message.textContent = detail.text;
+    notificationNode.appendChild(message);
     message.lang = detail.lang;
     message.dir = dir;
-    notificationNode.appendChild(message);

     var notifSelector = '[data-notification-id="' + detail.id + '"]';
     var oldNotif = this.container.querySelector(notifSelector);
     if (oldNotif) {
       // The whole node cannot be replaced because CSS animations are re-started
-      oldNotif.replaceChild(titleContainer,
-        oldNotif.querySelector('.title-container'));
+      oldNotif.replaceChild(title, oldNotif.querySelector('.title'));
       oldNotif.replaceChild(message, oldNotif.querySelector('.detail'));
+      oldNotif.replaceChild(time, oldNotif.querySelector('.timestamp'));
       var oldIcon = oldNotif.querySelector('img');
       if (icon) {
         oldIcon ? oldIcon.src = icon.src : oldNotif.insertBefore(icon,
@@ -430,26 +424,12 @@ var NotificationScreen = {
         );
       }

-      window.lockScreenNotifications.showColoredMaskBG();
-
-      // UX specifies that the container should scroll to top
-      /* note two things:
-       * 1. we need to call adjustContainerVisualHints even
-       *    though we're setting scrollTop, since setting sT doesn't
-       *    necessarily invoke onscroll (if the old container is already
-       *    scrolled to top, we might still need to decide to show
-       *    the arrow)
-       * 2. set scrollTop before calling adjustContainerVisualHints
-       *    since sT = 0 will hide the mask if it's showing,
-       *    and if we call aCVH before setting sT,
-       *    under some circumstances aCVH would decide to show mask,
-       *    only to be negated by st = 0 (waste of energy!).
-       */
-      window.lockScreenNotifications.scrollToTop();
-
-      // check if lockscreen notifications visual
-      // hints (masks & arrow) need to show
-      window.lockScreenNotifications.adjustContainerVisualHints();
+      // when we have notifications, show bgcolor from wallpaper
+      // remove the simple gradient at the same time
+      window.lockScreen.maskedBackground.style.backgroundColor =
+        window.lockScreen.maskedBackground.dataset.wallpaperColor;
+
+      window.lockScreen.maskedBackground.classList.remove('blank');
     }

     if (notify && !this.isResending) {
@@ -517,6 +497,12 @@ var NotificationScreen = {

   closeNotification: function ns_closeNotification(notificationNode) {
     var notificationId = notificationNode.dataset.notificationId;
+    var event = document.createEvent('CustomEvent');
+    event.initCustomEvent('mozContentNotificationEvent', true, true, {
+      type: 'desktop-notification-close',
+      id: notificationId
+    });
+    window.dispatchEvent(event);
     this.removeNotification(notificationId);
   },

@@ -530,30 +516,20 @@ var NotificationScreen = {
         this.lockScreenContainer.querySelector(notifSelector);
     }

-    if (notificationNode) {
+    if (notificationNode)
       notificationNode.parentNode.removeChild(notificationNode);
-    }
-
-    var event = document.createEvent('CustomEvent');
-    event.initCustomEvent('mozContentNotificationEvent', true, true, {
-      type: 'desktop-notification-close',
-      id: notificationId
-    });
-    window.dispatchEvent(event);

     if (lockScreenNotificationNode) {
       var lockScreenNotificationParentNode =
         lockScreenNotificationNode.parentNode;
       lockScreenNotificationParentNode.removeChild(lockScreenNotificationNode);
-      // if we don't have any notifications,
-      // use the no-notifications masked background for lockscreen
+      // if we don't have any notifications, remove the bgcolor from wallpaper
+      // and use the simple gradient
       if (!lockScreenNotificationParentNode.firstElementChild) {
-        window.lockScreenNotifications.hideColoredMaskBG();
+        window.lockScreen.maskedBackground.style.backgroundColor =
+          'transparent';
+        window.lockScreen.maskedBackground.classList.add('blank');
       }
-
-      // check if lockscreen notifications visual
-      // hints (masks & arrow) need to show
-      window.lockScreenNotifications.adjustContainerVisualHints();
     }
     this.updateStatusBarIcon();

@@ -578,12 +554,10 @@ var NotificationScreen = {
       var element = this.lockScreenContainer.firstElementChild;
       this.lockScreenContainer.removeChild(element);
     }
-
-    // remove the "have notifications" masked background from lockscreen
-    window.lockScreenNotifications.hideColoredMaskBG();
-    // check if lockscreen notifications visual
-    // hints (masks & arrow) need to show
-    window.lockScreenNotifications.adjustContainerVisualHints();
+    // remove the bgcolor from wallpaper,
+    // and use the simple gradient
+    window.lockScreen.maskedBackground.style.backgroundColor = 'transparent';
+    window.lockScreen.maskedBackground.classList.add('blank');
   },

   updateStatusBarIcon: function ns_updateStatusBarIcon(unread) {
diff --git a/apps/system/js/operator_variant/operator_variant.js b/apps/system/js/operator_variant/operator_variant.js
index 68fd4e9..92de751 100644
--- a/apps/system/js/operator_variant/operator_variant.js
+++ b/apps/system/js/operator_variant/operator_variant.js
@@ -93,43 +93,6 @@
       return r;
     },

-    /**
-     * Utility function to merge default apn settings (from apn.json) to
-     * existing apn settings.
-     *
-     * @param {Array} apns
-     *                Existing apns.
-     * @param {Array} defaultApns
-     *                Default apns. Note that in the array there should be no
-     *                apn with the carrier name "_custom_".
-     */
-    mergeAndKeepCustomApnSettings:
-      function ovh_mergeApnSettings(apns, defaultApns) {
-        var existingCustomApns = apns.filter(function(apn) {
-          return (apn.carrier === '_custom_');
-        });
-
-        // Find the apn types of the custom apns.
-        var typesOfCustomApn = new Set();
-        existingCustomApns.forEach(function(apn) {
-          apn.types.forEach(function(type) {
-            typesOfCustomApn.add(type);
-          });
-        });
-
-        // We only need to set the apns of the types that are not covered by
-        // the custom apns.
-        var apnsToBeSet = defaultApns.filter(function(apn) {
-          // Remove the type that is already covered by the custom apns.
-          apn.types = apn.types.filter(function(type) {
-            return !typesOfCustomApn.has(type);
-          });
-          return !!apn.types.length;
-        });
-        apnsToBeSet = apnsToBeSet.concat(existingCustomApns);
-
-        return apnsToBeSet;
-    },

     /**
      * Apply the carrier settings relaying on the MCC and MNC values. This
@@ -528,16 +491,8 @@
         if (!result || !Array.isArray(result)) {
           result = [[], []];
         }
+        result[this._iccCardIndex] = apnSettings;

-        // We should respect to the existing custom settings if any. Instead of
-        // overwriting it with "apnSettings" compeletely, we should only
-        // overwrite the apn settings that are not configured by custom settings
-        // by using the result of "mergeAndKeepCustomApnSettings".
-        var existingApnSettings = result[this._iccCardIndex];
-        var mergedApnSettings =
-          this.mergeAndKeepCustomApnSettings(existingApnSettings, apnSettings);
-
-        result[this._iccCardIndex] = mergedApnSettings;
         transaction.set({'ril.data.apnSettings': result});
       }).bind(this);
     },
diff --git a/apps/system/js/permission_manager.js b/apps/system/js/permission_manager.js
index 845fdfe..8e5fcf2 100644
--- a/apps/system/js/permission_manager.js
+++ b/apps/system/js/permission_manager.js
@@ -449,10 +449,8 @@
       var callback = null;
       if (evt.target === this.yes && this.yes.callback) {
         callback = this.yes.callback;
-        this.responseStatus = 'permission-allow';
       } else if (evt.target === this.no && this.no.callback) {
         callback = this.no.callback;
-        this.responseStatus = 'permission-deny';
       } else if (evt.target === this.moreInfoLink ||
                  evt.target === this.hideInfoLink) {
         this.toggleInfo();
diff --git a/apps/system/js/popup_window.js b/apps/system/js/popup_window.js
index 864f6a7..e677029 100644
--- a/apps/system/js/popup_window.js
+++ b/apps/system/js/popup_window.js
@@ -39,7 +39,6 @@
   PopupWindow.SUB_COMPONENTS = {
     'transitionController': window.AppTransitionController,
     'modalDialog': window.AppModalDialog,
-    'valueSelector': window.ValueSelector,
     'authDialog': window.AppAuthenticationDialog,
     'contextmenu': window.BrowserContextMenu,
     'childWindowFactory': window.ChildWindowFactory
diff --git a/apps/system/js/radio.js b/apps/system/js/radio.js
index 8d14cff..cd404bd 100644
--- a/apps/system/js/radio.js
+++ b/apps/system/js/radio.js
@@ -137,15 +137,14 @@
     _doSetRadioEnabled: function(conn, enabled) {
       var self = this;
       var req = conn.setRadioEnabled(enabled);
+      this._setRadioOpCount++;

       req.onsuccess = function() {
-        self._setRadioOpCount++;
         self._setRadioAfterReqsCalled(enabled);
       };

       req.onerror = function() {
         self._isSetRadioOpError = true;
-        self._setRadioOpCount++;
         self._setRadioAfterReqsCalled(enabled);
       };
     },
diff --git a/apps/system/js/rocketbar.js b/apps/system/js/rocketbar.js
index 2004790..56f2b68 100644
--- a/apps/system/js/rocketbar.js
+++ b/apps/system/js/rocketbar.js
@@ -11,7 +11,6 @@
    * @class Rocketbar
    */
   function Rocketbar() {
-
     // States
     this.enabled = false;
     this.expanded = false;
@@ -20,6 +19,8 @@
     this.active = false;
     this.onHomescreen = false;
     this.newTabPage = false;
+    this.cardView = false;
+    this.waitingOnCardViewLaunch = false;
     this.currentApp = null;

     // Properties
@@ -74,6 +75,13 @@
     EXPANSION_THRESHOLD: 5,

     /**
+     * How many pixels of swipe triggers card view
+     * @type {Number}
+     * @memberof Rocketbar.prototype
+     */
+    TASK_MANAGER_THRESHOLD: 200,
+
+    /**
      * How many pixels of scroll triggers expand
      * @type {Number}
      * @memberof Rocketbar.prototype
@@ -116,7 +124,6 @@
      * @memberof Rocketbar.prototype
      */
     activate: function(callback) {
-      this.show();
       if (this.active) {
         if (callback) {
           callback();
@@ -151,6 +158,7 @@
         return;
       }
       this.active = false;
+      this.cardView = false;
       this.newTabPage = false;
       this.rocketbar.classList.remove('active');
       this.form.classList.add('hidden');
@@ -159,9 +167,6 @@
       this.blur();
       this.screen.classList.remove('rocketbar-focused');
       window.dispatchEvent(new CustomEvent('rocketbar-overlayclosed'));
-      if (this.onHomescreen) {
-        this.enterHome();
-      }
     },

     /**
@@ -175,9 +180,13 @@
       window.addEventListener('applocationchange', this);
       window.addEventListener('appscroll', this);
       window.addEventListener('home', this);
+      window.addEventListener('cardviewclosedhome', this);
+      window.addEventListener('cardviewclosed', this);
+      window.addEventListener('cardviewshown', this);
       window.addEventListener('appopened', this);
       window.addEventListener('homescreenopened', this);
-      window.addEventListener('searchterminated', this);
+      window.addEventListener('stackchanged', this);
+      window.addEventListener('searchcrashed', this);
       window.addEventListener('permissiondialoghide', this);
       window.addEventListener('launchactivity', this, true);

@@ -224,15 +233,31 @@
           this.handleScroll(e);
           break;
         case 'home':
+        case 'cardviewclosedhome':
+          this.handleHome(e);
+          break;
         case 'lockscreen-appopened':
           this.hideResults();
           this.deactivate();
           break;
+        case 'cardviewshown':
+          if (this.waitingOnCardViewLaunch) {
+            this.showTaskManager();
+            this.waitingOnCardViewLaunch = false;
+          }
+          break;
+        case 'cardviewclosed':
+          this.cardView = false;
+          if (this.waitingOnCardViewLaunch) {
+            this.handleClick();
+            this.waitingOnCardViewLaunch = false;
+          }
+        break;
         case 'launchactivity':
           this.handleActivity(e);
           break;
-        case 'searchterminated':
-          this.handleSearchTerminated(e);
+        case 'searchcrashed':
+          this.handleSearchCrashed(e);
           break;
         case 'touchstart':
         case 'touchmove':
@@ -278,6 +303,9 @@
         case 'homescreenopened':
           this.enterHome(e);
           break;
+        case 'stackchanged':
+          this.handleStackChanged(e);
+          break;
         case 'permissiondialoghide':
           if (this.active) {
             this.focus();
@@ -296,8 +324,12 @@
       window.removeEventListener('apptitlechange', this);
       window.removeEventListener('applocationchange', this);
       window.removeEventListener('home', this);
+      window.removeEventListener('cardviewclosed', this);
+      window.removeEventListener('cardviewshown', this);
+      window.removeEventListener('cardviewclosedhome', this);
       window.removeEventListener('appopened', this);
       window.removeEventListener('homescreenopened', this);
+      window.removeEventListener('stackchanged', this);
       window.removeEventListener('permissiondialoghide', this);


@@ -330,11 +362,6 @@
         'manifest.webapp' : '';
     },

-    setInput: function(input) {
-      this.input.value = input;
-      this.rocketbar.classList.toggle('has-text', input.length);
-    },
-
     /**
      * Put Rocketbar in expanded state.
      * @memberof Rocketbar.prototype
@@ -374,21 +401,11 @@
       this.deactivate();
     },

-
-    show: function() {
-      this.rocketbar.style.display = 'block';
-    },
-
-    hide: function() {
-      this.rocketbar.style.display = 'none';
-    },
-
     /**
      * Put Rocketbar into homescreen state.
      * @memberof Rocketbar.prototype
      */
     enterHome: function() {
-      this.hide();
       if (this.onHomescreen) {
         return;
       }
@@ -405,7 +422,6 @@
      * @memberof Rocketbar.prototype
      */
     exitHome: function() {
-      this.show();
       if (!this.onHomescreen) {
         return;
       }
@@ -417,8 +433,8 @@
      * @memberof Rocketbar.prototype
      */
     showResults: function() {
-      if (this.searchWindow && !this.searchWindow.isDead()) {
-        this.searchWindow.open();
+      if (this.searchWindow) {
+        this.searchWindow._setVisible(true);
       }
       this.results.classList.remove('hidden');
     },
@@ -429,7 +445,7 @@
      */
     hideResults: function() {
       if (this.searchWindow) {
-        this.searchWindow.close();
+        this.searchWindow._setVisible(false);
         this.searchWindow.hideContextMenu();
       }

@@ -447,12 +463,36 @@
      * Reset the Rocketbar to its initial empty state.
      */
     clear: function() {
-      this.setInput('');
+      this.input.value = '';
+      this.handleInput();
       this.titleContent.textContent =
         navigator.mozL10n.get('search-or-enter-address');
     },

     /**
+     * Send event to the system app to show the task manager.
+     */
+    fireTaskManagerShow: function() {
+      this.waitingOnCardViewLaunch = true;
+      window.dispatchEvent(new CustomEvent('taskmanagershow'));
+    },
+
+    /**
+     * Show the task manager and clear Rocketbar.
+     * @memberof Rocketbar.prototype
+     */
+    showTaskManager: function() {
+      this.cardView = true;
+      if (this._port) {
+        this._port.postMessage({
+          action: 'showTaskManager'
+        });
+      }
+      this.showResults();
+      this.clear();
+    },
+
+    /**
      * Show New Tab Page.
      * @memberof Rocketbar.prototype
      */
@@ -616,9 +656,9 @@
     */
     handleLocationChange: function(e) {
       if (e.detail.config.url && !e.detail.manifestURL) {
-        this.setInput(e.detail.config.url);
+        this.input.value = e.detail.config.url;
       } else {
-        this.setInput('');
+        this.input.value = '';
       }
       this.titleContent.textContent = '';
       this.updateSearchIndex();
@@ -656,6 +696,10 @@
             !this.onHomescreen) {
             this.collapse();
           }
+          if (dy > this.TASK_MANAGER_THRESHOLD &&
+              !this.active && !this.cardView && !this.waitingOnCardViewLaunch) {
+            this.fireTaskManagerShow();
+          }
           break;
         case 'touchend':
           dy = parseInt(e.changedTouches[0].pageY) -
@@ -709,7 +753,13 @@
     handleInput: function() {
       var input = this.input.value;

-      this.rocketbar.classList.toggle('has-text', input.length);
+      this.rocketbar.classList.toggle('hasText', input.length);
+
+      // If the task manager is shown, hide it
+      if (this.screen.classList.contains('task-manager')) {
+        this.cardView = false;
+        window.dispatchEvent(new CustomEvent('taskmanagerhide'));
+      }

       if (!input && !this.newTabPage &&
           !this.results.classList.contains('hidden')) {
@@ -739,7 +789,7 @@
      * @memberof Rocketbar.prototype
      */
     handleCancel: function(e) {
-      this.setInput('');
+      this.input.value = '';
       this.hideResults();
       this.deactivate();
     },
@@ -775,6 +825,20 @@
     },

     /**
+     * Handle change to sheets stack.
+     * @memberof Rocketbar.prototype
+     */
+    handleStackChanged: function(e) {
+      // Focus the Rocketbar in cards view when stack length reaches zero.
+      if (this.cardView && e.detail.sheets.length === 0) {
+        this.hideResults();
+        this.activate((function() {
+          this.focus();
+        }).bind(this));
+      }
+    },
+
+    /**
      * Instantiates a new SearchWindow.
      * @memberof Rocketbar.prototype
      */
@@ -787,14 +851,15 @@
     },

     /**
-     * Handles when the search app terminates.
+     * Handles when the search app crashes.
      * @memberof Rocketbar.prototype
      */
-    handleSearchTerminated: function(e) {
+    handleSearchCrashed: function(e) {
       if (!this.searchWindow) {
         return;
       }

+      this.clear();
       this.hideResults();
       this.collapse();
       this.deactivate();
@@ -861,13 +926,13 @@

       switch (e.detail.action) {
         case 'render':
-          this.activate(setTimeout.bind(null, this.focus.bind(this)));
+          this.activate(this.focus.bind(this));
           break;
         case 'focus':
           this.focus();
           break;
         case 'input':
-          this.setInput(e.detail.input);
+          this.input.value = e.detail.input;
           this.focus();
           this.handleInput();
           break;
diff --git a/apps/system/js/search_window.js b/apps/system/js/search_window.js
index e9f087f..ff1449e 100644
--- a/apps/system/js/search_window.js
+++ b/apps/system/js/search_window.js
@@ -23,57 +23,50 @@

   SearchWindow.SUB_COMPONENTS = {};

-  SearchWindow.prototype = Object.create(AppWindow.prototype);
+  SearchWindow.prototype = {
+    __proto__: AppWindow.prototype,

-  SearchWindow.prototype._DEBUG = false;
+    _DEBUG: false,

-  SearchWindow.prototype.CLASS_NAME = 'Search';
+    CLASS_NAME: 'Search',

-  SearchWindow.prototype.CLASS_LIST = 'appWindow searchWindow';
+    CLASS_LIST: 'appWindow searchWindow',

-  SearchWindow.prototype.openAnimation = 'immediate';
+    openAnimation: 'zoom-out',

-  SearchWindow.prototype.closeAnimation = 'immediate';
+    closeAnimation: 'zoom-in',

-  SearchWindow.prototype.eventPrefix = 'search';
+    eventPrefix: 'search',

-  SearchWindow.prototype.containerElement =
-    document.getElementById('rocketbar-results');
+    containerElement: document.getElementById('rocketbar-results'),

-  // We don't need to wait.
-  // Kill process will call requestclose to let manager decide
-  // if we want to wait the background needs repaint,
-  // but we don't need it right now.
-  SearchWindow.prototype.requestClose = function() {
-    this.close();
-  };
+    /**
+     * Construct browser config object by manifestURL.
+     * @param {String} url The settings url of the search app.
+     */
+    setBrowserConfig: function(url) {
+      var manifestURL = url ? url.match(/(^.*?:\/\/.*?\/)/)[1] +
+        'manifest.webapp' : '';
+      this.manifestURL = manifestURL;
+      this.searchAppURL = url;
+
+      var app = applications.getByManifestURL(manifestURL);
+      this.origin = app.origin;
+      this.manifestURL = app.manifestURL;
+      this.url = app.origin + '/index.html';
+
+      this.browser_config =
+        new BrowserConfigHelper(this.origin, this.manifestURL);
+
+      this.manifest = this.browser_config.manifest;
+      this.browser_config.url = this.url;
+      this.browser_config.isSearch = true;
+      this.config = this.browser_config;
+      this.isSearch = true;

-  /**
-   * Construct browser config object by manifestURL.
-   * @param {String} url The settings url of the search app.
-   */
-  SearchWindow.prototype.setBrowserConfig = function(url) {
-    var manifestURL = url ? url.match(/(^.*?:\/\/.*?\/)/)[1] +
-      'manifest.webapp' : '';
-    this.manifestURL = manifestURL;
-    this.searchAppURL = url;
-
-    var app = applications.getByManifestURL(manifestURL);
-    this.origin = app.origin;
-    this.manifestURL = app.manifestURL;
-    this.url = app.origin + '/index.html';
-
-    this.browser_config =
-      new BrowserConfigHelper(this.origin, this.manifestURL);
-
-    this.manifest = this.browser_config.manifest;
-    this.browser_config.url = this.url;
-    this.browser_config.isSearch = true;
-    this.config = this.browser_config;
-    this.isSearch = true;
-
-    this.render();
-    this.open();
+      this.render();
+      this.open();
+    }
   };

   exports.SearchWindow = SearchWindow;
diff --git a/apps/system/js/secure_window_manager.js b/apps/system/js/secure_window_manager.js
index d997dca..045bac9 100644
--- a/apps/system/js/secure_window_manager.js
+++ b/apps/system/js/secure_window_manager.js
@@ -51,10 +51,11 @@
       killAnimation: 'immediate',
       listens: ['secure-killapps',
                 'secure-closeapps',
+                'secure-modeon',
+                'secure-modeoff',
                 'secure-appcreated',
                 'secure-appterminated',
-                'secure-apprequestclose',
-                'home'
+                'secure-apprequestclose'
                ]
     }
   };
@@ -65,6 +66,9 @@
    * @listens secure-closeapps - means to close remain apps. It's similar to
    *                             the event above, but would show the closing
    *                             animation.
+   * @listens secure-modeon - the system would be in the secure mode by locking
+   *                          or other reasons.
+   * @listens secure-modeoff - the system now is not in the secure mode anymore.
    * @listens secure-appcreated - when a secure app got created, it would fire
    *                              this event.
    * @listens secure-appterminated - when a secure app got really closed, it
@@ -89,6 +93,12 @@
             this.softKillApps();
           }
           break;
+        case 'secure-modeon':
+          this.resume();
+          break;
+        case 'secure-modeoff':
+          this.suspend();
+          break;
         case 'secure-appcreated':
           app = evt.detail;
           if (this.allowed(app.config)) {
@@ -117,15 +127,43 @@
           app.close(this.states.killMode ?
               this.configs.killAnimation : null);
           break;
-        case 'home':
-          if (0 !== Object.keys(this.states.runningApps).length) {
-            this.softKillApps();
-          }
-          break;
       }
     };

   /**
+   * Remove event listeners except the resuming (`secure-modeon`)
+   * event.
+   *
+   * @private
+   * @this {SecureWindowManager}
+   * @memberof SecureWindowManager
+   */
+  SecureWindowManager.prototype.suspend =
+    function swm_suspend() {
+      this.suspendEvents();
+
+      // Will suspend all events.
+      // But we also want to leave a single entry to resume.
+      self.addEventListener('secure-modeon', this);
+    };
+
+  /**
+   * Hook event listeners back and don't care the resuming
+   * (`secure-modeon`) event anymore.
+   *
+   * @private
+   * @this {SecureWindowManager}
+   * @memberof SecureWindowManager
+   */
+  SecureWindowManager.prototype.resume =
+    function swm_resume() {
+      this.initEvents();
+
+      // To prevent duplicated init.
+      self.removeEventListener('secure-modeon', this);
+    };
+
+  /**
    * @private
    * @this {SecureWindowManager}
    * @memberof SecureWindowManager
@@ -154,6 +192,20 @@
     };

   /**
+   * Remove listeners of events this manager interested in.
+   *
+   * @private
+   * @this {SecureWindowManager}
+   * @memberof SecureWindowManager
+   */
+  SecureWindowManager.prototype.suspendEvents =
+    function swm_suspendEvents() {
+      this.configs.listens.forEach((function _unbind(ename) {
+        self.removeEventListener(ename, this);
+      }).bind(this));
+    };
+
+  /**
    * Close/Kill all manager secure apps, which has been registered
    * while they're created and opened.
    *
diff --git a/apps/system/js/sheets_transition.js b/apps/system/js/sheets_transition.js
index 83d9a55..b114236 100644
--- a/apps/system/js/sheets_transition.js
+++ b/apps/system/js/sheets_transition.js
@@ -6,6 +6,8 @@ var SheetsTransition = {
   _new: null,

   init: function st_init() {
+    window.addEventListener('stackchanged', this.stackChanged.bind(this));
+
     SettingsListener.observe('edgesgesture.enabled', false,
                              this._settingUpdate.bind(this));
   },
@@ -117,6 +119,18 @@ var SheetsTransition = {
     this._snapAway(speed, 'outside-edges-left');
   },

+  stackChanged: function st_stackChanged(e) {
+    var sheets = e.detail.sheets;
+    var position = e.detail.position;
+    for (var i = 0; i < sheets.length; i++) {
+      var sheet = sheets[i].element;
+      var candidate = (this._edgesEnabled) && (position !== -1) &&
+                      (i >= (position - 1) && i <= (position + 1));
+
+      sheet.classList.toggle('edge-candidate', candidate);
+    }
+  },
+
   _snapAway: function st_snapAway(speed, outClass) {
     if (!this._new) {
       this.snapInPlace();
diff --git a/apps/system/js/shrinking_ui.js b/apps/system/js/shrinking_ui.js
index 44ce716..6678e96 100644
--- a/apps/system/js/shrinking_ui.js
+++ b/apps/system/js/shrinking_ui.js
@@ -86,7 +86,6 @@
       window.addEventListener('appcreated', this);
       window.addEventListener('appterminated', this);
       window.addEventListener('appopen', this);
-      window.addEventListener('appwill-become-active', this);
       window.addEventListener('shrinking-start', this);
       window.addEventListener('shrinking-stop', this);
       window.addEventListener('shrinking-receiving', this);
@@ -109,7 +108,6 @@
         case 'appcreated':
         case 'appterminated':
         case 'appopen':
-        case 'appwill-become-active':
           if (!evt.detail || !evt.detail.manifestURL) {
             return;
           }
@@ -143,7 +141,6 @@
           this._unregister(evt.detail.instanceID);
           break;
         case 'appopen':
-        case 'appwill-become-active':
           var config = evt.detail;
           this._switchTo(config.instanceID, config.manifestURL);
           break;
diff --git a/apps/system/js/sim_lock.js b/apps/system/js/sim_lock.js
index 2204af8..6d683e6 100644
--- a/apps/system/js/sim_lock.js
+++ b/apps/system/js/sim_lock.js
@@ -57,11 +57,7 @@ var SimLock = {
   handleEvent: function sl_handleEvent(evt) {
     switch (evt.type) {
       case 'ftuopen':
-        VersionHelper.getVersionInfo().then(function(info) {
-          if (!info.isUpgrade()) {
-            SimPinDialog.close();
-          }
-        });
+        SimPinDialog.close();
         break;
       case 'simpinback':
         var index = evt.detail._currentSlot.index;
@@ -106,18 +102,10 @@ var SimLock = {
         // If the former is true, the SIM PIN dialog should not displayed after
         // unlock, because the camera will be opened (Bug 849718)
         if (evt.detail && evt.detail.activity &&
-            'record' === evt.detail.activity.name) {
+            'record' === evt.detail.activity.name)
           return;
-        }
-        var self = this;
-        // We should wait for lockscreen-appclosed event sent before checking
-        // the value of System.locked in showIfLocked method.
-        window.addEventListener('lockscreen-appclosed',
-          function lockscreenOnClosed() {
-            window.removeEventListener('lockscreen-appclosed',
-              lockscreenOnClosed);
-            self.showIfLocked();
-          });
+
+        this.showIfLocked();
         break;
       case 'appopened':
         // If an app needs 'telephony' or 'sms' permissions (i.e. mobile
@@ -167,13 +155,8 @@ var SimLock = {
     }

     // FTU has its specific SIM PIN UI
-    if (FtuLauncher.isFtuRunning()) {
-      VersionHelper.getVersionInfo().then(function(info) {
-        if (!info.isUpgrade()) {
-          SimPinDialog.close();
-        }
-      });
-    }
+    if (FtuLauncher.isFtuRunning())
+      return false;

     if (this._duringCall) {
       this._showPrevented = true;
diff --git a/apps/system/js/simcard_dialog.js b/apps/system/js/simcard_dialog.js
index 33605e9..af996ba 100644
--- a/apps/system/js/simcard_dialog.js
+++ b/apps/system/js/simcard_dialog.js
@@ -83,7 +83,7 @@ var SimPinDialog = {
   },

   handleCardState: function spl_handleCardState() {
-    var _ = navigator.mozL10n.setAttributes;
+    var _ = navigator.mozL10n.get;

     if (!this._currentSlot) {
       return;
@@ -99,7 +99,7 @@ var SimPinDialog = {
       var retryCount = request.result.retryCount;
       if (retryCount) {
         var l10nArgs = { n: retryCount };
-        _(this.triesLeftMsg, 'inputCodeRetriesLeft', l10nArgs);
+        this.triesLeftMsg.textContent = _('inputCodeRetriesLeft', l10nArgs);
         this.triesLeftMsg.hidden = false;
       }
     }).bind(this);
@@ -116,8 +116,8 @@ var SimPinDialog = {
         break;
       case 'puk':
         this.lockType = lockType;
-        _(this.errorMsgHeader, 'simCardLockedMsg');
-        _(this.errorMsgBody, 'enterPukMsg');
+        this.errorMsgHeader.textContent = _('simCardLockedMsg') || '';
+        this.errorMsgBody.textContent = _('enterPukMsg') || '';
         this.errorMsg.hidden = false;
         this.inputFieldControl(false, true, false, true);
         this.pukInput.focus();
@@ -133,7 +133,7 @@ var SimPinDialog = {
         this.lockType = lockType;
         this.errorMsg.hidden = true;
         this.inputFieldControl(false, false, true, false);
-        _(this.desc, lockType + 'Code');
+        this.desc.textContent = _(lockType + 'Code');
         this.xckInput.focus();
         break;
       default:
@@ -141,10 +141,11 @@ var SimPinDialog = {
         break;
     }
     if (this.lockType !== 'pin' || !SIMSlotManager.isMultiSIM()) {
-      _(this.dialogTitle, this.lockType + 'Title');
+      this.dialogTitle.textContent =
+        _(this.lockType + 'Title') || '';
     } else {
-      _(this.dialogTitle, 'multiSIMpinTitle',
-        { n: this._currentSlot.index + 1 });
+      this.dialogTitle.textContent =
+        _('multiSIMpinTitle', { n: this._currentSlot.index + 1 }) || '';
     }
   },

@@ -165,15 +166,15 @@ var SimPinDialog = {
   },

   showErrorMsg: function spl_showErrorMsg(retry, type) {
-    var _ = navigator.mozL10n.setAttributes;
+    var _ = navigator.mozL10n.get;
     var l10nArgs = { n: retry };

-    _(this.triesLeftMsg, 'inputCodeRetriesLeft', l10nArgs);
-    _(this.errorMsgHeader, type + 'ErrorMsg');
+    this.triesLeftMsg.textContent = _('inputCodeRetriesLeft', l10nArgs);
+    this.errorMsgHeader.textContent = _(type + 'ErrorMsg');
     if (retry !== 1) {
-      _(this.errorMsgBody, type + 'AttemptMsg2', l10nArgs);
+      this.errorMsgBody.textContent = _(type + 'AttemptMsg2', l10nArgs);
     } else {
-      _(this.errorMsgBody, type + 'LastChanceMsg');
+      this.errorMsgBody.textContent = _(type + 'LastChanceMsg');
     }

     this.triesLeftMsg.hidden = false;
@@ -192,7 +193,7 @@ var SimPinDialog = {
   },

   unlockPuk: function spl_unlockPuk() {
-    var _ = navigator.mozL10n.setAttributes;
+    var _ = navigator.mozL10n.get;

     var puk = this.pukInput.value;
     var newPin = this.newPinInput.value;
@@ -202,8 +203,8 @@ var SimPinDialog = {
     }

     if (newPin !== confirmPin) {
-      _(this.errorMsgHeader, 'newPinErrorMsg');
-      _(this.errorMsgBody, '');
+      this.errorMsgHeader.textContent = _('newPinErrorMsg');
+      this.errorMsgBody.textContent = '';
       this.errorMsg.hidden = false;
       return;
     }
diff --git a/apps/system/js/simslot.js b/apps/system/js/simslot.js
new file mode 100644
index 0000000..72031ba
--- /dev/null
+++ b/apps/system/js/simslot.js
@@ -0,0 +1,137 @@
+'use strict';
+
+(function(window) {
+  var _start = Date.now();
+  var DEBUG = false;
+
+  /**
+   * SIMSlot is the API wrapper for each mobileConnection,
+   * and since one mobileConnection matches one SIM slot,
+   * we call it SIMSlot.
+   *
+   * @param {Object} conn  mobileConnection
+   * @param {index} index The slot number of this SIM slot.
+   * @param {Object} [card] iccObject
+   *
+   * @property {Object} simCard Represent the current active iccObj,
+   *                         i.e., SIM card.
+   * @property {Number} index The slot number of this SIM slot.
+   */
+  window.SIMSlot = function SIMSlot(conn, index, card) {
+    this.index = index;
+    this.conn = conn;
+    if (card) {
+      this.update(card);
+    }
+
+    /**
+     * TODO: Add event listeners on this.conn
+     */
+    /**
+     * The event represents the instance is initialized.
+     * @event SIMSlot#simslot-created
+     */
+    this.publish('created');
+  };
+
+  SIMSlot.EVENTS = ['cardstatechange', 'iccinfochange',
+                    'stkcommand', 'stksessionend'];
+
+  SIMSlot.METHODS = ['sendStkResponse', 'sendStkMenuSelection',
+                   'sendStkTimerExpiration', 'sendStkEventDownload'];
+  SIMSlot.DOM_REQUEST_METHODS = ['getCardLock', 'unlockCardLock', 'setCardLock',
+                       'getCardLockRetryCount', 'readContacts',
+                       'updateContact', 'iccOpenChannel', 'iccExchangeAPDU',
+                       'iccCloseChannel'];
+
+  SIMSlot.ABSENT_TYPES = ['permanentBlocked'];
+  SIMSlot.LOCK_TYPES = ['pinRequired', 'pukRequired', 'networkLocked',
+                      'corporateLocked', 'serviceProviderLocked',
+                      'network1Locked', 'network2Locked', 'hrpdNetworkLocked',
+                      'ruimCorporateLocked', 'ruimServiceProviderLocked'];
+
+  /**
+   * Update the iccObj.
+   *
+   * This method is called by SIMSlotManager when the iccObj
+   * needs to be updated.
+   * @param  {Object} iccObj The iccObj belongs to this slot.
+   */
+  SIMSlot.prototype.update = function ss_update(iccObj) {
+    this.simCard = iccObj;
+    this.constructor.EVENTS.forEach(function iterater(evt) {
+      iccObj.addEventListener(evt, this);
+    }, this);
+
+    this.constructor.DOM_REQUEST_METHODS.forEach(function iterator(domRequest) {
+      this[domRequest] = function() {
+        return iccObj[domRequest].apply(iccObj, arguments);
+      };
+    }, this);
+
+    this.constructor.METHODS.forEach(function iterator(method) {
+      this[method] = function() {
+        return iccObj[method].apply(iccObj, arguments);
+      };
+    }, this);
+
+    this.publish('updated');
+  };
+
+  /**
+   * The prefix of every event published by the SIMSlot instance.
+   * @type {String}
+   */
+  SIMSlot.prototype.EVENT_PREFIX = 'simslot-';
+  SIMSlot.prototype.CLASS_NAME = 'SIMSLOT';
+
+  /**
+   * Publish an event with this instance in the detail.
+   * @param  {String} eventName The event name without prefix
+   */
+  SIMSlot.prototype.publish = function ss_publish(eventName) {
+    this.debug(' publish: ' + eventName);
+    window.dispatchEvent(new CustomEvent(this.EVENT_PREFIX + eventName, {
+      detail: this
+    }));
+  };
+
+  SIMSlot.prototype.handleEvent = function ss_handleEvent(evt) {
+    switch (evt.type) {
+      default:
+        this.publish(evt.type);
+        if (this.simCard) {
+          this.debug(this.simCard.cardState);
+        }
+        break;
+    }
+  };
+
+  SIMSlot.prototype.debug = function() {
+    if (DEBUG) {
+      console.log('[' + this.CLASS_NAME + ']' +
+        '[' + (this.index) + ']' +
+        '[' + (new Date().getTime() / 1000 - _start).toFixed(3) + ']' +
+        Array.slice(arguments).concat());
+    }
+  };
+
+  /**
+   * Indicate the slot has SIM card or not.
+   * @return {Boolean} Without SIM card or not.
+   */
+  SIMSlot.prototype.isAbsent = function ss_isAbsent() {
+    return (!this.simCard ||
+      this.constructor.ABSENT_TYPES.indexOf(this.simCard.cardState) >= 0 ||
+      this.simCard && this.simCard.iccInfo &&
+      this.simCard.iccInfo.iccid === null);
+  };
+
+  /**
+   * Indicate SIM card in the slot is locked or not.
+   * @return {Boolean} SIM card locked or not.
+   */
+  SIMSlot.prototype.isLocked = function ss_isLocked() {
+    return this.constructor.LOCK_TYPES.indexOf(this.simCard.cardState) >= 0;
+  };
+}(this));
diff --git a/apps/system/js/simslot_manager.js b/apps/system/js/simslot_manager.js
new file mode 100644
index 0000000..4c5e9f4
--- /dev/null
+++ b/apps/system/js/simslot_manager.js
@@ -0,0 +1,216 @@
+/* global SIMSlot, SIMSlotManager */
+'use strict';
+
+(function(window) {
+  var IccManager = navigator.mozIccManager;
+  /**
+   * SIMSlotManager creates/manages the current SIM slot on the device.
+   * @type {Object}
+   */
+  window.SIMSlotManager = {
+    /**
+     * The number of SIM slots.
+     * @type {Number}
+     */
+    length: 0,
+    _instances: [],
+
+    /**
+     * The timeout to wait for the second SIM
+     * @type {Number}
+     */
+    TIMEOUT_FOR_SIM2: 2000,
+
+    /**
+     * Timer used to wait for the second SIM
+     * @type {Number} timeoutId
+     */
+    _timerForSIM2: null,
+
+    /**
+     * This property is used to make sure sim_lock won't get inited
+     * before we receive iccdetected when bootup.
+     * @type {Boolean}
+     */
+    ready: false,
+
+    init: function ssm_init() {
+      if (!IccManager) {
+        return;
+      }
+
+      this._conns = Array.prototype.slice.call(navigator.mozMobileConnections);
+      this.length = this._conns.length;
+
+      if (this._conns.length === 0) {
+        return;
+      }
+
+      this._conns.forEach(function iterator(conn, index) {
+        this._instances.push(new SIMSlot(conn, index,
+                             IccManager.getIccById(conn.iccId)));
+      }, this);
+
+      IccManager.addEventListener('iccdetected', this);
+    },
+
+    /**
+     * We support multiSIM or not.
+     * @return {Boolean} MultiSIM is available or not.
+     */
+    isMultiSIM: function() {
+      return (this.length > 1);
+    },
+
+    /**
+     * Check there is sim card on slot#index or not.
+     * @param  {Number}  index The slot number.
+     * @return {Boolean}       sim card is absent or not.
+     */
+    isSIMCardAbsent: function ssm_isSIMCardAbsent(index) {
+      var slot = this.get(index);
+      if (slot) {
+        return slot.isAbsent();
+      } else {
+        return true;
+      }
+    },
+
+    /**
+     * Make sure we really have one simcard information
+     * @return {Boolean} we already have one simcard.
+     */
+    hasOnlyOneSIMCardDetected: function() {
+      var sim0Absent = this.isSIMCardAbsent(0);
+      var sim1Absent = this.isSIMCardAbsent(1);
+      var hasOneSim =
+        (sim0Absent && !sim1Absent) || (!sim0Absent && sim1Absent);
+      return hasOneSim;
+    },
+
+    /**
+     * Check there is no any sim card on device or not.
+     * @return {Boolean} There is no sim card.
+     */
+    noSIMCardOnDevice: function ssm_noSIMCardOnDevice() {
+      if (!IccManager || !IccManager.iccIds) {
+        return true;
+      }
+      return (IccManager.iccIds.length === 0);
+    },
+
+    noSIMCardConnectedToNetwork: function ssm_noSIMCardConnectedToNetwork() {
+      if (!IccManager || !IccManager.iccIds) {
+        return true;
+      }
+      return this._instances.every(function iterator(instance) {
+        return instance.conn.voice && instance.conn.voice.emergencyCallsOnly;
+      });
+    },
+
+    /**
+     * Get specific SIM slot instance.
+     * @param {Number} index The slot number.
+     * @return {Object} The SIMSlot instance.
+     */
+    get: function ssm_get(index) {
+      if (index > this.length - 1) {
+        return null;
+      }
+
+      return this._instances[index];
+    },
+
+    /**
+     * Get specific mobileConnection object.
+     * @param {Number} index The slot number.
+     * @return {Object} The mobile connection object.
+     */
+    getMobileConnection: function ssm_getMobileConnection(index) {
+      if (index > this.length - 1) {
+        return null;
+      }
+
+      return this._instances[index].conn;
+    },
+
+    /**
+     * Get all sim slot instances
+     * @return {Array} The array of sim slot instances.
+     */
+    getSlots: function ssm_getSlots() {
+      return this._instances;
+    },
+
+    /**
+     * Get specified simslot by iccId
+     * @return {Object} The SIMSlot instance.
+     */
+    getSlotByIccId: function ssm_getSlotByIccId(iccId) {
+      var found = null;
+      this._instances.some(function iterator(slot, index) {
+        if (slot.conn.iccId && slot.conn.iccId === iccId) {
+          found = slot;
+          return true;
+        } else {
+          return false;
+        }
+      }, this);
+      return found;
+    },
+
+    /**
+     * This method is used to make sure if we can't receive the 2nd
+     * `iccdetected` event during the timeout, we would treat this
+     * situation as DSDS device with only one simcard inserted.
+     */
+    waitForSecondSIM: function() {
+      var self = this;
+      this._timerForSIM2 = setTimeout(function() {
+        clearTimeout(self._timerForSIM2);
+        self.publishSIMSlotIsReady();
+      }, this.TIMEOUT_FOR_SIM2);
+    },
+
+    /**
+     * We have to make sure our simcards are ready and emit
+     * this event out to notify sim_settings_helper & sim_lock
+     * do related operations.
+     */
+    publishSIMSlotIsReady: function() {
+      if (!this.ready) {
+        this.ready = true;
+        window.dispatchEvent(new CustomEvent('simslotready'));
+      }
+    },
+
+    handleEvent: function ssm_handleEvent(evt) {
+      switch (evt.type) {
+        case 'iccdetected':
+          var slot = this.getSlotByIccId(evt.iccId);
+
+          if (slot) {
+            slot.update(IccManager.getIccById(evt.iccId));
+
+            // we are now in single sim device
+            if (!this.isMultiSIM()) {
+              this.publishSIMSlotIsReady();
+            } else {
+              // we are now in DSDS device
+              // if we have one simcard already
+              if (this.hasOnlyOneSIMCardDetected()) {
+                this.waitForSecondSIM();
+              } else {
+                // we have two simcards already
+                clearTimeout(this._timerForSIM2);
+                this.publishSIMSlotIsReady();
+              }
+            }
+          }
+          break;
+      }
+    }
+  };
+
+  SIMSlotManager.init();
+}(this));
diff --git a/apps/system/js/sleep_menu.js b/apps/system/js/sleep_menu.js
index 0d36e37..7cb4c89 100644
--- a/apps/system/js/sleep_menu.js
+++ b/apps/system/js/sleep_menu.js
@@ -157,12 +157,10 @@
         items.push(options.airplane);
       }

-      if (navigator.mozTelephony) {
-        if (!this.isSilentModeEnabled) {
-          items.push(options.silent);
-        } else {
-          items.push(options.silentOff);
-        }
+      if (!this.isSilentModeEnabled) {
+        items.push(options.silent);
+      } else {
+        items.push(options.silentOff);
       }

       items.push(options.restart);
diff --git a/apps/system/js/software_button_manager.js b/apps/system/js/software_button_manager.js
index 78ce001..dbf4656 100644
--- a/apps/system/js/software_button_manager.js
+++ b/apps/system/js/software_button_manager.js
@@ -8,7 +8,7 @@
   /**
    * SoftwareButtonManager manages a home button for devides without
    * physical home buttons. The software home button will display at the bottom
-   * of the screen and is meant to function in the same way as a hardware
+   * of the screen and is meant to function in the same way as a hardware
    * home button.
    * @class SoftwareButtonManager
    * @requires ScreenLayout
@@ -108,6 +108,8 @@
       window.addEventListener('mozfullscreenchange', this);
       window.addEventListener('homegesture-enabled', this);
       window.addEventListener('homegesture-disabled', this);
+
+      return this;
     },

     /**
diff --git a/apps/system/js/sound_manager.js b/apps/system/js/sound_manager.js
index 023a1a3..2c16a6f 100644
--- a/apps/system/js/sound_manager.js
+++ b/apps/system/js/sound_manager.js
@@ -1,544 +1,219 @@
 /* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /
 /* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */

-/* global AsyncSemaphore, Bluetooth, CustomDialog, FtuLauncher, ScreenManager,
-          SettingsListener, System */
-
-(function(exports) {
-  'use strict';
-  /**
-   * SoundManager handles hardware volume key events, bluetooth volume changes,
-   * and volume/channel change events.
-   * @class SoundManager
-   * @requires AsyncSemaphore
-   * @requires Bluetooth
-   * @requires FtuLauncher
-   * @requires ScreenManager
-   */
-  function SoundManager() {
-  }
-
-  /**
-   * settings key for vibration
-   * @memberOf SoundManager
-   */
-  SoundManager.VIBRATION_SETTINGS_KEY = 'vibration.enabled';
-  /**
-   * user preference key for vibration which is used at async storage.
-   * @memberOf SoundManager
-   */
-  SoundManager.VIBRATION_USER_PREF_KEY = 'preference.vibration.enabled';
-  /**
-   * reset time span for volume warning dialog.
-   * @memberOf SoundManager
-   */
-  SoundManager.CE_RESET_TIME = 72000000;
-  /**
-   * constant for CE counter interval.
-   * @memberOf SoundManager
-   */
-  SoundManager.TIME_ONE_MINUTE = 60000;
-  /**
-   * elapsed time from last volume warning dialog which is used at async
-   * storage.
-   * @memberOf SoundManager
-   */
-  SoundManager.CACHE_CETIMES = 'CE_ACCTIME';
-  // volume cache
-  // Platform doesn't provide the maximum value of each channel
-  // therefore, hard code here.
-  SoundManager.MAX_VOLUME = {
-    'alarm': 15,
-    'notification': 15,
-    'telephony': 5,
-    'content': 15,
-    'bt_sco': 15
-  };
-
-  /**
-   * Store the current active channel;
-   * change with 'audio-channel-changed' mozChromeEvent
-   * All candidates and definitions can be found at AudioChannels link.
-   *
-   * @see {link https://wiki.mozilla.org/WebAPI/AudioChannels|AudioChannels}
-   * @memberOf SoundManager.prototype
-   * @type {String}
-   */
-  SoundManager.prototype.currentChannel = 'none';
-
-  /**
-   * Tell if vibration is enabled currently.
-   *
-   * @memberOf SoundManager.prototype
-   * @type {Boolean}
-   */
-  SoundManager.prototype.vibrationEnabled = true;
+'use strict';
+
+(function() {
+  window.addEventListener('volumeup', function() {
+    if (ScreenManager.screenEnabled || currentChannel !== 'none') {
+      if (Bluetooth.connected && onCall()) {
+        changeVolume(1, 'bt_sco');
+      } else if (isHeadsetConnected) {
+        headsetVolumeup();
+      } else {
+        changeVolume(1);
+      }
+    }
+  });
+  window.addEventListener('volumedown', function() {
+    if (ScreenManager.screenEnabled || currentChannel !== 'none') {
+      if (Bluetooth.connected && onCall()) {
+        changeVolume(-1, 'bt_sco');
+      } else {
+        changeVolume(-1);
+        ceAccumulator();
+      }
+    }
+  });

   /**
-   * Default volume control channel
-   * Possible values:
-   *   normal
-   *   content
-   *   notification
-   *   alarm
-   *   telephony
-   *   ringer
-   *   publicnotification
-   *   unknown
-   * @memberOf SoundManager.prototype
-   * @type {String}
+   * The mute event is dispatched from sleep menu.
+   * But if we have a mute hardware button or virtual button,
+   * we could make the button handler to fire this event, too.
    */
-  SoundManager.prototype.defaultVolumeControlChannel = 'unknown';
+  window.addEventListener('mute', function() {
+    // Turn off vibration for really silence.
+    setVibrationEnabled(false);
+    enterSilentMode('notification');
+  });

   /**
-   * is headset connected.
-   * @memberOf SoundManager.prototype
-   * @type {Boolean}
+   * The unmute event is dispatched from sleep menu.
+   * But if we have a mute hardware button or virtual button,
+   * we could make the button handler to fire this event, too.
    */
-  SoundManager.prototype.isHeadsetConnected = false;
+  window.addEventListener('unmute', function() {
+    // Turn on vibration.
+    setVibrationEnabled(true);
+    leaveSilentMode('notification');
+    leaveSilentMode('content');
+  });
+
+  // Store the current active channel;
+  // change with 'audio-channel-changed' mozChromeEvent
+  var currentChannel = 'none';
+
+  var vibrationEnabled = true;
+  var vibrationUserPreference = (function() {
+    var _settingsKey = 'vibration.enabled';
+    var _preferenceKey = 'preference.vibration.enabled';
+    var _enabled = null;
+    var _obj = {
+      get enabled() {
+        if (_enabled === null) {
+          return true;
+        } else {
+          return _enabled;
+        }
+      },
+      set enabled(value) {
+        if (value != _enabled) {
+          window.asyncStorage.setItem(_preferenceKey, value,
+            function set_onsuccess() {
+              _enabled = value;
+          });
+        }
+      }
+    };

-  /**
-   * We have three virtual states here:
-   * OFF -> VIBRATION -> MUTE
-   * @memberOf SoundManager.prototype
-   * @type {String}
-   */
-  SoundManager.prototype.muteState = 'OFF';
+    // initialize the value
+    window.asyncStorage.getItem(_preferenceKey, function get_onsuccess(value) {
+      if (value === null) {
+        var req = SettingsListener.getSettingsLock().get(_settingsKey);
+        req.onsuccess = function get_onsuccess() {
+          _enabled = req.result[_settingsKey];
+          if (_enabled == null) {
+            _enabled = true;
+          }
+          _obj.enabled = _enabled; // write back to async storage
+        };
+        req.onerror = function get_onerror() {
+          _enabled = true;
+          _obj.enabled = _enabled; // write back to async storage
+        };
+      } else {
+        _enabled = value;
+      }
+    });

-  /**
-   * User preference to tell if vibration is enabled. The value is read from
-   * 'preference.vibration.enabled' key.
-   * @memberOf SoundManager.prototype
-   * @type {Boolean}
-   */
-  SoundManager.prototype.vibrationUserPrefEnabled = true;
+    return _obj;
+  })();

-  /**
-   * Cache the volume when entering silent mode.
-   * Currently only two channel would be used for mute.
-   * @memberOf SoundManager.prototype
-   * @type {Object}
-   */
-  SoundManager.prototype.cachedVolume = {
+  // Cache the volume when entering silent mode.
+  // Currently only two channel would be used for mute.
+  var cachedVolume = {
     'content': -1,
     'notification': -1
   };

-  /**
-   * The keys of cachedVolume.
-   * @memberOf SoundManager.prototype
-   * @type {Array}
-   * @see cachedVolume
-   */
-  SoundManager.prototype.cachedChannels = ['content', 'notification'];
+  var cachedChannels = ['content', 'notification'];

-  /**
-   * The interval ID of CE accumulator.
-   * @memberOf SoundManager.prototype
-   * @type {Number}
-   */
-  SoundManager.prototype.CEAccumulatorID = null;
-  /**
-   * The minimum warning volume level.
-   * @memberOf SoundManager.prototype
-   * @type {Number}
-   * @default 11
-   */
-  SoundManager.prototype.CEWarningVol = 11;
-  /**
-   * The accumulated time where the volume is above {@link CEWarningVol} and the
-   * channel is "content".
-   * @memberOf SoundManager.prototype
-   * @type {Number}
-   * @see CEWarningVol
-   */
-  SoundManager.prototype.CEAccumulatorTime = 0;
-  /**
-   * The start time of accumulator running.
-   * @memberOf SoundManager.prototype
-   * @type {Number}
-   */
-  SoundManager.prototype.CETimestamp = 0;
+  var isHeadsetConnected = false;

-  /**
-   * The current volume for all channels: alarm, notification, telephony,
-   * content, and bt_sco.
-   * @memberOf SoundManager.prototype
-   * @type {Object}
-   * @see {@link https://wiki.mozilla.org/WebAPI/AudioChannels#Volume_control}
-   */
-  SoundManager.prototype.currentVolume = {
-    'alarm': 15,
-    'notification': 15,
-    'telephony': 5,
-    'content': 15,
-    'bt_sco': 15
-  };
+  var TIME_TWENTY_HOURS = 72000000;

-  /**
-   * A semaphore used inside of SoundManager.
-   * @memberOf SoundManager.prototype
-   * @type {AsyncSemaphore}
-   */
-  SoundManager.prototype.pendingRequest = new AsyncSemaphore();
+  var TIME_TEST_HOURS = 90000;// for test

-  /**
-   * To tell if the homescreen is visible.
-   *
-   * @memberOf SoundManager.prototype
-   * @type {Boolean}
-   */
-  SoundManager.prototype.homescreenVisible = true;
+  var TIME_ONE_MINUTE = 60000;

-  /**
-   * A counter for checking if the vibration settings is made by SoundManager.
-   *
-   * @memberOf SoundManager.prototype
-   * @type {Number}
-   */
-  SoundManager.prototype.setVibrationEnabledCount = 0;
-  /**
-   * A flag to tell if the volume is fetched from settings.
-   *
-   * @memberOf SoundManager.prototype
-   * @type {Boolean}
-   */
-  SoundManager.prototype.volumeFetched = false;
-  /**
-   * A timer ID for auto hiding volume UI.
-   *
-   * @memberOf SoundManager.prototype
-   * @type {Boolean}
-   */
-  SoundManager.prototype.activeTimerID = 0;
+  var CEAccumulatorID = null;

-  /**
-   * It adds listeners to window events, observes the change of mozSettings, and
-   * loads settings from mozSettings.
-   *
-   * @memberOf SoundManager.prototype
-   * @returns {SoundManager}
-   */
-  SoundManager.prototype.start = function sm_start() {
-    window.addEventListener('volumeup', this);
-    window.addEventListener('volumedown', this);
-    window.addEventListener('mute', this);
-    window.addEventListener('unmute', this);
-    window.addEventListener('mozChromeEvent', this);
-    window.addEventListener('unload', this);
-    window.addEventListener('appopen', this);
-    window.addEventListener('ftudone', this);
-    window.addEventListener('holdhome', this);
-    window.addEventListener('home', this);
-    window.addEventListener('homescreenopened', this);
-
-    this.initVibrationUserPref();
-    this.bindVolumeSettingsHandlers();
-
-    var self = this;
-    SettingsListener.observe('audio.volume.cemaxvol', 11, function(volume) {
-      self.CEWarningVol = volume;
-    });
+  var CEWarningVol = 11;

-    window.asyncStorage.getItem(SoundManager.CACHE_CETIMES,
-                                function getCETime(value) {
-      if (!value) {
-        return;
-      } else {
-        self.CEAccumulatorTime = value;
-      }
-    });
-  };
+  var CEAccumulatorTime = 0;

-  /**
-   * It removes listeners from window events
-   *
-   * @memberOf SoundManager.prototype
-   */
-  SoundManager.prototype.stop = function sm_stop() {
-    window.removeEventListener('volumeup', this);
-    window.removeEventListener('volumedown', this);
-    window.removeEventListener('mute', this);
-    window.removeEventListener('unmute', this);
-    window.removeEventListener('mozChromeEvent', this);
-    window.removeEventListener('unload', this);
-    window.removeEventListener('appopen', this);
-    window.removeEventListener('ftudone', this);
-    window.removeEventListener('holdhome', this);
-    window.removeEventListener('home', this);
-    window.removeEventListener('homescreenopened', this);
-  };
+  var CETimestamp = 0;

-  /**
-   * It handles the events from window object, including hardware key events,
-   * mozChromeEvent, and custom event made by System app.
-   *
-   * @memberOf SoundManager.prototype
-   * @param {DOMEvent} e
-   */
-  SoundManager.prototype.handleEvent = function sm_handleEvent(e) {
-    switch (e.type) {
-      case 'volumeup':
-        this.handleVolumeKey(1);
-        break;
-      case 'volumedown':
-        this.handleVolumeKey(-1);
-        break;
-      case 'mute':
-        this.setMute(true);
-        break;
-      case 'unmute':
-        this.setMute(false);
-        break;
-      case 'mozChromeEvent':
-        switch (e.detail.type) {
-          case 'bluetooth-volumeset':
-            this.changeVolume(e.detail.value - this.currentVolume.bt_sco,
-                              'bt_sco');
-            break;
-          case 'audio-channel-changed':
-            this.currentChannel = e.detail.channel;
-            this.ceAccumulator();
-            break;
-          case 'headphones-status-changed':
-            this.isHeadsetConnected = (e.detail.state !== 'off');
-            this.ceAccumulator();
-            break;
-          case 'default-volume-channel-changed':
-            this.defaultVolumeControlChannel = e.detail.channel;
-            // Do not accumulate CE time here because this event
-            // doesn't mean the content is playing now.
-            break;
-        }
-        break;
-      case 'unload':
-        this.stopAccumulator();
-        break;
-      case 'appopen':
-        this.homescreenVisible = false;
-        break;
-      case 'ftudone':
-        this.homescreenVisible = true;
-        break;
-      case 'holdhome':
-        CustomDialog.hide();
-        break;
-      case 'home':
-      case 'homescreenopened':
-        this.homescreenVisible = true;
-        CustomDialog.hide();
-        break;
-    }
-  };
+  var CACHE_CETIMES = 'CE_ACCTIME';

-  /**
-   * This function handles the volume key up/down behavior. When it is under a
-   * call and user sues a bluetooth, we need to change the volume of BT SCO.
-   * When the headset is connected, we need to activate CE counter. Otherwise,
-   * we calls normal changeVolume API.
-   *
-   * @memberOf SoundManager.prototype
-   * @param {Number} offset the offset which will be added to volume value.
-   */
-  SoundManager.prototype.handleVolumeKey = function sm_handleVolumeKey(offset) {
-    if (!ScreenManager.screenEnabled && this.currentChannel === 'none') {
-      return;
-    }
+  // Default volume control channel
+  // Possible values:
+  // * normal
+  // * content
+  // * notification
+  // * alarm
+  // * telephony
+  // * ringer
+  // * publicnotification
+  // * unknown
+  var defaultVolumeControlChannel = 'unknown';

-    if (Bluetooth.isProfileConnected(Bluetooth.Profiles.SCO) &&
-        this.isOnCall()) {
-      this.changeVolume(offset, 'bt_sco');
-    } else if (this.isHeadsetConnected && offset > 0) {
-      this.headsetVolumeup();
-    } else {
-      this.changeVolume(offset);
+  // This event is generated in shell.js in response to bluetooth headset.
+  // Bluetooth headset always assign audio volume to a specific value when
+  // pressing its volume-up/volume-down buttons.
+  window.addEventListener('mozChromeEvent', function(e) {
+    var type = e.detail.type;
+    if (type == 'bluetooth-volumeset') {
+      changeVolume(e.detail.value - currentVolume['bt_sco'], 'bt_sco');
+    } else if (type == 'audio-channel-changed') {
+      currentChannel = e.detail.channel;
+      ceAccumulator();
+    } else if (type == 'headphones-status-changed') {
+      isHeadsetConnected = (e.detail.state != 'off');
+      ceAccumulator();
+    } else if (type == 'default-volume-channel-changed') {
+      defaultVolumeControlChannel = e.detail.channel;
+      // Do not accumulate CE time here because this event
+      // doesn't mean the content is playing now.
     }
-  };
+  });

-  /**
-   * The mute/unmute event is dispatched from sleep menu.
-   * But if we have a mute/unmute hardware button or virtual button,
-   * we could make the button handler to fire this event, too.
-   *
-   * @memberOf SoundManager.prototype
-   * @param {Boolean} mute the state of mute.
-   */
-  SoundManager.prototype.setMute = function sm_setMute(mute) {
-    /**
-     */
-    if (mute) {
-      // Turn off vibration for really silence.
-      this.setVibrationEnabled(false);
-      this.enterSilentMode('notification');
-    } else {
-      // Turn on vibration.
-      this.setVibrationEnabled(true);
-      this.leaveSilentMode('notification');
-      this.leaveSilentMode('content');
-    }
-  };
+  // unit tests call init() manually
+  if (navigator.mozL10n) {
+    navigator.mozL10n.once(init);
+  }

-  /*
-   * When hardware volume key is pressed, we need to decide which channel we
-   * should toggle.
-   * This method returns the string for setting key 'audio.volume.*' represents
-   * that.
-   * Note: this string does not always equal to currentChannel since some
-   * different channels are grouped together to listen to the same setting.
-   * @memberOf SoundManager.prototype
-   * @returns {String} the volume channel
-   */
-  SoundManager.prototype.getChannel = function sm_getChannel() {
-    if (this.isOnCall()) {
-      return 'telephony';
-    }
+  function init() {
+    SettingsListener.observe('audio.volume.cemaxvol', 11, function(volume) {
+      CEWarningVol = volume;
+    });

-    switch (this.currentChannel) {
-      case 'normal':
-      case 'content':
-        return 'content';
-      case 'telephony':
-        return 'telephony';
-      case 'alarm':
-        return 'alarm';
-      case 'notification':
-      case 'ringer':
-          return 'notification';
-      default:
-        if (this.defaultVolumeControlChannel !== 'unknown') {
-          return this.defaultVolumeControlChannel;
+    window.asyncStorage.getItem(CACHE_CETIMES,
+      function onGettingContentVolume(value) {
+        if (!value) {
+          return;
         } else {
-          return this.homescreenVisible || (System.locked) ||
-            FtuLauncher.isFtuRunning() ? 'notification' : 'content';
+          CEAccumulatorTime = value;
         }
-    }
-  };
-
-  /**
-   * It reads vibration user preference from asyncStorage and listen the change
-   * from mozSettings.
-   *
-   * @memberOf SoundManager.prototype
-   */
-  SoundManager.prototype.initVibrationUserPref = function sm_initVUserPref() {
-    var self = this;
-    // check asyncStorage
-    window.asyncStorage.getItem(SoundManager.VIBRATION_USER_PREF_KEY,
-                                function onok(value) {
-      if (value === null) {
-        // not found, read from settings.
-        var r = SettingsListener.getSettingsLock().get(
-                                           SoundManager.VIBRATION_SETTINGS_KEY);
-        r.onsuccess = function get_onsuccess() {
-          // write back to asyncStorage.
-          self.writeVibrationUserPref(
-                                 r.result[SoundManager.VIBRATION_SETTINGS_KEY]);
-        };
-        r.onerror = function get_onerror() {
-          // initial value to true
-          self.writeVibrationUserPref(true);
-        };
-      } else {
-        self.vibrationUserPrefEnabled = value;
-      }
-    });
-    // observe settings
-    SettingsListener.observe(SoundManager.VIBRATION_SETTINGS_KEY,
-                             true, function(vibration) {
-      var setBySelf = false;
-      var toggleVibrationEnabled = function toggle_vibration_enabled() {
-        // XXX: If the value does not set by sound manager,
-        //      we assume it comes from
-        //      the settings app and consider it as user preference.
-        if (!setBySelf) {
-          self.writeVibrationUserPref(vibration);
-        }
-        self.vibrationEnabled = vibration;
-      };
-
-      if (self.setVibrationEnabledCount > 0) {
-        self.setVibrationEnabledCount--;
-        setBySelf = true;
-      }
-      self.pendingRequest.wait(toggleVibrationEnabled, self);
-    });
-  };
-
-  /**
-   * It saves the user perference of vibration to asyncStorage.
-   *
-   * @memberOf SoundManager.prototype
-   * @param {Boolean} value vibration preference
-   */
-  SoundManager.prototype.writeVibrationUserPref = function sm_writeUP(value) {
-    if (this.vibrationUserPrefEnabled === value) {
-      return;
-    }
-    // if value is null or undefined, we view it as initial value which is true.
-    if (value === null || typeof(value) === 'undefined') {
-      value = true;
-    }
+      });
+  }

-    var self = this;
-    window.asyncStorage.setItem(SoundManager.VIBRATION_USER_PREF_KEY, value,
-      function set_onsuccess() {
-        self.vibrationUserPrefEnabled = value;
-    });
-  };
+  window.addEventListener('unload', stopAccumulator, false);

-  /**
-   * It checks the state to start/stop the CE accumulator.
-   *
-   * @memberOf SoundManager.prototype
-   */
-  SoundManager.prototype.ceAccumulator = function sm_ceAccumulator() {
-    if (this.isHeadsetConnected && this.getChannel() === 'content' &&
-      this.currentVolume[this.currentChannel] >= this.CEWarningVol) {
-      if (this.CEAccumulatorTime === 0) {
-        this.resetToCEMaxVolume();
+  function ceAccumulator() {
+    if (isHeadsetConnected && getChannel() == 'content' &&
+      currentVolume[currentChannel] >= CEWarningVol) {
+      if (CEAccumulatorTime == 0) {
+        resetToCEMaxVolume();
       } else {
-        this.startAccumulator();
+        startAccumulator();
       }
     } else {
-      this.stopAccumulator();
+      stopAccumulator();
     }
-  };
+  }

-  /**
-   * It handles the case of pressing volumeup hardware key when headset is
-   * connected. This function mainly checks the state to start the CE
-   * accumulator and change the volume.
-   *
-   * @memberOf SoundManager.prototype
-   */
-  SoundManager.prototype.headsetVolumeup = function sm_headsetVolumeup() {
-    if ((this.currentVolume[this.getChannel()] + 1) >= this.CEWarningVol &&
-        this.getChannel() === 'content') {
-      if (this.CEAccumulatorTime === 0) {
-        var self = this;
+  function headsetVolumeup() {
+    if ((currentVolume[getChannel()] + 1) >= CEWarningVol &&
+        getChannel() == 'content') {
+      if (CEAccumulatorTime == 0) {
         var okfn = function() {
-          self.changeVolume(1);
-          self.startAccumulator();
+          changeVolume(1);
+          startAccumulator();
         };
-        this.resetToCEMaxVolume(okfn);
+        resetToCEMaxVolume(okfn);
       } else {
-        this.startAccumulator();
-        this.changeVolume(1);
+        startAccumulator();
+        changeVolume(1);
       }
     } else {
-      this.changeVolume(1);
+      changeVolume(1);
     }
-  };
+  }

-  /**
-   * It shows a warning dialog to tell user that the volume may hurt his/her
-   * ear.
-   *
-   * @memberOf SoundManager.prototype
-   * @param {Function} okfun the callback function when user press ok.
-   */
-  SoundManager.prototype.showCEWarningDialog = function sm_showCEDialog(okfn) {
+  function showCEWarningDialog(okfn) {
     // Show dialog.
+    var agreement = false;
     var _ = navigator.mozL10n.get;

     var ceTitle = {
@@ -551,8 +226,6 @@
       'title': _('ok')
     };

-    var self = this;
-
     if (okfn instanceof Function) {
       cancel.callback = function onCancel() {
         okfn();
@@ -560,196 +233,251 @@
       };
     } else {
       cancel.callback = function onCancel() {
-        self.startAccumulator();
+        startAccumulator();
         CustomDialog.hide();
       };
     }

     CustomDialog.show(ceTitle, ceMsg, cancel);
-  };
+  }

-  /**
-   * It starts the CE accumulator.
-   *
-   * @memberOf SoundManager.prototype
-   */
-  SoundManager.prototype.startAccumulator = function sm_startAccumulator() {
-    if (this.CEAccumulatorID === null) {
-      if (this.CEAccumulatorTime === 0) {
-        this.CEAccumulatorTime = 1;
-        this.CETimestamp = parseInt(new Date().getTime(), 10);
+  function startAccumulator() {
+    if (CEAccumulatorID == null) {
+      if (CEAccumulatorTime == 0) {
+        CEAccumulatorTime = 1;
+        CETimestamp = parseInt(new Date().getTime(), 10);
       }
-      var self = this;
-      this.CEAccumulatorID = window.setInterval(function ceCounter() {
-        self.CEAccumulatorTime += SoundManager.TIME_ONE_MINUTE;
-        self.CETimestamp = parseInt(new Date().getTime(), 10);
-        if (self.CEAccumulatorTime > SoundManager.CE_RESET_TIME) {
-          self.CEAccumulatorTime = 0; // reset time
-          self.CETimestamp = 0; // reset timestamp
-          self.stopAccumulator();
-          self.resetToCEMaxVolume();
+      CEAccumulatorID = window.setInterval(function() {
+        CEAccumulatorTime += TIME_ONE_MINUTE;
+        CETimestamp = parseInt(new Date().getTime(), 10);
+        if (CEAccumulatorTime > TIME_TWENTY_HOURS) {
+          CEAccumulatorTime = 0; // reset time
+          CETimestamp = 0; // reset timestamp
+          stopAccumulator();
+          resetToCEMaxVolume();
         }
-      }, SoundManager.TIME_ONE_MINUTE);
+      }, TIME_ONE_MINUTE);
     }
-  };
+  }

-  /**
-   * It stops the CE accumulator.
-   *
-   * @memberOf SoundManager.prototype
-   */
-  SoundManager.prototype.stopAccumulator = function sm_stopAccumulator() {
-    if (this.CEAccumulatorID !== null) {
-      window.clearInterval(this.CEAccumulatorID);
-      this.CEAccumulatorID = null;
-      if (this.CETimestamp !== 0) {
-         this.CEAccumulatorTime = this.CEAccumulatorTime +
-                       (parseInt(new Date().getTime(), 10) - this.CETimestamp);
+  function stopAccumulator() {
+    if (CEAccumulatorID != null) {
+      window.clearInterval(CEAccumulatorID);
+      CEAccumulatorID = null;
+      if (CETimestamp != 0) {
+         CEAccumulatorTime = CEAccumulatorTime +
+         (parseInt(new Date().getTime(), 10) - CETimestamp);
       }
-      window.asyncStorage.setItem(SoundManager.CACHE_CETIMES,
-                                  this.CEAccumulatorTime);
+      window.asyncStorage.setItem(CACHE_CETIMES, CEAccumulatorTime);
     }
-  };
+  }

-  /**
-   * It resets the content channel to warning volume - 1 and shows the warning
-   * dialog for confirm.
-   *
-   * @memberOf SoundManager.prototype
-   * @param {Function} okfun the callback function when user press ok.
-   */
-  SoundManager.prototype.resetToCEMaxVolume = function sm_resetCEMax(callback) {
-    this.pendingRequest.v();
+  function resetToCEMaxVolume(callback) {
+    pendingRequest.v();
     var req = SettingsListener.getSettingsLock().set({
-      'audio.volume.content': this.CEWarningVol - 1
+      'audio.volume.content': CEWarningVol - 1
     });
-    var self = this;
+
     req.onsuccess = function onSuccess() {
-      self.pendingRequest.p();
-      self.showCEWarningDialog(callback);
+      pendingRequest.p();
+      showCEWarningDialog(callback);
     };

     req.onerror = function onError() {
-      self.pendingRequest.p();
-      self.showCEWarningDialog(callback);
+      pendingRequest.p();
+      showCEWarningDialog(callback);
     };
-  };
+  }

-  /**
-   * It tells if it is currently on a call.
-   *
-   * @memberOf SoundManager.prototype
-   */
-  SoundManager.prototype.isOnCall = function sm_isOnCall() {
-    if (this.currentChannel == 'telephony') {
+  // True if the homescreen or the lockscreen are visible.
+  var homescreenVisible = true;
+
+  window.addEventListener('appopen', function() {
+    homescreenVisible = false;
+  });
+  window.addEventListener('ftudone', function() {
+    // FTU closing implies we're going to homescreen.
+    homescreenVisible = true;
+  });
+  window.addEventListener('holdhome', function() {
+    CustomDialog.hide();
+  });
+  window.addEventListener('home', function() {
+    homescreenVisible = true;
+    CustomDialog.hide();
+  });
+  window.addEventListener('homescreenopened', function() {
+    homescreenVisible = true;
+    CustomDialog.hide();
+  });
+
+  function onCall() {
+    if (currentChannel == 'telephony')
       return true;
-    }

     // XXX: This work should be removed
     // once we could get telephony channel change event
     // https://bugzilla.mozilla.org/show_bug.cgi?id=819858
     var telephony = window.navigator.mozTelephony;
-    if (!telephony) {
+    if (!telephony)
       return false;
-    }

     return telephony.calls.some(function callIterator(call) {
         return (call.state == 'connected');
     });
+  }
+
+  // Platform doesn't provide the maximum value of each channel
+  // therefore, hard code here.
+  var MAX_VOLUME = {
+    'alarm': 15,
+    'notification': 15,
+    'telephony': 5,
+    'content': 15,
+    'bt_sco': 15
   };

-  /**
-   * Bind setting handlers for each channel's volume change.
-   * @memberOf SoundManager.prototype
-   * @param {Function} callback Callback being called after each setting handler
-   *                            has been invoked once.
+  // Please refer https://wiki.mozilla.org/WebAPI/AudioChannels > Settings
+  var currentVolume = {
+    'alarm': 15,
+    'notification': 15,
+    'telephony': 5,
+    'content': 15,
+    'bt_sco': 15
+  };
+  var pendingRequest = new AsyncSemaphore();
+  var setVibrationEnabledCount = 0;
+
+  // We have three virtual states here:
+  // OFF -> VIBRATION -> MUTE
+  var muteState = 'OFF';
+
+  /*
+    Bind setting handlers
+    @param {Function} callback Callback being called after each setting handler
+                               has been invoked once.
    */
-  SoundManager.prototype.bindVolumeSettingsHandlers = function sm_bindHdlers() {
+  (function bindVolumeSettingsHandlers(callback) {
     var callsMade = 0;
     var callbacksReceived = 0;
-    var self = this;
-
-    function observeSettingsVolumeChange(channel) {
-      var setting = 'audio.volume.' + channel;
-      SettingsListener.observe(setting, 5, function onChange(volume) {
-        var settingsChange = function settings_change() {
-          var max = SoundManager.MAX_VOLUME[channel];
-          self.currentVolume[channel] =
-            parseInt(Math.max(0, Math.min(max, volume)), 10);
-
-          if (channel === 'content' && self.volumeFetched && volume > 0) {
-            self.leaveSilentMode('content',
-                            /* skip volume restore */ true);
-          } else if (channel === 'notification' && volume > 0) {
-            self.leaveSilentMode('notification',
-                            /* skip volume restore */ true);
-          } else if (channel === 'notification' && volume === 0) {
-            // Enter silent mode when notification volume is 0
-            // no matter who sets this value.
-            self.enterSilentMode('notification');
-          }

-          if (!self.volumeFetched && ++callbacksReceived === callsMade) {
-            self.fetchCachedVolume();
-          }
-        };
+    for (var channel in currentVolume) {
+      callsMade++;

-        // Initial loaded setting should always pass through
-        // (one per channel)
-        self.pendingRequest.wait(settingsChange, self);
-      });
+      (function(channel) {
+        var setting = 'audio.volume.' + channel;
+        SettingsListener.observe(setting, 5, function onSettingsChange(volume) {
+          var settingsChange = function settings_change() {
+            var max = MAX_VOLUME[channel];
+            currentVolume[channel] =
+              parseInt(Math.max(0, Math.min(max, volume)), 10);
+
+            if (channel === 'content' && inited && volume > 0) {
+              leaveSilentMode('content',
+                              /* skip volume restore */ true);
+            } else if (channel === 'notification' && volume > 0) {
+              leaveSilentMode('notification',
+                              /* skip volume restore */ true);
+            } else if (channel === 'notification' && volume == 0) {
+              // Enter silent mode when notification volume is 0
+              // no matter who sets this value.
+              enterSilentMode('notification');
+            }
+
+            if (!inited && ++callbacksReceived === callsMade)
+              callback();
+          };
+
+          // Initial loaded setting should always pass through (one per channel)
+          pendingRequest.wait(settingsChange, this);
+        });
+      })(channel);
     }
+  })(fetchCachedVolume);

-    for (var channel in this.currentVolume) {
-      callsMade++;
-      observeSettingsVolumeChange(channel);
+  SettingsListener.observe('vibration.enabled', true, function(vibration) {
+    var setBySelf = false,
+      toggleVibrationEnabled = function toggle_vibration_enabled() {
+        // XXX: If the value does not set by sound manager,
+        //      we assume it comes from
+        //      the settings app and consider it as user preference.
+        if (!setBySelf) {
+          vibrationUserPreference.enabled = vibration;
+        }
+        vibrationEnabled = vibration;
+      };
+    if (setVibrationEnabledCount > 0) {
+      setVibrationEnabledCount--;
+      setBySelf = true;
     }
-  };
+    pendingRequest.wait(toggleVibrationEnabled, this);
+  });

-  /**
-   * Fetch stored volume if it exists.
-   * We should make sure this happens after settingsDB callback
-   * after booting.
-   * @memberOf SoundManager.prototype
-   */
-  SoundManager.prototype.fetchCachedVolume = function sm_fetchCachedVolume() {
-    if (this.volumeFetched) {
+  // Fetch stored volume if it exists.
+  // We should make sure this happens after settingsDB callback
+  // after booting.
+
+  var inited = false;
+
+  function fetchCachedVolume() {
+    if (inited)
       return;
-    }

-    this.volumeFetched = true;
-    this.pendingRequest.v(this.cachedChannels.length);
-    var self = this;
-    this.cachedChannels.forEach(
+    inited = true;
+    pendingRequest.v(cachedChannels.length);
+    cachedChannels.forEach(
       function iterator(channel) {
         window.asyncStorage.getItem('content.volume',
           function onGettingCachedVolume(value) {
             if (!value) {
-              self.pendingRequest.p();
+              pendingRequest.p();
               return;
             }

-            self.cachedVolume[channel] = value;
-            self.pendingRequest.p();
+            cachedVolume[channel] = value;
+            pendingRequest.p();
           });
-      }
-    );
-  };
+      });
+  }

-  /**
-   * It handles the vibration case when changing the volume.
-   * @memberOf SoundManager.prototype
-   * @param {Number} curVolume the base volume
-   * @param {Number} delta the offset of the change
-   * @param {String} channel the target channel
-   * @returns {Number} the volume value. (-1) is for slient mode and (0) is for
-   *                   vibration mode
-   */
-  SoundManager.prototype.calculateVolume = function sm_calVol(
-                                                    curVolume, delta, channel) {
-    var volume = curVolume;
-    if (channel === 'notification') {
-      if (volume === 0 && !this.vibrationEnabled) {
+  var activeTimeout = 0;
+
+  // When hardware volume key is pressed, we need to decide which channel we
+  // should toggle.
+  // This method returns the string for setting key 'audio.volume.*' represents
+  // that.
+  // Note: this string does not always equal to currentChannel since some
+  // different channels are grouped together to listen to the same setting.
+  function getChannel() {
+    if (onCall())
+      return 'telephony';
+
+    switch (currentChannel) {
+      case 'normal':
+      case 'content':
+        return 'content';
+      case 'telephony':
+        return 'telephony';
+      case 'alarm':
+        return 'alarm';
+      case 'notification':
+      case 'ringer':
+          return 'notification';
+      default:
+        if (defaultVolumeControlChannel !== 'unknown') {
+          return defaultVolumeControlChannel;
+        } else {
+          return homescreenVisible ||
+            (System.locked) ||
+            FtuLauncher.isFtuRunning() ? 'notification' : 'content';
+        }
+    }
+  }
+
+  function calculateVolume(currentVolume, delta, channel) {
+    var volume = currentVolume;
+    if (channel == 'notification') {
+      if (volume == 0 && !vibrationEnabled) {
         // This is for voluming up from Silent to Vibrate.
         // Let's take -1 as the silent state and
         // 0 as the vibrate state for easier calculation here.
@@ -760,22 +488,13 @@
       volume += delta;
     }
     return volume;
-  };
+  }

-  /**
-   * It enables the vibration and returns the mute state.
-   * @memberOf SoundManager.prototype
-   * @param {Number} curVolume the base volume
-   * @param {Number} delta the offset of the change
-   * @param {String} channel the target channel
-   * @returns {String} the mute state
-   */
-  SoundManager.prototype.getVibrationAndMuteState = function sm_getState(
-                                                    curVolume, delta, channel) {
-    if (channel === 'notification') {
+  function getVibrationAndMuteState(currentVolume, delta, channel) {
+    if (channel == 'notification') {
       var state;
-      var volume = curVolume;
-      if (volume === 0 && !this.vibrationEnabled) {
+      var volume = currentVolume;
+      if (volume == 0 && !vibrationEnabled) {
         // This is for voluming up from Silent to Vibrate.
         // Let's take -1 as the silent state and
         // 0 as the vibrate state for easier calculation here.
@@ -785,154 +504,128 @@

       if (volume < 0) {
         state = 'MUTE';
-        this.vibrationEnabled = false;
-      } else if (volume === 0) {
+        vibrationEnabled = false;
+      } else if (volume == 0) {
         state = 'MUTE';
-        this.vibrationEnabled = true;
+        vibrationEnabled = true;
       } else {
         // Restore the vibration setting only when leaving silent mode.
-        if (curVolume <= 0) {
-          this.vibrationEnabled = this.vibrationUserPrefEnabled;
+        if (currentVolume <= 0) {
+          vibrationEnabled = vibrationUserPreference.enabled;
         }
         state = 'OFF';
       }

       return state;
     } else {
-      if (curVolume + delta <= 0) {
+      if (currentVolume + delta <= 0) {
         return 'MUTE';
       } else {
         return 'OFF';
       }
     }
-  };
+  }

-  /**
-   * Entering silent mode.
-   * @memberOf SoundManager.prototype
-   * @param  {String} [channel="content"] Specify the channel name
-   *                          which is going to enter silent mode.
-   */
-  SoundManager.prototype.enterSilentMode = function sm_enterSlient(channel) {
-    if (!channel) {
+  function enterSilentMode(channel) {
+    if (!channel)
       channel = 'content';
-    }

     // Don't need to enter silent mode more than once.
-    if (this.currentVolume[channel] === 0) {
+    if (currentVolume[channel] == 0)
       return;
-    }

     var isCachedAlready =
-      (this.cachedVolume[channel] === this.currentVolume[channel]);
-    this.cachedVolume[channel] = this.currentVolume[channel];
-    this.pendingRequest.v();
+      (cachedVolume[channel] == currentVolume[channel]);
+    cachedVolume[channel] = currentVolume[channel];
+    pendingRequest.v();

     var settingObject = {};
     settingObject['audio.volume.' + channel] = 0;
     var req = SettingsListener.getSettingsLock().set(settingObject);

-    var self = this;
     req.onsuccess = function onSuccess() {
-      self.pendingRequest.p();
+      pendingRequest.p();
       // Write to async storage only happens when
       // we haven't stored it before.
       // If the user presses the volume rockers repeatedly down and up,
       // between silent-mode/vibration mode/normal mode,
       // we won't repeatedly write the same value to storage.
-      if (!isCachedAlready) {
-        window.asyncStorage.setItem(channel + '.volume',
-                                    self.cachedVolume[channel]);
-      }
+      if (!isCachedAlready)
+        window.asyncStorage.setItem(channel + '.volume', cachedVolume[channel]);
     };

     req.onerror = function onError() {
-      self.pendingRequest.p();
+      pendingRequest.p();
     };
-  };
+  }

   /**
    * Leaving silent mode.
-   * @memberOf SoundManager.prototype
    * @param  {String} channel Specify the channel name
-   *                          which is going to leave silent mode.
+   *                          which is going to enter silent mode.
    * @param  {Boolean} skip_restore Specify to skip the volume restore or not.
    */
-  SoundManager.prototype.leaveSilentMode = function sm_leaveSlient(channel,
-                                                                 skip_restore) {
-    if (!channel) {
+  function leaveSilentMode(channel, skip_restore) {
+    if (!channel)
       channel = 'content';
-    }

     // We're leaving silent mode.
     if (!skip_restore &&
-        (this.cachedVolume[channel] > 0 ||
-         this.currentVolume[channel] === 0)) {
+        (cachedVolume[channel] > 0 || currentVolume[channel] == 0)) {
       var req;
       var settingObject = {};
-      var self = this;

       // At least rollback to 1,
       // otherwise we don't really leave silent mode.
       settingObject['audio.volume.' + channel] =
-        (this.cachedVolume[channel] > 0) ? this.cachedVolume[channel] : 1;
+        (cachedVolume[channel] > 0) ? cachedVolume[channel] : 1;

-      this.pendingRequest.v();
+      pendingRequest.v();
       req = SettingsListener.getSettingsLock().set(settingObject);

       req.onsuccess = function onSuccess() {
-        self.pendingRequest.p();
+        pendingRequest.p();
       };

       req.onerror = function onError() {
-        self.pendingRequest.p();
+        pendingRequest.p();
       };
     }

-    this.cachedVolume[channel] = -1;
-  };
+    cachedVolume[channel] = -1;
+  }

-  /**
-   * It updates the volume, turns on/off slient mode, and updates UI.
-   * @memberOf SoundManager.prototype
-   * @param  {Number} delta Specify the channel name
-   * @param  {String} [channel] Specify the channel name. It uses getChannel()
-   *                            when this argument is absent.
-   */
-  SoundManager.prototype.changeVolume = function sm_changeVolume(delta,
-                                                                 channel) {
-    channel = channel ? channel : this.getChannel();
+  function changeVolume(delta, channel) {
+    channel = channel ? channel : getChannel();

-    var vibrationEnabledOld = this.vibrationEnabled;
-    var volume = this.calculateVolume(this.currentVolume[channel], delta,
-                                       channel);
-    this.muteState =
-      this.getVibrationAndMuteState(this.currentVolume[channel], delta,
-                                     channel);
+    var vibrationEnabledOld = vibrationEnabled;
+    var volume = calculateVolume(currentVolume[channel], delta, channel);
+    muteState =
+      getVibrationAndMuteState(currentVolume[channel], delta, channel);

     // Silent mode entry point
     if (volume <= 0 && delta < 0 && channel == 'notification') {
-      this.enterSilentMode('content');
+      enterSilentMode('content');
     } else if (volume == 1 && delta > 0 && channel == 'notification' &&
-               this.cachedVolume.content >= 0) {
+                cachedVolume['content'] >= 0) {
       // Now since the active channel is notification channel,
       // we're leaving content silent mode and the same time restoring it.
-      this.leaveSilentMode('content');
+      leaveSilentMode('content');

       // In the notification silent mode, volume rocker priority is higher
       // than stored notification volume value so we skip the restore.
-      this.leaveSilentMode('notification', /*skip volume restore*/ true);
+      leaveSilentMode('notification', /*skip volume restore*/ true);
     }

-    this.currentVolume[channel] = volume =
-      Math.max(0, Math.min(SoundManager.MAX_VOLUME[channel], volume));
+    currentVolume[channel] = volume =
+      Math.max(0, Math.min(MAX_VOLUME[channel], volume));

     var overlay = document.getElementById('system-overlay');
     var notification = document.getElementById('volume');
     var overlayClasses = overlay.classList;
     var classes = notification.classList;

-    switch (this.muteState) {
+    switch (muteState) {
       case 'OFF':
         classes.remove('mute');
         break;
@@ -941,14 +634,14 @@
         break;
     }

-    if (this.vibrationEnabled) {
+    if (vibrationEnabled) {
       classes.add('vibration');
     } else {
       classes.remove('vibration');
     }

-    if (vibrationEnabledOld != this.vibrationEnabled) {
-      this.setVibrationEnabled(this.vibrationEnabled);
+    if (vibrationEnabledOld != vibrationEnabled) {
+      setVibrationEnabled(vibrationEnabled);
     }

     var steps =
@@ -968,55 +661,40 @@

     overlayClasses.add('volume');
     classes.add('visible');
-    window.clearTimeout(this.activeTimerID);
-    this.activeTimerID = window.setTimeout(function hideSound() {
+    window.clearTimeout(activeTimeout);
+    activeTimeout = window.setTimeout(function hideSound() {
       overlayClasses.remove('volume');
       classes.remove('visible');
     }, 1500);

-    if (!window.navigator.mozSettings) {
+    if (!window.navigator.mozSettings)
       return;
-    }

-    this.pendingRequest.v();
+    pendingRequest.v();
+
+    var req;

     notification.dataset.channel = channel;

     var settingObject = {};
     settingObject['audio.volume.' + channel] = volume;

-    var req = SettingsListener.getSettingsLock().set(settingObject);
-    var self = this;
+    req = SettingsListener.getSettingsLock().set(settingObject);

     req.onsuccess = function onSuccess() {
-      self.pendingRequest.p();
+      pendingRequest.p();
     };

     req.onerror = function onError() {
-      self.pendingRequest.p();
+      pendingRequest.p();
     };
-  };
+  }

-  /**
-   * It enables the vibration.
-   * @memberOf SoundManager.prototype
-   * @param  {Boolean} enabled the enable state of vibration.
-   */
-  SoundManager.prototype.setVibrationEnabled = function sm_enableVib(enabled) {
-    this.setVibrationEnabledCount++;
+  function setVibrationEnabled(enabled) {
+    setVibrationEnabledCount++;
     SettingsListener.getSettingsLock().set({
       'vibration.enabled': enabled
     });
-  };
-
-  exports.SoundManager = SoundManager;
-  // XXX: we shoud move the code to bootstrap but it is so buggy to put there.
-  // So, we put here temporary.
-  exports.soundManager = new SoundManager();
-  if (navigator.mozL10n) {
-    // unit tests call start() manually
-    navigator.mozL10n.once(function() {
-      exports.soundManager.start();
-    });
   }
-})(window);
+})();
+
diff --git a/apps/system/js/statusbar.js b/apps/system/js/statusbar.js
index 74eb6fe..34662fe 100644
--- a/apps/system/js/statusbar.js
+++ b/apps/system/js/statusbar.js
@@ -272,7 +272,6 @@ var StatusBar = {
   handleEvent: function sb_handleEvent(evt) {
     switch (evt.type) {
       case 'appopened':
-        this.setAppearance('opaque');
         var app = evt.detail;
         if (app.isFullScreen()) {
           this.hide();
diff --git a/apps/system/js/system_dialog.js b/apps/system/js/system_dialog.js
index 437b073..78f1f88 100644
--- a/apps/system/js/system_dialog.js
+++ b/apps/system/js/system_dialog.js
@@ -1,4 +1,3 @@
-/* global KeyboardManager */
 /* -*- Mode: js; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /
 /* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */
 'use strict';
@@ -95,17 +94,15 @@
   /**
    * Update dialog height via LayoutManager
    */
-  SystemDialog.prototype.updateHeight =
-    function sd_updateHeight(keyboardHeight) {
-      var height = window.layoutManager.height;
-      keyboardHeight = keyboardHeight ? keyboardHeight : 0;
-      this.containerElement.style.height = (height - keyboardHeight) + 'px';
-      this.debug('updateHeight: new height = ' + (height - keyboardHeight));
-      // Scroll up so as to show simpin input box
-      if (this.instanceID === 'simpin-dialog') {
-        document.activeElement.scrollIntoView(false);
-      }
-    };
+  SystemDialog.prototype.updateHeight = function sd_updateHeight() {
+    var height = window.layoutManager.height;
+    this.containerElement.style.height = height + 'px';
+    this.debug('updateHeight: new height = ' + height);
+    // Scroll up so as to show simpin input box
+    if (this.instanceID === 'simpin-dialog') {
+      document.activeElement.scrollIntoView(false);
+    }
+  };

   /**
    * Publish 'show' event for activate the dialog
@@ -114,8 +111,7 @@
     this.element.hidden = false;
     this.element.classList.add(this.customID);
     this.onShow();
-    var keyboardHeight = KeyboardManager.getHeight();
-    this.updateHeight(keyboardHeight);
+    this.updateHeight();
     this.publish('show');
   };

diff --git a/apps/system/js/system_dialog_manager.js b/apps/system/js/system_dialog_manager.js
index 8c3995f..2fc4623 100644
--- a/apps/system/js/system_dialog_manager.js
+++ b/apps/system/js/system_dialog_manager.js
@@ -57,8 +57,6 @@
     configs: {
       listens: ['system-dialog-created',
                 'system-dialog-show',
-                'value-selector-showing',
-                'value-selector-hiding',
                 'system-dialog-hide',
                 'system-resize',
                 'home',
@@ -102,30 +100,10 @@
       case 'holdhome':
         // Automatically hide the dialog on home button press
         if (this.states.activeDialog) {
-          // Remove when bug 1040936 is fixed.
-          // Reset the z-index level if removed by value-selector-showing
-          this.states.activeDialog.containerElement.setAttribute(
-            'data-z-index-level', 'dialog-overlay');
           // Deactivate the dialog and pass the event type in the two cases
           this.deactivateDialog(this.states.activeDialog, evt.type);
         }
         break;
-      case 'value-selector-showing':
-        // Remove when bug 1040936 is fixed.
-        // Remove the dialog-overlay z-index to make the value-selector visible.
-        if (this.states.activeDialog) {
-          this.states.activeDialog.containerElement.removeAttribute(
-            'data-z-index-level');
-        }
-        break;
-      case 'value-selector-hiding':
-        // Remove when bug 1040936 is fixed.
-        // Add the dialog-overlay z-index when value-selector is hidden.
-        if (this.states.activeDialog) {
-          this.states.activeDialog.containerElement.setAttribute(
-            'data-z-index-level', 'dialog-overlay');
-        }
-        break;
     }
   };

diff --git a/apps/system/js/task_manager.js b/apps/system/js/task_manager.js
index 799a404..147704f 100644
--- a/apps/system/js/task_manager.js
+++ b/apps/system/js/task_manager.js
@@ -1120,13 +1120,6 @@
   TaskManager.prototype.onStartEvent = function cs_onStartEvent(evt) {
     var cardsView = this.element;
     evt.stopPropagation();
-
-    // If there is no card in the cardsView, go back to home screen
-    if (cardsView.classList.contains('empty')) {
-      this.goToHomescreen(evt);
-      return;
-    }
-
     evt.target.setCapture(true);
     cardsView.addEventListener('touchmove', this);
     cardsView.addEventListener('touchend', this);
diff --git a/apps/system/js/telephony_settings.js b/apps/system/js/telephony_settings.js
index 2102729..b8e5302 100644
--- a/apps/system/js/telephony_settings.js
+++ b/apps/system/js/telephony_settings.js
@@ -246,7 +246,7 @@
      */
     _getDefaultPreferredNetworkType: function(hwSupportedTypes) {
       return ['lte', 'wcdma', 'gsm', 'cdma', 'evdo'].filter(function(type) {
-        return (hwSupportedTypes && hwSupportedTypes.indexOf(type) !== -1);
+        return (hwSupportedTypes.indexOf(type) !== -1);
       }).join('/');
     }
   };
diff --git a/apps/system/js/text_selection_dialog.js b/apps/system/js/text_selection_dialog.js
index 93e7cbb..f9fbb04 100644
--- a/apps/system/js/text_selection_dialog.js
+++ b/apps/system/js/text_selection_dialog.js
@@ -27,8 +27,6 @@
     }
   };

-  TextSelectionDialog.prototype = Object.create(window.BaseUI.prototype);
-
   TextSelectionDialog.prototype.TEXTDIALOG_HEIGHT = 52;

   TextSelectionDialog.prototype.TEXTDIALOG_WIDTH = 52;
@@ -45,6 +43,8 @@
   // the bottom of selected area to utility menu.
   TextSelectionDialog.prototype.DISTANCE_FROM_SELECTEDAREA_TO_MENUTOP = 34;

+  TextSelectionDialog.prototype = Object.create(window.BaseUI.prototype);
+
   TextSelectionDialog.prototype.CLASS_NAME = 'TextSelectionDialog';

   TextSelectionDialog.prototype.ELEMENT_PREFIX = 'textselection-dialog-';
@@ -228,7 +228,6 @@
       if ((posLeft + numOfSelectOptions * selectOptionWidth) > frameWidth) {
         posLeft = frameWidth - numOfSelectOptions * selectOptionWidth;
       }
-
       return {
         top: posTop + (this.app ? 0 : detail.frameOffsetY),
         left: posLeft + (this.app ? 0 : detail.frameOffsetX)
diff --git a/apps/system/js/utility_tray.js b/apps/system/js/utility_tray.js
index f50afef..98c91a2 100644
--- a/apps/system/js/utility_tray.js
+++ b/apps/system/js/utility_tray.js
@@ -10,11 +10,6 @@ var UtilityTray = {

   overlay: document.getElementById('utility-tray'),

-  notifications: document.getElementById('utility-tray-notifications'),
-
-  notificationsPlaceholder:
-    document.getElementById('notifications-placeholder'),
-
   statusbar: document.getElementById('statusbar'),

   statusbarIcons: document.getElementById('statusbar-icons'),
@@ -38,7 +33,6 @@ var UtilityTray = {
     window.addEventListener('launchapp', this);
     window.addEventListener('displayapp', this);
     window.addEventListener('appopening', this);
-    window.addEventListener('resize', this);

     // Firing when the keyboard and the IME switcher shows/hides.
     window.addEventListener('keyboardimeswitchershow', this);
@@ -65,10 +59,8 @@ var UtilityTray = {

   startY: undefined,
   lastDelta: undefined,
-  screenWidth: 0,
-  screenHeight: 0,
-  grippyHeight: 0,
-  placeholderHeight: 0,
+  screenHeight: undefined,
+  screenWidth: undefined,

   handleEvent: function ut_handleEvent(evt) {
     var target = evt.target;
@@ -159,50 +151,22 @@ var UtilityTray = {
       case 'wheel':
         if (evt.deltaMode === evt.DOM_DELTA_PAGE && evt.deltaY &&
           evt.deltaY > 0) {
-          this.hide(true);
+          this.hide();
         }
         break;

       case 'transitionend':
         if (!this.shown) {
           this.screen.classList.remove('utility-tray');
-          this.notifications.classList.remove('visible');
         }
         break;
-
-      case 'resize':
-        console.log('Window resized');
-        this.validateCachedSizes(true);
-        break;
-    }
-  },
-
-  validateCachedSizes: function(refresh) {
-    var screenRect;
-    if (refresh || !this.screenHeight || !this.screenWidth) {
-      screenRect = this.overlay.getBoundingClientRect();
-    }
-
-    if (refresh || !this.screenWidth) {
-      this.screenWidth = screenRect.width || 0;
-    }
-
-    if (refresh || !this.screenHeight) {
-      this.screenHeight = screenRect.height || 0;
-    }
-
-    if (refresh || !this.grippyHeight) {
-      this.grippyHeight = this.grippy.clientHeight || 0;
-    }
-
-    if (refresh || !this.placeholderHeight) {
-      this.placeholderHeight = this.notificationsPlaceholder.clientHeight || 0;
-      this.notifications.style.height = this.placeholderHeight + 'px';
     }
   },

   onTouchStart: function ut_onTouchStart(touch) {
-    this.validateCachedSizes();
+    var screenRect = this.overlay.getBoundingClientRect();
+    this.screenHeight = screenRect.height;
+    this.screenWidth = screenRect.width;
     this.active = true;
     this.startY = touch.pageY;
     if (!this.screen.classList.contains('utility-tray')) {
@@ -218,9 +182,6 @@ var UtilityTray = {
       }
     }
     this.screen.classList.add('utility-tray');
-    this.notifications.classList.add('visible');
-
-    window.dispatchEvent(new CustomEvent('utility-tray-overlayopening'));
   },

   onTouchMove: function ut_onTouchMove(touch) {
@@ -228,7 +189,6 @@ var UtilityTray = {
       return;
     }

-    this.validateCachedSizes();
     var screenHeight = this.screenHeight;

     var y = touch.pageY;
@@ -244,11 +204,6 @@ var UtilityTray = {
     var style = this.overlay.style;
     style.MozTransition = '';
     style.MozTransform = 'translateY(' + dy + 'px)';
-
-    this.notifications.style.transition = '';
-    var notificationBottom = Math.max(0, dy - this.grippyHeight);
-    this.notifications.style.clip =
-      'rect(0, ' + this.screenWidth + 'px, ' + notificationBottom + 'px, 0)';
   },

   onTouchEnd: function ut_onTouchEnd(touch) {
@@ -263,26 +218,21 @@ var UtilityTray = {
     }
     this.startY = undefined;
     this.lastDelta = undefined;
+    this.screenHeight = undefined;
   },

   hide: function ut_hide(instant) {
-    this.validateCachedSizes();
     var alreadyHidden = !this.shown;
     var style = this.overlay.style;
     style.MozTransition = instant ? '' : '-moz-transform 0.2s linear';
-    this.notifications.style.transition = instant ? '' : 'clip 0.2s linear';
-    this.notifications.style.clip =
-      'rect(0, ' + this.screenWidth + 'px, 0, 0)';
+    style.MozTransform = '';
+    this.shown = false;

     // If the transition has not started yet there won't be any transitionend
     // event so let's not wait in order to remove the utility-tray class.
     if (instant || style.MozTransform === '') {
       this.screen.classList.remove('utility-tray');
-      this.notifications.classList.remove('visible');
     }
-
-    style.MozTransform = '';
-    this.shown = false;
     window.dispatchEvent(new CustomEvent('utility-tray-overlayclosed'));

     if (!alreadyHidden) {
@@ -293,21 +243,12 @@ var UtilityTray = {
   },

   show: function ut_show(dy) {
-    this.validateCachedSizes();
     var alreadyShown = this.shown;
     var style = this.overlay.style;
     style.MozTransition = '-moz-transform 0.2s linear';
     style.MozTransform = 'translateY(100%)';
-
     this.shown = true;
     this.screen.classList.add('utility-tray');
-    this.notifications.classList.add('visible');
-    this.notifications.style.transition = 'clip 0.2s linear';
-    this.notifications.style.height = this.placeholderHeight + 'px';
-    var notificationBottom = Math.max(0, this.screenHeight - this.grippyHeight);
-    this.notifications.style.clip =
-      'rect(0, ' + this.screenWidth + 'px, ' + notificationBottom + 'px, 0)';
-    this.notifications.classList.add('visible');
     window.dispatchEvent(new CustomEvent('utility-tray-overlayopened'));

     if (!alreadyShown) {
diff --git a/apps/system/js/value_selector/value_selector.js b/apps/system/js/value_selector/value_selector.js
index 4466ece..baf57f3 100644
--- a/apps/system/js/value_selector/value_selector.js
+++ b/apps/system/js/value_selector/value_selector.js
@@ -1,250 +1,206 @@
-/* global BaseUI, LazyLoader, InputParser, ValueSelector, SpinDatePicker,
-          ValuePicker, Template */
+/* -*- Mode: js; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /
+/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */

 'use strict';

-(function(exports) {
+var ValueSelector = {
+
+  _containers: {},
+  _popups: {},
+  _buttons: {},
+  _datePicker: null,
+  _currentPickerType: null,
+  _currentInputType: null,
+  _currentDatetimeValue: '',
+  _im: navigator.mozInputMethod,
+
+  debug: function(msg) {
+    var debugFlag = false;
+    if (debugFlag) {
+      console.log('[ValueSelector] ', msg);
+    }
+  },

-  var _id = 0;
+  init: function vs_init() {
+    var self = this;

-  function toCamelCase(str) {
-    return str.replace(/\-(.)/g, function replacer(str, p1) {
-      return p1.toUpperCase();
+    window.addEventListener('mozChromeEvent', function(evt) {
+      switch (evt.detail.type) {
+        case 'inputmethod-contextchange':
+          self.inputFocusChange(evt.detail);
+          break;
+      }
     });
-  }

-  exports.ValueSelector = function(app) {
-    this.app = app;
-    this.containerElement = app.element;
-    this.instanceID = _id++;
-    this._currentPickerType = null;
-    this._currentInputType = null;
-    this._currentDatetimeValue = '';
-    this._injected = false;
-    this._datePicker = null;
-    this._timePicker = null;
+    this._element = document.getElementById('value-selector');
+    this._element.addEventListener('mousedown', this);
+    this._containers['select'] =
+      document.getElementById('value-selector-container');
+    this._containers['select'].addEventListener('click', this);

-    app.element.addEventListener('_opening', this);
-    app.element.addEventListener('_closing', this);
-    app.element.addEventListener('_inputmethod-contextchange', this);
-    app.element.addEventListener('_sheetstransitionstart', this);
-    app.element.addEventListener('_localized', this);
-  };
+    this._popups['select'] =
+      document.getElementById('select-option-popup');
+    this._popups['select'].addEventListener('submit', this);
+    this._popups['time'] =
+      document.getElementById('time-picker-popup');
+    this._popups['date'] =
+      document.getElementById('spin-date-picker-popup');

-  ValueSelector.prototype = Object.create(BaseUI.prototype);
+    this._buttons['select'] = document.getElementById('select-options-buttons');
+    this._buttons['select'].addEventListener('click', this);

-  ValueSelector.prototype.CLASS_NAME = 'ValueSelector';
+    this._buttons['time'] = document.getElementById('time-picker-buttons');
+    this._buttons['time'].addEventListener('click', this);

-  ValueSelector.prototype.EVENT_PREFIX = 'value-selector-';
+    this._buttons['date'] = document.getElementById('spin-date-picker-buttons');
+    this._buttons['date'].addEventListener('click', this);

-  ValueSelector.prototype.ELEMENT_PREFIX = 'value-selector-';
+    this._context = document.getElementById('time-picker');

-  ValueSelector.prototype.customID = function vs_customID() {
-    if (this.app) {
-      return '[' + this.app.origin + ']';
-    } else {
-      return '';
-    }
-  };
+    this._containers['time'] = this._context.querySelector('.picker-container');
+    this._containers['date'] = document.getElementById('spin-date-picker');

-  ValueSelector.prototype._im = navigator.mozInputMethod;
+    // Prevent focus being taken away by us for time picker.
+    // The event listener on outer box will not be triggered cause
+    // there is a evt.stopPropagation() in value_picker.js

-  ValueSelector.prototype.handleEvent = function vs_handleEvent(evt) {
-    this.app.debug('handling ' + evt.type);
-    var target = evt.target;
-    switch (evt.type) {
-      case 'submit':
-      case 'mousedown':
-        evt.preventDefault();
-        break;
-      case 'click':
-        if (target.dataset.type === 'cancel') {
-          this.cancel();
-        } else if (target.dataset.type === 'ok') {
-          this.confirm();
-        } else {
-          this.handleSelect(target);
-        }
-        break;
-      case '_opening':
-      case '_closing':
-        if (this._injected) {
-          this.hide();
-        }
-        break;
-      case '_localized':
-        // invalidate the current date and time picker when language setting
-        // changes
+    var pickerElements = ['.value-picker-hours', '.value-picker-minutes',
+                         '.value-picker-hour24-state'];
+
+    pickerElements.forEach(function(className) {
+      var el = this._context.querySelector(className);
+      el.addEventListener('mousedown', this);
+    }, this);
+
+    window.addEventListener('appopened', this);
+    window.addEventListener('appclosing', this);
+    window.addEventListener('sheetstransitionstart', this);
+
+    window.addEventListener('activityclosing', this);
+
+    // invalidate the current date and time picker when language setting changes
+    navigator.mozSettings.addObserver('language.current',
+      (function language_change(e) {
         if (this._datePicker) {
           this._datePicker.uninit();
           this._datePicker = null;
         }
-        if (this._timePicker) {
-          this._timePicker.uninit();
-          this._timePicker = null;
-        }
-        break;
-      case '_sheetstransitionstart':
-        // Only cancel if the value selector was rendered.
-        if (this._injected) {
-          this.cancel();
-        }
-        break;
-      case '_inputmethod-contextchange':
-        var typesToHandle = ['select-one', 'select-multiple', 'date', 'time',
-          'datetime', 'datetime-local', 'blur'];
-        // handle the <select> element and inputs with type of date/time
-        // in system app for now
-        if (typesToHandle.indexOf(evt.detail.inputType) < 0) {
-          return;
-        }
-        if (this._injected) {
-          this.show(evt.detail);
-        } else {
-          this.render(function afterRender() {
-            this.show(evt.detail);
-          }.bind(this));
-        }
-        break;
-    }
-  };
-
-  ValueSelector.prototype.render = function vs_render(callback) {
-    this.publish('willrender');
-    LazyLoader.load('shared/js/template.js', function onTemplateLoaded(){
-      this.containerElement.insertAdjacentHTML('beforeend', this.view());
-      this._fetchElements();
-      this._registerEvents();
-      this._injected = true;
-      this.publish('rendered');
-      callback();
-    }.bind(this));
-  };
-
-  ValueSelector.prototype._fetchElements = function vs__fetchElements() {
-    this.element = document.getElementById(this.CLASS_NAME + this.instanceID);
-    this.elements = {};
-
-    this.elementClasses = ['select-option-popup', 'container',
-      'options-container', 'options-title', 'select-options-buttons',
-      'time-picker-popup', 'time-picker', 'time-picker-container',
-      'time-picker-buttons', 'spin-date-picker-popup', 'spin-date-picker',
-      'spin-date-picker-buttons'];
-
-    // Loop and add element with camel style name to Value Selector attribute.
-    this.elementClasses.forEach(function createElementRef(name) {
-      this.elements[toCamelCase(name)] =
-        this.element.querySelector('.' + this.ELEMENT_PREFIX + name);
-    }, this);
-  };
-
-  ValueSelector.prototype.view = function vs_view() {
-    var template = new Template('value-selector-template');
-    return template.interpolate({
-      id: this.CLASS_NAME + this.instanceID
-    });
-  };
-
-  ValueSelector.prototype._registerEvents = function vs__registerEvents() {
-    this.elements.container.addEventListener('click', this);
-    // Prevent the form from submit.
-    this.elements.selectOptionPopup.addEventListener('submit', this);
-    this.element.addEventListener('mousedown', this);
-    ['selectOptionsButtons', 'timePickerButtons',
-      'spinDatePickerButtons'].forEach(function(elementId) {
-        this.elements[elementId].addEventListener('click', this);
-      }, this);
-  };
-
-  ValueSelector.prototype._format = function vs__format(date, format) {
-    if (!date) {
-      return '';
-    }
-    date = new Date(date);
-    return date.toLocaleFormat(format);
-  };
+        if (this._timePickerInitialized) {
+          this._timePickerInitialized = false;
+          TimePicker.uninitTimePicker();
+      }}).bind(this));
+  },

-  ValueSelector.prototype.show = function vs_show(detail) {
-    var currentInputType = detail.inputType;
-    var currentValue = detail.value;
+  inputFocusChange: function vs_focusChange(detail) {
+    var self = this;

-    this._currentDatetimeValue = currentValue;
-    this._currentInputType = currentInputType;
+    var typeToHandle = ['select-one', 'select-multiple', 'date',
+      'time', 'datetime', 'datetime-local', 'blur'];

-    if (currentInputType === 'blur') {
-      this.hide();
+    var currentInputType = detail.inputType;
+    // handle the <select> element and inputs with type of date/time
+    // in system app for now
+    if (typeToHandle.indexOf(currentInputType) == -1)
       return;
-    }
-
-    this.publish('showing');

-    var min = detail.min;
-    var max = detail.max;
-
-    if (detail.choices) {
+    if (detail.choices)
       detail.choices = JSON.parse(detail.choices);
-    }

-    this.app._setVisibleForScreenReader(false);
-    if (this.element.hidden) {
-      this.element.hidden = false;
-    }
+    var currentValue = detail.value;
+    self._currentDatetimeValue = currentValue;
+    self._currentInputType = currentInputType;

     switch (currentInputType) {
       case 'select-one':
       case 'select-multiple':
-        this.app.debug('select triggered' + JSON.stringify(detail));
-        this._currentPickerType = currentInputType;
-        this.showOptions(detail);
+        self.debug('select triggered' + JSON.stringify(detail));
+        self._currentPickerType = currentInputType;
+        self.showOptions(detail);
         break;

       case 'date':
-        this.showDatePicker(currentValue, min, max);
+        var min = detail.min;
+        var max = detail.max;
+        self.showDatePicker(currentValue, min, max);
         break;

       case 'time':
-        this.showTimePicker(currentValue);
+        self.showTimePicker(currentValue);
         break;

       case 'datetime':
       case 'datetime-local':
-        this.showDatePicker(this._format(currentValue, '%Y-%m-%d'), min,
-          max);
+        var min = detail.min;
+        var max = detail.max;
+        if (currentValue !== '') {
+          var date = new Date(currentValue);
+          var localDate = date.toLocaleFormat('%Y-%m-%d');
+          self.showDatePicker(localDate, min, max);
+        } else {
+          self.showDatePicker('', min, max);
+        }
         break;
-    }
-  };

-  ValueSelector.prototype.showPanel = function vs_showPanel(type) {
-    ['selectOptionPopup', 'timePickerPopup', 'spinDatePickerPopup'].forEach(
-      function(elementId) {
-        this.elements[elementId].hidden = (type !== elementId);
-      }, this);
+      case 'blur':
+        self.hide();
+        break;
+    }
   },

-  ValueSelector.prototype.hide = function vs_hide() {
-    this.app._setVisibleForScreenReader(true);
-    if (this.element.hidden) {
-      return;
-    }
-    this.publish('hiding');
-    this.element.blur();
-    this.element.hidden = true;
-    if (this.app) {
-      this.app.focus();
+  handleEvent: function vs_handleEvent(evt) {
+    switch (evt.type) {
+      case 'appopened':
+      case 'appclosing':
+      case 'activityclosing':
+        this.hide();
+        break;
+      case 'sheetstransitionstart':
+        this.cancel();
+        break;
+
+      case 'click':
+        var currentTarget = evt.currentTarget;
+        switch (currentTarget) {
+          case this._buttons['select']:
+          case this._buttons['time']:
+          case this._buttons['date']:
+            var target = evt.target;
+            if (target.dataset.type == 'cancel') {
+              this.cancel();
+            } else if (target.dataset.type == 'ok') {
+              this.confirm();
+            }
+            break;
+
+          case this._containers['select']:
+            this.handleSelect(evt.target);
+            break;
+        }
+        break;
+
+      case 'submit':
+        // Prevent the form from submit.
+      case 'mousedown':
+        // Prevent focus being taken away by us.
+        evt.preventDefault();
+        break;
+
+      default:
+        this.debug('no event handler defined for' + evt.type);
+        break;
     }
-  };
+  },
+
+  handleSelect: function vs_handleSelect(target) {

-  ValueSelector.prototype.handleSelect = function vs_handleSelect(target) {
     if (target.dataset === undefined ||
         (target.dataset.optionIndex === undefined &&
-         target.dataset.optionValue === undefined)) {
+         target.dataset.optionValue === undefined))
       return;
-    }

-    var selectee;
     if (this._currentPickerType === 'select-one') {
-      selectee = this.elements.container.querySelectorAll(
-        '[aria-selected="true"]');
+      var selectee = this._containers['select'].
+          querySelectorAll('[aria-selected="true"]');
       for (var i = 0; i < selectee.length; i++) {
         selectee[i].removeAttribute('aria-selected');
       }
@@ -260,20 +216,19 @@
     var singleOptionIndex;
     var optionIndices = [];

-    selectee = this.elements.container.querySelectorAll(
-      '[aria-selected="true"]');
+    var selectee = this._containers['select'].
+          querySelectorAll('[aria-selected="true"]');

     if (this._currentPickerType === 'select-one') {

-      if (selectee.length > 0) {
+      if (selectee.length > 0)
         singleOptionIndex = selectee[0].dataset.optionIndex;
-      }

       this._im.setSelectedOption(singleOptionIndex);

     } else if (this._currentPickerType === 'select-multiple') {
       // Multiple select case
-      for (var i = 0; i < selectee.length; i++) { // jshint ignore:line
+      for (var i = 0; i < selectee.length; i++) {

         var index = parseInt(selectee[i].dataset.optionIndex);
         optionIndices.push(index);
@@ -282,40 +237,74 @@
       this._im.setSelectedOptions(optionIndices);
     }

-  };
+  },

-  ValueSelector.prototype.cancel = function vs_cancel() {
-    this.app.debug('cancel invoked');
+  show: function vs_show(detail) {
+    if (!this._element.hidden) {
+      return;
+    }
+    this._element.hidden = false;
+  },
+
+  showPanel: function vs_showPanel(type) {
+    for (var p in this._containers) {
+      if (p === type) {
+        this._popups[p].hidden = false;
+      } else {
+        this._popups[p].hidden = true;
+      }
+    }
+  },
+
+  hide: function vs_hide() {
+    if (this._element.hidden) {
+      return;
+    }
+    this._element.hidden = true;
+  },
+
+  cancel: function vs_cancel() {
+    this.debug('cancel invoked');
     this._im.removeFocus();
     this.hide();
-  };
+  },

-  ValueSelector.prototype.confirm = function vs_confirm() {
+  confirm: function vs_confirm() {
     var currentInputType = this._currentInputType;

     switch (currentInputType) {
       case 'time':
-        var timeValue = this._timePicker.getTimeValue();
-        this.app.debug('output value: ' + timeValue);
+        var timeValue = TimePicker.getTimeValue();
+        this.debug('output value: ' + timeValue);
         this._im.setValue(timeValue);
         break;
+
       case 'date':
+        var dateValue = this._datePicker.value;
         // The format should be 2012-09-19
-        var dateValue = this._format(this._datePicker.value, '%Y-%m-%d');
-        this.app.debug('output value: ' + dateValue);
+        dateValue = dateValue.toLocaleFormat('%Y-%m-%d');
+        this.debug('output value: ' + dateValue);
         this._im.setValue(dateValue);
         break;
+
       case 'datetime':
       case 'datetime-local':
         var currentDatetimeValue = this._currentDatetimeValue;
         if (this._currentPickerType === 'date') {
           this.hide();
-          this.showTimePicker(this._format(currentDatetimeValue, '%H:%M'));
+
+          if (currentDatetimeValue !== '') {
+            var date = new Date(this._currentDatetimeValue);
+            var localTime = date.toLocaleFormat('%H:%M');
+            this.showTimePicker(localTime);
+          } else {
+            this.showTimePicker();
+          }
           return;
         } else if (this._currentPickerType === 'time') {
           var selectedDate = this._datePicker.value;
-          var hour = this._timePicker.getHour();
-          var minute = this._timePicker.minute.getSelectedDisplayedText();
+          var hour = TimePicker.getHour();
+          var minute = TimePicker.timePicker.minute.getSelectedDisplayedText();
           var second = '';
           var millisecond = '';
           var date = null;
@@ -346,7 +335,7 @@
             datetimeValue = selectedDate.toLocaleFormat('%Y-%m-%dT%H:%M:%S.') +
                             selectedDate.getMilliseconds();
           }
-          this.app.debug('output value: ' + datetimeValue);
+          this.debug('output value: ' + datetimeValue);
           this._im.setValue(datetimeValue);
         }
         break;
@@ -354,161 +343,223 @@

     this._im.removeFocus();
     this.hide();
-  };
+  },
+
+  showOptions: function vs_showOptions(detail) {

-  ValueSelector.prototype.showOptions = function vs_showOptions(detail) {
     var options = null;
-    if (detail.choices && detail.choices.choices) {
+    if (detail.choices && detail.choices.choices)
       options = detail.choices.choices;
-    }

-    if (options) {
+    if (options)
       this.buildOptions(options);
+
+    this.show();
+    this.showPanel('select');
+  },
+
+  buildOptions: function(options) {
+
+    var optionHTML = '';
+
+    function escapeHTML(str) {
+      var span = document.createElement('span');
+      span.textContent = str;
+      return span.innerHTML;
     }

-    this.showPanel('selectOptionPopup');
-  };
+    for (var i = 0, n = options.length; i < n; i++) {

-  ValueSelector.prototype.buildOptions = function(options) {
-    if (this.elements.optionsContainer) {
-      this.elements.optionsContainer.innerHTML = '';
-    } else {
-      return;
+      var checked = options[i].selected ? ' aria-selected="true"' : '';
+
+      // This for attribute is created only to avoid applying
+      // a general rule in building block
+      var forAttribute = ' for="gaia-option-' + options[i].optionIndex + '"';
+
+      optionHTML += '<li role="option" data-option-index="' +
+                     options[i].optionIndex + '"' + checked + '>' +
+                     '<label role="presentation"' + forAttribute + '> <span>' +
+                     escapeHTML(options[i].text) +
+                     '</span></label>' +
+                    '</li>';
     }

-    var template = new Template('value-selector-option-template');
+    var optionsContainer = document.querySelector(
+                             '#value-selector-container ol');
+    if (!optionsContainer)
+      return;

     // Add ARIA property to notify if this is a multi-select or not.
-    this.elements.optionsContainer.setAttribute('aria-multiselectable',
+    optionsContainer.setAttribute('aria-multiselectable',
       this._currentPickerType !== 'select-one');

-    options.forEach(function(option) {
-      this.elements.optionsContainer.insertAdjacentHTML('beforeend',
-        template.interpolate({
-          index: option.optionIndex.toString(10),
-          checked: option.selected.toString(),
-          for: 'gaia-option-' + option.optionIndex,
-          text: option.text
-        }));
-    }, this);
+    optionsContainer.innerHTML = optionHTML;
+

     // Apply different style when the options are more than 1 page
-    this.elements.container.classList.toggle('scrollable', options.length > 5);
+    if (options.length > 5) {
+      this._containers['select'].classList.add('scrollable');
+    } else {
+      this._containers['select'].classList.remove('scrollable');
+    }

     // Change the title for multiple select
-    var titleL10nId = this._currentPickerType === 'select-one' ?
-      'choose-option' : 'choose-options';
+    var titleL10nId = 'choose-options';
+    if (this._currentPickerType === 'select-one')
+      titleL10nId = 'choose-option';
+
+    var optionsTitle = document.querySelector(
+                       '#value-selector-container h1');

-    if (this.elements.optionsTitle) {
-      this.elements.optionsTitle.dataset.l10nId = titleL10nId;
-      this.elements.optionsTitle.textContent = navigator.mozL10n.get(
-        titleL10nId);
+    if (optionsTitle) {
+      optionsTitle.dataset.l10nId = titleL10nId;
+      optionsTitle.textContent = navigator.mozL10n.get(titleL10nId);
     }
-  };
+  },

-  ValueSelector.prototype.showTimePicker =
-    function vs_showTimePicker(currentValue) {
-      this._currentPickerType = 'time';
-      this.showPanel('timePickerPopup');
+  showTimePicker: function vs_showTimePicker(currentValue) {
+    this._currentPickerType = 'time';
+    this.show();
+    this.showPanel('time');

-      if (!this._timePicker) {
-        this._timePicker = new TimePicker(this.elements.timePickerContainer);
-      }
+    if (!this._timePickerInitialized) {
+      TimePicker.initTimePicker();
+      this._timePickerInitialized = true;
+    }

-      var time;
-      if (!currentValue) {
-        var now = new Date();
-        time = {
-          hours: now.getHours(),
-          minutes: now.getMinutes()
-        };
-      } else {
-        time = InputParser.importTime(currentValue);
-      }
+    var time;
+    if (!currentValue) {
+      var now = new Date();
+      time = {
+        hours: now.getHours(),
+        minutes: now.getMinutes()
+      };
+    } else {
+      time = InputParser.importTime(currentValue);
+    }

-      // Set the value of time picker according to the current value
-      if (this._timePicker.is12hFormat) {
-        var hour = (time.hours % 12);
-        hour = (hour === 0) ? 12 : hour;
-        // 24-hour state value selector: AM = 0, PM = 1
-        var hour24State = (time.hours >= 12) ? 1 : 0;
-        this._timePicker.hour.setSelectedIndexByDisplayedText(hour);
-        this._timePicker.hour24State.setSelectedIndex(hour24State);
-      } else {
-        this._timePicker.hour.setSelectedIndex(time.hours);
-      }
+    var timePicker = TimePicker.timePicker;
+    // Set the value of time picker according to the current value
+    if (timePicker.is12hFormat) {
+      var hour = (time.hours % 12);
+      hour = (hour == 0) ? 12 : hour;
+      // 24-hour state value selector: AM = 0, PM = 1
+      var hour24State = (time.hours >= 12) ? 1 : 0;
+      timePicker.hour.setSelectedIndexByDisplayedText(hour);
+      timePicker.hour24State.setSelectedIndex(hour24State);
+    } else {
+      timePicker.hour.setSelectedIndex(time.hours);
+    }

-      this._timePicker.minute.setSelectedIndex(time.minutes);
-    };
+    timePicker.minute.setSelectedIndex(time.minutes);
+  },

-  ValueSelector.prototype._str2Date = function vs__str2Date(str) {
-    if (!str) {
-      return null;
-    }
+  showDatePicker: function vs_showDatePicker(currentValue, min, max) {
+    this._currentPickerType = 'date';
+    this.show();
+    this.showPanel('date');
+
+    var minDate = null;
+    var maxDate = null;

-    var dcs = str.split('-');
-    var date = new Date(dcs[0], parseInt(dcs[1]) - 1, dcs[2]);
+    var str2Date = function vs_str2Date(str) {
+      if (!str)
+        return null;

-    if (isNaN(date.getTime())) {
-      date = null;
+      var dcs = str.split('-');
+      var date = new Date(dcs[0], parseInt(dcs[1]) - 1, dcs[2]);
+
+      if (isNaN(date.getTime()))
+        date = null;
+
+      return date;
+    };
+
+    minDate = str2Date(min);
+    maxDate = str2Date(max);
+
+    if (!this._datePicker) {
+      this._datePicker = new SpinDatePicker(this._containers['date']);
     }
+    this._datePicker.setRange(minDate, maxDate);

-    return date;
-  };
+    // Show current date as default value
+    var date = new Date();
+    if (currentValue) {
+      date = InputParser.formatInputDate(currentValue, '');
+    }
+    this._datePicker.value = date;
+  }

-  ValueSelector.prototype.showDatePicker =
-    function vs_showDatePicker(currentValue, min, max) {
-      this._currentPickerType = 'date';
-      this.showPanel('spinDatePickerPopup');
+};

-      var minDate = null;
-      var maxDate = null;
+var TimePicker = {
+  timePicker: {
+    hour: null,
+    minute: null,
+    hour24State: null,
+    is12hFormat: false
+  },

-      minDate = this._str2Date(min);
-      maxDate = this._str2Date(max);
+  get hourSelector() {
+    delete this.hourSelector;
+    return this.hourSelector =
+      ValueSelector._context.querySelector('.value-picker-hours');
+  },

-      if (!this._datePicker) {
-        this._datePicker = new SpinDatePicker(this.elements.spinDatePicker);
-      }
-      this._datePicker.setRange(minDate, maxDate);
+  get minuteSelector() {
+    delete this.minuteSelector;
+    return this.minuteSelector =
+      ValueSelector._context.querySelector('.value-picker-minutes');
+  },

-      // Show current date as default value
-      var date = new Date();
-      if (currentValue) {
-        date = InputParser.formatInputDate(currentValue, '');
-      }
-      this._datePicker.value = date;
-    };
+  get hour24StateSelector() {
+    delete this.hour24StateSelector;
+    return this.hour24StateSelector =
+      ValueSelector._context.querySelector('.value-picker-hour24-state');
+  },

-  function TimePicker(element) {
-    this.element = element;
-    this._fetchElements();
-    var _ = navigator.mozL10n.get;
-    var localeTimeFormat = _('shortTimeFormat');
+  initTimePicker: function tp_initTimePicker() {
+    var localeTimeFormat = navigator.mozL10n.get('shortTimeFormat');
     var is12hFormat = (localeTimeFormat.indexOf('%p') >= 0);
+    this.timePicker.is12hFormat = is12hFormat;
+    this.setTimePickerStyle();
     var startHour = is12hFormat ? 1 : 0;
     var endHour = is12hFormat ? (startHour + 12) : (startHour + 12 * 2);
     var unitClassName = 'picker-unit';
-
-    this.is12hFormat = is12hFormat;
-    this.hour = new ValuePicker(this.elements.valuePickerHours, {
-      valueDisplayedText: this._setDisplayedText(startHour, endHour),
+    var hourDisplayedText = [];
+    for (var i = startHour; i < endHour; i++) {
+      var value = i;
+      hourDisplayedText.push(value);
+    }
+    var hourUnitStyle = {
+      valueDisplayedText: hourDisplayedText,
       className: unitClassName
-    });
-    this.minute = new ValuePicker(this.elements.valuePickerMinutes, {
-      valueDisplayedText: this._setDisplayedText(0, 60, function(value) {
-        return (value < 10) ? '0' + value : value;
-      }),
+    };
+    this.timePicker.hour = new ValuePicker(this.hourSelector, hourUnitStyle);
+
+    var minuteDisplayedText = [];
+    for (var i = 0; i < 60; i++) {
+      var value = (i < 10) ? '0' + i : i;
+      minuteDisplayedText.push(value);
+    }
+    var minuteUnitStyle = {
+      valueDisplayedText: minuteDisplayedText,
       className: unitClassName
-    });
+    };
+    this.timePicker.minute =
+      new ValuePicker(this.minuteSelector, minuteUnitStyle);
+
     if (is12hFormat) {
-      this.hour24State = new ValuePicker(this.elements.valuePickerHour24State, {
+      var hour24StateUnitStyle = {
         valueDisplayedText: [
-          _('time_am'),
-          _('time_pm')
+          navigator.mozL10n.get('time_am'),
+          navigator.mozL10n.get('time_pm')
         ],
         className: unitClassName
-      });
+      };
+      this.timePicker.hour24State =
+        new ValuePicker(this.hour24StateSelector, hour24StateUnitStyle);
     }

     var separator = ':';
@@ -516,95 +567,49 @@
     if (minutesPosition > 0) {
       separator = localeTimeFormat.substr(minutesPosition - 1, 1);
     }
-    this.elements.hoursMinutesSeparator.textContent = separator;
-    this.setTimePickerStyle();
-
-    this._registerEvents();
-  }
+    document.getElementById('hours-minutes-separator').textContent = separator;
+  },

-  TimePicker.prototype = {
-
-    _fetchElements: function tp__fetchElements() {
-      this.elements = {};
-      this.elementClasses = ['value-picker-hours', 'value-picker-minutes',
-        'value-picker-hour24-state', 'hours-minutes-separator'];
-
-      // Loop and add element with camel style name to Time Picker attribute.
-      this.elementClasses.forEach(function createElementRef(name) {
-        this.elements[toCamelCase(name)] =
-          this.element.querySelector('.' + name);
-      }, this);
-    },
-
-    _registerEvents: function tp__registerEvents() {
-      // Prevent focus being taken away by us for time picker.
-      // The event listener on outer box will not be triggered cause there is a
-      // evt.stopPropagation() in value_picker.js
-      ['valuePickerHours', 'valuePickerMinutes',
-        'valuePickerHour24State'].forEach(function(elementId) {
-          this.elements[elementId].addEventListener('mousedown', this);
-        }, this);
-    },
-
-    handleEvent: function tp_handleEvent(evt) {
-      evt.preventDefault();
-    },
-
-    _unregisterEvents: function tp__unregisterEvents() {
-      ['valuePickerHours', 'valuePickerMinutes',
-        'valuePickerHour24State'].forEach(function(elementId) {
-          this.elements[elementId].removeEventListener('mousedown', this);
-        }, this);
-    },
-
-    _setDisplayedText: function tp__setDisplayedText(min, max, format) {
-      var list = [];
-      for (var i = min; i < max; ++i) {
-        list.push(format ? format(i) : i);
-      }
-      return list;
-    },
-
-    uninit: function tp_uninit() {
-      this._unregisterEvents();
-      this.minute.uninit();
-      this.hour.uninit();
-      if (this.hour24State) {
-        this.hour24State.uninit();
-      }
-    },
-
-    setTimePickerStyle: function tp_setTimePickerStyle() {
-      var style = 'format24h';
-      if (this.is12hFormat) {
-        var localeTimeFormat = navigator.mozL10n.get('shortTimeFormat');
-        var reversedPeriod =
-          (localeTimeFormat.indexOf('%p') < localeTimeFormat.indexOf('%M'));
-        style = (reversedPeriod) ? 'format12hrev' : 'format12h';
-      }
-      this.element.classList.toggle(style, true);
-    },
-
-    getHour: function tp_getHours() {
-      var hour = 0;
-      if (this.is12hFormat) {
-        var hour24Offset = 12 * this.hour24State.getSelectedIndex();
-        hour = this.hour.getSelectedDisplayedText();
-        hour = (hour == 12) ? 0 : hour;
-        hour = hour + hour24Offset;
-      } else {
-        hour = this.hour.getSelectedIndex();
-      }
-      return hour;
-    },
+  uninitTimePicker: function tp_uninitTimePicker() {
+    TimePicker.timePicker.minute.uninit();
+    TimePicker.timePicker.hour.uninit();
+    if (TimePicker.timePicker.hour24State) {
+      TimePicker.timePicker.hour24State.uninit();
+    }
+  },

-    // return a string for the time value, format: "16:37"
-    getTimeValue: function tp_getTimeValue() {
-      var hour = this.getHour();
-      var minute = this.minute.getSelectedDisplayedText();
+  setTimePickerStyle: function tp_setTimePickerStyle() {
+    var style = 'format24h';
+    if (this.timePicker.is12hFormat) {
+      var localeTimeFormat = navigator.mozL10n.get('shortTimeFormat');
+      var reversedPeriod =
+        (localeTimeFormat.indexOf('%p') < localeTimeFormat.indexOf('%M'));
+      style = (reversedPeriod) ? 'format12hrev' : 'format12h';
+    }
+    var container = ValueSelector._context.querySelector('.picker-container');
+    container.className = 'picker-container ' + style;
+  },

-      return (hour < 10 ? '0' : '') + hour + ':' + minute;
+  getHour: function tp_getHours() {
+    var hour = 0;
+    if (this.timePicker.is12hFormat) {
+      var hour24Offset = 12 * this.timePicker.hour24State.getSelectedIndex();
+      hour = this.timePicker.hour.getSelectedDisplayedText();
+      hour = (hour == 12) ? 0 : hour;
+      hour = hour + hour24Offset;
+    } else {
+      hour = this.timePicker.hour.getSelectedIndex();
     }
-  };
+    return hour;
+  },
+
+  // return a string for the time value, format: "16:37"
+  getTimeValue: function tp_getTimeValue() {
+    var hour = this.getHour();
+    var minute = this.timePicker.minute.getSelectedDisplayedText();
+
+    return (hour < 10 ? '0' : '') + hour + ':' + minute;
+  }
+};

-})(window);
+ValueSelector.init();
diff --git a/apps/system/js/visibility_manager.js b/apps/system/js/visibility_manager.js
index c96efdb..3fd43c4 100644
--- a/apps/system/js/visibility_manager.js
+++ b/apps/system/js/visibility_manager.js
@@ -20,8 +20,6 @@
     this._normalAudioChannelActive = false;
     this._deviceLockedTimer = 0;
     this.overlayEvents = [
-      'cardviewshown',
-      'cardviewclosed',
       'lockscreen-appopened',
       'lockscreen-request-unlock',
       'attentionscreenshow',
@@ -47,6 +45,7 @@
     this.overlayEvents.forEach(function overlayEventIterator(event) {
       window.addEventListener(event, this);
     }, this);
+    return this;
   };

   VisibilityManager.prototype.handleEvent = function vm_handleEvent(evt) {
@@ -60,9 +59,6 @@
       // is opened.
       case 'appclosing':
       case 'homescreenopened':
-        if (window.taskManager.isShown()) {
-          this.publish('hidewindowforscreenreader');
-        }
         this._normalAudioChannelActive = false;
         break;
       case 'status-active':
@@ -77,14 +73,11 @@
         this._resetDeviceLockedTimer();
         break;
       case 'lockscreen-request-unlock':
-        var activity = evt.detail && evt.detail.activity ?
-          evt.detail.activity : null;
-
+        if (evt.detail && evt.detail.activity) {
+          return;
+        }
         if (!AttentionScreen.isFullyVisible()) {
-          this.publish('showwindow', {
-            type: evt.type,
-            activity: activity  // Trigger activity opening in AWM
-          });
+          this.publish('showwindow', { type: evt.type });
         }
         this._resetDeviceLockedTimer();
         break;
@@ -113,12 +106,10 @@
         break;
       case 'rocketbar-overlayopened':
       case 'utility-tray-overlayopened':
-      case 'cardviewshown':
         this.publish('hidewindowforscreenreader');
         break;
       case 'rocketbar-overlayclosed':
       case 'utility-tray-overlayclosed':
-      case 'cardviewclosed':
         this.publish('showwindowforscreenreader');
         break;
       case 'mozChromeEvent':
diff --git a/apps/system/locales/system.en-US.properties b/apps/system/locales/system.en-US.properties
index 7ce6a03..03642ae 100644
--- a/apps/system/locales/system.en-US.properties
+++ b/apps/system/locales/system.en-US.properties
@@ -4,7 +4,6 @@ help=Help
 cancel=Cancel
 close=Close
 skip=Skip
-clear.ariaLabel=Clear

 # LOCALIZATION NOTE(undo.ariaLabel): The following string is spoken by screen
 # readers and not shown on the screen.
diff --git a/apps/system/manifest.webapp b/apps/system/manifest.webapp
index 76168eb..200db9f 100644
--- a/apps/system/manifest.webapp
+++ b/apps/system/manifest.webapp
@@ -44,8 +44,7 @@
     "nfc":{ "access": "readonly" },
     "nfc-manager":{},
     "downloads":{},
-    "systemXHR":{},
-    "feature-detection": {}
+    "systemXHR":{}
   },
   "locales": {
     "ar": {
@@ -67,11 +66,10 @@
   },
   "default_locale": "en-US",
   "icons": {
-    "84": "/style/icons/system_84.png",
-    "126": "/style/icons/system_126.png",
-    "142": "/style/icons/system_142.png",
-    "189": "/style/icons/system_189.png",
-    "284": "/style/icons/system_284.png"
+    "30": "/style/icons/System.png",
+    "45": "/style/icons/System_45.png",
+    "60": "/style/icons/System_60.png",
+    "68": "/style/icons/System_68.png"
   },
   "messages": [
      { "alarm": "/index.html" },
diff --git a/apps/system/mobile_id/index.html b/apps/system/mobile_id/index.html
index 22a915c..b986ec3 100644
--- a/apps/system/mobile_id/index.html
+++ b/apps/system/mobile_id/index.html
@@ -53,9 +53,8 @@
               <div class="manual-msisdn">
                 <ul class="msisdn-form">
                   <li>
-                    <span id="legend-parent" class="button icon icon-dialog button-select-wrapper">
-                      <span id="legend"></span>
-                      <select id="country-codes-select" hidden>
+                    <span class="button icon icon-dialog button-select-wrapper">
+                      <select id="country-codes-select">
                       </select>
                     </span>
                   </li>
diff --git a/apps/system/mobile_id/js/ui.js b/apps/system/mobile_id/js/ui.js
index 780b3bc..f2aea29 100644
--- a/apps/system/mobile_id/js/ui.js
+++ b/apps/system/mobile_id/js/ui.js
@@ -9,7 +9,6 @@
       verificationCodeInput, msisdnInput,
       msisdnAutomaticOptions, typeMSISDNButton,
       selectAutomaticOptionsButton, msisdnContainer,
-      legend, legendParent,
       countryCodesSelect, verificationPanel,
       msisdnSelectionPanel, verificationCodeTimer,
       stepsExplanation, verificationExplanation,
@@ -135,24 +134,14 @@
         if (xhr.status === 0 || xhr.status === 200) {
           // Cache the CC
           countryCodes = xhr.response;
-
-          var sortedObject = _sortCountriesByFullName();
           // Clean the <select> element
           countryCodesSelect.innerHTML = '';
-          // Per country, we show its country name (`full`)
+          // Per country, we show it CC
           var ccFragment = document.createDocumentFragment();
-          var added = {};
-          sortedObject.forEach(function(country) {
-            var mcc = country[0];
-            // Do not re-add countries (like USA, which has more than one mcc)
-            if (added[countryCodes[mcc].code]) {
-              return;
-            }
+          Object.keys(countryCodes).forEach(function(country) {
             var option = document.createElement('option');
-            option.textContent = countryCodes[mcc].full + ' (' +
-              countryCodes[mcc].prefix + ')';
-            option.value = mcc;
-            added[countryCodes[mcc].code] = true;
+            option.textContent = countryCodes[country].prefix;
+            option.value = country;
             ccFragment.appendChild(option);
           });

@@ -167,17 +156,6 @@
     xhr.send();
   }

-  function _sortCountriesByFullName() {
-    var sorted = [];
-    for (var mcc in countryCodes) {
-      sorted.push([mcc, countryCodes[mcc].full]);
-    }
-    sorted = sorted.sort(function compareFunction(a, b) {
-      return a[1] > b[1];
-    });
-    return sorted;
-  }
-
   function _getIdentitySelected() {
     var identity;
     if (isManualMSISDN) {
@@ -250,8 +228,6 @@
       selectAutomaticOptionsButton =
         document.getElementById('do-automatic-msisdn');
       msisdnContainer = document.querySelector('.msisdn-selection-wrapper');
-      legend = document.getElementById('legend');
-      legendParent = document.getElementById('legend-parent');
       countryCodesSelect = document.getElementById('country-codes-select');
       verificationPanel = document.querySelector('.verification-panel');
       msisdnSelectionPanel = document.querySelector('.msisdn-selection-panel');
@@ -350,25 +326,6 @@
           Controller.postCloseAction(isVerified);
         }.bind(this)
       );
-
-      countryCodesSelect.addEventListener(
-        'blur',
-        function onSelectBlur() {
-          countryCodesSelect.hidden = true;
-          legend.innerHTML = countryCodes[countryCodesSelect.value].prefix;
-          return;
-        }
-      );
-
-      legendParent.addEventListener(
-        'click',
-        function onLegendClick() {
-          countryCodesSelect.click();
-          countryCodesSelect.focus();
-          countryCodesSelect.hidden = false;
-          return;
-        }
-      );
     },
     localize: function ui_localize(name) {
       // Cache the name of the app
diff --git a/apps/system/mobile_id/resources/mcc.json b/apps/system/mobile_id/resources/mcc.json
index 2e1bcc6..fd0102e 100644
--- a/apps/system/mobile_id/resources/mcc.json
+++ b/apps/system/mobile_id/resources/mcc.json
@@ -500,11 +500,6 @@
     "prefix": "+971"
   },
   "425": {
-    "full": "Israel",
-    "code": "il",
-    "prefix": "+972"
-  },
-  "425-2": {
     "full": "Palestinian Territory",
     "code": "ps",
     "prefix": "+970"
diff --git a/apps/system/mobile_id/style/mobile_id.css b/apps/system/mobile_id/style/mobile_id.css
index 068bb91..8708135 100644
--- a/apps/system/mobile_id/style/mobile_id.css
+++ b/apps/system/mobile_id/style/mobile_id.css
@@ -430,9 +430,4 @@ input.error {
   font-size: 2.2rem;
   text-align: center;
   font-weight: 300;
-}
-
-#legend {
-  text-align: center;
-  display: block;
 }
\ No newline at end of file
diff --git a/apps/system/style/attention_screen.css b/apps/system/style/attention_screen.css
index 07a817a..545419b 100644
--- a/apps/system/style/attention_screen.css
+++ b/apps/system/style/attention_screen.css
@@ -25,7 +25,7 @@
   transition: none;
 }

-#screen.attention.active-statusbar:not(.rocketbar-focused) #statusbar {
+#screen.attention.active-statusbar #statusbar {
   display: none;
 }

diff --git a/apps/system/style/browser_frame/browser_frame.css b/apps/system/style/browser_frame/browser_frame.css
index dec0419..b025bb8 100644
--- a/apps/system/style/browser_frame/browser_frame.css
+++ b/apps/system/style/browser_frame/browser_frame.css
@@ -1,4 +1,9 @@
 iframe.browser {
+  position: absolute;
+  top: 0;
+  left: 0;
+  width: 100%;
+  height: 100%;
   border: none;
 }

diff --git a/apps/system/style/cost_control/cost_control.css b/apps/system/style/cost_control/cost_control.css
index 20d1e94..8c6d06b 100644
--- a/apps/system/style/cost_control/cost_control.css
+++ b/apps/system/style/cost_control/cost_control.css
@@ -1,4 +1,5 @@
 /* Resetting */
+#cost-control-widget,
 #cost-control-widget iframe {
   width: 100%;
   height: 4.5rem;
@@ -6,7 +7,3 @@
   margin: 0;
   padding: 0;
 }
-
-#cost-control-widget {
-  font-size: 0;
-}
diff --git a/apps/system/style/icons/System.png b/apps/system/style/icons/System.png
new file mode 100644
index 0000000..d88e2f8
Binary files /dev/null and b/apps/system/style/icons/System.png differ
diff --git a/apps/system/style/icons/System_45.png b/apps/system/style/icons/System_45.png
new file mode 100644
index 0000000..5864dcd
Binary files /dev/null and b/apps/system/style/icons/System_45.png differ
diff --git a/apps/system/style/icons/System_60.png b/apps/system/style/icons/System_60.png
new file mode 100644
index 0000000..5bcea1b
Binary files /dev/null and b/apps/system/style/icons/System_60.png differ
diff --git a/apps/system/style/icons/System_68.png b/apps/system/style/icons/System_68.png
new file mode 100644
index 0000000..6c04de5
Binary files /dev/null and b/apps/system/style/icons/System_68.png differ
diff --git a/apps/system/style/icons/checkmark.png b/apps/system/style/icons/checkmark.png
new file mode 100644
index 0000000..4ce06e9
Binary files /dev/null and b/apps/system/style/icons/checkmark.png differ
diff --git a/apps/system/style/icons/checkmark@1.5x.png b/apps/system/style/icons/checkmark@1.5x.png
new file mode 100644
index 0000000..29e8a37
Binary files /dev/null and b/apps/system/style/icons/checkmark@1.5x.png differ
diff --git a/apps/system/style/icons/checkmark@2x.png b/apps/system/style/icons/checkmark@2x.png
new file mode 100644
index 0000000..1878843
Binary files /dev/null and b/apps/system/style/icons/checkmark@2x.png differ
diff --git a/apps/system/style/icons/system_126.png b/apps/system/style/icons/system_126.png
deleted file mode 100644
index afacf42..0000000
Binary files a/apps/system/style/icons/system_126.png and /dev/null differ
diff --git a/apps/system/style/icons/system_142.png b/apps/system/style/icons/system_142.png
deleted file mode 100644
index 382a86a..0000000
Binary files a/apps/system/style/icons/system_142.png and /dev/null differ
diff --git a/apps/system/style/icons/system_189.png b/apps/system/style/icons/system_189.png
deleted file mode 100644
index 4248b40..0000000
Binary files a/apps/system/style/icons/system_189.png and /dev/null differ
diff --git a/apps/system/style/icons/system_284.png b/apps/system/style/icons/system_284.png
deleted file mode 100644
index f3db13e..0000000
Binary files a/apps/system/style/icons/system_284.png and /dev/null differ
diff --git a/apps/system/style/icons/system_84.png b/apps/system/style/icons/system_84.png
deleted file mode 100644
index f1d6da7..0000000
Binary files a/apps/system/style/icons/system_84.png and /dev/null differ
diff --git a/apps/system/style/lockscreen/images/icon-camera.png b/apps/system/style/lockscreen/images/icon-camera.png
new file mode 100644
index 0000000..06fa6e0
Binary files /dev/null and b/apps/system/style/lockscreen/images/icon-camera.png differ
diff --git a/apps/system/style/lockscreen/images/icon-camera@1.5x.png b/apps/system/style/lockscreen/images/icon-camera@1.5x.png
new file mode 100644
index 0000000..0418b39
Binary files /dev/null and b/apps/system/style/lockscreen/images/icon-camera@1.5x.png differ
diff --git a/apps/system/style/lockscreen/images/icon-camera@2.25x.png b/apps/system/style/lockscreen/images/icon-camera@2.25x.png
new file mode 100644
index 0000000..85b0ad6
Binary files /dev/null and b/apps/system/style/lockscreen/images/icon-camera@2.25x.png differ
diff --git a/apps/system/style/lockscreen/images/icon-camera@2x.png b/apps/system/style/lockscreen/images/icon-camera@2x.png
new file mode 100644
index 0000000..d55044a
Binary files /dev/null and b/apps/system/style/lockscreen/images/icon-camera@2x.png differ
diff --git a/apps/system/style/lockscreen/images/icon-clear.png b/apps/system/style/lockscreen/images/icon-clear.png
new file mode 100644
index 0000000..16c79ed
Binary files /dev/null and b/apps/system/style/lockscreen/images/icon-clear.png differ
diff --git a/apps/system/style/lockscreen/images/icon-clear@1.5x.png b/apps/system/style/lockscreen/images/icon-clear@1.5x.png
new file mode 100644
index 0000000..c06f30e
Binary files /dev/null and b/apps/system/style/lockscreen/images/icon-clear@1.5x.png differ
diff --git a/apps/system/style/lockscreen/images/icon-clear@2.25x.png b/apps/system/style/lockscreen/images/icon-clear@2.25x.png
new file mode 100644
index 0000000..74b0db8
Binary files /dev/null and b/apps/system/style/lockscreen/images/icon-clear@2.25x.png differ
diff --git a/apps/system/style/lockscreen/images/icon-unlock.png b/apps/system/style/lockscreen/images/icon-unlock.png
new file mode 100644
index 0000000..c59a2e3
Binary files /dev/null and b/apps/system/style/lockscreen/images/icon-unlock.png differ
diff --git a/apps/system/style/lockscreen/images/icon-unlock@1.5x.png b/apps/system/style/lockscreen/images/icon-unlock@1.5x.png
new file mode 100644
index 0000000..67f78f0
Binary files /dev/null and b/apps/system/style/lockscreen/images/icon-unlock@1.5x.png differ
diff --git a/apps/system/style/lockscreen/images/icon-unlock@2.25x.png b/apps/system/style/lockscreen/images/icon-unlock@2.25x.png
new file mode 100644
index 0000000..d11a9ef
Binary files /dev/null and b/apps/system/style/lockscreen/images/icon-unlock@2.25x.png differ
diff --git a/apps/system/style/lockscreen/images/icon-unlock@2x.png b/apps/system/style/lockscreen/images/icon-unlock@2x.png
new file mode 100644
index 0000000..c662b5c
Binary files /dev/null and b/apps/system/style/lockscreen/images/icon-unlock@2x.png differ
diff --git a/apps/system/style/lockscreen/images/lockscreen_notification_arrow@1.5x.png b/apps/system/style/lockscreen/images/lockscreen_notification_arrow@1.5x.png
new file mode 100644
index 0000000..a098b28
Binary files /dev/null and b/apps/system/style/lockscreen/images/lockscreen_notification_arrow@1.5x.png differ
diff --git a/apps/system/style/lockscreen/images/lockscreen_notification_arrow@2.25x.png b/apps/system/style/lockscreen/images/lockscreen_notification_arrow@2.25x.png
new file mode 100644
index 0000000..d69b3b4
Binary files /dev/null and b/apps/system/style/lockscreen/images/lockscreen_notification_arrow@2.25x.png differ
diff --git a/apps/system/style/lockscreen/images/lockscreen_notification_arrow@2x.png b/apps/system/style/lockscreen/images/lockscreen_notification_arrow@2x.png
new file mode 100644
index 0000000..53cf6ba
Binary files /dev/null and b/apps/system/style/lockscreen/images/lockscreen_notification_arrow@2x.png differ
diff --git a/apps/system/style/lockscreen/images/mask.png b/apps/system/style/lockscreen/images/mask.png
new file mode 100644
index 0000000..bbd5c9f
Binary files /dev/null and b/apps/system/style/lockscreen/images/mask.png differ
diff --git a/apps/system/style/lockscreen/images/mask@1.5x.png b/apps/system/style/lockscreen/images/mask@1.5x.png
new file mode 100644
index 0000000..9de25f2
Binary files /dev/null and b/apps/system/style/lockscreen/images/mask@1.5x.png differ
diff --git a/apps/system/style/lockscreen/images/mask@2.25x.png b/apps/system/style/lockscreen/images/mask@2.25x.png
new file mode 100644
index 0000000..71dd78f
Binary files /dev/null and b/apps/system/style/lockscreen/images/mask@2.25x.png differ
diff --git a/apps/system/style/lockscreen/lockscreen.css b/apps/system/style/lockscreen/lockscreen.css
index 660d007..cfdadf2 100644
--- a/apps/system/style/lockscreen/lockscreen.css
+++ b/apps/system/style/lockscreen/lockscreen.css
@@ -141,7 +141,6 @@
  * after the passcode pad got invoked, so we need to hide it here.
  */
 [data-panel="passcode"] #notifications-lockscreen-container,
-[data-panel="passcode"] #lockscreen-notification-arrow,
 [data-panel="passcode"] #lockscreen-media-container,
 [data-panel="passcode"] #lockscreen-icon-container {
   visibility: hidden;
@@ -170,7 +169,7 @@
   left: 0;
   width: 100%;
   -moz-box-sizing: border-box;
-  padding: 2rem 2.4rem 0;
+  padding: 2rem 2.4rem 4.4rem;
   color: #fff;
   transition: transform 0.2s ease, opacity 0.2s ease;
   opacity: 1;
@@ -240,7 +239,7 @@

 #lockscreen-area {
   position: absolute;
-  height: 8.6rem;
+  height: 11.2rem;
   left: 0;
   right: 0;
   bottom: 0;
@@ -680,177 +679,3 @@ button::-moz-focus-inner {
   font-weight: 700;
   color: black;
 }
-
-/* notifications */
-
-/* in "normal" mode (there is no widget)
- * desired vertical position is centered in the space
- * between date and slider
- * for big screen, we allow four notifications,
- * for small screen, we allow three notification
- * that would be (for four notifications)
- * (100% - 16.3rem (header) - 2.4rem (statusbar)
- *  - 10rem (slider) - 24.6rem (4xNotifications height + 1.2rem for showing the 5th)) / 2
- *  + 16.3rem + 2.4rem
- */
-
-#notifications-lockscreen-container {
-  z-index: 1;
-  position: absolute;
-  top: calc(50% - 7.95rem);
-  left: 0;
-  width: 100%;
-  max-height: 24.6rem;
-  overflow-x: hidden;
-  overflow-y: auto;
-
-  background-color: transparent;
-}
-
-/* in collapsed mode (there is a widget)
- * desired vertical position is manually adjusted for big screen,
- *  and for big screen we allow two notifications
- * for small screen, we allow one notification and it is
- * vertically centered between date and music player widget
- */
-#notifications-lockscreen-container.collapsed {
-  top: calc(50% - 9.6rem);
-  max-height: 11.7rem;
-}
-
-#notifications-lockscreen-container.masked-top {
-  mask: url('lockscreen_container_mask.svg#solid_mask_top');
-}
-
-#notifications-lockscreen-container.masked-both {
-  mask: url('lockscreen_container_mask.svg#fade_mask_both');
-}
-
-@media (max-height:480px) {
- /* small screen, normal mode: for three notifications...
-  * (100% - 16.3rem (header) - 2.4rem (statusbar)
-  *  - 10rem (slider) - 18.7rem (3xNotifications height + showing the 4th)) / 2
-  *  + 16.3rem + 2.4rem
-  */
-
-  #notifications-lockscreen-container {
-    top: calc(50% - 5rem);
-    max-height: 18.7rem;
-  }
-
- /* small screen, collapsed mode: for one notification...
-  * manally adjusted; 1x Notification is 5.8rem
-  * UX specifies in bug 1023500 that the container should not be scrollable
-  * (so there is no mask either)
-  */
-  #notifications-lockscreen-container.collapsed {
-    top: calc(50% - 5rem);
-    max-height: 5.8rem;
-    overflow-y: hidden;
-  }
-
-  #notifications-lockscreen-container.collapsed.masked-top,
-  #notifications-lockscreen-container.collapsed.masked-both {
-    mask: none;
-  }
-}
-
-#notifications-lockscreen-container .notification {
-  background-color: transparent;
-  border-top: none;
-  border-bottom: 0.1rem solid rgba(255, 255, 255, 0.3);
-  height: 4.8rem;
-  width: calc(100% - 5.2rem);
-  margin-left: 2.4rem;
-  margin-right: 2.4rem;
-}
-
-#notifications-lockscreen-container .notification:first-child {
-  border-top: none;
-}
-
-#notifications-lockscreen-container .notification:last-child {
-  border-bottom: none;
-}
-
-#notifications-lockscreen-container .notification > div {
-  width: calc(100% - 3.6rem);
-  margin-left: 3.6rem;
-  color: #ffffff;
-}
-
-#notifications-lockscreen-container .notification > div:first-of-type {
-  width: calc(100% - 9.4rem);
-  font-size: 1.4rem;
-}
-
-#notifications-lockscreen-container .notification > div.detail {
-  margin-top: 0.2rem;
-}
-
-#notifications-lockscreen-container .notification > .timestamp {
-  position: absolute;
-  top: 0.1rem;
-  right: 0;
-  margin-top: 0;
-  color: rgba(255, 255, 255, 0.6);
-  font-size: 1.4rem;
-  font-style: italic;
-  font-weight: 400;
-  overflow: hidden;
-}
-
-#notifications-lockscreen-container .notification > img {
-  margin-top: 0.8rem;
-  margin-left: 0;
-  width: 2.4rem;
-  height: 2.4rem;
-}
-
-#lockscreen-notification-arrow {
-  width: calc(100% - 5.2rem);
-  height: 1.6rem;
-  background-image: url('/style/lockscreen/images/lockscreen_notification_arrow.png');
-  background-repeat: no-repeat;
-  background-position: calc(50% + 0.25rem) center;
-  border-top: 0.1rem solid rgba(255, 255, 255, 0.3);
-
-  position: absolute;
-  left: 0;
-  z-index: 1;
-  background-size: 1.6rem 1.6rem;
-  margin: 0 2.4rem;
-
-  opacity: 0;
-  transition: opacity 0.3s ease;
-}
-
-#lockscreen-notification-arrow.visible {
-  opacity: 1;
-}
-
-/* please see how we calculate top and max-height of
- * #notifications-lockscreen-container to place the arrow's top.
- * the last offset in calc is to make sure hairlines align together,
- * and is empirical values.
- */
-#lockscreen-notification-arrow {
-  top: calc(50% - 7.95rem + 24.6rem - 1.2rem);
-}
-
-#lockscreen-notification-arrow.collapsed {
-  /* manullay adjusted */
-  top: calc(50% - 9.6rem + 11.7rem - 0.05rem);
-}
-
-@media (max-height:480px) {
-  #lockscreen-notification-arrow {
-    top: calc(50% - 5rem + 18.7rem - 1.1rem);
-  }
-
-  #lockscreen-notification-arrow.collapsed {
-    /* UX specifies in bug 1023500 that the notifications
-       container should not be scrollable with collapsed */
-    display: none;
-  }
-}
diff --git a/apps/system/style/lockscreen/lockscreen_container_mask.svg b/apps/system/style/lockscreen/lockscreen_container_mask.svg
deleted file mode 100644
index 98a96be..0000000
--- a/apps/system/style/lockscreen/lockscreen_container_mask.svg
+++ /dev/null
@@ -1,14 +0,0 @@
-<svg xmlns="http://www.w3.org/2000/svg" version="1.1">
-  <mask id="solid_mask_top" maskUnits="objectBoundingBox" maskContentUnits="objectBoundingBox">
-    <rect x="0" y="0.06" width="1" height="0.94" fill="white" />
-  </mask>
-  <mask id="fade_mask_both" maskUnits="objectBoundingBox" maskContentUnits="objectBoundingBox">
-    <linearGradient id="fade_gradient_both" gradientUnits="objectBoundingBox" x2="0" y2="1">
-      <stop stop-color="white" stop-opacity="0" offset="0"></stop>
-      <stop stop-color="white" stop-opacity="1" offset="0.2"></stop>
-      <stop stop-color="white" stop-opacity="1" offset="0.8"></stop>
-      <stop stop-color="white" stop-opacity="0" offset="1"></stop>
-    </linearGradient>
-    <rect x="0" y="0" width="1" height="1" fill="url(#fade_gradient_both)"></rect>
-  </mask>
-</svg>
diff --git a/apps/system/style/notifications/images/failed.png b/apps/system/style/notifications/images/failed.png
new file mode 100644
index 0000000..f4a562a
Binary files /dev/null and b/apps/system/style/notifications/images/failed.png differ
diff --git a/apps/system/style/notifications/images/failed@1.5x.png b/apps/system/style/notifications/images/failed@1.5x.png
new file mode 100644
index 0000000..0c6126e
Binary files /dev/null and b/apps/system/style/notifications/images/failed@1.5x.png differ
diff --git a/apps/system/style/notifications/images/failed@2.25x.png b/apps/system/style/notifications/images/failed@2.25x.png
new file mode 100644
index 0000000..6ef265c
Binary files /dev/null and b/apps/system/style/notifications/images/failed@2.25x.png differ
diff --git a/apps/system/style/notifications/images/started.png b/apps/system/style/notifications/images/started.png
new file mode 100644
index 0000000..04c9cd8
Binary files /dev/null and b/apps/system/style/notifications/images/started.png differ
diff --git a/apps/system/style/notifications/images/started@1.5x.png b/apps/system/style/notifications/images/started@1.5x.png
new file mode 100644
index 0000000..79b75f0
Binary files /dev/null and b/apps/system/style/notifications/images/started@1.5x.png differ
diff --git a/apps/system/style/notifications/images/started@2.25x.png b/apps/system/style/notifications/images/started@2.25x.png
new file mode 100644
index 0000000..c790fe7
Binary files /dev/null and b/apps/system/style/notifications/images/started@2.25x.png differ
diff --git a/apps/system/style/notifications/images/stopped.png b/apps/system/style/notifications/images/stopped.png
new file mode 100644
index 0000000..f4a562a
Binary files /dev/null and b/apps/system/style/notifications/images/stopped.png differ
diff --git a/apps/system/style/notifications/images/stopped@1.5x.png b/apps/system/style/notifications/images/stopped@1.5x.png
new file mode 100644
index 0000000..0c6126e
Binary files /dev/null and b/apps/system/style/notifications/images/stopped@1.5x.png differ
diff --git a/apps/system/style/notifications/images/succeeded.png b/apps/system/style/notifications/images/succeeded.png
new file mode 100644
index 0000000..04c9cd8
Binary files /dev/null and b/apps/system/style/notifications/images/succeeded.png differ
diff --git a/apps/system/style/notifications/images/succeeded@1.5x.png b/apps/system/style/notifications/images/succeeded@1.5x.png
new file mode 100644
index 0000000..79b75f0
Binary files /dev/null and b/apps/system/style/notifications/images/succeeded@1.5x.png differ
diff --git a/apps/system/style/notifications/notifications.css b/apps/system/style/notifications/notifications.css
index 4223857..83fd0b6 100644
--- a/apps/system/style/notifications/notifications.css
+++ b/apps/system/style/notifications/notifications.css
@@ -82,6 +82,7 @@
 #notification-bar button {
   float: right;
   margin-right: 1.5rem;
+  width: 30%;
   height: 3rem;
   padding: 0;
   border: 0;
@@ -103,28 +104,22 @@
 #notifications-container {
   width: 100%;

-  flex: 1;
+  /* minus cost control, quick settings, bar and grippy */
+  height: calc(100% - 4.5rem - 6rem - 3rem - 2rem);
   overflow-y: scroll;
   overflow-x: hidden;
 }

+
 .notification {
   position: relative;
   height: 6rem;
   font-size: 1.4rem;
   font-weight: 400;
   line-height: 1.9rem;
-  border-top: 0.1rem solid transparent;
-  border-bottom: 0.1rem solid transparent;
-}
-
-div:not(#notifications-lockscreen-container) > .notification:after{
-  content: "";
-  border-bottom: 1px solid rgba(255, 255, 255, 0.15);
-  width: calc(100% - 7.2rem);
-  position: absolute;
-  left: 3.6rem;
-  bottom: 0;
+  background-color: rgba(0, 0, 0, 0.5);
+  border-top: 0.1rem #404547 solid;
+  border-bottom: 0.1rem black solid;
 }

 .notification:active {
@@ -139,12 +134,12 @@ div:not(#notifications-lockscreen-container) > .notification:after{
   pointer-events: none;
 }

-.notification > div.title-container {
+.notification > div:first-of-type {
+  width: calc(100% - 12rem);
   margin-top: 1rem;
   font-size: 1.5rem;
   font-weight: 500;
   color: #fff;
-  display: flex;
 }

 .notification > div {
@@ -159,13 +154,14 @@ div:not(#notifications-lockscreen-container) > .notification:after{
   white-space: nowrap;
 }

-.notification > div.title-container .timestamp {
-  flex: initial;
+.notification > .timestamp {
+  position: absolute;
   top: -.2rem;
   right: 1.5rem;
   color: #52B6CC;
+  margin-top: 1.3rem;
   padding: 0;
-  max-width: 6.5rem;
+  display: inline;
   font-size: 1.2rem;
   font-weight: bold;
   line-height: 1.6rem;
@@ -183,14 +179,6 @@ div:not(#notifications-lockscreen-container) > .notification:after{
   pointer-events: none;
 }

-.notification > div.title-container .title {
-  flex: 1;
-  overflow: hidden;
-  white-space: nowrap;
-  text-overflow: ellipsis;
-  margin-right: .5rem;
-}
-
 .notification.disappearing,
 #notification-toaster.disappearing {
   transition: transform 0.3s linear;
@@ -202,6 +190,75 @@ div:not(#notifications-lockscreen-container) > .notification:after{
   transform: translateY(-6.2rem);
 }

+#notifications-lockscreen-container {
+  z-index: 1;
+  position: absolute;
+  top: 17.2rem;
+  left: 0;
+  width: 100%;
+  max-height: calc(100% - 29.8rem);
+  overflow-x: hidden;
+  overflow-y: auto;
+
+  background-color: transparent;
+}
+
+#notifications-lockscreen-container.collapsed {
+  max-height: calc(100% - 41rem);
+}
+
+#notifications-lockscreen-container .notification {
+  background-color: transparent;
+  border-top: none;
+  border-bottom: 0.1rem solid rgba(255, 255, 255, 0.3);
+  height: 4.8rem;
+  width: calc(100% - 6rem);
+  margin-left: 2.4rem;
+  margin-right: 2.4rem;
+}
+
+#notifications-lockscreen-container .notification:first-child {
+  border-top: none;
+}
+
+#notifications-lockscreen-container .notification:last-child {
+  border-bottom: none;
+}
+
+#notifications-lockscreen-container .notification > div {
+  width: calc(100% - 3.6rem);
+  margin-left: 3.6rem;
+  color: #ffffff;
+}
+
+#notifications-lockscreen-container .notification > div:first-of-type {
+  width: calc(100% - 9.6rem);
+  font-size: 1.4rem;
+}
+
+#notifications-lockscreen-container .notification > div.detail {
+  margin-top: 0.2rem;
+}
+
+#notifications-lockscreen-container .notification > .timestamp {
+  position: absolute;
+  top: 0.1rem;
+  right: 0;
+  margin-top: 0;
+  color: rgba(255, 255, 255, 0.6);
+  font-size: 1.4rem;
+  font-style: italic;
+  font-weight: 400;
+  overflow: hidden;
+}
+
+#notifications-lockscreen-container .notification > img {
+  margin-top: 0.8rem;
+  margin-left: 0;
+  width: 2.4rem;
+  height: 2.4rem;
+}
+
 @keyframes fn-rotate {
   from {
     transform: rotate(1deg);
@@ -243,12 +300,7 @@ html[dir="rtl"] .notification > div {
   text-align: right;
 }

-html[dir="rtl"] .notification > div.title-container .title {
-  margin-right: 0;
-  margin-left: .5rem;
-}
-
-html[dir="rtl"] .notification > div.title-container .timestamp {
+html[dir="rtl"] .notification > .timestamp {
   left: 1.5rem;
   right: auto;
 }
@@ -262,7 +314,7 @@ html[dir="rtl"] #notifications-lockscreen-container .notification > div {
   margin-right: 3.6rem;
 }

-html[dir="rtl"] #notifications-lockscreen-container .notification > div.title-container .timestamp {
+html[dir="rtl"] #notifications-lockscreen-container .notification > .timestamp {
   left: 0;
   right: auto;
 }
diff --git a/apps/system/style/quick_settings/images/bluetooth-on@2.25x.png b/apps/system/style/quick_settings/images/bluetooth-on@2.25x.png
index 4f2d030..8496e2a 100644
Binary files a/apps/system/style/quick_settings/images/bluetooth-on@2.25x.png and b/apps/system/style/quick_settings/images/bluetooth-on@2.25x.png differ
diff --git a/apps/system/style/quick_settings/images/power-save-off.png b/apps/system/style/quick_settings/images/power-save-off.png
new file mode 100644
index 0000000..7c396d7
Binary files /dev/null and b/apps/system/style/quick_settings/images/power-save-off.png differ
diff --git a/apps/system/style/quick_settings/images/power-save-off@1.5x.png b/apps/system/style/quick_settings/images/power-save-off@1.5x.png
new file mode 100644
index 0000000..4971c20
Binary files /dev/null and b/apps/system/style/quick_settings/images/power-save-off@1.5x.png differ
diff --git a/apps/system/style/quick_settings/images/power-save-off@2.25x.png b/apps/system/style/quick_settings/images/power-save-off@2.25x.png
new file mode 100644
index 0000000..151e358
Binary files /dev/null and b/apps/system/style/quick_settings/images/power-save-off@2.25x.png differ
diff --git a/apps/system/style/quick_settings/images/power-save-off@2x.png b/apps/system/style/quick_settings/images/power-save-off@2x.png
new file mode 100644
index 0000000..c2dc7f4
Binary files /dev/null and b/apps/system/style/quick_settings/images/power-save-off@2x.png differ
diff --git a/apps/system/style/quick_settings/images/power-save-on.png b/apps/system/style/quick_settings/images/power-save-on.png
new file mode 100644
index 0000000..8926e62
Binary files /dev/null and b/apps/system/style/quick_settings/images/power-save-on.png differ
diff --git a/apps/system/style/quick_settings/images/power-save-on@1.5x.png b/apps/system/style/quick_settings/images/power-save-on@1.5x.png
new file mode 100644
index 0000000..4fb6049
Binary files /dev/null and b/apps/system/style/quick_settings/images/power-save-on@1.5x.png differ
diff --git a/apps/system/style/quick_settings/images/power-save-on@2.25x.png b/apps/system/style/quick_settings/images/power-save-on@2.25x.png
new file mode 100644
index 0000000..1bb8c18
Binary files /dev/null and b/apps/system/style/quick_settings/images/power-save-on@2.25x.png differ
diff --git a/apps/system/style/quick_settings/images/power-save-on@2x.png b/apps/system/style/quick_settings/images/power-save-on@2x.png
new file mode 100644
index 0000000..1ce394f
Binary files /dev/null and b/apps/system/style/quick_settings/images/power-save-on@2x.png differ
diff --git a/apps/system/style/quick_settings/quick_settings.css b/apps/system/style/quick_settings/quick_settings.css
index a84e4f4..745df8a 100644
--- a/apps/system/style/quick_settings/quick_settings.css
+++ b/apps/system/style/quick_settings/quick_settings.css
@@ -77,49 +77,49 @@
   display: none;
 }
 #quick-settings-data[data-network="undefined"]  {
-  background-position: center 0;
+  background-position: 15px 0;
 }
 #quick-settings-data[data-network="2G"]  {
-  background-position: center -30px;
+  background-position: 15px -30px;
 }
 #quick-settings-data[data-enabled][data-network="2G"] {
-  background-position: center -60px;
+  background-position: 15px -60px;
 }
 #quick-settings-data[data-network="3G"] {
-  background-position: center -90px;
+  background-position: 15px -90px;
 }
 #quick-settings-data[data-enabled][data-network="3G"] {
-  background-position: center -120px;
+  background-position: 15px -120px;
 }
 #quick-settings-data[data-network="4G"] {
-  background-position: center -150px;
+  background-position: 15px -150px;
 }
 #quick-settings-data[data-enabled][data-network="4G"] {
-  background-position: center -180px;
+  background-position: 15px -180px;
 }
 #quick-settings-data[data-network="E"] {
-  background-position: center -210px;
+  background-position: 15px -210px;
 }
 #quick-settings-data[data-enabled][data-network="E"] {
-  background-position: center -240px;
+  background-position: 15px -240px;
 }
 #quick-settings-data[data-network="H"] {
-  background-position: center -270px;
+  background-position: 15px -270px;
 }
 #quick-settings-data[data-enabled][data-network="H"] {
-  background-position: center -300px;
+  background-position: 15px -300px;
 }
 #quick-settings-data[data-network="H+"] {
-  background-position: center -330px;
+  background-position: 15px -330px;
 }
 #quick-settings-data[data-enabled][data-network="H+"] {
-  background-position: center -360px;
+  background-position: 15px -360px;
 }
 #quick-settings-data[data-network="O"] {
-  background-position: center -390px;
+  background-position: 15px -390px;
 }
 #quick-settings-data[data-enabled][data-network="O"] {
-  background-position: center -420px;
+  background-position: 15px -420px;
 }
 #quick-settings-bluetooth {
   background-image: url(images/bluetooth-off.png);
diff --git a/apps/system/style/rocketbar/overflow_active.png b/apps/system/style/rocketbar/overflow_active.png
new file mode 100644
index 0000000..fe823e7
Binary files /dev/null and b/apps/system/style/rocketbar/overflow_active.png differ
diff --git a/apps/system/style/rocketbar/overflow_active@1.5x.png b/apps/system/style/rocketbar/overflow_active@1.5x.png
new file mode 100644
index 0000000..c44ebfe
Binary files /dev/null and b/apps/system/style/rocketbar/overflow_active@1.5x.png differ
diff --git a/apps/system/style/rocketbar/overflow_active@2x.png b/apps/system/style/rocketbar/overflow_active@2x.png
new file mode 100644
index 0000000..0c2f094
Binary files /dev/null and b/apps/system/style/rocketbar/overflow_active@2x.png differ
diff --git a/apps/system/style/rocketbar/rocketbar.css b/apps/system/style/rocketbar/rocketbar.css
index d4d447c..9d5e6be 100644
--- a/apps/system/style/rocketbar/rocketbar.css
+++ b/apps/system/style/rocketbar/rocketbar.css
@@ -14,10 +14,14 @@
   direction: ltr;
 }

-#rocketbar.active {
+#rocketbar.expanded {
   transform: scale(1);
 }

+body.rb-enabled #screen.on-homescreen:not(.cards-view) #rocketbar:not(.active) {
+  transform: scale(1) translateY(2.4rem);
+}
+
 #screen.locked:not(.attention) #rocketbar {
   display: none;
 }
@@ -104,7 +108,7 @@ body:not(.rb-enabled) #rocketbar {
   display: none;
 }

-#rocketbar.has-text #rocketbar-clear {
+#rocketbar.hasText #rocketbar-clear {
   display: block;
 }

@@ -173,6 +177,12 @@ body:not(.rb-enabled) #rocketbar {
   height: calc(100% - 9.8rem);
 }

+#rocketbar-results iframe {
+  border: 0;
+  width: 100%;
+  height: 100%;
+}
+
 #rocketbar-results.hidden, #rocketbar-results iframe.hidden,
 #rocketbar-backdrop.hidden {
   display: none;
@@ -225,20 +235,17 @@ body.homesearch-enabled #rocketbar-input {
 }

 /* Expand the rocketbar when it's active */
-body.homesearch-enabled #screen #rocketbar.active {
+body.homesearch-enabled #screen.on-homescreen #rocketbar.active {
   transform: scale(1) translateY(2.4rem);
 }
-body.homesearch-enabled #screen.active-statusbar #rocketbar.active {
-  transform: scale(1) translateY(4.0rem);
-}

 /* Do not expand the statusbar background on homescreen. We have our own markup in the homescreen. */
-body.homesearch-enabled #screen.rocketbar-expanded #statusbar-background {
+body.homesearch-enabled #screen.on-homescreen.rocketbar-expanded #statusbar-background {
   transform: scaleY(0.5);
 }

 /* Size the rocketbar form to cover the homescreen one exactly */
-body.homesearch-enabled #screen #rocketbar-form {
+body.homesearch-enabled #screen.on-homescreen #rocketbar-form {
   width: calc(100% - 1rem);
   box-sizing: border-box;
 }
diff --git a/apps/system/style/software_button_manager/software_button_manager.css b/apps/system/style/software_button_manager/software_button_manager.css
index afb4cd1..a54e343 100644
--- a/apps/system/style/software_button_manager/software_button_manager.css
+++ b/apps/system/style/software_button_manager/software_button_manager.css
@@ -30,14 +30,14 @@
 @media (min-resolution: 1.5dppx) {
   #software-home-button,
   #fullscreen-software-home-button {
-    background: transparent url(/shared/resources/branding/browser_84.png) no-repeat center center / 3.6rem;
+    background: transparent url(/shared/resources/branding/browser_84.png) no-repeat center center / 4rem;
   }
 }

 @media (min-resolution: 2dppx) {
   #software-home-button,
   #fullscreen-software-home-button {
-    background: transparent url(/shared/resources/branding/browser_126.png) no-repeat center center / 3.6rem;
+    background: transparent url(/shared/resources/branding/browser_126.png) no-repeat center center / 4rem;
   }
 }

diff --git a/apps/system/style/statusbar/statusbar.css b/apps/system/style/statusbar/statusbar.css
index 489d260..e61f1314 100644
--- a/apps/system/style/statusbar/statusbar.css
+++ b/apps/system/style/statusbar/statusbar.css
@@ -21,10 +21,6 @@
   transform-origin: left top;
 }

-#screen.themecolor-active #statusbar-background {
-  visibility: hidden;
-}
-
 #statusbar {
   position: fixed;
   width: 100%;
@@ -37,7 +33,7 @@ body:not(.rb-enabled) #statusbar {
   transition: transform 0.2s linear;
 }

-#screen:not(.utility-tray):not(.attention) #statusbar-background:not(.opaque) {
+#screen.on-homescreen:not(.utility-tray):not(.attention) #statusbar-background:not(.opaque) {
   /* We want to show both the statusbar and homesearch bar at 15% opacity.
      The homescreen has a 5% wallpaper overlay, so 0.1 is needed to match. */
   opacity: 0.1;
@@ -80,25 +76,26 @@ body:not(.rb-enabled) #statusbar {

 #statusbar-icons > * {
   float: right;
-  margin: 0.4rem 0.2rem 0.4rem 0.3rem;
+  margin: 0 0.2rem 0 0.3rem;
 }

 #statusbar-icons {
   position: absolute;
   width: calc(50% - 0.8rem);
-  height: 2.4rem;
+  height: 2rem;
   margin: 0;
   top: 0;
   right: 0;
-  padding: 0 0.8rem;
+  padding: 0.4rem 0.8rem;
   transition: opacity 0.3s;
   overflow: hidden;
   white-space: nowrap;
 }

-#screen.rocketbar-focused:not(.locked) #statusbar-icons,
+#screen.rocketbar-expanded:not(.on-homescreen):not(.locked) #statusbar-icons,
+#screen.on-homescreen.rocketbar-focused:not(.locked) #statusbar-icons,
 #screen.rocketbar-expanded.cards-view #statusbar-icons,
-#screen:not(.locked).fullscreen-app #statusbar:not(.dragged) #statusbar-icons {
+#screen.fullscreen-app #statusbar:not(.dragged) #statusbar-icons {
   visibility: hidden;
   opacity: 0;
 }
@@ -108,7 +105,8 @@ body:not(.rb-enabled) #statusbar {
   opacity: 0;
 }

-body:not(.rb-enabled) #statusbar-icons {
+body:not(.rb-enabled) #statusbar-icons,
+body.rb-enabled #statusbar.on-homescreen #statusbar-icons {
   width: 100%;
   box-sizing: border-box;
 }
@@ -117,7 +115,7 @@ body:not(.rb-enabled) #statusbar-icons {
 body:not(.rb-enabled) #statusbar-icons > .sb-start {
   float: left;
   margin: 0 0.2rem 0 0;
-  transition: visibility 0.5s ease, transform 0.5s ease;
+  -moz-transition: visibility 0.5s ease, -moz-transform 0.5s ease;
 }

 *[dir=rtl] #statusbar-icons {
@@ -136,9 +134,10 @@ body:not(.rb-enabled) #statusbar-icons > .sb-start {
 #statusbar-icons > .sb-start-upper {
   visibility: hidden;
   position: absolute;
-  left: 0;
   top: -2.4rem;
-  transition: visibility 0.5s ease, transform 0.5s ease;
+  left: 0;
+
+  -moz-transition: visibility 0.5s ease, -moz-transform 0.5s ease;
 }

 *[dir=rtl] #statusbar-icons > .sb-start-upper {
@@ -150,17 +149,18 @@ body:not(.rb-enabled) .utility-tray #statusbar-icons > .sb-start-upper,
 .utility-tray #statusbar > #statusbar-title,
 #statusbar-title.hidden {
   visibility: visible;
-  transform: translateY(2.4rem);
+  -moz-transform: translateY(2.4rem);
 }

 body:not(.rb-enabled) .utility-tray #statusbar-icons > .sb-start {
   visibility: hidden;
-  transform: translateY(2.4rem);
+  -moz-transform: translateY(2.4rem);
 }

 #statusbar-label {
   position: relative;
   margin-left: 0.8rem;
+  padding-top: 0.4rem;
   color: #ffffff;
   font-size: 1.5rem;
   font-weight: 400;
@@ -193,7 +193,7 @@ body.rb-enabled #statusbar-label {
 #statusbar-connections > * {
   float: right;
   pointer-events: none;
-  margin: 0.4rem 0.2rem;
+  margin: 0 0.2rem;
 }

 #statusbar-connections .statusbar-data:not(.sb-icon-data-circle) {
@@ -263,7 +263,7 @@ body.rb-enabled #statusbar-label {
 #statusbar-call-forwardings > * {
   float: right;
   pointer-events: none;
-  margin: 0.4rem 0.6rem;
+  margin: 0 0.6rem;
 }

 #statusbar-call-forwardings .sb-icon-call-forwarding {
diff --git a/apps/system/style/system/keyboard.css b/apps/system/style/system/keyboard.css
index 6fe6746..eee81bb 100644
--- a/apps/system/style/system/keyboard.css
+++ b/apps/system/style/system/keyboard.css
@@ -51,24 +51,18 @@
   background-repeat: no-repeat;
   background-position: 1.5rem center;
   background-size: 3rem;
-  box-sizing: border-box;
+  -moz-box-sizing: border-box;
   padding: 1rem 1rem 1rem 5rem;

   /* wait for activate */
   display: none;
 }

-#keyboard-show-ime-list > .fake-notification > .message,
-#keyboard-show-ime-list > .fake-notification > .tip {
-  white-space: nowrap;
-  text-overflow: ellipsis;
-  overflow: hidden;
-}
-
 #keyboard-show-ime-list > .fake-notification > .message {
   line-height: 2.5rem;
   font-weight: 700;
   font-size: 1.6rem;
+  white-space: nowrap;
 }

 #keyboard-show-ime-list > .fake-notification > .tip {
diff --git a/apps/system/style/system/system.css b/apps/system/style/system/system.css
index b4bd653..d7bda79 100644
--- a/apps/system/style/system/system.css
+++ b/apps/system/style/system/system.css
@@ -298,10 +298,6 @@ body {
   pointer-events: auto;
 }

-#screen.locked #dialog-overlay {
-  visibility: hidden;
-}
-
 @keyframes banner-bounce {
   from, to {
     transform: translateY(100%);
diff --git a/apps/system/style/task-manager/favorite_on.png b/apps/system/style/task-manager/favorite_on.png
new file mode 100644
index 0000000..dc0d49d
Binary files /dev/null and b/apps/system/style/task-manager/favorite_on.png differ
diff --git a/apps/system/style/task-manager/favorite_on@1.5x.png b/apps/system/style/task-manager/favorite_on@1.5x.png
new file mode 100644
index 0000000..df398f7
Binary files /dev/null and b/apps/system/style/task-manager/favorite_on@1.5x.png differ
diff --git a/apps/system/style/task-manager/favorite_on@2x.png b/apps/system/style/task-manager/favorite_on@2x.png
new file mode 100644
index 0000000..141205b
Binary files /dev/null and b/apps/system/style/task-manager/favorite_on@2x.png differ
diff --git a/apps/system/style/themes/default/images/notifications.png b/apps/system/style/themes/default/images/notifications.png
new file mode 100644
index 0000000..d93aa7d
Binary files /dev/null and b/apps/system/style/themes/default/images/notifications.png differ
diff --git a/apps/system/style/utility_tray/utility_tray.css b/apps/system/style/utility_tray/utility_tray.css
index 1bd3b20..e6270d0 100644
--- a/apps/system/style/utility_tray/utility_tray.css
+++ b/apps/system/style/utility_tray/utility_tray.css
@@ -7,7 +7,7 @@
   top: calc(-100% + 4.8rem);
   width: calc(100%);
   height: calc(100% - 2.4rem);
-  background-color: rgba(0, 0, 0, 0.9);
+  background-color: rgba(0, 0, 0, 0.7);

   transform: translateY(-4rem);
   visibility: hidden;
@@ -17,24 +17,6 @@
   visibility: visible;
 }

-#notifications-placeholder {
-  height: calc(100% - 2rem);
-}
-
-#utility-tray-notifications {
-  position: fixed;
-  width: 100%;
-  top: 2.4rem;
-  visibility: hidden;
-  clip: rect(0, 0, 0, 0);
-  display: flex;
-  flex-direction: column;
-}
-
-#utility-tray-notifications.visible {
-  visibility: visible;
-}
-
 #utility-tray-grippy {
   width: 100%;
   height: 2rem;
diff --git a/apps/system/style/value_selector/value_selector.css b/apps/system/style/value_selector/value_selector.css
index 2e8e082..20de39a 100644
--- a/apps/system/style/value_selector/value_selector.css
+++ b/apps/system/style/value_selector/value_selector.css
@@ -1,7 +1,6 @@
-.value-selector {
+#value-selector {
   width: 100%;
-  height: 100%;
-  top: 0;
+  top: 2.4rem;
   bottom: 0;
   left: 0;
   position: absolute;
@@ -9,11 +8,22 @@
   display: block;
 }

-.value-selector[hidden] {
+#value-selector[hidden] {
   visibility: hidden;
   opacity: 0;
 }

+#screen.active-statusbar #value-selector {
+  height: calc(100% - 4rem);
+  top: 4rem;
+}
+
+#screen:-moz-full-screen-ancestor #value-seletcor,
+#screen.fullscreen-app #value-selector {
+  height: 100%;
+  top: 0;
+}
+
 .value-selector-container li > label {
   pointer-events: none;
 }
diff --git a/apps/system/style/window.css b/apps/system/style/window.css
index f2bed68..ef7b1fb 100644
--- a/apps/system/style/window.css
+++ b/apps/system/style/window.css
@@ -1,8 +1,42 @@
+.appWindow,
+.activityWindow {
+  position: absolute;
+  left: 0;
+  border: 0;
+  margin: 0;
+  padding: 0;
+  overflow: hidden;
+  top: 2.4rem;
+  width: 100%;
+  height: 100%;
+  background-repeat: no-repeat;
+  background-position: center center;
+
+  transform: translateX(0);
+}
+
+.appWindow > .appWindow {
+  top: 0;
+  left: 0;
+  width: 100%;
+  height: 100%;
+}
+
+@media not all and (-moz-physical-home-button) {
+  #screen:not(.software-button-disabled) > #windows > .appWindow {
+    bottom: 5rem;
+  }
+}
+
 .appWindow[transition-state="closed"]:not(.fadeout):not(.homescreen) {
   opacity: 0;
   transform: translateX(0);
 }

+#screen.software-button-enabled #windows > .appWindow {
+  bottom: 5rem;
+}
+
 #screen.utility-tray #windows > .appWindow {
   pointer-events: none;
 }
@@ -23,9 +57,41 @@
 /* mozbrowser iframe layout */

 .appWindow > iframe {
+  position: absolute;
+  top: 0;
+  left: 0;
+  width: 100%;
+  height: 100%;
   border: none;
 }

+.appWindow.navigation:not(.rocketbar) > iframe {
+  position: absolute;
+  top: 0;
+  left: 0;
+  bottom: 1rem;
+  width: 100%;
+  height: calc(100% - 1rem);
+}
+
+.appWindow.rocketbar:not(.navigation) > iframe {
+  position: absolute;
+  top: 5rem;
+  left: 0;
+  bottom: 0;
+  width: 100%;
+  height: calc(100% - 5rem);
+}
+
+.appWindow.navigation.rocketbar > iframe {
+  position: absolute;
+  top: 5rem;
+  left: 0;
+  bottom: 1rem;
+  width: 100%;
+  height: calc(100% - 6rem);
+}
+
 .appWindow .throbber.loading {
   height: 0.3rem;
   background-image: url('../shared/progress.gif');
@@ -36,6 +102,14 @@
   background-color: #fff;
 }

+/* app window layout */
+
+#screen.active-statusbar > #windows > .appWindow,
+#screen.active-statusbar > #windows > .appWindow.fullscreen-app {
+  top: 4rem;
+  height: calc(100% - 4rem);
+}
+
 .appWindow.enlarge {
   pointer-events: auto;
   animation: openApp 0.3s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
@@ -171,6 +245,53 @@
   animation: closeAppTowardsTaskManager 0.15s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
 }

+/* Prebuild width/height */
+#screen:not(.active-statusbar):not(.software-button-enabled):not(:-moz-full-screen-ancestor) > #windows > .appWindow:not(.fullscreen-app),
+.appWindow.homescreen {
+  top: 2.4rem;
+  height: calc(100% - 2.4rem);
+  width: 100%;
+}
+
+#screen:not(.active-statusbar):not(.software-button-enabled) > #windows > .appWindow.fullscreen-app {
+  top: 0;
+  height: 100%;
+  width: 100%;
+}
+
+#screen.active-statusbar:not(.software-button-enabled):not(:-moz-full-screen-ancestor) > #windows > .appWindow {
+  top: 4rem;
+  height: calc(100% - 4rem);
+  width: 100%;
+}
+
+#screen.active-statusbar.software-button-enabled:not(:-moz-full-screen-ancestor) > #windows > .appWindow {
+  top: 4rem;
+  bottom: 5rem;
+  height: calc(100% - 5rem - 4rem);
+  width: 100%;
+}
+
+#screen.software-button-enabled:not(:-moz-full-screen-ancestor) > #windows > .appWindow {
+  top: 2.4rem;
+  bottom: 5rem;
+  height: calc(100% - 5rem - 2.4rem);
+  width: 100%;
+}
+
+#screen.software-button-enabled:not(.active-statusbar) > #windows > .appWindow.fullscreen-app {
+  top: 0;
+  bottom: 5rem;
+  height: calc(100% - 5rem);
+  width: 100%;
+}
+
+#screen.active-statusbar:not(.software-button-enabled) > #windows > .appWindow.fullscreen-app {
+  top: 4rem;
+  bottom: 0;
+  height: calc(100% - 4rem);
+  width: 100%;
+}

 @keyframes closeApp {
   0%   { transform: scale(1.0); opacity: 1;}
@@ -197,13 +318,22 @@
   transition: transform 0.25s cubic-bezier(0.7, 0.0, 1.0, 1.0);
 }

+#screen > #windows > .appWindow.fullscreen-app {
+  top: 0;
+}
+
 .appWindow > iframe {
   visibility: visible;
 }

 .appWindow > .fade-overlay {
   background-color: black;
+  position: absolute;
   visibility: hidden;
+  top: 0;
+  left: 0;
+  width: 100%;
+  height: 100%;
   opacity: 0.8;
 }

@@ -216,10 +346,15 @@
 }

 .appWindow.homescreen.fadeout .fade-overlay {
-  opacity: 1;
+  opacity: 0.8;
 }

 .appWindow > .touch-blocker {
+  position: absolute;
+  top: 0;
+  left: 0;
+  width: 100%;
+  height: 100%;
   visibility: hidden;
   background: transparent;
   pointer-events: all;
@@ -235,6 +370,11 @@
 .appWindow > .modal-dialog,
 .appWindow > .authentication-dialog,
 .authentication-dialog > .authentication-dialog-http {
+  position: absolute;
+  top: 0;
+  left: 0;
+  width: 100%;
+  height: 100%;
   visibility: hidden;
 }

@@ -242,6 +382,18 @@
   visibility: visible;
 }

+/*
+ * Because the search input lives in the system app, while the search app
+ * lives into its own search window, the context menu for such an application
+ * does not cover the whole screen.
+ * In order to have it cover the whole screen, the contextmenu which is part of
+ * the app window of the search window, is positioned negatively on the y-axis,
+ * while overflow is authorize for such window.
+ */
+.appWindow.searchWindow .contextmenu {
+  top: -7rem;
+}
+
 .appWindow.searchWindow {
   overflow: visible;
 }
@@ -275,23 +427,29 @@
   margin-bottom: 1.5rem; /* not overlap by menu while keyboard pop */
 }

-.appWindow > .modal-dialog > form.visible {
-  visibility: visible;
-}
-
-/****************** Statusbar Overlay ******************/
-.appWindow > .statusbar-overlay {
-  visibility: hidden;
-  background-color: black;
+/*
+ * Because the search input lives in the system app, while the search app
+ * lives into its own window, activities windows attached to the search app
+ * does not cover the whole screen.
+ * In order to cover the whole screen, the activityWindow is positioned to the
+ * top of the screen and expanded to cover the whole screen.
+ */
+.appWindow.searchWindow .activityWindow {
+  height: calc(100% + 7rem);
+  top: -7rem;
 }

-#screen.themecolor-active .appWindow:not([loading-state=true]) > .statusbar-overlay {
+.appWindow > .modal-dialog > form.visible {
   visibility: visible;
 }

-/****************** Screenshot Overlay ******************/
 .appWindow > .screenshot-overlay {
   visibility: hidden;
+  position: absolute;
+  top: 0;
+  left: 0;
+  width: 100%;
+  height: 100%;
   pointer-events: none;

   /* We need this to resize hi-res screenshot */
@@ -303,12 +461,18 @@
 }

 .appWindow > .identification-overlay {
+  position: absolute;
+  top: 0;
+  left: 0;
+  width: 100%;
+  height: 100%;
   pointer-events: none;

   background: rgba(255, 255, 255, 0.8);

   opacity: 0;
   transition: opacity 0.2s ease-in;
+  will-change: opacity;
 }

 .appWindow.suspended > .identification-overlay,
@@ -510,13 +674,17 @@
   /* not in the viewport */
   transform: translateX(-100%);
   opacity: 1;
+  will-change: transform, opacity;
 }

-#windows > .appWindow:not(.lockScreenWindow):not(.active) {
-  will-change: transform;
+#windows > .appWindow:not(.homescreen):not(.lockScreenWindow).edge-candidate {
+  /* in the viewport but not really */
+  transform: translateX(-99.9999%);
 }

 #screen:-moz-full-screen-ancestor > #windows .appWindow.active {
+  top: 0;
+  height: 100%;
   will-change: auto;
 }

@@ -546,6 +714,26 @@
   transition-duration: 0.5s;
 }

-#screen.locked #windows .appWindow.active iframe {
+#screen.locked #windows .appWindow.active iframe,
+#screen.on-homescreen #windows .appWindow.active iframe {
   transition-property: none;
 }
+
+#screen.rocketbar-expanded:not(.on-homescreen) #windows >
+  .appWindow:not(.fullscreen-app).active iframe {
+  transform: translateY(2.4rem);
+}
+
+#search.appWindow {
+  top: 0;
+}
+
+#screen.locked.rocketbar-expanded .appWindow.active iframe,
+#screen.on-homescreen.rocketbar-expanded .appWindow.active iframe {
+  transform: none;
+}
+
+#screen:-moz-full-screen-ancestor > #windows .appWindow.active iframe {
+  top: 0;
+  height: 100%;
+}
diff --git a/apps/system/style/window_layout.css b/apps/system/style/window_layout.css
deleted file mode 100644
index 4ebf7a2..0000000
--- a/apps/system/style/window_layout.css
+++ /dev/null
@@ -1,208 +0,0 @@
-/*****************************************************************************\
-| Window Layout
-|
-| By default all windows are positioned at coordinates:
-| {
-|   top: 0;
-|   bottom: 0;
-|   width: 100%;
-|   height: 100%;
-| }
-|
-| As a result, windows covered 100% of the screen.
-| It is tempting to use right: 0; and bottom: 0; to automatically adjust the
-| height of elements, but because windows contains some iframes, which are
-| replaced element it does not work as expected as the width/height needs to
-| be added as css rules for iframes.
-| This would be doable once bug 527585 is resolved, by using:
-|   iframe {
-|     width: -moz-available; (already works)
-|     height: -moz-available; (bug 527585)
-|   }
-|
-| The window position/geometry is usually static, but some System app changes
-| may affect those.
-| The list here try to cover all the possible cases:
-|   * Minimized Attention Screen
-|     When an attention screen is minimized using the 'home' button, it change
-|     from a full window to a 40px wide window covering the top of the screen.
-|     The statusbar is covered, as well as the top rendering part of the
-|     window.
-|
-|   * Software home button
-|     The software home button is managed by the system app, and covers the
-|     bottom part of the screen.
-|
-|   * Navigation toolbar
-|     Some apps and the system browser use a navigation helper at rendered
-|     outside the app window.
-|
-\*****************************************************************************/
-
-.appWindow,
-.activityWindow,
-.popupWindow {
-  position: absolute;
-  top: 0;
-  left: 0;
-  width: 100%;
-  height: 100%;
-
-  overflow: hidden;
-
-  border: 0;
-  margin: 0;
-  padding: 0;
-
-  background-repeat: no-repeat;
-  background-position: center center;
-  transform: translateX(0);
-}
-
-#screen.active-statusbar #windows > .appWindow {
-  top: 4rem;
-  height: calc(100% - 4rem);
-}
-
-#screen.software-button-enabled #windows > .appWindow {
-  height: calc(100% - 5rem);
-}
-
-#screen.software-button-enabled.active-statusbar #windows > .appWindow {
-  height: calc(100% - 5rem - 4rem);
-}
-
-@media not all and (-moz-physical-home-button) {
-  #screen:not(.software-button-disabled) #windows > .appWindow {
-    height: calc(100% - 5rem);
-  }
-
-  #screen:not(.software-button-disabled).active-statusbar #windows > .appWindow {
-    height: calc(100% - 5rem - 4rem);
-  }
-}
-
-/*****************************************************************************\
-| Childs Layout
-\*****************************************************************************/
-
-/* Regular windows */
-
-.appWindow > div,
-.appWindow > iframe {
-  position: absolute;
-  top: 2.4rem;
-  left: 0;
-  width: 100%;
-  height: calc(100% - 2.4rem);
-}
-
-.appWindow.searchWindow > div,
-.appWindow.searchWindow > iframe {
-  top: 0;
-  height: 100%;
-}
-
-.appWindow.navigation > iframe {
-  height: calc(100% - 2.4rem - 1rem);
-}
-
-.appWindow > .statusbar-overlay,
-.appWindow > .fade-overlay,
-.appWindow > .identification-overlay {
-  top: 0;
-}
-
-.appWindow > .statusbar-overlay {
-  height: 2.4rem;
-}
-
-.appWindow > .fade-overlay,
-.appWindow > .identification-overlay {
-  height: 100%;
-}
-
-/* Regular windows + active status bar */
-#screen.active-statusbar #windows .appWindow > div,
-#screen.active-statusbar #windows .appWindow > iframe {
-  top: 0;
-  height: 100%;
-}
-
-#screen.active-statusbar #windows .appWindow > .statusbar-overlay {
-  height: 0;
-}
-
-/* Fullscreen windows */
-
-#screen:-moz-full-screen-ancestor .appWindow > div,
-#screen:-moz-full-screen-ancestor .appWindow > iframe,
-.appWindow.fullscreen-app > div,
-.appWindow.fullscreen-app > iframe {
-  top: 0;
-  height: 100%;
-}
-
-#screen:-moz-full-screen-ancestor .appWindow.navigation > iframe,
-.appWindow.fullscreen-app.navigation > iframe {
-  height: calc(100% - 1rem);
-}
-
-#screen:-moz-full-screen-ancestor .appWindow > .statusbar-overlay,
-.appWindow.fullscreen-app > .statusbar-overlay {
-  height: 0;
-}
-
-/* Nested Windows */
-.appWindow > .appWindow {
-  top: 0;
-  height: 100%;
-}
-
-/*****************************************************************************\
-| Rocketbar Layout
-\*****************************************************************************/
-
-.appWindow.rocketbar:not(.navigation) > iframe {
-  top: calc(5rem + 2.4rem);
-  height: calc(100% - 2.4rem);
-}
-
-.appWindow.rocketbar.navigation > iframe {
-  top: calc(5rem + 2.4rem);
-  height: calc(100% - 2.4rem - 1rem);
-}
-
-/*****************************************************************************\
-| Search Window Layout
-\*****************************************************************************/
-
-/*
- * Because the search input lives in the system app, while the search app
- * lives into its own search window, the context menu for such an application
- * does not cover the whole screen.
- * In order to have it cover the whole screen, the contextmenu which is part of
- * the app window of the search window, is positioned negatively on the y-axis,
- * while overflow is authorize for such window.
- */
-.appWindow.searchWindow .contextmenu {
-  top: -7rem;
-}
-
-/*
- * Because the search input lives in the system app, while the search app
- * lives into its own window, activities windows attached to the search app
- * does not cover the whole screen.
- * In order to cover the whole screen, the activityWindow is positioned to the
- * top of the screen and expanded to cover the whole screen.
- */
-.appWindow.searchWindow .activityWindow,
-.appWindow.searchWindow .popupWindow {
-  height: calc(100% + 7rem + 2.4rem);
-  top: calc(-7rem - 2.4rem);
-}
-
-.appWindow.searchWindow > .statusbar-overlay {
-  height: 0;
-}
-
diff --git a/apps/system/style/wrapper/wrapper.css b/apps/system/style/wrapper/wrapper.css
index 56da81f..141eb1a 100644
--- a/apps/system/style/wrapper/wrapper.css
+++ b/apps/system/style/wrapper/wrapper.css
@@ -1,5 +1,10 @@
 .appWindow > .chrome {
   pointer-events: none;
+  width: 100%;
+  height: 100%;
+  position: absolute;
+  top: 0;
+  left: 0;
 }

 .appWindow:not(.navigation) .navigation {
diff --git a/apps/system/style/zindex.css b/apps/system/style/zindex.css
index 6425779..1ca7a2c 100644
--- a/apps/system/style/zindex.css
+++ b/apps/system/style/zindex.css
@@ -130,10 +130,6 @@
   z-index: 4095;
 }

-#screen > [data-z-index-level="utility-tray-notifications"] {
-  z-index: 4095;
-}
-
 /* Demote level 5 elements to homescreen level if there is an active
  * full screen app frame */

@@ -210,7 +206,7 @@

 /* Level 7: Dialog Module */
 #screen > [data-z-index-level="dialog-overlay"],
-#screen > [data-z-index-level="app"] > .appWindow.active > [data-z-index-level="value-selector"],
+#screen > [data-z-index-level="value-selector"],
 #screen > [data-z-index-level="ime-layout-dialog"],
 #screen > [data-z-index-level="app-install-dialog"],
 #screen > [data-z-index-level="updates-download-dialog"],
@@ -253,7 +249,7 @@
 }

 #screen > [data-z-index-level="app"] > .appWindow.active:not(.homescreen),
-#screen > [data-z-index-level="app"] > .appWindow:not(.homescreen):not(.lockScreenWindow),
+#screen:not(.on-homescreen) > [data-z-index-level="app"] > .appWindow:not(.homescreen):not(.lockScreenWindow),
 #screen > [data-z-index-level="app"] > .appWindow.will-become-active {
   z-index: 6;
 }
@@ -286,7 +282,7 @@
 #screen:-moz-full-screen-ancestor > [data-z-index-level="lockscreen"],
 #screen:-moz-full-screen-ancestor > [data-z-index-level="lockscreen-camera"],

-#screen:-moz-full-screen-ancestor > [data-z-index-level="app"] > .appWindow.active > [data-z-index-level="value-selector"],
+#screen:-moz-full-screen-ancestor > [data-z-index-level="value-selector"],
 #screen:-moz-full-screen-ancestor > [data-z-index-level="system-overlay"],
 #screen:-moz-full-screen-ancestor > [data-z-index-level="dialog-overlay"],
 #screen:-moz-full-screen-ancestor > [data-z-index-level="app"] > .appWindow.active > .modal-dialog,
diff --git a/apps/system/test/marionette/app_usage_metrics_test.js b/apps/system/test/marionette/app_usage_metrics_test.js
index b0f886d..836658b 100644
--- a/apps/system/test/marionette/app_usage_metrics_test.js
+++ b/apps/system/test/marionette/app_usage_metrics_test.js
@@ -121,7 +121,7 @@ marionette('App Usage Metrics >', function() {
     });
   });

-  test('Uninstalled apps are counted', function() {
+  test('Uninstalled apps are counted', function(done) {
     var frame = sys.waitForLaunch(Settings.ORIGIN);
     client.switchToFrame(frame);
     client.helper.waitForElement(Settings.Selectors.menuItemsSection);
@@ -139,11 +139,11 @@ marionette('App Usage Metrics >', function() {
     var confirm = client.helper.waitForElement('.modal-dialog-confirm-ok');
     confirm.click();

-    // Wait for the app to be uninstalled and the list item is gone.
-    client.helper.waitForElementToDisappear(apps[0]);
-
-    var uninstalls = metrics.getAppUninstalls(TEMPLATE_MANIFEST);
-    assert.equal(uninstalls, 1);
+    waitForEvent('applicationuninstall', function() {
+      var uninstalls = metrics.getAppUninstalls(TEMPLATE_MANIFEST);
+      assert.equal(uninstalls, 1);
+      done();
+    });
   });

   test('App usage is counted after screen lock and unlock', function(done) {
diff --git a/apps/system/test/marionette/edges_gesture_test.js b/apps/system/test/marionette/edges_gesture_test.js
index 5e28ed5..f6c2f99 100644
--- a/apps/system/test/marionette/edges_gesture_test.js
+++ b/apps/system/test/marionette/edges_gesture_test.js
@@ -101,18 +101,11 @@ marionette('Edges gesture >', function() {
     var panel = sys.leftPanel;
     reflowHelper.startTracking(System.URL);

-    var doubleFlick = actions.flick(panel, 0, halfHeight, halfWidth,
-                                    halfHeight, 100);
-    doubleFlick.flick(panel, 0, halfHeight, halfWidth,
-                      halfHeight, 100).perform();
-    client.waitFor(function() {
-      return !calendar.displayed() && settings.displayed();
-    });
+    edgeSwipeToApp(panel, 0, halfWidth, calendar, sms);
+    edgeSwipeToApp(panel, 0, halfWidth, sms, settings);

     var count = reflowHelper.getCount();
-    // Changing the will-change property causes a reflow
-    // https://bugzilla.mozilla.org/show_bug.cgi?id=974125
-    assert.equal(count, 2, 'we got ' + count + ' reflows instead of 2');
+    assert.equal(count, 0, 'we got ' + count + ' reflows instead of 0');
     reflowHelper.stopTracking();

     assert(true, 'swiped to settings without any reflow');
diff --git a/apps/system/test/marionette/faketextselectionapp/index.html b/apps/system/test/marionette/faketextselectionapp/index.html
deleted file mode 100644
index 804ebc7..0000000
--- a/apps/system/test/marionette/faketextselectionapp/index.html
+++ /dev/null
@@ -1,41 +0,0 @@
-<!DOCTYPE html>
-<html>
-  <head>
-    <meta charset="utf-8">
-    <title>Text Selection test</title>
-    <style>
-      input {
-        width: 10rem;
-        height: 2rem;
-        position: absolute;
-      }
-      #bottom-left-input {
-        bottom: 0;
-        left: 0;
-      }
-      #bottom-right-input {
-        bottom: 0;
-        right: 0;
-      }
-      #center-input {
-        top: calc(50% - 1rem);
-        left: calc(50% - 5rem);
-      }
-      #top-left-input {
-        top: 0;
-        left: 0;
-      }
-      #top-right-input {
-        top: 0;
-        right: 0;
-      }
-    </style>
-  </head>
-  <body>
-    <input id="bottom-left-input">
-    <input id="bottom-right-input">
-    <input id="center-input">
-    <input id="top-left-input">
-    <input id="top-right-input">
-  </body>
-</html>
diff --git a/apps/system/test/marionette/faketextselectionapp/manifest.webapp b/apps/system/test/marionette/faketextselectionapp/manifest.webapp
deleted file mode 100644
index 16181f2..0000000
--- a/apps/system/test/marionette/faketextselectionapp/manifest.webapp
+++ /dev/null
@@ -1,11 +0,0 @@
-{
-  "name": "Fake TextSelection App",
-  "description": "A fake app for text selection test",
-  "type": "certified",
-  "launch_path": "/index.html",
-  "fullscreen": true,
-  "developer": {
-    "name": "The Gaia Team",
-    "url": "https://github.com/mozilla-b2g/gaia"
-  }
-}
diff --git a/apps/system/test/marionette/homescreen_navigation_test.js b/apps/system/test/marionette/homescreen_navigation_test.js
index 00a5a9d..670dad8 100644
--- a/apps/system/test/marionette/homescreen_navigation_test.js
+++ b/apps/system/test/marionette/homescreen_navigation_test.js
@@ -72,9 +72,7 @@ marionette('Homescreen navigation >', function() {
     launchSettings();

     var count = reflowHelper.getCount();
-    // Changing the will-change property causes a reflow
-    // https://bugzilla.mozilla.org/show_bug.cgi?id=974125
-    assert.equal(count, 2, 'we got ' + count + ' reflows instead of 2');
+    assert.equal(count, 0, 'we got ' + count + ' reflows instead of 0');
     reflowHelper.stopTracking();
   });
 });
diff --git a/apps/system/test/marionette/lib/app_install.js b/apps/system/test/marionette/lib/app_install.js
index e88bcd5..2f9a88f 100644
--- a/apps/system/test/marionette/lib/app_install.js
+++ b/apps/system/test/marionette/lib/app_install.js
@@ -93,20 +93,6 @@ AppInstall.prototype = {
   },

   /**
-   * Uninstall an app.
-   * @param {string} [manifestURL] The manifestURL of the app.
-   */
-  uninstall: function(manifestURL) {
-    this.client.switchToFrame();
-
-    this.client.executeScript(function uninstall(url) {
-      window.wrappedJSObject.navigator.mozApps.mgmt.uninstall({
-        manifestURL: url
-      });
-    }, [manifestURL]);
-  },
-
-  /**
   Checks for downloads without applying them.
   */
   stageUpdate: function(manifestURL) {
diff --git a/apps/system/test/marionette/lib/faketextselectionapp.js b/apps/system/test/marionette/lib/faketextselectionapp.js
deleted file mode 100644
index f6ddbb5..0000000
--- a/apps/system/test/marionette/lib/faketextselectionapp.js
+++ /dev/null
@@ -1,118 +0,0 @@
-'use strict';
-
-var Actions = require('marionette-client').Actions;
-var TextSelection = require('./text_selection');
-
-function FakeTextSelectionApp(client) {
-  this.client = client;
-  this.actions = new Actions(this.client);
-
-  this.client.apps.launch(FakeTextSelectionApp.ORIGIN);
-  this.client.apps.switchToApp(FakeTextSelectionApp.ORIGIN);
-
-  this.textSelection = new TextSelection(this.client);
-}
-
-module.exports = FakeTextSelectionApp;
-
-FakeTextSelectionApp.Selector = Object.freeze({
-  bottomLeftInput: '#bottom-left-input',
-  bottomRightInput: '#bottom-right-input',
-  centerInput: '#center-input',
-  topLeftInput: '#top-left-input',
-  topRightInput: '#top-right-input'
-});
-
-FakeTextSelectionApp.ORIGIN = 'app://faketextselectionapp.gaiamobile.org';
-
-FakeTextSelectionApp.prototype = {
-  get width() {
-    return this.client.executeScript(function() {
-      return window.wrappedJSObject.innerWidth;
-    });
-  },
-
-  get centerInput() {
-    return {
-      location: this._getLocation('centerInput')
-    };
-  },
-
-  get bottomLeftInput() {
-    return {
-      location: this._getLocation('bottomLeftInput')
-    };
-  },
-
-  get bottomRightInput() {
-    return {
-      location: this._getLocation('bottomRightInput')
-    };
-  },
-
-  get topLeftInput() {
-    return {
-      location: this._getLocation('topLeftInput')
-    };
-  },
-
-  get topRightInput() {
-    return {
-      location: this._getLocation('topRightInput')
-    };
-  },
-
-  _getLocation: function(target) {
-    return this.client.helper.waitForElement(
-      FakeTextSelectionApp.Selector[target]).location();
-  },
-
-  /**
-   *
-   * Show text selection dialog on element.
-   *
-   * HACKING: We need to remove it once gecko is ready.
-   * XXXX: this function will mock mozbrowsertextualmenu event to simulate gecko
-   *       has successfully select content and trigger text_selection_dialog
-   *       displaying.
-   *
-   * @param {String} ele query string of dom element.
-   */
-  press: function(target) {
-
-    var boxInfo = this.client.executeScript(
-      function(ele) {
-        var activeDom = document.querySelector(ele);
-        var defaultPosition = activeDom.getBoundingClientRect();
-        return {
-          top: defaultPosition.top,
-          left: defaultPosition.left,
-          right: defaultPosition.right,
-          bottom: defaultPosition.bottom
-        };
-      }, [FakeTextSelectionApp.Selector[target]]);
-
-    // TextSelection dialog exists in system app scope.
-    this.client.switchToFrame();
-    var displayApp = this.textSelection._getDisplayedAppInfo();
-    this.client.executeScript(function(appFrameId, boxInfoTop, boxInfoBottom,
-                                       boxInfoLeft, boxInfoRight) {
-      var appFrame = document.getElementById(appFrameId);
-      var appWindow = appFrame.parentElement;
-      appWindow.dispatchEvent(new CustomEvent('mozbrowsertextualmenu', {
-        detail: {
-          canPaste: true,
-          canCut: true,
-          canCopy: true,
-          canSelectAll: true,
-          zoomFactor: 1,
-          top: boxInfoTop,
-          bottom: boxInfoBottom,
-          left: boxInfoLeft,
-          right: boxInfoRight
-        }
-      }));
-    }, [displayApp.appWindowId, boxInfo.top, boxInfo.bottom,
-        boxInfo.left, boxInfo.right]);
-  }
-};
diff --git a/apps/system/test/marionette/lib/notification.js b/apps/system/test/marionette/lib/notification.js
index 6121e08..e4ebb01 100644
--- a/apps/system/test/marionette/lib/notification.js
+++ b/apps/system/test/marionette/lib/notification.js
@@ -91,13 +91,10 @@ NotificationList.prototype = {
       var id = node.getAttribute('data-notification-id');
       var query = selector + '[data-notification-id="' + id + '"]';
       details.push({
-        title: document.querySelector(query + ' > .title-container .title')
-          .innerHTML,
+        title: document.querySelector(query + ' > div').innerHTML,
         body: document.querySelector(query + ' > .detail').innerHTML,
-        lang: document.querySelector(query + ' > .title-container')
-          .getAttribute('lang'),
-        dir: document.querySelector(query + ' > .title-container')
-          .getAttribute('dir'),
+        lang: document.querySelector(query + ' > div').getAttribute('lang'),
+        dir: document.querySelector(query + ' > div').getAttribute('dir'),
         manifestURL: node.getAttribute('data-manifest-u-r-l')
       });
     }
diff --git a/apps/system/test/marionette/lib/rocketbar.js b/apps/system/test/marionette/lib/rocketbar.js
index faad781..f38ce4f 100644
--- a/apps/system/test/marionette/lib/rocketbar.js
+++ b/apps/system/test/marionette/lib/rocketbar.js
@@ -25,8 +25,6 @@ Rocketbar.clientOptions = {
     'dom.w3c_touch_events.enabled': 1
   },
   settings: {
-    'homescreen.manifestURL':
-      'app://verticalhome.gaiamobile.org/manifest.webapp',
     'ftu.manifestURL': null,
     'keyboard.ftu.enabled': false,
     'lockscreen.enabled': false,
diff --git a/apps/system/test/marionette/lib/system.js b/apps/system/test/marionette/lib/system.js
index 8e8854e..66c848c 100644
--- a/apps/system/test/marionette/lib/system.js
+++ b/apps/system/test/marionette/lib/system.js
@@ -11,11 +11,9 @@ System.URL = 'app://system.gaiamobile.org/manifest.webapp';
 System.Selector = Object.freeze({
   statusbar: '#statusbar',
   statusbarBackground: '#statusbar-background',
-  statusbarLabel: '#statusbar-label',
   topPanel: '#top-panel',
   leftPanel: '#left-panel',
-  rightPanel: '#right-panel',
-  utilityTray: '#utility-tray'
+  rightPanel: '#right-panel'
 });

 System.prototype = {
@@ -25,14 +23,6 @@ System.prototype = {
     return this.client.findElement(System.Selector.statusbar);
   },

-  get statusbarLabel() {
-    return this.client.findElement(System.Selector.statusbarLabel);
-  },
-
-  get utilityTray() {
-    return this.client.findElement(System.Selector.utilityTray);
-  },
-
   get topPanel() {
     return this.client.findElement(System.Selector.topPanel);
   },
diff --git a/apps/system/test/marionette/lib/text_selection.js b/apps/system/test/marionette/lib/text_selection.js
deleted file mode 100644
index 72cebce..0000000
--- a/apps/system/test/marionette/lib/text_selection.js
+++ /dev/null
@@ -1,65 +0,0 @@
-'use strict';
-
-function TextSelection(client) {
-  this.client = client;
-  this._activeContent = null;
-}
-
-module.exports = TextSelection;
-
-TextSelection.Selector = Object.freeze({
-  textSelectionDialog: '.textselection-dialog'
-});
-
-TextSelection.prototype = {
-  /**
-   * Get dialog width from previous operation.
-   */
-  get width() {
-    // We need to make sure we're in system app before getting
-    // dialog's location.
-    this.client.switchToFrame();
-    var size = this.client.helper.waitForElement(
-      TextSelection.Selector.textSelectionDialog).size();
-    this.client.apps.switchToApp(this._getDisplayedAppInfo().origin);
-    return size.width;
-  },
-
-  /**
-   * Get dialog position from previous operation.
-   */
-  get location() {
-    this.client.switchToFrame();
-    var location = this.client.helper.waitForElement(
-      TextSelection.Selector.textSelectionDialog).location();
-    this.client.apps.switchToApp(this._getDisplayedAppInfo().origin);
-    return location;
-  },
-
-  /**
-   * Get appWindow's id and origin of displayed app.
-   * XXXXX: Since gecko is not ready yet, we need to simulate gecko dispatching
-   *        mozbrowsertextualmenu event to display textselection dialog.
-   *
-   * @return {displayApp}.
-   */
-  _getDisplayedAppInfo: function() {
-    // AppWindow information is stored in system app scope.
-    var displayApp;
-    this.client.waitFor(function() {
-      displayApp = this.client.executeScript(function() {
-        var manager = window.wrappedJSObject.AppWindowManager ||
-                      window.wrappedJSObject.WindowManager;
-        var app = ('getActiveApp' in manager) ? manager.getActiveApp() :
-                  manager.getCurrentDisplayedApp();
-        var frame = (app.browser) ? app.browser.element : app.frame.firstChild;
-        return {
-          appWindowId: frame.id,
-          origin: app.origin
-        };
-      });
-      return displayApp;
-    }.bind(this));
-    return displayApp;
-  }
-};
diff --git a/apps/system/test/marionette/manifest.ini b/apps/system/test/marionette/manifest.ini
deleted file mode 100644
index 16ca184..0000000
--- a/apps/system/test/marionette/manifest.ini
+++ /dev/null
@@ -1,25 +0,0 @@
-[edges_gesture_test.js]
-[apps_test.js]
-[fullscreen_statusbar_test.js]
-[activity_chain_test.js]
-[media_playback_test.js]
-[font_utils_test.js]
-[camera_on_call_test.js]
-[fullscreen_app_alert_test.js]
-[text_selection_test.js]
-[desktop_notification_test.js]
-[activity_callee_alert_test.js]
-[rocketbar_test.js]
-[app_usage_metrics_test.js]
-[context_menu_test.js]
-[notification_test.js]
-[net_error_test.js]
-[install_ime_test.js]
-[notification_resend_test.js]
-[sound_manager_test.js]
-[sim_dialog_test.js]
-[notification_get_test.js]
-[lockscreen_disabled_test.js]
-[notification_events_test.js]
-[homescreen_navigation_test.js]
-[statusbar_icon_visibility_test.js]
diff --git a/apps/system/test/marionette/notification_events_test.js b/apps/system/test/marionette/notification_events_test.js
index 74a111b..1e059db 100644
--- a/apps/system/test/marionette/notification_events_test.js
+++ b/apps/system/test/marionette/notification_events_test.js
@@ -22,13 +22,10 @@ marionette('Notification events', function() {
     // switch to calendar app and send notification
     client.apps.launch(CALENDAR_APP);
     client.apps.switchToApp(CALENDAR_APP);
-    var error = client.executeAsyncScript(function(title) {
+    client.executeScript(function(title) {
+      /*jshint unused:false*/
       var notification = new Notification(title);
-      notification.addEventListener('show', function() {
-        marionetteScriptFinished(false);
-      });
     }, [notificationTitle]);
-    assert.equal(error, false, 'Error sending notification: ' + error);

     // close app
     client.switchToFrame();
@@ -36,7 +33,7 @@ marionette('Notification events', function() {

     // switch to system app, make sure we have one notification
     client.switchToFrame();
-    error = client.executeAsyncScript(function(manifest) {
+    var error = client.executeAsyncScript(function(manifest) {
       // get notifications
       var container =
         document.getElementById('desktop-notifications-container');
@@ -84,17 +81,14 @@ marionette('Notification events', function() {
     // switch to calendar app and send notification
     client.apps.launch(CALENDAR_APP);
     client.apps.switchToApp(CALENDAR_APP);
-    var error = client.executeAsyncScript(function(title) {
+    client.executeScript(function(title) {
+      /*jshint unused:false*/
       var notification = new Notification(title);
-      notification.addEventListener('show', function() {
-        marionetteScriptFinished(false);
-      });
     }, [notificationTitle]);
-    assert.equal(error, false, 'Error sending notification: ' + error);

     // switch to system app and send desktop-notification-close
     client.switchToFrame();
-    error = client.executeAsyncScript(function(manifest) {
+    var error = client.executeAsyncScript(function(manifest) {
       var container =
         document.getElementById('desktop-notifications-container');
       var selector = '[data-manifest-u-r-l="' + manifest + '"]';
@@ -133,32 +127,16 @@ marionette('Notification events', function() {
     done();
   });

-  test('closing notification invokes close handler', function() {
-    client.apps.launch(CALENDAR_APP);
-    client.apps.switchToApp(CALENDAR_APP);
-    // Note: this will timeout on failure
-    client.executeAsyncScript(function() {
-      var notification = new Notification('Title');
-      notification.addEventListener('close', function() {
-        marionetteScriptFinished();
-      });
-      notification.close();
-    });
-  });
-
   test('click event on resent notification starts application', function(done) {
     var notificationTitle = 'Title:' + Date.now();

     // switch to calendar app and send notification
     client.apps.launch(CALENDAR_APP);
     client.apps.switchToApp(CALENDAR_APP);
-    var error = client.executeAsyncScript(function(title) {
+    client.executeScript(function(title) {
+      /*jshint unused:false*/
       var notification = new Notification(title);
-      notification.addEventListener('show', function() {
-        marionetteScriptFinished(false);
-      });
     }, [notificationTitle]);
-    assert.equal(error, false, 'Error sending notification: ' + error);

     // close app
     client.switchToFrame();
@@ -166,7 +144,7 @@ marionette('Notification events', function() {

     // switch to system app, remove from tray and trigger resending
     client.switchToFrame();
-    error = client.executeAsyncScript(function(manifest) {
+    var error = client.executeAsyncScript(function(manifest) {
       // first get node from tray
       var container =
         document.getElementById('desktop-notifications-container');
@@ -250,13 +228,10 @@ marionette('Notification events', function() {
     // switch to calendar app and send notification
     client.apps.launch(CALENDAR_APP);
     client.apps.switchToApp(CALENDAR_APP);
-    var error = client.executeAsyncScript(function(title) {
+    client.executeScript(function(title) {
+      /*jshint unused:false*/
       var notification = new Notification(title);
-      notification.addEventListener('show', function() {
-        marionetteScriptFinished(false);
-      });
     }, [notificationTitle]);
-    assert.equal(error, false, 'Error sending notification: ' + error);

     // close app
     client.switchToFrame();
@@ -264,7 +239,7 @@ marionette('Notification events', function() {

     // switch to system app and trigger resending
     client.switchToFrame();
-    error = client.executeAsyncScript(function(manifest) {
+    var error = client.executeAsyncScript(function(manifest) {
       var container =
         document.getElementById('desktop-notifications-container');
       var selector = '[data-manifest-u-r-l="' + manifest + '"]';
diff --git a/apps/system/test/marionette/notification_get_test.js b/apps/system/test/marionette/notification_get_test.js
index ede8330..4c63522 100644
--- a/apps/system/test/marionette/notification_get_test.js
+++ b/apps/system/test/marionette/notification_get_test.js
@@ -1,10 +1,9 @@
 'use strict';

-/* globals Notification */
-
 var assert = require('assert');

 var CALENDAR_APP = 'app://calendar.gaiamobile.org';
+var CALENDAR_APP_MANIFEST = CALENDAR_APP + '/manifest.webapp';

 marionette('Notification.get():', function() {

@@ -42,7 +41,6 @@ marionette('Notification.get():', function() {
     var error = client.executeAsyncScript(function() {
       try {
         var title = 'test title';
-        /* jshint unused:false */
         var notification = new Notification(title);
         var promise = Notification.get();
         promise.then(function(notifications) {
@@ -75,7 +73,6 @@ marionette('Notification.get():', function() {
         var options = {
           tag: 'my tag:' + Date.now()
         };
-	/* jshint unused:false */
         var notification = new Notification(title, options);
         var promise = Notification.get({tag: options.tag});
         promise.then(function(notifications) {
@@ -111,28 +108,20 @@ marionette('Notification.get():', function() {
     // switch to email app and send notification
     client.apps.launch(CALENDAR_APP);
     client.apps.switchToApp(CALENDAR_APP);
-    var error = client.executeAsyncScript(function(title, tag) {
+    client.executeScript(function(title, tag) {
       var notification = new Notification(title, {tag: tag});
-      notification.addEventListener('show', function() {
-        marionetteScriptFinished(false);
-      });
     }, [emailTitle, sharedTag]);
-    assert.equal(error, false, 'email notification error: ' + error);

     // switch to system app and send system notification
     client.switchToFrame();
-    error = client.executeAsyncScript(function(title, tag) {
+    client.executeScript(function(title, tag) {
       var notification = new Notification(title, {tag: tag});
-      notification.addEventListener('show', function() {
-        marionetteScriptFinished(false);
-      });
     }, [systemTitle, sharedTag]);
-    assert.equal(error, false, 'system notification error: ' + error);

     // switch back to email, and fetch notification by tag
     client.apps.launch(CALENDAR_APP);
     client.apps.switchToApp(CALENDAR_APP);
-    error = client.executeAsyncScript(function(title, tag) {
+    var error = client.executeAsyncScript(function(title, tag) {
       var promise = Notification.get({tag: tag});
       promise.then(function(notifications) {
         if (!notifications || notifications.length !== 1) {
@@ -180,13 +169,9 @@ marionette('Notification.get():', function() {
     client.apps.launch(CALENDAR_APP);
     client.apps.switchToApp(CALENDAR_APP);

-    var error = client.executeAsyncScript(function(title, tag) {
+    client.executeScript(function(title, tag) {
       var notification = new Notification(title, {tag: tag});
-      notification.addEventListener('show', function() {
-        marionetteScriptFinished(false);
-      });
     }, [title, tag]);
-    assert.equal(error, false, 'sending notification error: ' + error);

     client.switchToFrame();
     client.apps.close(CALENDAR_APP);
@@ -194,7 +179,7 @@ marionette('Notification.get():', function() {
     client.apps.launch(CALENDAR_APP);
     client.apps.switchToApp(CALENDAR_APP);

-    error = client.executeAsyncScript(function(title, tag) {
+    var error = client.executeAsyncScript(function(title, tag) {
       var promise = Notification.get({tag: tag});
       promise.then(function(notifications) {
         if (!notifications || notifications.length !== 1) {
@@ -216,7 +201,6 @@ marionette('Notification.get():', function() {

   test('bug 931307, empty title should not cause crash', function(done) {
     var error = client.executeAsyncScript(function() {
-      /* jshint unused:false */
       var notification = new Notification('');
       var promise = Notification.get();
       promise.then(function() {
diff --git a/apps/system/test/marionette/notification_resend_test.js b/apps/system/test/marionette/notification_resend_test.js
index 5e15160..aebd353 100644
--- a/apps/system/test/marionette/notification_resend_test.js
+++ b/apps/system/test/marionette/notification_resend_test.js
@@ -44,18 +44,14 @@ marionette('mozChromeNotifications:', function() {
     // switch to calendar app and send notification
     client.apps.launch(CALENDAR_APP);
     client.apps.switchToApp(CALENDAR_APP);
-    var error = client.executeAsyncScript(function(title) {
+    client.executeScript(function(title) {
       var notification = new Notification('Title');
-      notification.addEventListener('close', function() {
-        marionetteScriptFinished(false);
-      });
       notification.close();
     });
-    assert.equal(error, false, 'Error on sending notification: ' + error);

     // switch to system app and trigger resending
     client.switchToFrame();
-    error = client.executeAsyncScript(function() {
+    var error = client.executeAsyncScript(function() {
       var resendCb = (function(number) {
         if (number !== 0) {
           marionetteScriptFinished('Should have resent nothing');
@@ -76,17 +72,14 @@ marionette('mozChromeNotifications:', function() {
     // switch to calendar app and send notification
     client.apps.launch(CALENDAR_APP);
     client.apps.switchToApp(CALENDAR_APP);
-    var error = client.executeAsyncScript(function(title) {
+    client.executeScript(function(title) {
+      /*jshint unused:false*/
       var notification = new Notification(title);
-      notification.addEventListener('show', function() {
-        marionetteScriptFinished(false);
-      });
     }, [notificationTitle]);
-    assert.equal(error, false, 'Error on sending notification: ' + error);

     // switch to system app and trigger resending
     client.switchToFrame();
-    error = client.executeAsyncScript(function() {
+    var error = client.executeAsyncScript(function() {
       var resendCb = (function(number) {
         if (number !== 1) {
           marionetteScriptFinished(
@@ -108,20 +101,15 @@ marionette('mozChromeNotifications:', function() {
     // switch to calendar app and send notification
     client.apps.launch(CALENDAR_APP);
     client.apps.switchToApp(CALENDAR_APP);
-    var error = client.executeAsyncScript(function(title) {
+    client.executeScript(function(title) {
+      /*jshint unused:false*/
       var notification1 = new Notification(title + '--1');
-      notification1.addEventListener('show', function() {
-        var notification2 = new Notification(title + '--2');
-        notification2.addEventListener('show', function() {
-          marionetteScriptFinished(false);
-	});
-      });
+      var notification2 = new Notification(title + '--2');
     }, [notificationTitle]);
-    assert.equal(error, false, 'Error on sending notification: ' + error);

     // switch to system app and trigger resending
     client.switchToFrame();
-    error = client.executeAsyncScript(function() {
+    var error = client.executeAsyncScript(function() {
       var resendCb = (function(number) {
         if (number !== 2) {
           marionetteScriptFinished(
@@ -143,21 +131,16 @@ marionette('mozChromeNotifications:', function() {
     // switch to calendar app and send notification
     client.apps.launch(CALENDAR_APP);
     client.apps.switchToApp(CALENDAR_APP);
-    var error = client.executeAsyncScript(function(title) {
+    client.executeScript(function(title) {
+      /*jshint unused:false*/
       var notification1 = new Notification(title + '--1');
-      notification1.addEventListener('show', function() {
-        notification1.close();
-        var notification2 = new Notification(title + '--2');
-        notification2.addEventListener('show', function() {
-          marionetteScriptFinished(false);
-	});
-      });
+      var notification2 = new Notification(title + '--2');
+      notification1.close();
     }, [notificationTitle]);
-    assert.equal(error, false, 'Error on sending notification: ' + error);

     // switch to system app and trigger resending
     client.switchToFrame();
-    error = client.executeAsyncScript(function() {
+    var error = client.executeAsyncScript(function() {
       var resendCb = (function(number) {
         if (number !== 1) {
           marionetteScriptFinished(
@@ -179,17 +162,14 @@ marionette('mozChromeNotifications:', function() {
     // switch to calendar app and send notification
     client.apps.launch(CALENDAR_APP);
     client.apps.switchToApp(CALENDAR_APP);
-    var error = client.executeAsyncScript(function(title) {
+    client.executeScript(function(title) {
+      /*jshint unused:false*/
       var notification = new Notification(title);
-      notification.addEventListener('show', function() {
-        marionetteScriptFinished(false);
-      });
     }, [notificationTitle]);
-    assert.equal(error, false, 'Error sending notification: ' + error);

     // switch to system app and remove from tray
     client.switchToFrame();
-    error = client.executeAsyncScript(function(manifest) {
+    var error = client.executeAsyncScript(function(manifest) {
       var container =
         document.getElementById('desktop-notifications-container');
       var selector = '[data-manifest-u-r-l="' + manifest + '"]';
diff --git a/apps/system/test/marionette/rocketbar_test.js b/apps/system/test/marionette/rocketbar_test.js
index 05c6fbd..3a860a1 100644
--- a/apps/system/test/marionette/rocketbar_test.js
+++ b/apps/system/test/marionette/rocketbar_test.js
@@ -29,7 +29,22 @@ marionette('Rocketbar', function() {
     search.removeGeolocationPermission();
   });

-  test.skip('Focus', function() {
+  test('Rocketbar is expanded on homescreen', function() {
+    // Check that Rocketbar is expanded
+    var element = rocketbar.rocketbar;
+    var screen = rocketbar.screen;
+    client.waitFor(function() {
+      var rocketbarClass = element.getAttribute('class');
+      return rocketbarClass.indexOf('expanded') != -1;
+    });
+    // Check that Rocketbar is in the home state
+    client.waitFor(function() {
+      var screenClass = screen.getAttribute('class');
+      return screenClass.indexOf('on-homescreen') != -1;
+    });
+  });
+
+  test('Focus', function() {
     rocketbar.waitForLoad();
     var screen = rocketbar.screen;
     // Check that focussed Rocketbar is in the focused state
@@ -69,7 +84,7 @@ marionette('Rocketbar', function() {
     });
   });

-  test.skip('Cancel Rocketbar', function() {
+  test('Cancel Rocketbar', function() {
     rocketbar.waitForLoad();

     // Check that cancel button appears
diff --git a/apps/system/test/marionette/sim_dialog_test.js b/apps/system/test/marionette/sim_dialog_test.js
index f4b3620..f8b646b 100644
--- a/apps/system/test/marionette/sim_dialog_test.js
+++ b/apps/system/test/marionette/sim_dialog_test.js
@@ -41,8 +41,8 @@ marionette('Sim Dialog:', function() {
   test.skip('Input is shown with error', function() {

     client.executeScript(loadScripts, [[
-      '../../../../shared/unit/mocks/mock_simslot.js',
-      '../../../../shared/unit/mocks/mock_simslot_manager.js'
+      'js/mock_simslot.js',
+      'js/mock_simslot_manager.js'
     ]]);

     client.executeScript(function(path) {
diff --git a/apps/system/test/marionette/statusbar_icon_visibility_test.js b/apps/system/test/marionette/statusbar_icon_visibility_test.js
deleted file mode 100644
index 575f834..0000000
--- a/apps/system/test/marionette/statusbar_icon_visibility_test.js
+++ /dev/null
@@ -1,39 +0,0 @@
-'use strict';
-
-var Actions = require('marionette-client').Actions;
-var System = require('../../../system/test/marionette/lib/system');
-
-marionette('Statusbar Visibility', function() {
-  var client = marionette.client({
-    prefs: {
-      'dom.w3c_touch_events.enabled': 1
-    },
-    settings: {
-      'ftu.manifestURL': null,
-      'lockscreen.enabled': false
-    }
-  });
-
-  var actions = new Actions(client);
-  var system = new System(client);
-  var halfScreenHeight;
-
-  setup(function() {
-    system.waitForStartup();
-    halfScreenHeight = client.executeScript(function() {
-      return window.innerHeight;
-    }) / 2;
-  });
-
-  test('Visibility of date in utility tray', function() {
-    actions
-      .press(system.statusbar)
-      .moveByOffset(0, halfScreenHeight)
-      .release()
-      .perform();
-    client.waitFor(function() {
-      return system.statusbarLabel.displayed();
-    });
-  });
-
-});
diff --git a/apps/system/test/marionette/text_selection_test.js b/apps/system/test/marionette/text_selection_test.js
deleted file mode 100644
index 51eab1c..0000000
--- a/apps/system/test/marionette/text_selection_test.js
+++ /dev/null
@@ -1,99 +0,0 @@
-'use strict';
-
-marionette('Text selection >', function() {
-  var FakeTextSelectionApp = require('./lib/faketextselectionapp');
-  var assert = require('assert');
-
-  var apps = {};
-  apps[FakeTextSelectionApp.ORIGIN] =
-    __dirname + '/faketextselectionapp';
-
-  var client = marionette.client({
-    apps: apps,
-    prefs: {
-      'dom.w3c_touch_events.enabled': 1
-    },
-    settings: {
-      'ftu.manifestURL': null,
-      'lockscreen.enabled': false
-    }
-  });
-
-  var fakeTextselectionApp;
-
-  setup(function() {
-    fakeTextselectionApp = new FakeTextSelectionApp(client);
-  });
-
-  suite('check dialog location', function() {
-    test('click center input', function() {
-      fakeTextselectionApp.press('centerInput');
-
-      assert.ok(
-        fakeTextselectionApp.textSelection.location.y <
-        fakeTextselectionApp.centerInput.location.y,
-        'dialog should be placed higher than the input field'
-      );
-    });
-
-    test('click top-left input', function() {
-      fakeTextselectionApp.press('topLeftInput');
-      var textSelectionLocation = fakeTextselectionApp.textSelection.location;
-
-      assert.ok(
-        fakeTextselectionApp.topLeftInput.location.y < textSelectionLocation.y,
-        'dialog should be placed lower than the input field'
-      );
-      assert.equal(
-        textSelectionLocation.x, 0,
-        'dialog should be placed near left boundary'
-      );
-    });
-
-    test('click top-right input', function() {
-      fakeTextselectionApp.press('topRightInput');
-      var textSelectionLocation = fakeTextselectionApp.textSelection.location;
-
-      assert.ok(
-        fakeTextselectionApp.topRightInput.location.y < textSelectionLocation.y,
-        'dialog should be placed lower than the input field'
-      );
-      assert.equal(
-        textSelectionLocation.x,
-        fakeTextselectionApp.width - fakeTextselectionApp.textSelection.width,
-        'dialog should be placed near right boundary'
-      );
-    });
-
-    test('click bottom-left input', function() {
-      fakeTextselectionApp.press('bottomLeftInput');
-      var textSelectionLocation = fakeTextselectionApp.textSelection.location;
-
-      assert.ok(
-        textSelectionLocation.y <
-        fakeTextselectionApp.bottomLeftInput.location.y,
-        'dialog should be placed higher than the input field'
-      );
-      assert.equal(
-        textSelectionLocation.x, 0,
-        'dialog should be placed near left boundary'
-      );
-    });
-
-    test('click bottom-right input', function() {
-      fakeTextselectionApp.press('bottomRightInput');
-      var textSelectionLocation = fakeTextselectionApp.textSelection.location;
-
-      assert.ok(
-        textSelectionLocation.y <
-        fakeTextselectionApp.bottomRightInput.location.y,
-        'dialog should be placed higher than the input field'
-      );
-      assert.equal(
-        textSelectionLocation.x,
-        fakeTextselectionApp.width - fakeTextselectionApp.textSelection.width,
-        'dialog should be placed near right boundary'
-      );
-    });
-  });
-});
diff --git a/apps/system/test/unit/action_menu_test.js b/apps/system/test/unit/action_menu_test.js
index efbb7d3..89af249 100644
--- a/apps/system/test/unit/action_menu_test.js
+++ b/apps/system/test/unit/action_menu_test.js
@@ -3,7 +3,7 @@

 require('/shared/test/unit/load_body_html_helper.js');
 requireApp('system/js/action_menu.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');

 suite('ActionMenu', function() {
   var activitiesMockup, realL10n, genericActionsMockup;
diff --git a/apps/system/test/unit/activities_test.js b/apps/system/test/unit/activities_test.js
index 367d029..2f90ffb 100644
--- a/apps/system/test/unit/activities_test.js
+++ b/apps/system/test/unit/activities_test.js
@@ -3,7 +3,7 @@

 requireApp('system/test/unit/mock_applications.js');
 requireApp('system/shared/test/unit/mocks/mock_settings_listener.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/js/action_menu.js');
 requireApp('system/shared/js/manifest_helper.js');
 requireApp('system/js/activities.js');
diff --git a/apps/system/test/unit/app_chrome_test.js b/apps/system/test/unit/app_chrome_test.js
index 283238d..3f2e393 100644
--- a/apps/system/test/unit/app_chrome_test.js
+++ b/apps/system/test/unit/app_chrome_test.js
@@ -2,7 +2,7 @@
           MockModalDialog */
 'use strict';

-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/test/unit/mock_app_window.js');
 requireApp('system/test/unit/mock_popup_window.js');
 requireApp('system/test/unit/mock_modal_dialog.js');
diff --git a/apps/system/test/unit/app_install_manager_test.js b/apps/system/test/unit/app_install_manager_test.js
index 371d58e..c2d19cc 100644
--- a/apps/system/test/unit/app_install_manager_test.js
+++ b/apps/system/test/unit/app_install_manager_test.js
@@ -8,7 +8,7 @@ requireApp('system/test/unit/mock_notification_screen.js');
 requireApp('system/test/unit/mock_applications.js');
 requireApp('system/test/unit/mock_utility_tray.js');
 requireApp('system/test/unit/mock_modal_dialog.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/test/unit/mock_ftu_launcher.js');
 requireApp('system/test/unit/mock_keyboard_manager.js');

diff --git a/apps/system/test/unit/app_modal_dialog_test.js b/apps/system/test/unit/app_modal_dialog_test.js
index 1da94c8..cf5eed1 100644
--- a/apps/system/test/unit/app_modal_dialog_test.js
+++ b/apps/system/test/unit/app_modal_dialog_test.js
@@ -1,7 +1,7 @@
 /* global MocksHelper, MockL10n, AppWindow, AppModalDialog */
 'use strict';

-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/test/unit/mock_orientation_manager.js');
 requireApp('system/test/unit/mock_app_window.js');

diff --git a/apps/system/test/unit/app_transition_controller_test.js b/apps/system/test/unit/app_transition_controller_test.js
index 56acbe1..d1ad166 100644
--- a/apps/system/test/unit/app_transition_controller_test.js
+++ b/apps/system/test/unit/app_transition_controller_test.js
@@ -5,7 +5,7 @@
 requireApp('system/test/unit/mock_app_window.js');
 requireApp('system/shared/test/unit/mocks/mock_settings_listener.js');
 requireApp('system/test/unit/mock_layout_manager.js');
-require('/shared/test/unit/mocks/mock_system.js');
+requireApp('system/test/unit/mock_system.js');
 requireApp('system/shared/test/unit/mocks/mock_settings_listener.js');
 requireApp('system/test/unit/mock_sim_pin_dialog.js');
 requireApp('system/test/unit/mock_rocketbar.js');
diff --git a/apps/system/test/unit/app_usage_metrics_test.js b/apps/system/test/unit/app_usage_metrics_test.js
index af6c14d..44902bc 100644
--- a/apps/system/test/unit/app_usage_metrics_test.js
+++ b/apps/system/test/unit/app_usage_metrics_test.js
@@ -208,8 +208,7 @@ suite('AppUsageMetrics:', function() {
       activitySpy = this.sinon.spy(proto, 'recordActivity');

       // Create and initialize an AUM instance. It won't start automatically
-      aum = new AppUsageMetrics();
-      aum.start();
+      aum = new AppUsageMetrics().start();

       // Start it up so it is ready to handle events
       aum.startCollecting(done);
@@ -545,8 +544,7 @@ suite('AppUsageMetrics:', function() {
       XHR.onCreate = function(instance) { xhr = instance; };

       // Create an AUM instance
-      aum = new AppUsageMetrics();
-      aum.start();
+      aum = new AppUsageMetrics().start();
       aum.startCollecting(done);

       transmit = this.sinon.spy(AppUsageMetrics.prototype, 'transmit');
diff --git a/apps/system/test/unit/app_window_factory_test.js b/apps/system/test/unit/app_window_factory_test.js
index e71c0da..33de680 100644
--- a/apps/system/test/unit/app_window_factory_test.js
+++ b/apps/system/test/unit/app_window_factory_test.js
@@ -1,14 +1,8 @@
-/* global
-   MocksHelper,
-   AppWindowFactory,
-   MockApplications,
-   MockAppWindowManager,
-   AppWindow,
-   HomescreenLauncher,
-   appWindowFactory
- */
-
+/* global MocksHelper, AppWindowFactory, MockApplications,
+          MockAppWindowManager, AppWindow, HomescreenLauncher */
 'use strict';
+/* global MocksHelper, MockApplications, MockAppWindowManager,
+          AppWindow, HomescreenLauncher, AppWindowFactory, appWindowFactory */

 requireApp('system/shared/test/unit/mocks/mock_manifest_helper.js');
 requireApp('system/test/unit/mock_applications.js');
@@ -120,13 +114,14 @@ suite('system/AppWindowFactory', function() {

     stubById = this.sinon.stub(document, 'getElementById');
     stubById.returns(document.createElement('div'));
-    window.homescreenLauncher = new HomescreenLauncher();
-    window.homescreenLauncher.start();
+    window.homescreenLauncher = new HomescreenLauncher().start();

     requireApp('system/js/system.js');
     requireApp('system/js/browser_config_helper.js');
     requireApp('system/js/app_window_factory.js', function() {
       window.appWindowFactory = new AppWindowFactory();
+      window.appWindowFactory.start();
+
       done();
     });
   });
@@ -140,101 +135,7 @@ suite('system/AppWindowFactory', function() {
     realApplications = null;
   });

-  suite('check for open-app queueing', function() {
-    var applicationsReady;
-    var eventHandlerSpy, preEventHandlerSpy, queuePendingEventSpy;
-    var openAppEvent;
-
-    setup(function() {
-      openAppEvent = new CustomEvent('open-app', {'detail': {}});
-      applicationsReady = window.applications.ready;
-      eventHandlerSpy =
-        this.sinon.spy(window.appWindowFactory, 'handleEvent');
-      preEventHandlerSpy =
-        this.sinon.spy(window.appWindowFactory, 'preHandleEvent');
-      queuePendingEventSpy =
-        this.sinon.spy(window.appWindowFactory, '_queuePendingEvent');
-    });
-
-    teardown(function() {
-      window.applications.ready = applicationsReady;
-    });
-
-    suite('open-app delivered, applications.ready is false', function() {
-      setup(function() {
-        window.applications.ready = false;
-        window.appWindowFactory.start();
-        window.dispatchEvent(openAppEvent);
-      });
-
-      test('handleEvent not called', function() {
-        sinon.assert.notCalled(eventHandlerSpy);
-      });
-
-      test('preHandleEvent called', function() {
-        sinon.assert.called(preEventHandlerSpy);
-      });
-
-      test('_queuePendingEvent called', function() {
-        sinon.assert.calledOnce(queuePendingEventSpy);
-      });
-    });
-
-    suite('open-app delivered, applications.ready is true', function() {
-      setup(function() {
-        window.applications.ready = true;
-        window.appWindowFactory.start();
-        window.dispatchEvent(openAppEvent);
-      });
-
-      test('preHandleEvent called', function() {
-        sinon.assert.called(preEventHandlerSpy);
-      });
-
-      test('handleEvent called after open-app',
-        function() {
-          sinon.assert.calledWithExactly(eventHandlerSpy, openAppEvent);
-        });
-    });
-
-    suite('open-app delivered, applicationready event', function() {
-      var handlePendingSpy;
-      setup(function() {
-        window.applications.ready = false;
-        window.appWindowFactory.start();
-        window.dispatchEvent(openAppEvent);
-        handlePendingSpy =
-          this.sinon.spy(window.appWindowFactory, '_handlePendingEvents');
-        window.dispatchEvent(new CustomEvent('applicationready'));
-      });
-
-      test('preHandleEvent called', function() {
-        sinon.assert.called(preEventHandlerSpy);
-      });
-
-      test('_queuePendingEvent called', function() {
-        sinon.assert.calledOnce(queuePendingEventSpy);
-      });
-
-      test('_handlePendingEvents called', function() {
-        sinon.assert.calledOnce(handlePendingSpy);
-      });
-
-      test('handleEvent called', function() {
-        sinon.assert.called(eventHandlerSpy);
-      });
-
-      test('pending events cleared', function() {
-        assert.equal(0, window.appWindowFactory._queueEvents.length);
-      });
-    });
-  });
-
   suite('handle event', function() {
-     setup(function() {
-      window.appWindowFactory.start();
-    });
-
     test('classic app launch', function() {
       var stubDispatchEvent = this.sinon.stub(window, 'dispatchEvent');
       appWindowFactory.handleEvent({
diff --git a/apps/system/test/unit/app_window_manager_test.js b/apps/system/test/unit/app_window_manager_test.js
index ce51444..e4e9231 100644
--- a/apps/system/test/unit/app_window_manager_test.js
+++ b/apps/system/test/unit/app_window_manager_test.js
@@ -4,7 +4,7 @@
 'use strict';

 requireApp('system/shared/test/unit/mocks/mock_manifest_helper.js');
-require('/shared/test/unit/mocks/mock_system.js');
+requireApp('system/test/unit/mock_system.js');
 requireApp('system/test/unit/mock_orientation_manager.js');
 requireApp('system/test/unit/mock_applications.js');
 requireApp('system/test/unit/mock_activity_window.js');
@@ -31,23 +31,14 @@ suite('system/AppWindowManager', function() {
   mocksForAppWindowManager.attachTestHelpers();
   var stubById;
   var app1, app2, app3, app4, app5, app6, app7, home;
-
-  var screenElement = document.createElement('div');
-
   setup(function(done) {
-    stubById = this.sinon.stub(document, 'getElementById', function(id) {
-      if (id === 'screen') {
-        return screenElement;
-      }
-
-      return document.createElement('div');
-    });
+    stubById = this.sinon.stub(document, 'getElementById');
+    stubById.returns(document.createElement('div'));

     window.layoutManager = new window.LayoutManager();

     home = new HomescreenWindow('fakeHome');
-    window.homescreenLauncher = new HomescreenLauncher();
-    window.homescreenLauncher.start();
+    window.homescreenLauncher = new HomescreenLauncher().start();
     homescreenLauncher.mFeedFixtures({
       mHomescreenWindow: home,
       mOrigin: 'fakeOrigin',
@@ -194,22 +185,6 @@ suite('system/AppWindowManager', function() {
       assert.isTrue(stub_updateActiveApp.calledWith(home.instanceID));
     });

-    test('Topmost app should be notified about inputmethod-contextchange ' +
-      'mozChromeEvent', function() {
-        var stubInputMethodContextChange = this.sinon.stub(app1, 'broadcast');
-        var detail = {
-          type: 'inputmethod-contextchange'
-        };
-        this.sinon.stub(app1, 'getTopMostWindow').returns(app1);
-        AppWindowManager._activeApp = app1;
-        AppWindowManager.handleEvent({
-          type: 'mozChromeEvent',
-          detail: detail
-        });
-        assert.isTrue(stubInputMethodContextChange.calledWith(
-          'inputmethod-contextchange', detail));
-      });
-
     test('When permission dialog is closed, we need to focus the active app',
       function() {
         var stubFocus = this.sinon.stub(app1, 'broadcast');
@@ -430,34 +405,6 @@ suite('system/AppWindowManager', function() {
       assert.isTrue(stubSetVisible.calledWith(true));
     });

-    test('Show top window than fire activity when there is an request',
-    function() {
-      injectRunningApps(app1);
-      AppWindowManager._activeApp = app1;
-      MockAttentionScreen.mFullyVisible = false;
-      var stubSetVisible = this.sinon.stub(app1, 'setVisible');
-      var stubActivity = this.sinon.stub();
-      var originalActivity = window.MozActivity;
-      window.MozActivity = stubActivity;
-
-      AppWindowManager.handleEvent({
-        type: 'showwindow',
-        detail: {
-          activity: {
-            name: 'record',
-            data: {
-              type: 'photos'
-            }
-          }
-        }
-      });
-
-      assert.isTrue(stubSetVisible.calledWith(true));
-      assert.isTrue(stubActivity.called,
-        'it didn\'t invoke the activity');
-      window.MozActivity = originalActivity;
-    });
-
     test('Hide top window', function() {
       injectRunningApps(app1);
       AppWindowManager._activeApp = app1;
@@ -746,12 +693,6 @@ suite('system/AppWindowManager', function() {
       MockSettingsListener.mCallbacks['continuous-transition.enabled'](true);
       assert.isTrue(AppWindowManager.continuousTransition);
     });
-
-    test('app-themecolor.enabled', function() {
-      MockSettingsListener.mCallbacks['app-themecolor.enabled'](true);
-
-      assert.isTrue(screenElement.classList.contains('themecolor-active'));
-    });
   });

   suite('linkWindowActivity', function() {
@@ -762,7 +703,19 @@ suite('system/AppWindowManager', function() {
       this.sinon.stub(homescreenLauncher, 'getHomescreen').returns(app2);
     });

-    test('Whatever caller is, we would go back to original app',
+    test('caller is system app, we would go to homescreen', function() {
+      // callee is app7, caller is homescreen
+      injectRunningApps(app7);
+      fakeAppConfig.parentApp = window.location.origin;
+
+      AppWindowManager.linkWindowActivity(fakeAppConfig);
+
+      assert.deepEqual(app2.calleeWindow, app7);
+      assert.deepEqual(app7.callerWindow, app2);
+      assert.isTrue(homescreenLauncher.getHomescreen.called);
+    });
+
+    test('caller is not system app, we would go back to original app',
       function() {
         // callee is app7, caller is app2
         injectRunningApps(app7);
diff --git a/apps/system/test/unit/app_window_test.js b/apps/system/test/unit/app_window_test.js
index d93d17c..f9b736b 100644
--- a/apps/system/test/unit/app_window_test.js
+++ b/apps/system/test/unit/app_window_test.js
@@ -28,8 +28,7 @@ suite('system/AppWindow', function() {
   setup(function(done) {
     this.sinon.useFakeTimers();

-    window.layoutManager = new LayoutManager();
-    window.layoutManager.start();
+    window.layoutManager = new LayoutManager().start();

     stubById = this.sinon.stub(document, 'getElementById');
     stubById.returns(document.createElement('div'));
@@ -1100,23 +1099,6 @@ suite('system/AppWindow', function() {
     });
   });

-  suite('_setVisibleForScreenReader', function() {
-    test('_setVisibleForScreenReader: false', function() {
-      var app1 = new AppWindow(fakeAppConfig1);
-      injectFakeMozBrowserAPI(app1.browser.element);
-
-      app1._setVisibleForScreenReader(false);
-      assert.equal(app1.browser.element.getAttribute('aria-hidden'), 'true');
-    });
-    test('_setVisibleForScreenReader: true', function() {
-      var app1 = new AppWindow(fakeAppConfig1);
-      injectFakeMozBrowserAPI(app1.browser.element);
-
-      app1._setVisibleForScreenReader(true);
-      assert.equal(app1.browser.element.getAttribute('aria-hidden'), 'false');
-    });
-  });
-
   suite('apply and unapplyStyle', function() {
     test('applyStyle', function() {
       var app = new AppWindow(fakeAppConfig1);
@@ -1216,27 +1198,6 @@ suite('system/AppWindow', function() {
       assert.isTrue(spyClose.calledWith('out-to-right'));
     });

-    test('No transition when the callee is caller', function() {
-      var app1 = new AppWindow(fakeAppConfig1);
-      var spyOpen = this.sinon.spy(app1, 'open');
-      var spyClose = this.sinon.spy(app1, 'close');
-      var stubIsActive = this.sinon.stub(app1, 'isActive');
-      app1.setCalleeWindow(app1);
-      stubIsActive.returns(true);
-
-      assert.deepEqual(app1.calleeWindow, app1);
-      assert.deepEqual(app1.callerWindow, app1);
-
-      app1.handleEvent({
-        type: 'mozbrowseractivitydone'
-      });
-
-      assert.isNull(app1.calleeWindow);
-      assert.isNull(app1.callerWindow);
-      assert.isFalse(spyOpen.calledWith('in-from-left'));
-      assert.isFalse(spyClose.calledWith('out-to-right'));
-    });
-
     test('We should open the base window if we are not', function() {
       var app1 = new AppWindow(fakeAppConfig1);
       var app1Base = new AppWindow(fakeAppConfig2);
@@ -1452,32 +1413,6 @@ suite('system/AppWindow', function() {
       assert.equal(app1.identificationTitle.textContent, 'Mon Application');
     });

-    test('Titilechange event', function() {
-      var app1 = new AppWindow(fakeWrapperConfig);
-      var stubPublish = this.sinon.stub(app1, 'publish');
-
-      app1.handleEvent({
-        type: 'mozbrowsertitlechange',
-        detail: 'newtitile'
-      });
-
-      assert.isTrue(stubPublish.calledWithExactly('titlechange'));
-      assert.equal(
-        app1.identificationTitle.textContent, 'newtitile',
-        'title should be changed since it is not an app'
-      );
-
-      var app2 = new AppWindow(fakeAppConfig1);
-      app2.handleEvent({
-        type: 'mozbrowsertitlechange',
-        detail: 'newtitile'
-      });
-      assert.equal(
-        app2.identificationTitle.textContent, '',
-        'title should not be changed since it is an app'
-      );
-    });
-
     test('Orientation change event on app', function() {
       var app1 = new AppWindow(fakeAppConfig1);
       this.sinon.stub(app1, 'isActive').returns(false);
@@ -1536,7 +1471,7 @@ suite('system/AppWindow', function() {
       app1.width = 320;
       app1.height = 480;
       layoutManager.width = 480;
-      layoutManager.height = 320;
+      layoutManager.height = 300;

       app1.handleEvent({
         type: '_orientationchange'
@@ -1637,49 +1572,6 @@ suite('system/AppWindow', function() {
     assert.deepEqual(app1.nextWindow, childNew);
   });

-  suite('isActive', function() {
-    var testApp;
-    setup(function() {
-      testApp = new AppWindow(fakeAppConfig1);
-    });
-
-    test('dom is removed', function() {
-      testApp.element = null;
-      assert.isFalse(testApp.isActive());
-    });
-
-    test('app is in queue to show', function() {
-      testApp.element.classList.add('will-become-active');
-      assert.isTrue(testApp.isActive());
-    });
-
-    test('app doesnot have transitionController', function() {
-      testApp.transitionController = null;
-      assert.isFalse(testApp.isActive());
-    });
-
-    test('app doesnot is in opened state', function() {
-      testApp.transitionController = {
-        '_transitionState': 'opened'
-      };
-      assert.isTrue(testApp.isActive());
-    });
-
-    test('app doesnot is in opening state', function() {
-      testApp.transitionController = {
-        '_transitionState': 'opening'
-      };
-      assert.isTrue(testApp.isActive());
-    });
-
-    test('app doesnot is in closing state', function() {
-      testApp.transitionController = {
-        '_transitionState': 'closing'
-      };
-      assert.isFalse(testApp.isActive());
-    });
-  });
-
   test('isBrowser', function() {
     var app1 = new AppWindow(fakeAppConfig1);
     var app2 = new AppWindow(fakeAppConfig4);
@@ -1711,25 +1603,6 @@ suite('system/AppWindow', function() {
     assert.isNull(app2.frontWindow);
   });

-  suite('fadeOut', function() {
-    var app1;
-    setup(function() {
-      app1 = new AppWindow(fakeAppConfig1);
-    });
-
-    test('app is active', function() {
-      this.sinon.stub(app1, 'isActive', function() {return true;});
-      app1.fadeOut();
-      assert.isFalse(app1.element.classList.contains('fadeout'));
-    });
-
-    test('app not active', function() {
-      this.sinon.stub(app1, 'isActive', function() {return false;});
-      app1.fadeOut();
-      assert.isTrue(app1.element.classList.contains('fadeout'));
-    });
-  });
-
   test('showDefaultContextMenu', function() {
     var app = new AppWindow(fakeAppConfig1);
     // Nothing goes wrong if contextmenu is undefined
@@ -1894,73 +1767,4 @@ suite('system/AppWindow', function() {
       assert.isTrue(caught);
       assert.isTrue(caughtOnParent);
     });
-
-  suite('Theme Color', function() {
-    test('(No type)', function() {
-      var app1 = new AppWindow(fakeAppConfig1);
-      var stubPublish = this.sinon.stub(app1, 'publish');
-
-      app1.handleEvent({
-        type: 'mozbrowsermetachange',
-        detail: {
-          name: 'theme-color',
-          content: 'transparent'
-        }
-      });
-
-      assert.isFalse(!!app1.themeColor);
-      assert.isFalse(stubPublish.calledOnce);
-    });
-
-    test('Added', function() {
-      var app1 = new AppWindow(fakeAppConfig1);
-      var stubPublish = this.sinon.stub(app1, 'publish');
-
-      app1.handleEvent({
-        type: 'mozbrowsermetachange',
-        detail: {
-          name: 'theme-color',
-          content: 'transparent',
-          type: 'added'
-        }
-      });
-
-      assert.equal(app1.themeColor, 'transparent');
-      assert.isTrue(stubPublish.calledOnce);
-    });
-
-    test('Changed', function() {
-      var app1 = new AppWindow(fakeAppConfig1);
-      var stubPublish = this.sinon.stub(app1, 'publish');
-
-      app1.handleEvent({
-        type: 'mozbrowsermetachange',
-        detail: {
-          name: 'theme-color',
-          content: 'pink',
-          type: 'changed'
-        }
-      });
-
-      assert.equal(app1.themeColor, 'pink');
-      assert.isTrue(stubPublish.calledOnce);
-    });
-
-    test('Removed', function() {
-      var app1 = new AppWindow(fakeAppConfig1);
-      var stubPublish = this.sinon.stub(app1, 'publish');
-
-      app1.handleEvent({
-        type: 'mozbrowsermetachange',
-        detail: {
-          name: 'theme-color',
-          content: 'pink',
-          type: 'removed'
-        }
-      });
-
-      assert.equal(app1.themeColor, '');
-      assert.isTrue(stubPublish.calledOnce);
-    });
-  });
 });
diff --git a/apps/system/test/unit/applications_test.js b/apps/system/test/unit/applications_test.js
index 07a3e87..94cfc79 100644
--- a/apps/system/test/unit/applications_test.js
+++ b/apps/system/test/unit/applications_test.js
@@ -3,7 +3,7 @@

 requireApp('system/test/unit/mock_apps_mgmt.js');
 requireApp('system/test/unit/mock_app.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/js/applications.js');

 suite('applications test', function() {
@@ -48,7 +48,7 @@ suite('applications test', function() {
     teardown(function() {
       clock.restore();
     });
-
+
     test('webapps-registry-ready is "no" applications.ready should be false',
                                                                     function() {
       testApplications.start();
diff --git a/apps/system/test/unit/battery_manager_test.js b/apps/system/test/unit/battery_manager_test.js
index 12b2edb..2e7d2c3 100644
--- a/apps/system/test/unit/battery_manager_test.js
+++ b/apps/system/test/unit/battery_manager_test.js
@@ -5,7 +5,7 @@ requireApp('system/shared/test/unit/mocks/mock_settings_listener.js');
 requireApp('system/test/unit/mock_sleep_menu.js');
 requireApp('system/test/unit/mock_screen_manager.js');
 require('/shared/test/unit/mocks/mock_gesture_detector.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/js/battery_manager.js');

 var mocksForBatteryManager = new MocksHelper([
diff --git a/apps/system/test/unit/bluetooth_transfer_test.js b/apps/system/test/unit/bluetooth_transfer_test.js
index d2acd94..371914a 100644
--- a/apps/system/test/unit/bluetooth_transfer_test.js
+++ b/apps/system/test/unit/bluetooth_transfer_test.js
@@ -5,7 +5,7 @@ require('/shared/test/unit/mocks/mock_event_target.js');
 require('/shared/test/unit/mocks/mock_dom_request.js');
 require('/test/unit/mock_navigator_get_device_storage.js');
 require('/test/unit/mock_bluetooth.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+require('/test/unit/mock_l10n.js');
 require('/shared/test/unit/mocks/mock_notification_helper.js');
 require('/shared/test/unit/mocks/mock_custom_dialog.js');
 require('/shared/js/mime_mapper.js');
diff --git a/apps/system/test/unit/bootstrap_test.js b/apps/system/test/unit/bootstrap_test.js
index 233e3c7..6bf8c03 100644
--- a/apps/system/test/unit/bootstrap_test.js
+++ b/apps/system/test/unit/bootstrap_test.js
@@ -27,7 +27,6 @@ requireApp('system/js/homescreen_launcher.js');
 requireApp('system/js/internet_sharing.js');
 requireApp('system/js/layout_manager.js');
 requireApp('system/js/lockscreen_window_manager.js');
-requireApp('system/js/lockscreen_notifications.js');
 requireApp('system/js/media_recording.js');
 requireApp('system/js/permission_manager.js');
 requireApp('system/js/remote_debugger.js');
@@ -47,7 +46,7 @@ requireApp('system/js/wallpaper_manager.js');

 requireApp('system/test/unit/mock_airplane_mode.js');
 requireApp('system/test/unit/mock_applications.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/test/unit/mock_places.js');
 requireApp('system/test/unit/mock_screen_manager.js');
 requireApp('system/test/unit/mock_task_manager.js');
diff --git a/apps/system/test/unit/browser_context_menu_test.js b/apps/system/test/unit/browser_context_menu_test.js
index 2fc9bd3..a21d4b9 100644
--- a/apps/system/test/unit/browser_context_menu_test.js
+++ b/apps/system/test/unit/browser_context_menu_test.js
@@ -3,7 +3,7 @@

 'use strict';

-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/test/unit/mock_orientation_manager.js');
 requireApp('system/test/unit/mock_app_window.js');
 require('/shared/test/unit/mocks/mock_moz_activity.js');
diff --git a/apps/system/test/unit/call_forwarding_test.js b/apps/system/test/unit/call_forwarding_test.js
index 2c830dc..adfe5bb 100644
--- a/apps/system/test/unit/call_forwarding_test.js
+++ b/apps/system/test/unit/call_forwarding_test.js
@@ -4,8 +4,8 @@

 'use strict';

-requireApp('system/shared/test/unit/mocks/mock_simslot.js');
-requireApp('system/shared/test/unit/mocks/mock_simslot_manager.js');
+requireApp('system/js/mock_simslot.js');
+requireApp('system/js/mock_simslot_manager.js');
 requireApp('system/test/unit/mock_asyncStorage.js');
 requireApp(
   'system/shared/test/unit/mocks/mock_navigator_moz_mobile_connections.js');
diff --git a/apps/system/test/unit/captive_portal_test.js b/apps/system/test/unit/captive_portal_test.js
index 846870f..7dee9be 100644
--- a/apps/system/test/unit/captive_portal_test.js
+++ b/apps/system/test/unit/captive_portal_test.js
@@ -1,29 +1,16 @@
 // Captive Portal Test

-/* global
-   CaptivePortal,
-   FtuLauncher,
-   MocksHelper,
-   MockChromeEvent,
-   MockL10n,
-   MockMozActivity,
-   MockNavigatorSettings,
-   MockWifiManager,
-   Notification,
-   Promise
-*/
-
 'use strict';

 requireApp('system/test/unit/mock_chrome_event.js');
 requireApp('system/test/unit/mock_app.js');
 requireApp('system/test/unit/mocks_helper.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/shared/test/unit/mocks/mock_settings_listener.js');
 requireApp('system/shared/test/unit/mocks/mock_navigator_moz_settings.js');
-requireApp('system/shared/test/unit/mocks/mock_notification.js');
 requireApp('system/test/unit/mock_wifi_manager.js');
 requireApp('system/test/unit/mock_activity.js');
+requireApp('system/test/unit/mock_notification_screen.js');
 requireApp('system/test/unit/mock_app_window_manager.js');

 requireApp('system/js/browser_frame.js');
@@ -33,7 +20,7 @@ requireApp('system/js/ftu_launcher.js');

 var mocksForCaptivePortal = new MocksHelper([
   'SettingsListener',
-  'Notification',
+  'NotificationScreen',
   'AppWindowManager'
 ]).init();

@@ -42,13 +29,13 @@ suite('captive portal > ', function() {
   var realL10n;
   var realSettings;
   var realActivity;
+  var mocksHelper;
+  var timeout = 10;
+  var subject;
   var event;
   var successEvent;
   var abortEvent;
   var fakeScreenNode;
-  var expectedBody, expectedTag;
-  var notificationGetStub;
-  var previousCaptiveNotification, previousSpy;

   mocksForCaptivePortal.attachTestHelpers();
   suiteSetup(function() {
@@ -82,7 +69,7 @@ suite('captive portal > ', function() {
     document.body.appendChild(fakeScreenNode);
   });

-  setup(function(done) {
+  setup(function() {
     event = new MockChromeEvent({
       type: 'captive-portal-login',
       url: 'http://developer.mozilla.org',
@@ -101,72 +88,27 @@ suite('captive portal > ', function() {
       id: 0
     });

-    var expectedSSID = window.navigator.mozWifiManager.connection.network.ssid;
-    expectedTag = 'captivePortal:' + expectedSSID;
-    expectedBody =
-      'captive-wifi-available{"networkName":"' + expectedSSID + '"}';
-
-    previousCaptiveNotification = new Notification('', {
-      body: 'previousCaptiveNotification',
-      tag: expectedTag
-    });
-
-    notificationGetStub = function notificationGet() {
-      return Promise.resolve([previousCaptiveNotification]);
-    };
-    this.sinon.stub(window.Notification, 'get', notificationGetStub);
-    previousSpy = this.sinon.spy(previousCaptiveNotification, 'close');
-
-    CaptivePortal.init().then(function() {
-      done();
-    }, done);
-  });
-
-  test('system/captive portal notification cleanup', function() {
-    sinon.assert.called(previousSpy);
+    CaptivePortal.init();
   });

   test('system/captive portal login', function() {
-    var sendSpy = this.sinon.spy(window, 'Notification');
-    CaptivePortal.handleEvent(event);
-    sinon.assert.called(sendSpy);
-    var notification = sendSpy.firstCall.thisValue;
-    assert.equal(notification.body, expectedBody);
-    assert.equal(notification.tag, expectedTag);
-  });
-
-  test('system/captive portal open activity url', function() {
-    var expectedActivity = {
-      name: 'view',
-      data: { type: 'url', url: event.detail.url }
-    };
-    var activitySpy = this.sinon.spy(window, 'MozActivity');
     CaptivePortal.handleEvent(event);
-    CaptivePortal.captiveNotification_onClick();
-    sinon.assert.calledWith(activitySpy, expectedActivity);
+    assert.ok(MockNotificationScreen.wasMethodCalled['addNotification']);
   });

   test('system/captive portal login success', function() {
-    CaptivePortal.handleEvent(event);
-    var closeSpy = this.sinon.spy(CaptivePortal.notification, 'close');
     CaptivePortal.handleEvent(successEvent);
-    sinon.assert.called(closeSpy);
+    assert.ok(MockNotificationScreen.wasMethodCalled['removeNotification']);
   });

   test('system/captive portal login again', function() {
-    var sendSpy = this.sinon.spy(window, 'Notification');
     CaptivePortal.handleEvent(event);
-    sinon.assert.called(sendSpy);
-    var notification = sendSpy.firstCall.thisValue;
-    assert.equal(notification.body, expectedBody);
-    assert.equal(notification.tag, expectedTag);
+    assert.ok(MockNotificationScreen.wasMethodCalled['addNotification']);
   });

   test('system/captive portal login abort', function() {
-    CaptivePortal.handleEvent(event);
-    var closeSpy = this.sinon.spy(CaptivePortal.notification, 'close');
     CaptivePortal.handleEvent(abortEvent);
-    sinon.assert.called(closeSpy);
+    assert.ok(MockNotificationScreen.wasMethodCalled['removeNotification']);
   });

   test('system/captive portal while FTU running..', function() {
diff --git a/apps/system/test/unit/carrier_info_notifier_test.js b/apps/system/test/unit/carrier_info_notifier_test.js
index c73a560..d40214d 100644
--- a/apps/system/test/unit/carrier_info_notifier_test.js
+++ b/apps/system/test/unit/carrier_info_notifier_test.js
@@ -2,9 +2,9 @@

 requireApp('system/js/carrier_info_notifier.js');
 requireApp('system/test/unit/mock_modal_dialog.js');
-require('/shared/test/unit/mocks/mock_system.js');
+requireApp('system/test/unit/mock_system.js');
 requireApp('system/test/unit/mock_notification_screen.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');

 if (typeof window.ModalDialog == 'undefined') {
   window.ModalDialog = null;
diff --git a/apps/system/test/unit/child_window_factory_test.js b/apps/system/test/unit/child_window_factory_test.js
index 225a6b1..e2e7764 100644
--- a/apps/system/test/unit/child_window_factory_test.js
+++ b/apps/system/test/unit/child_window_factory_test.js
@@ -9,11 +9,10 @@ requireApp('system/test/unit/mock_popup_window.js');
 requireApp('system/test/unit/mock_activity_window.js');
 requireApp('system/test/unit/mock_attention_screen.js');
 requireApp('system/shared/test/unit/mocks/mock_settings_listener.js');
-requireApp('system/test/unit/mock_activity.js');

 var mocksForChildWindowFactory = new MocksHelper([
-  'MozActivity', 'AppWindow', 'ActivityWindow', 'PopupWindow',
-  'AttentionScreen', 'SettingsListener'
+  'AppWindow', 'ActivityWindow', 'PopupWindow', 'SettingsListener',
+  'AttentionScreen'
 ]).init();

 suite('system/ChildWindowFactory', function() {
@@ -40,46 +39,32 @@ suite('system/ChildWindowFactory', function() {

   var fakeWindowOpenDetailSameOrigin = {
     url: 'app://www.fake/child.html',
-    name: 'same',
+    name: '_blank',
     iframe: document.createElement('iframe'),
     features: ''
   };

   var fakeWindowOpenDetailCrossOrigin = {
     url: 'http://fake.com/child.html',
-    name: 'other',
-    iframe: document.createElement('iframe'),
-    features: ''
-  };
-
-  var fakeWindowOpenBlank = {
-    url: 'http://blank.com/index.html',
     name: '_blank',
     iframe: document.createElement('iframe'),
     features: ''
   };

-
   var fakeWindowOpenPopup = {
     url: 'http://fake.com/child2.html',
-    name: '',
+    name: '_blank',
     iframe: document.createElement('iframe'),
     features: 'dialog'
   };

   var fakeWindowOpenHaidaSheet = {
     url: 'http://fake.com/child2.html',
-    name: 'haida',
+    name: '_blank',
     iframe: document.createElement('iframe'),
     features: 'mozhaidasheet'
   };

-  var fakeWindowOpenEmail = {
-    url: 'mailto:demo@mozilla.com',
-    name: '',
-    features: 'dialog'
-  };
-
   var fakeActivityDetail = {
     url: 'http://fake.activity/open.html',
     origin: 'http://fake.activity',
@@ -208,44 +193,6 @@ suite('system/ChildWindowFactory', function() {
     assert.isTrue(spy.calledWithNew());
   });

-  test('Open email sheets', function() {
-    var app1 = new MockAppWindow(fakeAppConfig1);
-    var activitySpy = this.sinon.spy(window, 'MozActivity');
-    var cwf = new ChildWindowFactory(app1);
-    var expectedActivity = {
-      name: 'view',
-      data: {
-        type: 'url',
-        url: 'mailto:demo@mozilla.com'
-      }
-    };
-    cwf.handleEvent(new CustomEvent('mozbrowseropenwindow',
-      {
-        detail: fakeWindowOpenEmail
-      }));
-    assert.isTrue(activitySpy.calledWithNew());
-    sinon.assert.calledWith(activitySpy, expectedActivity);
-  });
-
-  test('Target _blank support', function() {
-    var app1 = new MockAppWindow(fakeAppConfig1);
-    var activitySpy = this.sinon.spy(window, 'MozActivity');
-    var cwf = new ChildWindowFactory(app1);
-    var expectedActivity = {
-      name: 'view',
-      data: {
-        type: 'url',
-        url: 'http://blank.com/index.html'
-      }
-    };
-    cwf.handleEvent(new CustomEvent('mozbrowseropenwindow',
-      {
-        detail: fakeWindowOpenBlank
-      }));
-    assert.isTrue(activitySpy.calledWithNew());
-    sinon.assert.calledWith(activitySpy, expectedActivity);
-  });
-
   test('Create ActivityWindow', function() {
     var app1 = new MockAppWindow(fakeAppConfig1);
     var spy = this.sinon.spy(window, 'ActivityWindow');
@@ -314,4 +261,4 @@ suite('system/ChildWindowFactory', function() {
     assert.isFalse(stubVisible.calledWith(true));
     assert.isFalse(stubLockOrientation.called);
   });
-});
+});
\ No newline at end of file
diff --git a/apps/system/test/unit/developer_hud_test.js b/apps/system/test/unit/developer_hud_test.js
index a17b4c4..c179b6d 100644
--- a/apps/system/test/unit/developer_hud_test.js
+++ b/apps/system/test/unit/developer_hud_test.js
@@ -15,8 +15,7 @@ suite('developerHUD', function() {

   mocksForDeveloperHUD.attachTestHelpers();
   setup(function() {
-    subject = new DeveloperHUD();
-    subject.start();
+    subject = new DeveloperHUD().start();
   });

   function updateMetrics(metrics) {
diff --git a/apps/system/test/unit/dialer_agent_test.js b/apps/system/test/unit/dialer_agent_test.js
index 843cdfd..5b8aea3 100644
--- a/apps/system/test/unit/dialer_agent_test.js
+++ b/apps/system/test/unit/dialer_agent_test.js
@@ -67,8 +67,7 @@ suite('system/DialerAgent', function() {
     setVisibleSpy = this.sinon.spy(HTMLIFrameElement.prototype, 'setVisible');

     this.sinon.useFakeTimers();
-    subject = new DialerAgent();
-    subject.start();
+    subject = new DialerAgent().start();
   });

   teardown(function() {
diff --git a/apps/system/test/unit/download_notification_test.js b/apps/system/test/unit/download_notification_test.js
index 175c4ca..4c19d33 100644
--- a/apps/system/test/unit/download_notification_test.js
+++ b/apps/system/test/unit/download_notification_test.js
@@ -7,7 +7,7 @@ requireApp('system/test/unit/mock_download_store.js');
 requireApp('system/test/unit/mock_download_ui.js');
 requireApp('system/test/unit/mock_download_formatter.js');
 requireApp('system/test/unit/mock_download_helper.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/test/unit/mock_notification_screen.js');
 requireApp('system/test/unit/mock_activity.js');
 requireApp('system/test/unit/mock_statusbar.js');
diff --git a/apps/system/test/unit/edge_swipe_detector_test.js b/apps/system/test/unit/edge_swipe_detector_test.js
index 248197a..d6656c1 100644
--- a/apps/system/test/unit/edge_swipe_detector_test.js
+++ b/apps/system/test/unit/edge_swipe_detector_test.js
@@ -1,12 +1,4 @@
 'use strict';
-/* global Event */
-/* global MocksHelper */
-/* global HomescreenLauncher */
-/* global EdgeSwipeDetector */
-/* global MockSettingsListener */
-/* global MockStackManager */
-/* global MockSheetsTransition */
-/* global MockTouchForwarder */

 requireApp('system/js/edge_swipe_detector.js');

@@ -31,8 +23,7 @@ suite('system/EdgeSwipeDetector >', function() {
   var screen;

   setup(function() {
-    window.homescreenLauncher = new HomescreenLauncher();
-    window.homescreenLauncher.start();
+    window.homescreenLauncher = new HomescreenLauncher().start();
     // DOM
     EdgeSwipeDetector.previous = document.createElement('div');
     EdgeSwipeDetector.previous.classList.add('gesture-panel');
@@ -304,7 +295,7 @@ suite('system/EdgeSwipeDetector >', function() {
     function swipe(clock, panel, fromX, toX, fromY, toY, duration, noEnd) {
       var events = [];

-      duration = duration || 350;
+      var duration = duration || 350;
       events.push(touchStart(panel, [fromX], [fromY]));

       var diffX = Math.abs(toX - fromX);
@@ -346,12 +337,12 @@ suite('system/EdgeSwipeDetector >', function() {

       var screenWidth = window.innerWidth;

-      duration = duration || 350;
+      var duration = duration || 350;
       events.push(touchStart(panel, [0, screenWidth], [toY, toY]));

       var delta = Math.abs(toX);

-      var x = 0;
+      var x = 0, y = 0;
       var tick = duration / delta;
       for (var i = 0; i < delta; i++) {
         events.push(touchMove(panel, [x, (screenWidth - x)], [toY, toY]));
@@ -507,6 +498,7 @@ suite('system/EdgeSwipeDetector >', function() {

       test('it should snap the sheets in place whithout waiting', function() {
         var snapSpy = this.sinon.spy(MockSheetsTransition, 'snapInPlace');
+        var endSpy = this.sinon.spy(MockSheetsTransition, 'end');
         swipe(this.sinon.clock, panel, 3, 7, 20, halfScreen,
               25, true /* no touchend */);
         assert.isTrue(snapSpy.calledOnce);
diff --git a/apps/system/test/unit/ftu_launcher_test.js b/apps/system/test/unit/ftu_launcher_test.js
index ba6fe0c..5dd950e 100644
--- a/apps/system/test/unit/ftu_launcher_test.js
+++ b/apps/system/test/unit/ftu_launcher_test.js
@@ -9,6 +9,9 @@ requireApp('system/js/ftu_launcher.js');

 suite('launch ftu >', function() {
   var realAsyncStorage, realMozSettings, realFtuPing;
+  var MockFtuPing = {
+    ensurePing: function(){}
+  };

   suiteSetup(function() {
     realFtuPing = window.FtuPing;
@@ -16,10 +19,8 @@ suite('launch ftu >', function() {
     realMozSettings = navigator.mozSettings;
     window.asyncStorage = MockasyncStorage;
     navigator.mozSettings = MockNavigatorSettings;
-    window.FtuPing = function() {
-      this.ensurePingCalled = false;
-      this.ensurePing = function() { this.ensurePingCalled = true; };
-    };
+    window.FtuPing = MockFtuPing;
+
   });

   suiteTeardown(function() {
@@ -96,10 +97,6 @@ suite('launch ftu >', function() {
       });
       FtuLauncher.retrieve();
     });
-    test('ftu ping is called', function() {
-      FtuLauncher.retrieve();
-      assert.ok(FtuLauncher.getFtuPing().ensurePingCalled);
-    });
   });

   suite('whats new ftu >', function() {
diff --git a/apps/system/test/unit/ftu_ping_test.js b/apps/system/test/unit/ftu_ping_test.js
index 88ee380..95e1518 100644
--- a/apps/system/test/unit/ftu_ping_test.js
+++ b/apps/system/test/unit/ftu_ping_test.js
@@ -2,7 +2,7 @@

 /* global MockNavigatorSettings, MockasyncStorage, MockXMLHttpRequest,
           MockNavigatorMozMobileConnections, MockNavigatorMozIccManager,
-          MockMobileOperator, MockSIMSlotManager, MockSIMSlot */
+          MockMobileOperator, MockSIMSlotManager, MockSIMSlot, FtuPing */

 require('/shared/test/unit/mocks/mock_navigator_moz_settings.js');
 require('/apps/system/test/unit/mock_asyncStorage.js');
@@ -12,8 +12,8 @@ require('/shared/test/unit/mocks/mock_navigator_moz_icc_manager.js');
 require('/shared/test/unit/mocks/mock_mobile_operator.js');

 require('/shared/js/uuid.js');
-require('/shared/test/unit/mocks/mock_simslot_manager.js');
-require('/shared/test/unit/mocks/mock_simslot.js');
+require('/apps/system/js/mock_simslot_manager.js');
+require('/apps/system/js/mock_simslot.js');
 require('/apps/system/js/ftu_ping.js');

 if (!window.asyncStorage) {
@@ -29,14 +29,13 @@ if (!window.XMLHttpRequest) {
 }

 if (!window.SIMSlotManager) {
-  window.SIMSlotManager = null;
+    window.SIMSlotManager = null;
 }

 suite('FtuPing', function() {
   var realMozSettings, realAsyncStorage, realXHR;
   var realMobileConnections, realIccManager;
   var realMobileOperator, realSIMSlotManager;
-  var FtuPing;

   suiteSetup(function() {
     realMozSettings = navigator.mozSettings;
@@ -66,10 +65,6 @@ suite('FtuPing', function() {
     window.SIMSlotManager = realSIMSlotManager;
   });

-  setup(function() {
-    FtuPing = new window.FtuPing();
-  });
-
   teardown(function() {
     MockNavigatorSettings.mTeardown();
     MockasyncStorage.mTeardown();
@@ -77,7 +72,7 @@ suite('FtuPing', function() {
     MockNavigatorMozMobileConnections.mTeardown();
     MockMobileOperator.mTeardown();
     MockSIMSlotManager.mTeardown();
-    FtuPing = null;
+    FtuPing.reset();
   });

   suite('generatePingURL', function() {
diff --git a/apps/system/test/unit/fxa_dialog_test.js b/apps/system/test/unit/fxa_dialog_test.js
index 9c8b581..4c20337 100644
--- a/apps/system/test/unit/fxa_dialog_test.js
+++ b/apps/system/test/unit/fxa_dialog_test.js
@@ -4,7 +4,6 @@
 require('/test/unit/mock_app_window_manager.js');
 require('/test/unit/mock_layout_manager.js');
 require('/test/unit/mock_system_dialog_manager.js');
-require('/test/unit/mock_keyboard_manager.js');
 require('/js/system.js');
 require('/js/base_ui.js');
 require('/js/system_dialog.js');
@@ -13,8 +12,7 @@ require('/js/fxa_dialog.js');
 var mocksForFxAccountsDialog = new MocksHelper([
   'AppWindowManager',
   'LayoutManager',
-  'SystemDialogManager',
-  'KeyboardManager'
+  'SystemDialogManager'
 ]).init();

 suite('system/FxAccountsDialog', function() {
diff --git a/apps/system/test/unit/fxa_test/fxam_errors_test.js b/apps/system/test/unit/fxa_test/fxam_errors_test.js
index 8478cbd..a2fd4ae 100644
--- a/apps/system/test/unit/fxa_test/fxam_errors_test.js
+++ b/apps/system/test/unit/fxa_test/fxam_errors_test.js
@@ -1,6 +1,6 @@
 'use strict';

-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/fxa/js/fxam_errors.js');

 suite('Error manager', function() {
diff --git a/apps/system/test/unit/fxa_test/screens/fxam_coppa_test.js b/apps/system/test/unit/fxa_test/screens/fxam_coppa_test.js
index d1c6ab3..25a5826 100644
--- a/apps/system/test/unit/fxa_test/screens/fxam_coppa_test.js
+++ b/apps/system/test/unit/fxa_test/screens/fxam_coppa_test.js
@@ -11,12 +11,11 @@ require('/shared/js/utilities.js');
 requireApp('system/fxa/js/fxam_module.js');
 requireApp('system/fxa/js/fxam_states.js');
 requireApp('system/fxa/js/fxam_manager.js');
-requireApp('system/fxa/js/fxam_navigation.js');
 requireApp('system/fxa/js/fxam_overlay.js');
 requireApp('system/fxa/js/fxam_error_overlay.js');

 // Mockuped code
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('/system/test/unit/mock_l10n.js');
 requireApp('/system/test/unit/fxa_test/mock_fxam_ui.js');
 requireApp('/system/test/unit/fxa_test/mock_fxam_server_request.js');
 requireApp('/system/test/unit/fxa_test/mock_fxam_errors.js');
@@ -98,6 +97,27 @@ suite('Screen: COPPA', function() {
     });
   });

+  suite(' > Second call to init', function() {
+    var fxamUIEnableSpy;
+    var fxamUIIncStepsSpy;
+    setup(function() {
+      fxamUIEnableSpy = this.sinon.spy(FxaModuleUI, 'enableNextButton');
+      fxamUIIncStepsSpy = this.sinon.spy(FxaModuleUI, 'increaseMaxStepsBy');
+      FxaModuleCoppa.init();
+    });
+
+    teardown(function() {
+      fxamUIEnableSpy = null;
+      fxamUIIncStepsSpy = null;
+    });
+
+    test(' > FxaModuleUI should not be called', function(done) {
+      assert.isFalse(fxamUIEnableSpy.calledOnce);
+      assert.isFalse(fxamUIIncStepsSpy.calledOnce);
+      done();
+    });
+  });
+
   suite(' > COPPA error', function() {
     var fxaAgeSelect;
     var showErrorOverlaySpy;
diff --git a/apps/system/test/unit/fxa_test/screens/fxam_enter_email_test.js b/apps/system/test/unit/fxa_test/screens/fxam_enter_email_test.js
index 0c1087b..1e82883 100644
--- a/apps/system/test/unit/fxa_test/screens/fxam_enter_email_test.js
+++ b/apps/system/test/unit/fxa_test/screens/fxam_enter_email_test.js
@@ -12,7 +12,7 @@ requireApp('system/fxa/js/fxam_overlay.js');
 requireApp('system/fxa/js/fxam_error_overlay.js');

 // Mockuped code
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('/system/test/unit/mock_l10n.js');

 requireApp('system/fxa/js/fxam_ui.js');
 requireApp('/system/test/unit/fxa_test/mock_fxam_ui.js');
diff --git a/apps/system/test/unit/fxa_test/screens/fxam_enter_password_test.js b/apps/system/test/unit/fxa_test/screens/fxam_enter_password_test.js
index c3b8620..ba8e0f1 100644
--- a/apps/system/test/unit/fxa_test/screens/fxam_enter_password_test.js
+++ b/apps/system/test/unit/fxa_test/screens/fxam_enter_password_test.js
@@ -12,7 +12,7 @@ requireApp('system/fxa/js/fxam_overlay.js');
 requireApp('system/fxa/js/fxam_error_overlay.js');

 // Mockuped code
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('/system/test/unit/mock_l10n.js');

 requireApp('system/fxa/js/fxam_ui.js');
 requireApp('/system/test/unit/fxa_test/mock_fxam_ui.js');
diff --git a/apps/system/test/unit/fxa_test/screens/fxam_refresh_auth_test.js b/apps/system/test/unit/fxa_test/screens/fxam_refresh_auth_test.js
index 6047450..baf3b98 100644
--- a/apps/system/test/unit/fxa_test/screens/fxam_refresh_auth_test.js
+++ b/apps/system/test/unit/fxa_test/screens/fxam_refresh_auth_test.js
@@ -12,7 +12,7 @@ requireApp('system/fxa/js/fxam_overlay.js');
 requireApp('system/fxa/js/fxam_error_overlay.js');

 // Mockuped code
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('/system/test/unit/mock_l10n.js');

 requireApp('system/fxa/js/fxam_ui.js');
 requireApp('/system/test/unit/fxa_test/mock_fxam_ui.js');
diff --git a/apps/system/test/unit/fxa_test/screens/fxam_set_password_test.js b/apps/system/test/unit/fxa_test/screens/fxam_set_password_test.js
index 66dfbda..1ffb86d 100644
--- a/apps/system/test/unit/fxa_test/screens/fxam_set_password_test.js
+++ b/apps/system/test/unit/fxa_test/screens/fxam_set_password_test.js
@@ -12,7 +12,7 @@ requireApp('system/fxa/js/fxam_overlay.js');
 requireApp('system/fxa/js/fxam_error_overlay.js');

 // Mockuped code
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('/system/test/unit/mock_l10n.js');

 requireApp('system/fxa/js/fxam_ui.js');
 requireApp('/system/test/unit/fxa_test/mock_fxam_ui.js');
diff --git a/apps/system/test/unit/fxa_test/screens/fxam_signin_success_test.js b/apps/system/test/unit/fxa_test/screens/fxam_signin_success_test.js
index 35ef01c..c05f157 100644
--- a/apps/system/test/unit/fxa_test/screens/fxam_signin_success_test.js
+++ b/apps/system/test/unit/fxa_test/screens/fxam_signin_success_test.js
@@ -9,7 +9,7 @@ requireApp('system/fxa/js/fxam_module.js');
 requireApp('system/fxa/js/fxam_states.js');

 // Mockuped code
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('/system/test/unit/mock_l10n.js');

 requireApp('system/fxa/js/fxam_ui.js');
 requireApp('/system/test/unit/fxa_test/mock_fxam_ui.js');
diff --git a/apps/system/test/unit/fxa_test/screens/fxam_signup_success_test.js b/apps/system/test/unit/fxa_test/screens/fxam_signup_success_test.js
index 2a80649..b3dd922 100644
--- a/apps/system/test/unit/fxa_test/screens/fxam_signup_success_test.js
+++ b/apps/system/test/unit/fxa_test/screens/fxam_signup_success_test.js
@@ -9,7 +9,7 @@ requireApp('system/fxa/js/fxam_module.js');
 requireApp('system/fxa/js/fxam_states.js');

 // Mockuped code
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('/system/test/unit/mock_l10n.js');

 requireApp('system/fxa/js/fxam_ui.js');
 requireApp('/system/test/unit/fxa_test/mock_fxam_ui.js');
@@ -34,9 +34,6 @@ suite('Screen: Signup Success', function() {
   suiteSetup(function(done) {
     realL10n = navigator.mozL10n;
     navigator.mozL10n = MockL10n;
-    var l10nStub = sinon.stub(navigator.mozL10n, 'get');
-    l10nStub.withArgs('fxa-will-send-email')
-      .returns('Will send email to {{email}}');

     mocksHelperForSignupSuccess.suiteSetup();
     // Load real HTML
@@ -53,7 +50,6 @@ suite('Screen: Signup Success', function() {
   });

   suiteTeardown(function() {
-    navigator.mozL10n.get.restore();
     navigator.mozL10n = realL10n;
     document.body.innerHTML = '';
     mocksHelperForSignupSuccess.suiteTeardown();
@@ -62,8 +58,10 @@ suite('Screen: Signup Success', function() {

   suite(' > init ', function() {
     test(' > email shown properly', function() {
-      var willSendText = FxaModuleSignupSuccess.fxaWillSendEmail.textContent;
-      assert.isTrue(willSendText.indexOf(emailTest) > -1);
+      assert.equal(
+        FxaModuleSignupSuccess.fxaSummaryEmail.textContent,
+        emailTest
+      );
     });

   });
diff --git a/apps/system/test/unit/hardware_buttons_test.js b/apps/system/test/unit/hardware_buttons_test.js
index 6540b61..7033037 100644
--- a/apps/system/test/unit/hardware_buttons_test.js
+++ b/apps/system/test/unit/hardware_buttons_test.js
@@ -1,14 +1,11 @@
 'use strict';

-/* global HardwareButtons, MocksHelper, ScreenManager, MockSettingsListener */
+/* global HardwareButtons, MocksHelper, ScreenManager */

+requireApp('system/js/hardware_buttons.js');
 requireApp('system/test/unit/mock_screen_manager.js');
-requireApp('system/shared/test/unit/mocks/mock_settings_listener.js');

-var mocksForHardwareButtons = new MocksHelper([
-  'SettingsListener',
-  'ScreenManager'
-]).init();
+var mocksForHardwareButtons = new MocksHelper(['ScreenManager']).init();

 suite('system/HardwareButtons', function() {
   mocksForHardwareButtons.attachTestHelpers();
@@ -34,10 +31,6 @@ suite('system/HardwareButtons', function() {
     hardwareButtons.handleEvent(evt);
   };

-  suiteSetup(function(done) {
-    requireApp('system/js/hardware_buttons.js', done);
-  });
-
   setup(function() {
     /**
      * Since the script still initialize itself, we should not allow
@@ -106,16 +99,6 @@ suite('system/HardwareButtons', function() {
       stubSetTimeout.getCall(0).returnValue);
   });

-  test('press and release home (soft home enabled)', function() {
-    var stubDispatchEvent = this.sinon.stub(window, 'dispatchEvent');
-    MockSettingsListener.mCallbacks['software-button.enabled'](true);
-
-    fireChromeEvent('home-button-press');
-    fireChromeEvent('home-button-release');
-
-    assert.isTrue(stubDispatchEvent.notCalled);
-  });
-
   test('press and release sleep (screen enabled)', function() {
     var stubDispatchEvent = this.sinon.stub(window, 'dispatchEvent');
     var stubSetTimeout = this.sinon.stub(window, 'setTimeout');
diff --git a/apps/system/test/unit/home_gesture_test.js b/apps/system/test/unit/home_gesture_test.js
index 8b25c4f..3d010fd 100644
--- a/apps/system/test/unit/home_gesture_test.js
+++ b/apps/system/test/unit/home_gesture_test.js
@@ -59,8 +59,7 @@ suite('enable/disable homegesture', function() {
     ScreenLayout.setDefault({
       tiny: true
     });
-    subject = new HomeGesture();
-    subject.start();
+    subject = new HomeGesture().start();
     assert.equal(
       MockNavigatorSettings.mSettings['homegesture.enabled'], false);
   });
@@ -69,8 +68,7 @@ suite('enable/disable homegesture', function() {
     ScreenLayout.setDefault({
       tiny: false
     });
-    subject = new HomeGesture();
-    subject.start();
+    subject = new HomeGesture().start();
     assert.equal(
       subject.homeBar.classList.contains('visible'),
       true);
@@ -125,7 +123,7 @@ suite('enable/disable homegesture', function() {

   test('when lockscreen is disabled', function() {
     subject.handleEvent({
-      type: 'lockscreen-appclose'
+      type: 'lockscreen-appclosing'
     });
     assert.equal(
       subject.homeBar.classList.contains('visible'),
diff --git a/apps/system/test/unit/home_searchbar_test.js b/apps/system/test/unit/home_searchbar_test.js
index a24290a..98b069b 100644
--- a/apps/system/test/unit/home_searchbar_test.js
+++ b/apps/system/test/unit/home_searchbar_test.js
@@ -1,6 +1,7 @@
 'use strict';
-/* global HomeSearchbar, Rocketbar, MocksHelper */
+/* global HomeSearchbar, Rocketbar, MocksHelper, AttentionScreen */

+requireApp('system/test/unit/mock_attention_screen.js');
 requireApp('system/test/unit/mock_app_window.js');
 requireApp('system/test/unit/mock_search_window.js');
 requireApp('system/shared/test/unit/mocks/mock_settings_listener.js');
@@ -12,6 +13,7 @@ requireApp('system/js/rocketbar.js');
 var mocksForRocketbar = new MocksHelper([
   'AppWindow',
   'AppWindowManager',
+  'AttentionScreen',
   'SearchWindow',
   'SettingsListener',
   'SettingsURL',
@@ -176,9 +178,9 @@ suite('system/HomeSearchbar', function() {
     });

     test('searchcrashed', function() {
-      var stub = this.sinon.stub(Rocketbar.prototype, 'handleSearchTerminated');
+      var stub = this.sinon.stub(Rocketbar.prototype, 'handleSearchCrashed');
       subject.handleEvent({
-        type: 'searchterminated'
+        type: 'searchcrashed'
       });
       assert.ok(stub.calledOnce);
     });
@@ -235,29 +237,20 @@ suite('system/HomeSearchbar', function() {
       });
     });

-    test('status-inactive', function() {
-      this.sinon.stub(subject._port, 'postMessage');
-      subject.stop();
-      subject.expand();
-
-      var assertStubs = [
-        this.sinon.stub(subject, 'exitHome'),
-        this.sinon.stub(subject, 'hideResults'),
-        this.sinon.stub(subject, 'deactivate')
-      ];
-
-      assert.ok(subject.screen.classList.contains('rocketbar-expanded'));
-      assert.ok(subject.rocketbar.classList.contains('expanded'));
-
-      window.dispatchEvent(new CustomEvent('status-inactive'));
-
-      assert.ok(!subject.screen.classList.contains('rocketbar-expanded'));
-      assert.ok(!subject.rocketbar.classList.contains('expanded'));
+    test('iac-search-results with attention screen', function() {
+      AttentionScreen.mVisible = true;
+      var maximizeStub = this.sinon.stub(AttentionScreen, 'maximize');
+      var searchStub = this.sinon.stub(Rocketbar.prototype,
+                                       'handleSearchMessage');

-      assertStubs.forEach(function(stub) {
-        assert.ok(stub.calledOnce);
+      subject.handleEvent({
+        type: 'iac-search-results'
       });
+
+      assert.isTrue(maximizeStub.calledOnce);
+      assert.isFalse(searchStub.calledOnce);
     });
+
   });
 });

diff --git a/apps/system/test/unit/homescreen_launcher_test.js b/apps/system/test/unit/homescreen_launcher_test.js
index 55d2fac..b759830 100644
--- a/apps/system/test/unit/homescreen_launcher_test.js
+++ b/apps/system/test/unit/homescreen_launcher_test.js
@@ -1,9 +1,5 @@
 'use strict';
-/* global MocksHelper */
-/* global HomescreenLauncher */
-/* global MockSettingsListener */
-/* global MockApplications */
-/* global MockTrustedUIManager */
+

 requireApp('system/test/unit/mock_homescreen_window.js');
 requireApp('system/test/unit/mock_applications.js');
@@ -19,7 +15,7 @@ var mocksForHomescreenLauncher = new MocksHelper([
 ]).init();

 suite('system/HomescreenLauncher', function() {
-  var realApplications;
+  var homescreen, realApplications;

   setup(function() {
     realApplications = window.applications;
@@ -51,8 +47,7 @@ suite('system/HomescreenLauncher', function() {
         window.removeEventListener('homescreen-ready', homescreenReady);
         ready = true;
       });
-      window.homescreenLauncher = new HomescreenLauncher();
-      window.homescreenLauncher.start();
+      window.homescreenLauncher = new HomescreenLauncher().start();
       MockSettingsListener.mCallbacks['homescreen.manifestURL']('first.home');
       homescreen = window.homescreenLauncher.getHomescreen();
       assert.isTrue(homescreen.isHomescreen);
@@ -66,8 +61,7 @@ suite('system/HomescreenLauncher', function() {

     setup(function() {
       MockApplications.ready = true;
-      window.homescreenLauncher = new HomescreenLauncher();
-      window.homescreenLauncher.start();
+      window.homescreenLauncher = new HomescreenLauncher().start();
     });

     teardown(function() {
@@ -136,7 +130,7 @@ suite('system/HomescreenLauncher', function() {
     test('trustedUI hidden', function() {
       MockSettingsListener.mCallbacks['homescreen.manifestURL']('first.home');
       homescreen = window.homescreenLauncher.getHomescreen();
-      this.sinon.stub(homescreen, 'toggle');
+      var stubToggle = this.sinon.stub(homescreen, 'toggle');
       window.homescreenLauncher.handleEvent({
         type: 'trusteduihide'
       });
@@ -219,6 +213,38 @@ suite('system/HomescreenLauncher', function() {
       stubGetHomescreen.restore();
     });

+    test('homescreenopened', function() {
+      window.homescreenLauncher._screen = document.createElement('div');
+      window.homescreenLauncher.handleEvent({
+        type: 'homescreenopened'
+      });
+      assert.ok(window.homescreenLauncher._screen.classList.
+        contains('on-homescreen'));
+      window.homescreenLauncher._screen = null;
+    });
+
+    test('homescreenclosing', function() {
+      window.homescreenLauncher._screen = document.createElement('div');
+      window.homescreenLauncher._screen.classList.add('on-homescreen');
+      window.homescreenLauncher.handleEvent({
+        type: 'homescreenclosing'
+      });
+      assert.ok(!window.homescreenLauncher._screen.classList.
+        contains('on-homescreen'));
+      window.homescreenLauncher._screen = null;
+    });
+
+    test('homescreenclosed', function() {
+      window.homescreenLauncher._screen = document.createElement('div');
+      window.homescreenLauncher._screen.classList.add('on-homescreen');
+      window.homescreenLauncher.handleEvent({
+        type: 'homescreenclosed'
+      });
+      assert.ok(!window.homescreenLauncher._screen.classList.
+        contains('on-homescreen'));
+      window.homescreenLauncher._screen = null;
+    });
+
     suite('software-button-*; resize the homescreenwindow', function() {
       var isResizeCalled, stubGetHomescreen;

diff --git a/apps/system/test/unit/homescreen_window_test.js b/apps/system/test/unit/homescreen_window_test.js
index 652d593..e076ba3 100644
--- a/apps/system/test/unit/homescreen_window_test.js
+++ b/apps/system/test/unit/homescreen_window_test.js
@@ -27,8 +27,7 @@ suite('system/HomescreenWindow', function() {

   setup(function(done) {
     this.sinon.useFakeTimers();
-    window.homescreenLauncher = new HomescreenLauncher();
-    window.homescreenLauncher.start();
+    window.homescreenLauncher = new HomescreenLauncher().start();
     stubById = this.sinon.stub(document, 'getElementById');
     stubById.returns(document.createElement('div'));
     requireApp('system/js/system.js');
diff --git a/apps/system/test/unit/icc_test.js b/apps/system/test/unit/icc_test.js
index 27dafbb..7986676 100644
--- a/apps/system/test/unit/icc_test.js
+++ b/apps/system/test/unit/icc_test.js
@@ -3,7 +3,7 @@
           MockL10n, MockFtuLauncher, MockNavigatorSettings, KeyboardEvent */
 'use strict';

-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/test/unit/mock_system_icc_worker.js');
 requireApp('system/test/unit/mock_ftu_launcher.js');
 requireApp('system/test/unit/mock_statusbar.js');
diff --git a/apps/system/test/unit/icc_worker_test.js b/apps/system/test/unit/icc_worker_test.js
index 9a48d09..f289f8e 100644
--- a/apps/system/test/unit/icc_worker_test.js
+++ b/apps/system/test/unit/icc_worker_test.js
@@ -3,7 +3,7 @@
 /* global MocksHelper, MockNavigatorMozIccManager, MockSystemICC, icc_worker,
           MockNotifications */

-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/test/unit/mock_system_icc.js');
 require('/shared/test/unit/mocks/mock_navigator_moz_icc_manager.js');
 require('/shared/test/unit/mocks/mock_notification.js');
diff --git a/apps/system/test/unit/identity_test.js b/apps/system/test/unit/identity_test.js
index 7970951..a795e0b 100644
--- a/apps/system/test/unit/identity_test.js
+++ b/apps/system/test/unit/identity_test.js
@@ -3,7 +3,7 @@
 requireApp('system/js/identity.js');
 requireApp('system/test/unit/mock_chrome_event.js');
 requireApp('system/test/unit/mock_trusted_ui_manager.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');

 // ensure its defined as a global so mocha will not complain about us
 // leaking new global variables during the test
@@ -104,3 +104,4 @@ suite('identity', function() {
     });
   });
 });
+
diff --git a/apps/system/test/unit/internet_sharing_test.js b/apps/system/test/unit/internet_sharing_test.js
index e2da3b6..0978499 100644
--- a/apps/system/test/unit/internet_sharing_test.js
+++ b/apps/system/test/unit/internet_sharing_test.js
@@ -15,7 +15,7 @@ requireApp('system/shared/test/unit/mocks/mock_icc_helper.js');
 requireApp('system/test/unit/mock_modal_dialog.js');
 requireApp('system/test/unit/mock_airplane_mode.js');
 requireApp('system/test/unit/mock_asyncStorage.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/js/internet_sharing.js');

 var mocksForInternetSharing = new MocksHelper([
@@ -316,3 +316,4 @@ suite('internet sharing > ', function() {
     });
   });
 });
+
diff --git a/apps/system/test/unit/keyboard_manager_test.js b/apps/system/test/unit/keyboard_manager_test.js
index 88eb2f9..513a4f1 100644
--- a/apps/system/test/unit/keyboard_manager_test.js
+++ b/apps/system/test/unit/keyboard_manager_test.js
@@ -1,6 +1,6 @@
 /*global
   KeyboardManager, sinon, KeyboardHelper, MockKeyboardHelper,
-  MocksHelper, TransitionEvent, MockNavigatorSettings, Applications, Promise */
+  MocksHelper, TransitionEvent, MockNavigatorSettings */
 'use strict';

 require('/shared/test/unit/mocks/mock_lazy_loader.js');
@@ -89,7 +89,6 @@ suite('KeyboardManager', function() {

   var realMozSettings = null;
   var realKeyboard = null;
-  var realGetFeature = null;

   suiteSetup(function() {
     document.body.innerHTML += '<div id="run-container"></div>';
@@ -99,14 +98,11 @@ suite('KeyboardManager', function() {
     window.navigator.mozInputMethod = {
       removeFocus: function() {}
     };
-
-    realGetFeature = window.navigator.getFeature;
   });

   suiteTeardown(function() {
     navigator.mozSettings = realMozSettings;
     window.navigator.mozInputMethod = realKeyboard;
-    window.navigator.getFeature = realGetFeature;
   });

   setup(function() {
@@ -117,23 +113,6 @@ suite('KeyboardManager', function() {
     setupHTML();

     KeyboardManager.init();
-
-    window.applications = Applications;
-    window.applications.mRegisterMockApp({
-      manifestURL: 'app://keyboard.gaiamobile.org/manifest.webapp',
-      manifest: {
-        type: 'certified'
-      }
-    });
-    Applications.mRegisterMockApp({
-      manifestURL: 'app://keyboard-test.gaiamobile.org/manifest.webapp',
-      manifest: {
-        type: 'certified'
-      }
-    });
-
-    window.navigator.getFeature = this.sinon.stub();
-    window.navigator.getFeature.returns(Promise.resolve(1024));
   });

   suite('Switching keyboard focus', function() {
diff --git a/apps/system/test/unit/layout_manager_test.js b/apps/system/test/unit/layout_manager_test.js
index 769fd3f..4c86405 100644
--- a/apps/system/test/unit/layout_manager_test.js
+++ b/apps/system/test/unit/layout_manager_test.js
@@ -1,17 +1,15 @@
 /* global MocksHelper, LayoutManager, MockKeyboardManager,
-          MockAttentionScreen, MocksoftwareButtonManager, MockLockScreen */
+          MockStatusBar, MocksoftwareButtonManager, MockLockScreen */
 'use strict';

 requireApp('system/js/layout_manager.js');
 requireApp('system/test/unit/mock_lock_screen.js');
 requireApp('system/test/unit/mock_keyboard_manager.js');
 requireApp('system/test/unit/mock_software_button_manager.js');
-requireApp('system/test/unit/mock_attention_screen.js');
+requireApp('system/test/unit/mock_statusbar.js');

 var mocksForLayoutManager = new MocksHelper([
-  'AttentionScreen',
-  'KeyboardManager',
-  'softwareButtonManager',
+  'KeyboardManager', 'softwareButtonManager', 'StatusBar',
   'LockScreen'
 ]).init();

@@ -21,8 +19,7 @@ suite('system/LayoutManager >', function() {
   var layoutManager;
   setup(function() {
     window.lockScreen = MockLockScreen;
-    layoutManager = new LayoutManager();
-    layoutManager.start();
+    layoutManager = new LayoutManager().start();
   });

   suite('handle events', function() {
@@ -117,7 +114,7 @@ suite('system/LayoutManager >', function() {

       H = window.innerHeight;
       W = window.innerWidth;
-      MockAttentionScreen.statusHeight = 30;
+      MockStatusBar.height = 30;
     });

     teardown(function() {
diff --git a/apps/system/test/unit/lockscreen_conn_info_manager_test.js b/apps/system/test/unit/lockscreen_conn_info_manager_test.js
new file mode 100644
index 0000000..8f49be7
--- /dev/null
+++ b/apps/system/test/unit/lockscreen_conn_info_manager_test.js
@@ -0,0 +1,590 @@
+'use strict';
+
+requireApp('system/test/unit/mock_l10n.js');
+requireApp('system/js/mock_simslot.js');
+requireApp('system/js/mock_simslot_manager.js');
+requireApp('system/shared/test/unit/mocks/mock_navigator_moz_mobile_connections.js');
+requireApp('system/shared/test/unit/mocks/mock_navigator_moz_icc_manager.js');
+requireApp('system/shared/test/unit/mocks/mock_mobile_operator.js');
+requireApp('system/shared/test/unit/mocks/mock_navigator_moz_settings.js');
+requireApp('system/shared/test/unit/mocks/mock_settings_listener.js');
+requireApp('system/js/lockscreen_connection_info_manager.js');
+
+if (!this.MobileOperator) {
+  this.MobileOperator = null;
+}
+
+if (!this.SettingsListener) {
+  this.SettingsListener = null;
+}
+
+if (!this.SIMSlotManager) {
+  this.SIMSlotManager = null;
+}
+
+suite('system/LockScreenConnInfoManager >', function() {
+  var subject;
+  var realL10n;
+  var realMobileOperator;
+  var realSIMSlotManager;
+  var realIccManager;
+  var realSettingsListener;
+  var realMozSettings;
+  var domConnStates;
+  var DUMMYTEXT1 = 'foo';
+
+  setup(function() {
+    realL10n = navigator.mozL10n;
+    navigator.mozL10n = window.MockL10n;
+
+    realMobileOperator = window.MobileOperator;
+    window.MobileOperator = MockMobileOperator;
+
+    realIccManager = navigator.mozIccManager;
+    navigator.mozIccManager = MockNavigatorMozIccManager;
+
+    realMozSettings = window.navigator.mozSettings;
+    window.navigator.mozSettings = MockNavigatorSettings;
+
+    realSettingsListener = window.SettingsListener;
+    window.SettingsListener = MockSettingsListener;
+
+    realSIMSlotManager = window.SIMSlotManager;
+    window.SIMSlotManager = MockSIMSlotManager;
+
+    domConnStates = document.createElement('div');
+    domConnStates.id = 'lockscreen-conn-states';
+    document.body.appendChild(domConnStates);
+  });
+
+  teardown(function() {
+    navigator.mozL10n = realL10n;
+    window.MobileOperator = realMobileOperator;
+    window.navigator.mozIccManager = realIccManager;
+    window.SettingsListener = realSettingsListener;
+    window.SIMSlotManager = realSIMSlotManager;
+
+    document.body.removeChild(domConnStates);
+    MockSettingsListener.mTeardown();
+  });
+
+  suiteTeardown(function() {
+    MockSIMSlotManager.mTeardown();
+  });
+
+  suite('Update conn states when events', function() {
+    var mockMobileConnection;
+    var iccObj;
+
+    suiteSetup(function() {
+      mockMobileConnection = MockMobileconnection();
+
+      MockMobileOperator.mOperator = 'operator';
+      MockMobileOperator.mCarrier = 'carrier';
+      MockMobileOperator.mRegion = 'region';
+
+      MockSIMSlotManager.mInstances =
+        [new MockSIMSlot(mockMobileConnection, 0)];
+      iccObj = MockSIMSlotManager.mInstances[0].simCard;
+    });
+
+    suiteTeardown(function() {
+      MockMobileOperator.mTeardown();
+    });
+
+    setup(function() {
+      // add a sim card
+      mockMobileConnection.iccId = 'iccid1';
+      mockMobileConnection.voice = {};
+      MockNavigatorMozIccManager.addIcc('iccid1');
+
+      subject = new LockScreenConnInfoManager();
+      subject._initialize(domConnStates);
+
+      this.sinon.stub(MockSIMSlotManager, 'isMultiSIM').returns(false);
+      this.sinon.stub(MockSIMSlotManager, 'noSIMCardOnDevice').returns(false);
+
+      this.sinon.stub(subject, 'updateConnStates');
+      this.sinon.stub(subject, 'updateConnState');
+    });
+
+    teardown(function() {
+      mockMobileConnection.mTeardown();
+      MockNavigatorMozIccManager.mTeardown();
+      subject.updateConnStates.restore();
+      subject.updateConnState.restore();
+    });
+
+    // sim related changes
+    test('voicechange', function() {
+      mockMobileConnection.triggerEventListeners('voicechange', {});
+      sinon.assert.called(subject.updateConnState);
+    });
+
+    ['simslot-cardstatechange',
+     'simslot-iccinfochange'].forEach(function(eventName) {
+      test(eventName, function() {
+        var simInfo = {
+          conn: mockMobileConnection,
+          index: 0
+        };
+        window.dispatchEvent(new CustomEvent(eventName, { detail: simInfo }));
+        sinon.assert.calledWith(subject.updateConnState, simInfo);
+      });
+    });
+
+    test('cellbroadcastmsgchanged', function() {
+      var testLabelName = 'testLabelName';
+      window.dispatchEvent(new CustomEvent('cellbroadcastmsgchanged', {
+        detail: testLabelName
+      }));
+      assert.isTrue(subject.updateConnStates.called);
+      assert.equal(subject._cellbroadcastLabel, testLabelName);
+    });
+
+    test('ril.radio.disabled', function() {
+      var airplaneModeEnabled = true;
+      MockNavigatorSettings.createLock().set({
+        'ril.radio.disabled': airplaneModeEnabled
+      });
+      assert.isTrue(subject.updateConnStates.called);
+      assert.equal(subject._airplaneMode, airplaneModeEnabled);
+    });
+
+    test('ril.telephony.defaultServiceId', function() {
+      var defaultServiceId = 'iccid1';
+      MockNavigatorSettings.createLock().set({
+        'ril.telephony.defaultServiceId': defaultServiceId
+      });
+      assert.isTrue(subject.updateConnStates.called);
+      assert.equal(subject._telephonyDefaultServiceId, defaultServiceId);
+    });
+  });
+
+  suite('Single sim devices', function() {
+    var mockMobileConnection;
+    var domConnstateIDLine;
+    var domConnstateL1;
+    var domConnstateL2;
+    var iccObj;
+
+    suiteSetup(function() {
+      mockMobileConnection = MockMobileconnection();
+
+      MockMobileOperator.mOperator = 'operator';
+      MockMobileOperator.mCarrier = 'carrier';
+      MockMobileOperator.mRegion = 'region';
+
+      MockSIMSlotManager.mInstances =
+        [new MockSIMSlot(mockMobileConnection, 0)];
+      iccObj = MockSIMSlotManager.mInstances[0].simCard;
+
+      subject = new LockScreenConnInfoManager();
+    });
+
+    suiteTeardown(function() {
+      MockMobileOperator.mTeardown();
+    });
+
+    setup(function() {
+      // add a sim card
+      mockMobileConnection.iccId = 'iccid1';
+      mockMobileConnection.voice = {};
+      MockNavigatorMozIccManager.addIcc('iccid1');
+
+      subject._initialize(domConnStates);
+
+      var domConnState = domConnStates.children[0];
+      domConnstateIDLine = domConnState.children[0];
+      domConnstateL1 = domConnState.children[1];
+      domConnstateL2 = domConnState.children[2];
+
+      this.sinon.stub(MockSIMSlotManager, 'isMultiSIM').returns(false);
+      this.sinon.stub(MockSIMSlotManager, 'noSIMCardOnDevice').returns(false);
+    });
+
+    teardown(function() {
+      mockMobileConnection.mTeardown();
+      MockNavigatorMozIccManager.mTeardown();
+    });
+
+    test('2G Mode: should update cell broadcast info on connstate Line 2',
+      function() {
+        mockMobileConnection.voice = {
+          connected: true,
+          type: 'gsm'
+        };
+
+        subject._cellbroadcastLabel = DUMMYTEXT1;
+        subject.updateConnStates();
+        assert.equal(domConnstateL2.textContent, DUMMYTEXT1);
+
+        subject._cellbroadcastLabel = null;
+    });
+
+    test('3G Mode: should update carrier and region info on connstate Line 2',
+      function() {
+        mockMobileConnection.voice = {
+          connected: true,
+          type: 'wcdma'
+        };
+
+        var carrier = 'TIM';
+        var region = 'SP';
+        MobileOperator.mCarrier = carrier;
+        MobileOperator.mRegion = region;
+
+        subject._cellbroadcastLabel = DUMMYTEXT1;
+
+        var l10nSpy = sinon.spy(navigator.mozL10n, 'localize');
+
+        var l10nArgs = {
+          carrier: carrier,
+          region: region
+        };
+
+        subject.updateConnStates();
+
+        assert.ok(l10nSpy.calledWith(domConnstateL2,
+                                     'operator-info',
+                                     l10nArgs));
+
+        navigator.mozL10n.localize.restore();
+
+        subject._cellbroadcastLabel = null;
+    });
+
+    test('Show no network', function() {
+      mockMobileConnection.voice = {
+        connected: true,
+        state: 'notSearching'
+      };
+      subject.updateConnStates();
+      assert.equal(domConnstateL1.dataset.l10nId, 'noNetwork');
+    });
+
+    test('Show searching', function() {
+      mockMobileConnection.voice = {
+        connected: false,
+        emergencyCallsOnly: false
+      };
+      subject.updateConnStates();
+      assert.equal(domConnstateL1.dataset.l10nId, 'searching');
+    });
+
+    test('Show roaming', function() {
+      mockMobileConnection.voice = {
+        connected: true,
+        emergencyCallsOnly: false,
+        roaming: true
+      };
+
+      var l10nSpy = sinon.spy(navigator.mozL10n, 'localize');
+
+      var l10nArgs = {
+        operator: MockMobileOperator.mOperator
+      };
+
+      subject.updateConnStates();
+
+      assert.ok(l10nSpy.calledWith(domConnstateL1,
+                                   'roaming',
+                                   l10nArgs));
+
+      navigator.mozL10n.localize.restore();
+    });
+
+    test('Show localized roaming',
+      function() {
+        mockMobileConnection.voice = {
+          connected: true,
+          emergencyCallsOnly: false,
+          roaming: true
+        };
+
+        var l10nArgs = {
+          operator: 'operator'
+        };
+
+        var l10nSpy = this.sinon.spy(navigator.mozL10n, 'localize');
+        subject.updateConnStates();
+        assert.ok(l10nSpy.calledWith(domConnstateL1, 'roaming', l10nArgs),
+          'Roaming network name displayed localized with proper string');
+
+        navigator.mozL10n.localize.restore();
+    });
+
+    suite('Show correct card states when emergency calls only', function() {
+      test('unknown', function() {
+        mockMobileConnection.voice = {
+          connected: false,
+          emergencyCallsOnly: true
+        };
+        iccObj.cardState = 'unknown';
+
+        subject.updateConnStates();
+        assert.equal(domConnstateL1.dataset.l10nId, 'emergencyCallsOnly');
+        assert.equal(domConnstateL2.dataset.l10nId,
+          'emergencyCallsOnly-unknownSIMState');
+      });
+
+      test('other card state', function() {
+        mockMobileConnection.voice = {
+          connected: false,
+          emergencyCallsOnly: true
+        };
+        iccObj.cardState = 'otherCardState';
+
+        subject.updateConnStates();
+        assert.equal(domConnstateL1.dataset.l10nId, 'emergencyCallsOnly');
+        assert.isFalse(domConnstateL2.hasAttribute('data-l10n-id'));
+      });
+
+      ['pinRequired', 'pukRequired', 'networkLocked',
+       'serviceProviderLocked', 'corporateLocked', 'network1Locked',
+       'network2Locked', 'hrpdNetworkLocked', 'ruimCorporateLocked',
+       'ruimServiceProviderLocked'].forEach(function(cardState) {
+        test(cardState, function() {
+          mockMobileConnection.voice = {
+            connected: false,
+            emergencyCallsOnly: true
+          };
+          iccObj.cardState = cardState;
+
+          subject.updateConnStates();
+          assert.equal(domConnstateL1.dataset.l10nId, 'emergencyCallsOnly');
+          assert.equal(domConnstateL2.dataset.l10nId,
+            'emergencyCallsOnly-' + cardState);
+        });
+      });
+    });
+  });
+
+  suite('Multiple sims devices', function() {
+    var domConnStateList;
+    var mockMobileConnections = [];
+    var iccObj1;
+    var iccObj2;
+
+    suiteSetup(function() {
+      mockMobileConnections = [
+        MockMobileconnection(),
+        MockMobileconnection()
+      ];
+
+      MockMobileOperator.mOperator = 'operator';
+      MockMobileOperator.mCarrier = 'carrier';
+      MockMobileOperator.mRegion = 'region';
+
+      MockSIMSlotManager.mInstances =
+        [new MockSIMSlot(mockMobileConnections[0], 0),
+         new MockSIMSlot(mockMobileConnections[1], 1)];
+
+      iccObj1 = MockSIMSlotManager.mInstances[0].simCard;
+      iccObj2 = MockSIMSlotManager.mInstances[1].simCard;
+
+      subject = new LockScreenConnInfoManager();
+    });
+
+    suiteTeardown(function() {
+      MockMobileOperator.mTeardown();
+    });
+
+    setup(function() {
+      mockMobileConnections[0].iccId = 'iccid1';
+      mockMobileConnections[0].voice = {};
+      MockNavigatorMozIccManager.addIcc('iccid1');
+
+      mockMobileConnections[1].iccId = 'iccid2';
+      mockMobileConnections[1].voice = {};
+      MockNavigatorMozIccManager.addIcc('iccid2');
+
+      subject._initialize(domConnStates);
+
+      domConnStateList = [];
+      Array.prototype.forEach.call(domConnStates.children,
+        function(domConnState) {
+          domConnState.domConnstateIDLine = domConnState.children[0];
+          domConnState.domConnstateL1 = domConnState.children[1];
+          domConnState.domConnstateL2 = domConnState.children[2];
+          domConnStateList.push(domConnState);
+      });
+
+      this.sinon.stub(SIMSlotManager, 'isMultiSIM').returns(true);
+    });
+
+    teardown(function() {
+      mockMobileConnections[0].mTeardown();
+      mockMobileConnections[1].mTeardown();
+      MockNavigatorMozIccManager.mTeardown();
+    });
+
+    suite('No sim card', function() {
+      setup(function() {
+        this.sinon.stub(SIMSlotManager, 'noSIMCardOnDevice').returns(true);
+      });
+
+      test('Should only show one conn state', function() {
+        subject.updateConnStates();
+
+        assert.equal(domConnStateList[0].domConnstateL1.dataset.l10nId,
+          'emergencyCallsOnly-noSIM');
+        assert.isFalse(
+          domConnStateList[1].domConnstateL1.hasAttribute('data-l10n-id'));
+        assert.isFalse(
+          domConnStateList[1].domConnstateL2.hasAttribute('data-l10n-id'));
+      });
+
+      test('Should show emergency call text', function() {
+        mockMobileConnections[0].voice.emergencyCallsOnly = true;
+        subject.updateConnStates();
+
+        assert.equal(domConnStateList[0].domConnstateL1.dataset.l10nId,
+          'emergencyCallsOnly');
+        assert.equal(domConnStateList[0].domConnstateL2.dataset.l10nId,
+          'emergencyCallsOnly-noSIM');
+        assert.isFalse(
+          domConnStateList[1].domConnstateL1.hasAttribute('data-l10n-id'));
+        assert.isFalse(
+          domConnStateList[1].domConnstateL2.hasAttribute('data-l10n-id'));
+      });
+    });
+
+    suite('One sim card inserted', function() {
+      suiteSetup(function() {
+        mockMobileConnections[0].voice = {
+          connected: true,
+          type: 'gsm'
+        };
+        mockMobileConnections[1].voice = {};
+      });
+
+      setup(function() {
+        navigator.mozIccManager.removeIcc('iccid2');
+        MockSIMSlotManager.mInstances[1].isAbsent = function() { return true; };
+      });
+
+      test('Should show sim ID', function() {
+        subject.updateConnStates();
+
+        var simIDLine = domConnStateList[0].domConnstateIDLine;
+        assert.isFalse(simIDLine.hidden);
+
+        assert.equal(simIDLine.dataset.l10nId, 'lockscreen-sim-id');
+        assert.equal(simIDLine.dataset.l10nArgs, {'n': 1});
+      });
+
+      test('Should show only one conn state', function() {
+        subject.updateConnStates();
+
+        assert.isFalse(domConnStateList[0].hidden);
+        assert.isTrue(domConnStateList[1].hidden);
+      });
+
+      test('Should show airplane mode on connstate 1 Line 1 when in ' +
+        'airplane mode', function() {
+          subject._airplaneMode = true;
+          subject.updateConnStates();
+
+          assert.isFalse(domConnStateList[0].hidden);
+          assert.isTrue(domConnStateList[0].domConnstateIDLine.hidden);
+          assert.equal(domConnStateList[0].domConnstateL1.dataset.l10nId,
+            'airplaneMode');
+          assert.isFalse(
+            domConnStateList[0].domConnstateL2.hasAttribute('data-l10n-id'));
+
+          subject._airplaneMode = false;
+      });
+    });
+
+    suite('Two sim cards inserted', function() {
+      setup(function() {
+        MockSIMSlotManager.mInstances[0].conn.voice = {
+          connected: true,
+          type: 'gsm'
+        };
+        MockSIMSlotManager.mInstances[1].conn.voice = {
+          connected: true,
+          type: 'gsm'
+        };
+        this.sinon.stub(SIMSlotManager, 'noSIMCardOnDevice').returns(false);
+      });
+
+      test('Should show sim IDs', function() {
+        subject.updateConnStates();
+
+        var simIDLine1 = domConnStateList[0].domConnstateIDLine;
+        var simIDLine2 = domConnStateList[1].domConnstateIDLine;
+        assert.isFalse(simIDLine1.hidden);
+        assert.isFalse(simIDLine2.hidden);
+
+        assert.equal(simIDLine1.dataset.l10nId, 'lockscreen-sim-id');
+        assert.equal(simIDLine1.dataset.l10nArgs, {'n': 1});
+        assert.equal(simIDLine2.dataset.l10nId, 'lockscreen-sim-id');
+        assert.equal(simIDLine2.dataset.l10nArgs, {'n': 2});
+      });
+
+      test('Should hide sim IDs if all sim cards are not connected to networks',
+        function() {
+          sinon.stub(SIMSlotManager, 'noSIMCardConnectedToNetwork')
+            .returns(true);
+          subject.updateConnStates();
+
+          var simIDLine1 = domConnStateList[0].domConnstateIDLine;
+          var connState1line1 = domConnStateList[0].domConnstateL1;
+          var simIDLine2 = domConnStateList[1].domConnstateIDLine;
+          assert.isTrue(simIDLine1.hidden);
+          assert.isTrue(simIDLine2.hidden);
+          assert.equal(connState1line1.textContent, 'emergencyCallsOnly');
+          SIMSlotManager.noSIMCardConnectedToNetwork.restore();
+      });
+
+      test('Should show operator names on Line 1', function() {
+        subject.updateConnStates();
+
+        var connState1line1 = domConnStateList[0].domConnstateL1;
+        var connState2line1 = domConnStateList[1].domConnstateL1;
+        assert.equal(connState1line1.textContent, MockMobileOperator.mOperator);
+        assert.equal(connState2line1.textContent, MockMobileOperator.mOperator);
+      });
+
+      test('Should show carrier and region on Line 2', function() {
+        var l10nSpy = sinon.spy(navigator.mozL10n, 'localize');
+
+        var l10nArgs = {
+          carrier: MockMobileOperator.mCarrier,
+          region: MockMobileOperator.mRegion
+        };
+
+        subject.updateConnStates();
+
+        assert.ok(l10nSpy.calledWith(domConnStateList[0].domConnstateL2,
+                                     'operator-info',
+                                     l10nArgs));
+
+        assert.ok(l10nSpy.calledWith(domConnStateList[1].domConnstateL2,
+                                     'operator-info',
+                                     l10nArgs));
+      });
+
+      test('Should display "emergency calls only" if target sim is the ' +
+        'primary one and is emergency calls only', function() {
+          mockMobileConnections[0].voice.emergencyCallsOnly = true;
+          subject._telephonyDefaultServiceId = 0;
+          subject.updateConnStates();
+
+          var connState1line1 = domConnStateList[0].domConnstateL1;
+          assert.equal(connState1line1.dataset.l10nId, 'emergencyCallsOnly');
+      });
+
+      test('Should hide the conn state of the target sim if it is not the ' +
+        'primary one but is emergency calls only', function() {
+          mockMobileConnections[0].voice.emergencyCallsOnly = true;
+          subject._telephonyDefaultServiceId = 1;
+          subject.updateConnStates();
+
+          assert.isTrue(domConnStateList[0].hidden);
+      });
+    });
+  });
+});
diff --git a/apps/system/test/unit/lockscreen_notifications_test.js b/apps/system/test/unit/lockscreen_notifications_test.js
deleted file mode 100644
index dc396bc..0000000
--- a/apps/system/test/unit/lockscreen_notifications_test.js
+++ /dev/null
@@ -1,383 +0,0 @@
-/* global MocksHelper, MockLockScreen, LockScreenNotifications */
-
-'use strict';
-
-requireApp('system/js/lockscreen_notifications.js');
-requireApp('system/test/unit/mock_lock_screen.js');
-
-var mocksForLockScreenNotifications = new MocksHelper([
-  'LockScreen'
-]).init();
-
-suite('system/LockScreenNotifications', function() {
-  var lockScreenNotifications;
-  mocksForLockScreenNotifications.attachTestHelpers();
-
-  setup(function() {
-    lockScreenNotifications = new LockScreenNotifications();
-    MockLockScreen.init();
-  });
-
-  teardown(function() {
-    MockLockScreen.mTeardown();
-  });
-
-  test('Test Bind Lockscreen', function() {
-    lockScreenNotifications.bindLockScreen('FakeLockscreen');
-    assert.equal(lockScreenNotifications._lockScreen, 'FakeLockscreen');
-  });
-
-  test('Test Show Colored Masked Background', function() {
-    MockLockScreen.maskedBackground = {
-      style: {
-        backgroundColor: null
-      },
-      dataset: {
-        wallpaperColor: 'rgba(123, 123, 123, 0.5)'
-      },
-      classList: {
-        remove: this.sinon.spy()
-      }
-    };
-    lockScreenNotifications._lockScreen = MockLockScreen;
-
-    lockScreenNotifications.showColoredMaskBG();
-
-    assert.equal(
-      MockLockScreen.maskedBackground.style.backgroundColor,
-      'rgba(123, 123, 123, 0.5)',
-      'BGColor colors mismatch'
-    );
-
-    assert.isTrue(
-      MockLockScreen.maskedBackground.classList.remove.calledWith('blank')
-    );
-  });
-
-  test('Test Hide Colored Masked Background', function() {
-    MockLockScreen.maskedBackground = {
-      style: {
-        backgroundColor: null
-      },
-      classList: {
-        add: this.sinon.spy()
-      }
-    };
-    lockScreenNotifications._lockScreen = MockLockScreen;
-
-    lockScreenNotifications.hideColoredMaskBG();
-
-    assert.equal(
-      MockLockScreen.maskedBackground.style.backgroundColor,
-      'transparent',
-      'BGColor colors mismatch'
-    );
-
-    assert.isTrue(
-      MockLockScreen.maskedBackground.classList.add.calledWith('blank')
-    );
-  });
-
-  test('Test Collapse Notifications', function() {
-    MockLockScreen.notificationsContainer = {
-      classList: {
-        add: this.sinon.spy()
-      }
-    };
-    MockLockScreen.notificationArrow = {
-      classList: {
-        add: this.sinon.spy()
-      }
-    };
-
-    lockScreenNotifications._lockScreen = MockLockScreen;
-
-    lockScreenNotifications.collapseNotifications();
-
-    assert.isTrue(
-      MockLockScreen.notificationsContainer.classList.add.calledWith(
-        'collapsed'
-      )
-    );
-
-    assert.isTrue(
-      MockLockScreen.notificationArrow.classList.add.calledWith(
-        'collapsed'
-      )
-    );
-  });
-
-  test('Test Expand Notifications', function() {
-    MockLockScreen.notificationsContainer = {
-      classList: {
-        remove: this.sinon.spy()
-      }
-    };
-    MockLockScreen.notificationArrow = {
-      classList: {
-        remove: this.sinon.spy()
-      }
-    };
-
-    lockScreenNotifications._lockScreen = MockLockScreen;
-
-    lockScreenNotifications.expandNotifications();
-
-    assert.isTrue(
-      MockLockScreen.notificationsContainer.classList.remove.calledWith(
-        'collapsed'
-      )
-    );
-
-    assert.isTrue(
-      MockLockScreen.notificationArrow.classList.remove.calledWith(
-        'collapsed'
-      )
-    );
-  });
-
-  test('Test Adjust Container Visual Hints', function() {
-    MockLockScreen.notificationsContainer = {
-      clientHeight: undefined,
-      scrollHeight: undefined,
-      scrollTop: undefined
-    };
-
-    lockScreenNotifications._lockScreen = MockLockScreen;
-
-    // container can't be scrolled
-
-    var stubSetMaskVisibility =
-      this.sinon.stub(lockScreenNotifications, '_setMaskVisibility');
-    var stubSetArrowVisibility =
-      this.sinon.stub(lockScreenNotifications, '_setArrowVisibility');
-
-    MockLockScreen.notificationsContainer = {
-      clientHeight: 100,
-      scrollHeight: 100,
-      scrollTop: 0
-    };
-    lockScreenNotifications.adjustContainerVisualHints();
-
-    assert.isTrue(stubSetMaskVisibility.calledWith(false, false));
-    assert.isTrue(stubSetArrowVisibility.calledWith(false));
-
-    // container can be scrolled, currently at top
-    stubSetMaskVisibility.reset();
-    stubSetArrowVisibility.reset();
-
-    MockLockScreen.notificationsContainer = {
-      clientHeight: 100,
-      scrollHeight: 150,
-      scrollTop: 0
-    };
-    lockScreenNotifications.adjustContainerVisualHints();
-
-    assert.isTrue(stubSetMaskVisibility.calledWith(false, false));
-    assert.isTrue(stubSetArrowVisibility.calledWith(true));
-
-    // container can be scrolled, currently at middle
-    stubSetMaskVisibility.reset();
-    stubSetArrowVisibility.reset();
-
-    MockLockScreen.notificationsContainer = {
-      clientHeight: 100,
-      scrollHeight: 150,
-      scrollTop: 20
-    };
-    lockScreenNotifications.adjustContainerVisualHints();
-
-    assert.isTrue(stubSetMaskVisibility.calledWith(false, true));
-    assert.isTrue(stubSetArrowVisibility.calledWith(false));
-
-    // container can be scrolled, currently at bottom
-    stubSetMaskVisibility.reset();
-    stubSetArrowVisibility.reset();
-
-    MockLockScreen.notificationsContainer = {
-      clientHeight: 100,
-      scrollHeight: 150,
-      scrollTop: 50
-    };
-    lockScreenNotifications.adjustContainerVisualHints();
-
-    assert.isTrue(stubSetMaskVisibility.calledWith(true, false));
-    assert.isTrue(stubSetArrowVisibility.calledWith(false));
-  });
-
-  suite('Test Set Mask Visibility', function() {
-    setup(function() {
-      MockLockScreen.notificationsContainer = {
-        classList: {
-          add: this.sinon.spy(),
-          remove: this.sinon.spy()
-        }
-      };
-    });
-
-    teardown(function() {
-      MockLockScreen.notificationsContainer = undefined;
-    });
-
-    test('top = true, both = false', function() {
-      lockScreenNotifications._lockScreen = MockLockScreen;
-      lockScreenNotifications._setMaskVisibility(true, false);
-
-      assert.isTrue(
-        MockLockScreen.notificationsContainer.classList.add.calledWith(
-          'masked-top'
-        )
-      );
-      assert.isFalse(
-        MockLockScreen.notificationsContainer.classList.add.calledWith(
-          'masked-both'
-        )
-      );
-      assert.isFalse(
-        MockLockScreen.notificationsContainer.classList.remove.calledWith(
-          'masked-top'
-        )
-      );
-      assert.isTrue(
-        MockLockScreen.notificationsContainer.classList.remove.calledWith(
-          'masked-both'
-        )
-      );
-    });
-
-    test('top = false, both = true', function() {
-      lockScreenNotifications._lockScreen = MockLockScreen;
-      lockScreenNotifications._setMaskVisibility(false, true);
-
-      assert.isFalse(
-        MockLockScreen.notificationsContainer.classList.add.calledWith(
-          'masked-top'
-        )
-      );
-      assert.isTrue(
-        MockLockScreen.notificationsContainer.classList.remove.calledWith(
-          'masked-top'
-        )
-      );
-      assert.isTrue(
-        MockLockScreen.notificationsContainer.classList.add.calledWith(
-          'masked-both'
-        )
-      );
-      assert.isFalse(
-        MockLockScreen.notificationsContainer.classList.remove.calledWith(
-          'masked-both'
-        )
-      );
-    });
-
-    test('top = true, both = true', function() {
-      lockScreenNotifications._lockScreen = MockLockScreen;
-      lockScreenNotifications._setMaskVisibility(true, true);
-
-      assert.isTrue(
-        MockLockScreen.notificationsContainer.classList.add.calledWith(
-          'masked-top'
-        )
-      );
-      assert.isFalse(
-        MockLockScreen.notificationsContainer.classList.remove.calledWith(
-          'masked-top'
-        )
-      );
-      assert.isTrue(
-        MockLockScreen.notificationsContainer.classList.add.calledWith(
-          'masked-both'
-        )
-      );
-      assert.isFalse(
-        MockLockScreen.notificationsContainer.classList.remove.calledWith(
-          'masked-both'
-        )
-      );
-    });
-
-    test('top = false, both = false', function() {
-      lockScreenNotifications._lockScreen = MockLockScreen;
-      lockScreenNotifications._setMaskVisibility(false, false);
-
-      assert.isFalse(
-        MockLockScreen.notificationsContainer.classList.add.calledWith(
-          'masked-top'
-        )
-      );
-      assert.isTrue(
-        MockLockScreen.notificationsContainer.classList.remove.calledWith(
-          'masked-top'
-        )
-      );
-      assert.isFalse(
-        MockLockScreen.notificationsContainer.classList.add.calledWith(
-          'masked-both'
-        )
-      );
-      assert.isTrue(
-        MockLockScreen.notificationsContainer.classList.remove.calledWith(
-          'masked-both'
-        )
-      );
-    });
-  });
-
-  suite('Test Set Arrow Visibility', function() {
-    setup(function() {
-      MockLockScreen.notificationArrow = {
-        classList: {
-          add: this.sinon.spy(),
-          remove: this.sinon.spy()
-        }
-      };
-    });
-
-    teardown(function() {
-      MockLockScreen.notificationArrow = undefined;
-    });
-
-    test('visible = true', function() {
-      lockScreenNotifications._lockScreen = MockLockScreen;
-      lockScreenNotifications._setArrowVisibility(true);
-
-      assert.isTrue(
-        MockLockScreen.notificationArrow.classList.add.calledWith(
-          'visible'
-        )
-      );
-      assert.isFalse(MockLockScreen.notificationArrow.classList.remove.called);
-    });
-
-    test('visible = false', function() {
-      lockScreenNotifications._lockScreen = MockLockScreen;
-      lockScreenNotifications._setArrowVisibility(false);
-
-      assert.isTrue(
-        MockLockScreen.notificationArrow.classList.remove.calledWith(
-          'visible'
-        )
-      );
-      assert.isFalse(MockLockScreen.notificationArrow.classList.add.called);
-    });
-
-  });
-
-  test('Test ScrollToTop', function() {
-    MockLockScreen.notificationsContainer = {
-      scrollTop: 1000
-    };
-
-    lockScreenNotifications._lockScreen = MockLockScreen;
-
-    lockScreenNotifications.scrollToTop();
-
-    assert.equal(
-      MockLockScreen.notificationsContainer.scrollTop,
-      0,
-      'Container was not scrolled to scrollTop = 0'
-    );
-  });
-
-});
diff --git a/apps/system/test/unit/lockscreen_test.js b/apps/system/test/unit/lockscreen_test.js
index fef0de1..52ea67a 100644
--- a/apps/system/test/unit/lockscreen_test.js
+++ b/apps/system/test/unit/lockscreen_test.js
@@ -1,6 +1,6 @@
 'use strict';

-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/shared/test/unit/mocks/mock_settings_listener.js');
 requireApp('system/shared/test/unit/mocks/mock_navigator_moz_settings.js');
 requireApp('system/shared/test/unit/mocks/mock_navigator_moz_telephony.js');
diff --git a/apps/system/test/unit/lockscreen_window_manager_test.js b/apps/system/test/unit/lockscreen_window_manager_test.js
index c8233d1..d5d3da6 100644
--- a/apps/system/test/unit/lockscreen_window_manager_test.js
+++ b/apps/system/test/unit/lockscreen_window_manager_test.js
@@ -209,6 +209,24 @@ suite('system/LockScreenWindowManager', function() {
         'it did\'t close the window while unlock request arrive');
     });

+    test('LockScreen request to unlock with activity detail', function() {
+      var evt = {
+            type: 'lockscreen-request-unlock',
+            detail: {
+              activity: {
+                name: 'foo',
+                data: {
+                  type: 'photos'
+                }
+              }
+            }
+          },
+          stubMozActivity = this.sinon.stub(window, 'MozActivity');
+      window.lockScreenWindowManager.handleEvent(evt);
+      assert.isTrue(stubMozActivity.called,
+        'it didn\'t construct the activity while the request denote to do it');
+    });
+
     test('Open the app when asked via lock-immediately setting', function() {
       window.lockScreenWindowManager.registerApp(appFake);
       var stubOpen = this.sinon.stub(appFake, 'open');
diff --git a/apps/system/test/unit/lockscreen_window_test.js b/apps/system/test/unit/lockscreen_window_test.js
index a07c159..35939f4 100644
--- a/apps/system/test/unit/lockscreen_window_test.js
+++ b/apps/system/test/unit/lockscreen_window_test.js
@@ -7,7 +7,7 @@ requireApp('system/shared/test/unit/mocks/mock_manifest_helper.js');
 requireApp('system/shared/test/unit/mocks/mock_settings_listener.js');
 requireApp('system/test/unit/mock_applications.js');
 requireApp('system/test/unit/mock_layout_manager.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/test/unit/mock_statusbar.js');
 requireApp('system/test/unit/mock_screen_layout.js');

@@ -35,8 +35,7 @@ suite('system/LockScreenWindow', function() {
     // Differs from the existing mock which is expected by other components.
     window.LockScreen = function() {};
     window.LockScreen.prototype.init = this.sinon.stub();
-    window.layoutManager = new LayoutManager();
-    window.layoutManager.start();
+    window.layoutManager = new LayoutManager().start();

     realL10n = window.navigator.mozL10n;
     window.navigator.mozL10n = MockL10n;
@@ -120,6 +119,6 @@ suite('system/LockScreenWindow', function() {
     var stubIsActive = this.sinon.stub(app, 'isActive');
     stubIsActive.returns(true);
     app.resize();
-    assert.equal(app.height, layoutManager.height);
+    assert.equal(app.height, layoutManager.height + 20);
   });
 });
diff --git a/apps/system/test/unit/manifest_helper_test.js b/apps/system/test/unit/manifest_helper_test.js
index ca54793..9c9080b 100644
--- a/apps/system/test/unit/manifest_helper_test.js
+++ b/apps/system/test/unit/manifest_helper_test.js
@@ -2,7 +2,7 @@
 'use strict';
 /* global ManifestHelper, MockL10n */

-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('/system/test/unit/mock_l10n.js');
 requireApp('system/shared/js/manifest_helper.js');

 suite('ManifestHelper', function() {
diff --git a/apps/system/test/unit/media_recording_test.js b/apps/system/test/unit/media_recording_test.js
index f4ec489..e40159f 100644
--- a/apps/system/test/unit/media_recording_test.js
+++ b/apps/system/test/unit/media_recording_test.js
@@ -2,7 +2,7 @@
 'use strict';

 require('/shared/test/unit/load_body_html_helper.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');

 suite('system/media recording', function() {
   var realL10n;
diff --git a/apps/system/test/unit/mobile_id_test/controller_test.js b/apps/system/test/unit/mobile_id_test/controller_test.js
index 6f780d6..d55edd8 100644
--- a/apps/system/test/unit/mobile_id_test/controller_test.js
+++ b/apps/system/test/unit/mobile_id_test/controller_test.js
@@ -5,12 +5,12 @@

 requireApp('system/mobile_id/js/ui.js');
 requireApp('system/mobile_id/js/controller.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 require('/shared/test/unit/load_body_html_helper.js');

 suite('MobileID Controller', function() {
   var realL10n;
-
+
   var mockDetails = [
     {
       primary: true,
@@ -29,7 +29,7 @@ suite('MobileID Controller', function() {
     navigator.mozL10n = MockL10n;

     loadBodyHTML('/mobile_id/index.html');
-
+
     Controller.init();
   });

@@ -42,7 +42,6 @@ suite('MobileID Controller', function() {

   test(' when "init" is launched, we listen mozL10n ready and we render',
     function() {
-    this.sinon.useFakeTimers();
     this.sinon.stub(UI, 'localize');
     this.sinon.stub(UI, 'render');
     this.sinon.spy(navigator.mozL10n, 'ready');
@@ -56,11 +55,9 @@ suite('MobileID Controller', function() {
       }
     );
     window.dispatchEvent(eventToLaunch);
-    this.sinon.clock.tick();
     assert.isTrue(navigator.mozL10n.ready.calledOnce);
     assert.isTrue(UI.render.calledOnce);
     assert.isTrue(UI.localize.calledOnce);
-    this.sinon.clock.restore();
   });

   test(' when "shown" is launched, we set the scroll params', function() {
diff --git a/apps/system/test/unit/mobile_id_test/ui_test.js b/apps/system/test/unit/mobile_id_test/ui_test.js
index 681328c..6ffd19a 100644
--- a/apps/system/test/unit/mobile_id_test/ui_test.js
+++ b/apps/system/test/unit/mobile_id_test/ui_test.js
@@ -4,7 +4,7 @@

 requireApp('system/mobile_id/js/controller.js');
 requireApp('system/mobile_id/js/ui.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 require('/shared/test/unit/load_body_html_helper.js');

 suite('MobileID UI ', function() {
diff --git a/apps/system/test/unit/mock_app_window.js b/apps/system/test/unit/mock_app_window.js
index 3306fc9..f6cf2f9 100644
--- a/apps/system/test/unit/mock_app_window.js
+++ b/apps/system/test/unit/mock_app_window.js
@@ -73,7 +73,6 @@
     isFullScreen: function() {},
     _changeState: function() {},
     _setVisible: function() {},
-    _setVisibleForScreenReader: function() {},
     modifyURLatBackground: function() {},
     getFrameForScreenshot: function() { return this.browser.element; },
     getTopMostWindow: function() { return this; },
diff --git a/apps/system/test/unit/mock_attention_screen.js b/apps/system/test/unit/mock_attention_screen.js
index 6cb6d50..fd6ae8d 100644
--- a/apps/system/test/unit/mock_attention_screen.js
+++ b/apps/system/test/unit/mock_attention_screen.js
@@ -1,6 +1,5 @@
 var MockAttentionScreen = {
   attentionScreen: document.createElement('div'),
-  statusHeight: 0,
   open: function() {},
   show: function() {},
   mVisible: false,
diff --git a/apps/system/test/unit/mock_bluetooth.js b/apps/system/test/unit/mock_bluetooth.js
index 86af2ad..a2e3655 100644
--- a/apps/system/test/unit/mock_bluetooth.js
+++ b/apps/system/test/unit/mock_bluetooth.js
@@ -3,18 +3,8 @@
 /* global MockDOMRequest */

 var MockBluetooth = {
-  get Profiles() {
-    return {
-      HFP: 'hfp',   // Hands-Free Profile
-      OPP: 'opp',   // Object Push Profile
-      A2DP: 'a2dp', // A2DP status
-      SCO: 'sco'    // Synchronous Connection-Oriented
-    };
-  },
   defaultAdapter: null,
-  connected: false,
   enabled: true,
-  mExpectedProfile: null,
   init: function mbt_init() {
     var mockAdapater = {
       address: '01:23:45:67:89:AB',
@@ -55,10 +45,6 @@ var MockBluetooth = {

   getDefaultAdapter: function mbt_getDefaultAdapter() {
     return new MockDOMRequest();
-  },
-
-  isProfileConnected: function mbt_isProfileConnected(profile) {
-    return this.mExpectedProfile === profile;
   }
 };

diff --git a/apps/system/test/unit/mock_homescreen_launcher.js b/apps/system/test/unit/mock_homescreen_launcher.js
index cfa4548..7784349 100644
--- a/apps/system/test/unit/mock_homescreen_launcher.js
+++ b/apps/system/test/unit/mock_homescreen_launcher.js
@@ -1,7 +1,7 @@
 'use strict';

 (function(exports) {
-  var mHomescreenInstance;
+  var mHomescreenInstance = undefined;
   var mOrigin;
   var mReady;

@@ -10,7 +10,9 @@
   };

   MockHomescreenLauncher.prototype = {
-    start: function mhl_start() {},
+    start: function mhl_start() {
+      return this;
+    },

     getHomescreen: function mhl_getHomescreen() {
       return mHomescreenInstance;
diff --git a/apps/system/test/unit/mock_icc_manager.js b/apps/system/test/unit/mock_icc_manager.js
new file mode 100644
index 0000000..f3a7b2f
--- /dev/null
+++ b/apps/system/test/unit/mock_icc_manager.js
@@ -0,0 +1,7 @@
+'use strict';
+
+var MockIccManager = {
+  iccIds: [],
+  getIccById: function() {},
+  addEventListener: function() {}
+};
diff --git a/apps/system/test/unit/mock_l10n.js b/apps/system/test/unit/mock_l10n.js
new file mode 100644
index 0000000..3e56936
--- /dev/null
+++ b/apps/system/test/unit/mock_l10n.js
@@ -0,0 +1,59 @@
+'use strict';
+/* exported MockL10n */
+
+var MockL10n = {
+
+  language: {
+    code: 'en-US'
+  },
+
+  get: function get(key, params) {
+    if (params) {
+      key += JSON.stringify(params);
+    }
+    return key;
+  },
+
+  localize: function localize(element, key, params) {
+    if (key) {
+      element.setAttribute('data-l10n-id', key);
+    } else {
+      element.removeAttribute('data-l10n-id');
+    }
+
+    if (params) {
+      if (key) {
+        key += JSON.stringify(params);
+      }
+      element.setAttribute('data-l10n-args', params);
+    } else {
+      element.removeAttribute('data-l10n-args');
+    }
+
+    element.textContent = key;
+  },
+
+  DateTimeFormat: function() {
+    var localeFormat = function mockLocaleFormat(time, strFormat) {
+      return '' + time;
+    };
+    // support navigator.mozL10n.DateTimeFormat() without new the object
+    return {
+      localeFormat: localeFormat
+    };
+  },
+
+  ready: function(callback) {
+    callback();
+  },
+
+  once: function() {
+    // No-op because unit tests call init() methods manually, and we actually
+    // don't want to call them via mozL10n.once(init).
+    // See bug https://bugzil.la/1022558
+  },
+
+  translate: function() {
+
+  }
+};
diff --git a/apps/system/test/unit/mock_lock_screen.js b/apps/system/test/unit/mock_lock_screen.js
index 5a72cd3..9b9cc1e 100644
--- a/apps/system/test/unit/mock_lock_screen.js
+++ b/apps/system/test/unit/mock_lock_screen.js
@@ -9,16 +9,8 @@ var MockLockScreen = {

   passcode: '0000',

-  maskedBackground: undefined,
-
-  notificationsContainer: undefined,
-  notificationArrow: undefined,
-
   init: function mls_init() {
     this.locked = false;
-    this.maskedBackground = undefined;
-    this.notificationsContainer = undefined;
-    this.notificationArrow = undefined;
   },

   lock: function mls_lock() {
diff --git a/apps/system/test/unit/mock_nfc_handover_manager.js b/apps/system/test/unit/mock_nfc_handover_manager.js
index 41a1491..9117262 100644
--- a/apps/system/test/unit/mock_nfc_handover_manager.js
+++ b/apps/system/test/unit/mock_nfc_handover_manager.js
@@ -2,9 +2,11 @@
 (function(exports) {

   var MockNfcHandoverManager = {
-    tryHandover: function(ndefMsg, session) { return false; },
-    transferComplete: function(details) {},
-    isHandoverInProgress: function() { return undefined; }
+    handleSimplifiedPairingRecord: function(ndef) {},
+    handleHandoverSelect: function(ndef) {},
+    handleHandoverRequest: function(ndef, session) {},
+    isHandoverInProgress: function() { return undefined; },
+    transferComplete: function(details) {}
   };

   exports.MockNfcHandoverManager = MockNfcHandoverManager;
diff --git a/apps/system/test/unit/mock_system.js b/apps/system/test/unit/mock_system.js
new file mode 100644
index 0000000..115dc6d
--- /dev/null
+++ b/apps/system/test/unit/mock_system.js
@@ -0,0 +1,14 @@
+/* exported MockSystem */
+'use strict';
+var MockSystem = {
+  mPublishEvents: {},
+  isBusyLoading: function() {
+    return false;
+  },
+  slowTransition: false,
+  publish: function(eventName, detail) {
+    var evt = new CustomEvent(eventName, { detail: detail });
+    window.dispatchEvent(evt);
+  },
+  locked: false
+};
diff --git a/apps/system/test/unit/mock_system_dialog.js b/apps/system/test/unit/mock_system_dialog.js
index 7fa3443..d3e608f 100644
--- a/apps/system/test/unit/mock_system_dialog.js
+++ b/apps/system/test/unit/mock_system_dialog.js
@@ -10,7 +10,6 @@
     var dialogFake = document.createElement('div');
     dialogFake.setAttribute('id', 'fake-dialog');
     this.element = dialogFake;
-    this.containerElement = document.createElement('div');
   };

   MockSystemDialog.prototype.show = function msd_show(reason) {
diff --git a/apps/system/test/unit/mock_task_manager.js b/apps/system/test/unit/mock_task_manager.js
index 595dfce..e46013b 100644
--- a/apps/system/test/unit/mock_task_manager.js
+++ b/apps/system/test/unit/mock_task_manager.js
@@ -3,12 +3,11 @@
 'use strict';

 function MockTaskManager() {
-  this.is_shown = false;
 }

 MockTaskManager.prototype = {
   start: function() {},
-  show: function() { this.is_shown = true; },
-  hide: function() { this.is_shown = false; },
-  isShown: function() { return this.is_shown; }
+  show: function() {},
+  hide: function() {},
+  isShown: function() {}
 };
diff --git a/apps/system/test/unit/mock_version_helper.js b/apps/system/test/unit/mock_version_helper.js
deleted file mode 100644
index ad2954e..0000000
--- a/apps/system/test/unit/mock_version_helper.js
+++ /dev/null
@@ -1,28 +0,0 @@
-'use strict';
-(function (exports) {
-  var MockVersionHelper = function(isUp) {
-    let resolveFunc = null;
-    let rejectFunc = null;
-    return {
-      getVersionInfo: function() {
-        return {
-          then: function (resolve, reject) {
-            resolveFunc = resolve;
-            rejectFunc = reject;
-          }
-        };
-      },
-      resolve: function (arg) {
-                 if (resolveFunc) {
-                   resolveFunc(arg);
-                 }
-               },
-      reject: function (arg) {
-                if (rejectFunc) {
-                  rejectFunc(arg);
-                }
-              }
-    };
-  };
-  exports.MockVersionHelper = MockVersionHelper;
-})(window);
\ No newline at end of file
diff --git a/apps/system/test/unit/modal_dialog_test.js b/apps/system/test/unit/modal_dialog_test.js
index a8f67de..bf9326d 100644
--- a/apps/system/test/unit/modal_dialog_test.js
+++ b/apps/system/test/unit/modal_dialog_test.js
@@ -2,7 +2,7 @@

 requireApp('system/test/unit/mock_app_window_manager.js');
 requireApp('system/test/unit/mock_statusbar.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/js/modal_dialog.js');

 var mocksForDialog = new MocksHelper([
diff --git a/apps/system/test/unit/net_error_test.js b/apps/system/test/unit/net_error_test.js
index 39e47bf..27fb27a 100644
--- a/apps/system/test/unit/net_error_test.js
+++ b/apps/system/test/unit/net_error_test.js
@@ -5,7 +5,7 @@
 require('/shared/test/unit/mocks/mock_lazy_loader.js');
 require('/shared/test/unit/load_body_html_helper.js');
 require('/shared/test/unit/mocks/mock_navigator_moz_apps.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/test/unit/mock_activity.js');
 window.requireElements('system/elements/net_error_action_menu.html');
 window.requireElements('system/elements/net_error_confirm_dialog.html');
diff --git a/apps/system/test/unit/newsletter_manager_test.js b/apps/system/test/unit/newsletter_manager_test.js
index bab12b7..fb5c6c0 100644
--- a/apps/system/test/unit/newsletter_manager_test.js
+++ b/apps/system/test/unit/newsletter_manager_test.js
@@ -8,7 +8,7 @@ require('/shared/test/unit/mocks/mock_basket_client.js');
 require('/shared/test/unit/mocks/mock_lazy_loader.js');
 require('/shared/test/unit/mocks/mock_navigator_datastore.js');

-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/test/unit/mock_ftu_launcher.js');

 mocha.globals([
@@ -183,3 +183,4 @@ suite('Newsletter Manager >', function() {
   });

 });
+
diff --git a/apps/system/test/unit/nfc_handover_manager_test.js b/apps/system/test/unit/nfc_handover_manager_test.js
index 8b494f9..b0c1b27 100644
--- a/apps/system/test/unit/nfc_handover_manager_test.js
+++ b/apps/system/test/unit/nfc_handover_manager_test.js
@@ -2,16 +2,14 @@

 /* globals MocksHelper, MockBluetooth, MockNavigatorSettings,
            NDEF, NfcConnectSystemDialog, MockBluetoothTransfer,
-           MockL10n, NfcManager, NfcHandoverManager, NDEFUtils,
+           NfcManager, NfcHandoverManager, NDEFUtils,
            MockMozNfc, NfcUtils, MockNavigatormozSetMessageHandler */

 require('/shared/test/unit/mocks/mock_navigator_moz_set_message_handler.js');
 require('/shared/test/unit/mocks/mock_settings_listener.js');
 require('/shared/test/unit/mocks/mock_moz_ndefrecord.js');
 require('/shared/test/unit/mocks/mock_moz_nfc.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
 require('/shared/js/nfc_utils.js');
-require('/shared/test/unit/mocks/mock_notification_helper.js');
 requireApp('system/test/unit/mock_settingslistener_installer.js');
 requireApp('system/test/unit/mock_system_nfc_connect_dialog.js');
 requireApp('system/shared/test/unit/mocks/mock_event_target.js');
@@ -25,8 +23,7 @@ var mocksForNfcUtils = new MocksHelper([
   'MozActivity',
   'BluetoothTransfer',
   'MozNDEFRecord',
-  'NfcConnectSystemDialog',
-  'NotificationHelper'
+  'NfcConnectSystemDialog'
 ]).init();

 suite('Nfc Handover Manager Functions', function() {
@@ -35,7 +32,7 @@ suite('Nfc Handover Manager Functions', function() {
   var realMozSettings;
   var realMozBluetooth;
   var realMozSetMessageHandler;
-  var realL10n;
+
   var spyDefaultAdapter;

   mocksForNfcUtils.attachTestHelpers();
@@ -45,13 +42,11 @@ suite('Nfc Handover Manager Functions', function() {
     realMozSettings = navigator.mozSettings;
     realMozBluetooth = navigator.mozBluetooth;
     realMozSetMessageHandler = navigator.mozSetMessageHandler;
-    realL10n = navigator.mozL10n;

     navigator.mozNfc = MockMozNfc;
     navigator.mozSettings = MockNavigatorSettings;
     navigator.mozBluetooth = MockBluetooth;
     navigator.mozSetMessageHandler = MockNavigatormozSetMessageHandler;
-    navigator.mozL10n = MockL10n;

     MockNavigatormozSetMessageHandler.mSetup();

@@ -69,7 +64,6 @@ suite('Nfc Handover Manager Functions', function() {
     navigator.mozSettings = realMozSettings;
     navigator.mozBluetooth = realMozBluetooth;
     navigator.mozSetMessageHandler = realMozSetMessageHandler;
-    navigator.mozL10n = realL10n;
   });

   setup(function() {
@@ -162,9 +156,9 @@ suite('Nfc Handover Manager Functions', function() {
       spySendNDEF.restore();
     });

-    test('_handleHandoverRequest(): sends Hs message to peer', function() {
+    test('handleHandoverRequest(): sends Hs message to peer', function() {
       var handoverRequest = NDEFUtils.encodeHandoverRequest(mac, cps);
-      NfcHandoverManager._handleHandoverRequest(handoverRequest);
+      NfcHandoverManager.handleHandoverRequest(handoverRequest);

       assert.isTrue(spySendNDEF.calledOnce);

@@ -179,9 +173,9 @@ suite('Nfc Handover Manager Functions', function() {
       assert.isTrue(NfcHandoverManager.incomingFileTransferInProgress);
     });

-    test('_handleHandoverSelect() attempts to pair BT devices', function() {
+    test('handleHandoverSelect() attempts to pair BT devices', function() {
       var handoverSelect = NDEFUtils.encodeHandoverSelect(mac, cps);
-      NfcHandoverManager._handleHandoverSelect(handoverSelect);
+      NfcHandoverManager.handleHandoverSelect(handoverSelect);

       assert.isTrue(spyPairing.calledOnce);
       assert.equal(mac, spyPairing.firstCall.args[0]);
@@ -263,27 +257,6 @@ suite('Nfc Handover Manager Functions', function() {
       assert.equal(spyNotify.firstCall.args[0], 1);
     });

-    test('Aborts when getNFCPeer() fails during file send.', function() {
-      fileRequest.sessionToken = fileRequest.session;
-      var stubGetPeer = this.sinon.stub(MockMozNfc, 'getNFCPeer').throws();
-      var spyNotify = this.sinon.spy(MockMozNfc, 'notifySendFileStatus');
-      MockNavigatormozSetMessageHandler.mTrigger(
-        'nfc-manager-send-file', fileRequest);
-      assert.isTrue(stubGetPeer.calledOnce);
-      assert.isTrue(spyNotify.calledOnce);
-      assert.equal(spyNotify.firstCall.args[0], 1);
-    });
-
-    test('Aborts when getNFCPeer() fails during file receive.', function() {
-      var cps = NDEF.CPS_ACTIVE;
-      var mac = '01:23:45:67:89:AB';
-      var handoverRequest = NDEFUtils.encodeHandoverRequest(mac, cps);
-      var stubGetPeer = this.sinon.stub(MockMozNfc, 'getNFCPeer').throws();
-      NfcHandoverManager._handleHandoverRequest(handoverRequest);
-      assert.isTrue(stubGetPeer.calledOnce);
-      assert.isTrue(spySendNDEF.notCalled);
-    });
-
     test('Handover select results in file being transmitted over Bluetooth',
       function() {

@@ -295,7 +268,7 @@ suite('Nfc Handover Manager Functions', function() {

       var select = NDEFUtils.encodeHandoverSelect(
         '01:23:45:67:89:AB', NDEF.CPS_ACTIVE);
-      NfcHandoverManager._handleHandoverSelect(select);
+      NfcHandoverManager.handleHandoverSelect(select);

       assert.isTrue(spySendFile.calledOnce);
       assert.equal(fileRequest.onsuccess.callCount, 0);
@@ -352,7 +325,6 @@ suite('Nfc Handover Manager Functions', function() {
     var mockFileRequest;

     setup(function() {
-      this.sinon.useFakeTimers();
       realBluetoothTransfer = window.BluetoothTransfer;
       window.BluetoothTransfer = window.MockBluetoothTransfer;

@@ -397,7 +369,7 @@ suite('Nfc Handover Manager Functions', function() {
     var finalizeFileTransfer = function() {
       var hs = NDEFUtils.encodeHandoverSelect('11:22:33:44:55:66',
         NDEF.CPS_ACTIVE);
-      NfcHandoverManager._handleHandoverSelect(hs);
+      NfcHandoverManager.handleHandoverSelect(hs);
       spySendFileViaHandover.firstCall.returnValue.fireSuccess();
     };

@@ -457,140 +429,5 @@ suite('Nfc Handover Manager Functions', function() {
       assert.isFalse(spyBluetoothEnabledObserver.getCall(1)
                                                 .args[0].settingValue);
     });
-
-    test('Timeout outgoing file transfer', function() {
-      MockBluetooth.enabled = true;
-      MockBluetoothTransfer.sendFileQueueEmpty = true;
-      var spyCancel = this.sinon.spy(NfcHandoverManager,
-                                     '_cancelSendFileTransfer');
-
-      initiateFileTransfer();
-      assert.isTrue(MockBluetooth.enabled);
-      this.sinon.clock.tick(NfcHandoverManager.responseTimeoutMillis);
-      assert.isTrue(spyCancel.calledOnce);
-    });
-
-    test('Timeout incoming file transfer', function() {
-      var cps = NDEF.CPS_ACTIVE;
-      var mac = '01:23:45:67:89:AB';
-      var session = 'session-1';
-      var handoverRequest = NDEFUtils.encodeHandoverRequest(mac, cps);
-      MockBluetooth.enabled = true;
-      MockBluetoothTransfer.sendFileQueueEmpty = true;
-      var spyCancel = sinon.spy(NfcHandoverManager,
-                                '_cancelIncomingFileTransfer');
-
-      NfcHandoverManager._handleHandoverRequest(handoverRequest, session);
-      this.sinon.clock.tick(NfcHandoverManager.responseTimeoutMillis);
-      assert.isTrue(spyCancel.calledOnce);
-    });
-  });
-
-  suite('tryHandover', function() {
-    var session = 'sessionToken';
-
-    // simplified pairing record
-    var spr;
-    // handover select record
-    var hsr;
-    // handover request record
-    var hrr;
-
-    var uriRecord;
-    var mimeRecord;
-
-    var stubHandleSPR;
-    var stubHandleHSR;
-    var stubHandleHRR;
-
-    setup(function() {
-      spr = {
-        tnf: NDEF.TNF_MIME_MEDIA,
-        type: NDEF.MIME_BLUETOOTH_OOB,
-        id: new Uint8Array([1]),
-        payload: new Uint8Array([1])
-      };
-
-      hsr = {
-        tnf: NDEF.TNF_WELL_KNOWN,
-        type: NDEF.RTD_HANDOVER_SELECT,
-        id: new Uint8Array([2]),
-        payload: new Uint8Array([2])
-      };
-
-      hrr = {
-        tnf: NDEF.TNF_WELL_KNOWN,
-        type: NDEF.RTD_HANDOVER_REQUEST,
-        id: new Uint8Array([3]),
-        payload: new Uint8Array([3])
-      };
-
-      uriRecord = {
-        tnf: NDEF.TNF_WELL_KNOWN,
-        type: NDEF.RTD_URI,
-        id: new Uint8Array([4]),
-        payload: new Uint8Array([4])
-      };
-
-      mimeRecord = {
-        tnf: NDEF.TNF_MIME_MEDIA,
-        type: 'text/plain',
-        id: new Uint8Array([5]),
-        payload: new Uint8Array([5])
-      };
-
-      stubHandleSPR = this.sinon.stub(NfcHandoverManager,
-                                      '_handleSimplifiedPairingRecord');
-      stubHandleHSR = this.sinon.stub(NfcHandoverManager,
-                                      '_handleHandoverSelect');
-      stubHandleHRR = this.sinon.stub(NfcHandoverManager,
-                                      '_handleHandoverRequest');
-    });
-
-    teardown(function() {
-      stubHandleSPR.restore();
-      stubHandleHSR.restore();
-      stubHandleHRR.restore();
-    });
-
-    test('simplified pairing record', function() {
-      var result = NfcHandoverManager.tryHandover([spr], session);
-      assert.isTrue(result, 'result');
-      assert.isTrue(stubHandleSPR.withArgs([spr]).calledOnce, 'method');
-    });
-
-    test('handover select record', function() {
-      var result = NfcHandoverManager.tryHandover([hsr], session);
-      assert.isTrue(result, 'result');
-      assert.isTrue(stubHandleHSR.withArgs([hsr]).calledOnce, 'method');
-    });
-
-    test('handover request record', function() {
-      var result = NfcHandoverManager.tryHandover([hrr], session);
-      assert.isTrue(result, 'result');
-      assert.isTrue(stubHandleHRR.withArgs([hrr], session).calledOnce,
-                                           'method');
-    });
-
-    test('regular records', function() {
-      var result = NfcHandoverManager.tryHandover([uriRecord], session);
-      assert.isFalse(result, 'regular URI record');
-
-      result = NfcHandoverManager.tryHandover([mimeRecord], session);
-      assert.isFalse(result, 'regular MIME record');
-    });
-
-    test('multiple handover records, only first handled', function() {
-      var result = NfcHandoverManager.tryHandover([spr, hsr], session);
-      assert.isTrue(result, 'result');
-      assert.isTrue(stubHandleSPR.withArgs([spr, hsr]).calledOnce, 'handled');
-      assert.isFalse(stubHandleHSR.called, 'not handled');
-    });
-
-    test('multiple records, handover record second, not handled', function() {
-      var result = NfcHandoverManager.tryHandover([uriRecord, hsr], session);
-      assert.isFalse(result, 'result');
-      assert.isFalse(stubHandleHSR.called, 'not handled');
-    });
   });
 });
diff --git a/apps/system/test/unit/nfc_manager_test.js b/apps/system/test/unit/nfc_manager_test.js
index 3c89d01..f8ec3ca 100644
--- a/apps/system/test/unit/nfc_manager_test.js
+++ b/apps/system/test/unit/nfc_manager_test.js
@@ -14,7 +14,7 @@ requireApp('system/test/unit/mock_nfc.js');
 requireApp('system/test/unit/mock_nfc_handover_manager.js');
 requireApp('system/test/unit/mock_screen_manager.js');
 requireApp('system/test/unit/mock_bluetooth.js');
-require('/shared/test/unit/mocks/mock_system.js');
+requireApp('system/test/unit/mock_system.js');

 var mocksForNfcManager = new MocksHelper([
   'MozActivity',
@@ -197,7 +197,6 @@ suite('Nfc Manager Functions', function() {
     var execInvalidMessageTest = function(msg) {
       var stubVibrate = this.sinon.stub(window.navigator, 'vibrate');
       var stubDispatchEvent = this.sinon.stub(window, 'dispatchEvent');
-      var stubTryHandover = this.sinon.stub(NfcHandoverManager, 'tryHandover');
       var stubFireTag = this.sinon.stub(NfcManager, 'fireTagDiscovered');
       var validMsg = {techList: [], records: []};

@@ -210,14 +209,11 @@ suite('Nfc Manager Functions', function() {
       assert.equal(stubDispatchEvent.getCall(0).args[0].type,
                    'nfc-tech-discovered',
                    'when msg ' + msg);
-      assert.isTrue(stubTryHandover.withArgs(validMsg.records, undefined)
-                                   .calledOnce, 'handover, when msg: ' + msg);
       assert.isTrue(stubFireTag.withArgs(validMsg, 'Unknown').calledOnce,
                     'fireTagDiscovered, when msg: ' + msg);

       stubVibrate.restore();
       stubDispatchEvent.restore();
-      stubTryHandover.restore();
       stubFireTag.restore();
     };

@@ -249,6 +245,55 @@ suite('Nfc Manager Functions', function() {
       execInvalidMessageTest.call(this, {techList: []});
     });

+    test('handover messages handling', function() {
+      // simplified pairing record
+      var spr = {
+        tnf: NDEF.TNF_MIME_MEDIA,
+        type: NDEF.MIME_BLUETOOTH_OOB,
+        id: new Uint8Array([1]),
+        payload: new Uint8Array([1])
+      };
+
+      // handover select record
+      var hsr = {
+        tnf: NDEF.TNF_WELL_KNOWN,
+        type: NDEF.RTD_HANDOVER_SELECT,
+        id: new Uint8Array([2]),
+        payload: new Uint8Array([2])
+      };
+
+      // handover request record
+      var hrr = {
+        tnf: NDEF.TNF_WELL_KNOWN,
+        type: NDEF.RTD_HANDOVER_REQUEST,
+        id: new Uint8Array([3]),
+        payload: new Uint8Array([3])
+      };
+
+      sampleMsg.records = [spr, hsr, hrr];
+
+      var stubHandleSPR = this.sinon.stub(NfcHandoverManager,
+                                          'handleSimplifiedPairingRecord');
+      var stubHandleHSR = this.sinon.stub(NfcHandoverManager,
+                                          'handleHandoverSelect');
+      var stubHandleHRR = this.sinon.stub(NfcHandoverManager,
+                                          'handleHandoverRequest');
+
+      NfcManager.handleTechnologyDiscovered(sampleMsg);
+      assert.isTrue(stubHandleSPR.withArgs(sampleMsg.records).calledOnce,
+                    'Simplified Pairing Record');
+
+      sampleMsg.records.shift();
+      NfcManager.handleTechnologyDiscovered(sampleMsg);
+      assert.isTrue(stubHandleHSR.withArgs(sampleMsg.records).calledOnce,
+                    'Handover Select Record');
+
+      sampleMsg.records.shift();
+      NfcManager.handleTechnologyDiscovered(sampleMsg);
+      assert.isTrue(stubHandleHRR.withArgs(sampleMsg.records).calledOnce,
+                    'Handover Request Record');
+    });
+
     // triggering of P2P UI
     test('message tech [P2P], no records', function() {
       sampleMsg.techList.push('P2P');
@@ -573,6 +618,15 @@ suite('Nfc Manager Functions', function() {
       assert.equal(activityOptions.data.url, 'http://mozilla.com');
     });

+    test('TNF well known rtd smart poster', function() {
+      // smart poster handling is application specific, don't need payload
+      var dummyNdefMsg = [new MozNDEFRecord(NDEF.TNF_WELL_KNOWN,
+                                            NDEF.RTD_SMART_POSTER,
+                                            new Uint8Array(),
+                                            new Uint8Array())];
+      execCommonTest(dummyNdefMsg, 'smartposter');
+    });
+
     test('TNF mime media-type text/plain', function() {
       var type = new Uint8Array([0x74, 0x65, 0x78, 0x74,
                                  0x2F, 0x70, 0x6C, 0x61,
@@ -634,195 +688,6 @@ suite('Nfc Manager Functions', function() {
       assert.isUndefined(activityUnchngd.data.type);
       assert.isUndefined(activityUnchngd.data.records);
     });
-
-    suite('Smart posters', function() {
-      /**
-       * Constructs a NDEF message with one record. This record
-       * is a smart poster, so it contains multiple subrecords
-       * in the payload, encoded as bytes.
-       *
-       * Accepts 3*N arguments, where:
-       *  3*(N + 0) argument - TNF of the record
-       *  3*(N + 1) argument - type given as string
-       *  3*(N + 2) argument - payload, given as Uint8Array
-       */
-      var makePoster = function() {
-        var records = [];
-        for (var arg = 0; arg < arguments.length; arg += 3) {
-          records.push({
-            tnf: arguments[arg],
-            type: NfcUtils.fromUTF8(arguments[arg + 1]),
-            payload: arguments[arg + 2],
-            id: new Uint8Array()
-          });
-        }
-
-        var payload = NfcUtils.encodeNDEF(records);
-        return [new MozNDEFRecord(NDEF.TNF_WELL_KNOWN,
-                                  NDEF.RTD_SMART_POSTER,
-                                  new Uint8Array(),
-                                  new Uint8Array(payload))];
-      };
-
-      var recordURI,
-          recordTextEnglish,
-          recordTextPolish,
-          recordAction,
-          recordIcon;
-
-      setup(function() {
-        // URI "http://www.youtube.com" with abbreviation
-        // for "http://www."
-        recordURI = [
-          0x01,  // Payload: abbreviation
-          0x79, 0x6F, 0x75, 0x74, // 'yout'
-          0x75, 0x62, 0x65, 0x2E, // 'ube.'
-          0x63, 0x6F, 0x6D        // 'com'
-        ];
-
-        // Text record with contents: "Best page ever!  q#@"
-        // and language code: "en"
-        recordTextEnglish = [
-          0x02,  // Status byte: UTF-8, two byte lang code
-          0x65, 0x6E, // ISO language code: 'en'
-          0x42, 0x65, 0x73, 0x74, // 'Best'
-          0x20, 0x70, 0x61, 0x67, // ' pag'
-          0x65, 0x20, 0x65, 0x76, // 'e ev'
-          0x65, 0x72, 0x21, 0x20, // 'er! '
-          0x20, 0x71, 0x23, 0x40  // ' q#@'
-        ];
-
-        // Text record with contents: "ąćńó"
-        // and language code: "pl"
-        recordTextPolish = [
-         0x02,  // Status byte: UTF-8, two byte lang code
-         0x70, 0x6C, // ISO language code: 'pl'
-         0xC4, 0x85, 0xC4, 0x87, // 'ąć'
-         0xC5, 0x84, 0xC3, 0xB3  // 'ńó'
-        ];
-
-        // Action record with action = 0
-        recordAction = [0x00];
-
-        // Icon record with simple 4x4 PNG image.
-        recordIcon = [
-          0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,
-          0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
-          0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04,
-          0x08, 0x02, 0x00, 0x00, 0x00, 0x26, 0x93, 0x09,
-          0x29, 0x00, 0x00, 0x00, 0x1b, 0x49, 0x44, 0x41,
-          0x54, 0x08, 0xd7, 0x63, 0xf8, 0xff, 0xff, 0x3f,
-          0x03, 0x0c, 0x30, 0xc2, 0x39, 0x8c, 0x8c, 0x8c,
-          0x4c, 0x10, 0x0a, 0x2a, 0x85, 0xac, 0x0c, 0x00,
-          0x26, 0x0b, 0x09, 0x01, 0xc3, 0xd1, 0x9a, 0x7b,
-          0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44,
-          0xae, 0x42, 0x60, 0x82
-        ];
-      });
-
-      test('Decodes simple poster', function() {
-        var poster = makePoster(NDEF.TNF_WELL_KNOWN, 'U', recordURI);
-        var activityOptions = execCommonTest(poster, 'url');
-        assert.equal(activityOptions.data.url, 'http://www.youtube.com');
-      });
-
-      test('Decodes extra records', function() {
-        var poster = makePoster(NDEF.TNF_WELL_KNOWN, 'U', recordURI,
-                                NDEF.TNF_WELL_KNOWN, 'T', recordTextEnglish,
-                                NDEF.TNF_WELL_KNOWN, 'T', recordTextPolish,
-                                NDEF.TNF_WELL_KNOWN, 'act', recordAction,
-                                NDEF.TNF_MIME_MEDIA, 'image/png', recordIcon);
-
-        var activityOptions = execCommonTest(poster, 'url');
-        assert.equal(activityOptions.data.url, 'http://www.youtube.com');
-        assert.equal(activityOptions.data.text.en, 'Best page ever!  q#@');
-        assert.equal(activityOptions.data.text.pl, 'ąćńó');
-        assert.equal(activityOptions.data.icons.length, 1);
-        assert.equal(activityOptions.data.icons[0].type, 'image/png');
-        assert.isTrue(NfcUtils.equalArrays(activityOptions.data.icons[0].bytes,
-                                           recordIcon));
-      });
-
-      test('Does not handle poster with multiple URIs', function() {
-        var poster = makePoster(NDEF.TNF_WELL_KNOWN, 'U', recordURI,
-                                NDEF.TNF_WELL_KNOWN, 'U', recordURI);
-
-        var activityOptions = NfcManager.handleNdefMessage(poster);
-        assert.deepEqual(activityOptions.data, {});
-      });
-
-      test('Does not handle poster with no URI', function() {
-        var poster = makePoster(NDEF.TNF_WELL_KNOWN, 'T', recordTextEnglish,
-                                NDEF.TNF_WELL_KNOWN, 'act', recordAction);
-
-        var activityOptions = NfcManager.handleNdefMessage(poster);
-        assert.deepEqual(activityOptions.data, {});
-      });
-
-      test('Does not handle poster with multiple title ' +
-        'records in the same language', function() {
-
-        var poster = makePoster(NDEF.TNF_WELL_KNOWN, 'U', recordURI,
-                                NDEF.TNF_WELL_KNOWN, 'T', recordTextEnglish,
-                                NDEF.TNF_WELL_KNOWN, 'T', recordTextEnglish);
-
-        var activityOptions = NfcManager.handleNdefMessage(poster);
-        assert.deepEqual(activityOptions.data, {});
-      });
-
-      test('Handles poster with not supported recrods',
-        function() {
-
-        var poster = makePoster(NDEF.TNF_WELL_KNOWN, 'U', recordURI,
-                                NDEF.TNF_WELL_KNOWN, 'T', recordTextEnglish,
-                                NDEF.TNF_WELL_KNOWN, 'X', [0xAB, 0xCD, 0xEF]);
-
-        var activityOptions = execCommonTest(poster, 'url');
-        assert.equal(activityOptions.data.url, 'http://www.youtube.com');
-        assert.equal(activityOptions.data.text.en, 'Best page ever!  q#@');
-
-        // Unsupported 'X' record is last, so look at last 7 bytes
-        // from payload: 1 byte - header (TNF+flags),
-        //               1 byte - type length,
-        //               1 byte - payload length
-        //               1 byte - name
-        //               3 bytes - payload
-        var records = Array.apply([], activityOptions.data.records[0].payload);
-        var recordX = records.slice(records.length - 7);
-        assert.deepEqual(recordX, [0x51, 0x01, 0x03, 0x58, 0xAB, 0xCD, 0xEF]);
-      });
-
-      test('When smart poster is first of multiple toplevel records, ' +
-        'it takes precedence', function() {
-
-        var poster = makePoster(NDEF.TNF_WELL_KNOWN, 'U', recordURI);
-        poster.push(new MozNDEFRecord(NDEF.TNF_WELL_KNOWN,
-                                      NDEF.RTD_URI,
-                                      new Uint8Array(),
-                                      [0x01, 0x77, 0x69, 0x6B, 0x69, // 'wiki'
-                                       0x70, 0x65, 0x64, 0x69, 0x61, // 'pedia'
-                                       0x2E, 0x6F, 0x72, 0x67]));    // '.com'
-
-        var activityOptions = execCommonTest(poster, 'url');
-        assert.equal(activityOptions.data.url, 'http://www.youtube.com');
-      });
-
-      test('When smart poster is one of multiple toplevel records, ' +
-        'it takes precedence over other URI records', function() {
-
-        var poster = makePoster(NDEF.TNF_WELL_KNOWN, 'U', recordURI);
-        poster.unshift(new MozNDEFRecord(NDEF.TNF_WELL_KNOWN,
-                                      NDEF.RTD_URI,
-                                      new Uint8Array(),
-                                      new Uint8Array(
-                                      [0x01, 0x77, 0x69, 0x6B, 0x69, // 'wiki'
-                                       0x70, 0x65, 0x64, 0x69, 0x61, // 'pedia'
-                                       0x2E, 0x6F, 0x72, 0x67])));   // '.com'
-
-        var activityOptions = execCommonTest(poster, 'url');
-        assert.equal(activityOptions.data.url, 'http://www.youtube.com');
-      });
-    });
   });

   suite('Activity Routing', function() {
diff --git a/apps/system/test/unit/notifications_test.js b/apps/system/test/unit/notifications_test.js
index a594614..6fb7639 100644
--- a/apps/system/test/unit/notifications_test.js
+++ b/apps/system/test/unit/notifications_test.js
@@ -17,7 +17,7 @@ require('/shared/test/unit/mocks/mock_gesture_detector.js');
 require('/shared/test/unit/mocks/mock_navigator_moz_settings.js');
 require('/shared/test/unit/mocks/mock_settings_url.js');
 require('/shared/test/unit/mocks/mock_settings_listener.js');
-require('/shared/test/unit/mocks/mock_system.js');
+requireApp('system/test/unit/mock_system.js');

 var mocksForNotificationScreen = new MocksHelper([
   'StatusBar',
diff --git a/apps/system/test/unit/operator_variant_helper_test.js b/apps/system/test/unit/operator_variant_helper_test.js
index ac0d7cf..021c92f 100644
--- a/apps/system/test/unit/operator_variant_helper_test.js
+++ b/apps/system/test/unit/operator_variant_helper_test.js
@@ -11,7 +11,6 @@ suite('operator variant helper', function() {
   const FAKE_ICC_CARD_INDEX = '0';
   const EXPECTED_MCC = '123';
   const EXPECTED_MNC = '45';
-  const EXPECTED_ICCIDS = [FAKE_ICC_ID, null];
   const EXPECTED_ICC_INFO = { mcc: EXPECTED_MCC, mnc: EXPECTED_MNC };
   const NULL_ICC_INFO = { mcc: '', mnc: '' };
   const PERSIST_KEY_PREFIX = 'operatorvariant';
@@ -21,8 +20,6 @@ suite('operator variant helper', function() {
                       PERSIST_KEY_SUFIX;
   const MCC_SETTINGS_KEY = 'operatorvariant.mcc';
   const MNC_SETTINGS_KEY = 'operatorvariant.mnc';
-  const ICCID_SETTINGS_KEY = 'operatorvariant.iccId';
-  const NEW_FAKE_ICC_ID = '8934071100276980489';

   var realMozSettings, realMozIccManager;

@@ -227,17 +224,15 @@ suite('operator variant helper', function() {
       MockNavigatorMozIccManager.getIccById(FAKE_ICC_ID).iccInfo =
         EXPECTED_ICC_INFO;

-      var mcc = {}, mnc = {}, iccIds = {}, persistSetting = {};
+      var mcc = {}, mnc = {}, persistSetting = {};

       mcc[MCC_SETTINGS_KEY] = EXPECTED_MCC;
       mnc[MNC_SETTINGS_KEY] = EXPECTED_MNC;
-      iccIds[ICCID_SETTINGS_KEY] = EXPECTED_ICCIDS;
       persistSetting[PERSIST_KEY] = true;

       var transaction = MockNavigatorSettings.createLock();
       transaction.set(mcc);
       transaction.set(mnc);
-      transaction.set(iccIds);
       transaction.set(persistSetting);
     });

@@ -268,7 +263,7 @@ suite('operator variant helper', function() {
       );
     });

-    test('Customization should run again when system updated', function(done) {
+    test('Customization should run again', function(done) {
       helper = new OperatorVariantHelper(
         FAKE_ICC_ID,
         FAKE_ICC_CARD_INDEX,
@@ -289,39 +284,5 @@ suite('operator variant helper', function() {
         'iccinfochange', {}
       );
     });
-
-    test('Customization should run again when new icc detected',
-      function(done) {
-        MockNavigatorMozIccManager.addIcc(NEW_FAKE_ICC_ID, mozIcc);
-        MockNavigatorMozIccManager.getIccById(NEW_FAKE_ICC_ID).iccInfo =
-          EXPECTED_ICC_INFO;
-
-        helper = new OperatorVariantHelper(
-          NEW_FAKE_ICC_ID,
-          FAKE_ICC_CARD_INDEX,
-          function(mcc, mnc) {
-            assert.equal(
-              EXPECTED_MCC,
-              mcc,
-              'Expected MCC value of ' + EXPECTED_MCC
-            );
-            assert.equal(
-              EXPECTED_MNC,
-              mnc,
-              'Expected MNC value of ' + EXPECTED_MNC
-            );
-            done();
-          },
-          PERSIST_KEY,
-          false
-        );
-
-        helper.listen();
-
-        MockNavigatorMozIccManager.getIccById(NEW_FAKE_ICC_ID)
-          .triggerEventListeners(
-            'iccinfochange', {}
-        );
-    });
   });
 });
diff --git a/apps/system/test/unit/operator_variant_test.js b/apps/system/test/unit/operator_variant_test.js
index b57b0b9..25c777e 100644
--- a/apps/system/test/unit/operator_variant_test.js
+++ b/apps/system/test/unit/operator_variant_test.js
@@ -149,7 +149,6 @@ suite('Operator variant', function() {
   });

   teardown(function() {
-    MockNavigatorSettings.mTeardown();
     MockNavigatorMozIccManager.mTeardown();
     MockNavigatorMozMobileConnections.mTeardown();
   });
@@ -375,46 +374,4 @@ suite('Operator variant', function() {
       assert.equal(number, '');
     });
   });
-
-  suite('mergeAndKeepCustomApnSettings', function() {
-    setup(function() {
-      this.ovh = new OperatorVariantHandler(FAKE_ICC_ID, FAKE_ICC_CARD_INDEX);
-    });
-
-    test('with operator variant voicemail number', function() {
-      // Mock existing apns in apn.data.settings
-      var existingApns = [{
-        carrier: '_custom_',
-        types: ['default'],
-        password: 'originalPw'
-      }, {
-        carrier: 'carrier',
-        types: ['supl'],
-        password: 'originalPw'
-      }];
-
-      // Mock default apns from apn.json
-      var defaultApns = [{
-        carrier: 'carrier',
-        types: ['default', 'supl'],
-        password: 'newPw'
-      }];
-
-      // The expeced merging result. Note that the default apns does not
-      // override the custom setting with the same type.
-      var expectedApns = [{
-        carrier: 'carrier',
-        types: ['supl'],
-        password: 'newPw'
-      }, {
-        carrier: '_custom_',
-        types: ['default'],
-        password: 'originalPw'
-      }];
-
-      var mergedApns =
-        this.ovh.mergeAndKeepCustomApnSettings(existingApns, defaultApns);
-      assert.deepEqual(mergedApns, expectedApns);
-    });
-  });
 });
diff --git a/apps/system/test/unit/orientation_manager_test.js b/apps/system/test/unit/orientation_manager_test.js
index 4a129fb..37e3c16 100644
--- a/apps/system/test/unit/orientation_manager_test.js
+++ b/apps/system/test/unit/orientation_manager_test.js
@@ -1,7 +1,7 @@
 'use strict';

 requireApp('system/shared/test/unit/mocks/mock_settings_listener.js');
-require('/shared/test/unit/mocks/mock_system.js');
+requireApp('system/test/unit/mock_system.js');

 var mocksForOrientationManager = new MocksHelper([
   'SettingsListener', 'System'
diff --git a/apps/system/test/unit/permission_manager_test.js b/apps/system/test/unit/permission_manager_test.js
index c6be19c..665057d 100644
--- a/apps/system/test/unit/permission_manager_test.js
+++ b/apps/system/test/unit/permission_manager_test.js
@@ -4,7 +4,7 @@
 require('/shared/test/unit/load_body_html_helper.js');
 require('/shared/js/template.js');
 require('/shared/test/unit/mocks/mock_lazy_loader.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/test/unit/mock_applications.js');
 requireApp('system/shared/test/unit/mocks/mock_manifest_helper.js');

diff --git a/apps/system/test/unit/quick_settings_test.js b/apps/system/test/unit/quick_settings_test.js
index 5580e65..68c6683 100644
--- a/apps/system/test/unit/quick_settings_test.js
+++ b/apps/system/test/unit/quick_settings_test.js
@@ -2,7 +2,7 @@
 'use strict';

 require('/test/unit/mock_activity.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+require('/test/unit/mock_l10n.js');
 require('/test/unit/mock_wifi_manager.js');
 require('/test/unit/mock_airplane_mode.js');
 require('/shared/test/unit/mocks/mock_settings_helper.js');
diff --git a/apps/system/test/unit/remote_debugger_test.js b/apps/system/test/unit/remote_debugger_test.js
index 723540d..56510fa 100644
--- a/apps/system/test/unit/remote_debugger_test.js
+++ b/apps/system/test/unit/remote_debugger_test.js
@@ -1,7 +1,7 @@
 'use strict';
 /* global MocksHelper, MockL10n, ModalDialog, RemoteDebugger, ScreenManager */

-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/test/unit/mock_modal_dialog.js');
 requireApp('system/test/unit/mock_screen_manager.js');
 requireApp('system/js/remote_debugger.js');
diff --git a/apps/system/test/unit/rocketbar_test.js b/apps/system/test/unit/rocketbar_test.js
index 74329a5..18c78de 100644
--- a/apps/system/test/unit/rocketbar_test.js
+++ b/apps/system/test/unit/rocketbar_test.js
@@ -83,8 +83,10 @@ suite('system/Rocketbar', function() {
     assert.ok(windowAddEventListenerStub.calledWith('apptitlechange'));
     assert.ok(windowAddEventListenerStub.calledWith('applocationchange'));
     assert.ok(windowAddEventListenerStub.calledWith('home'));
+    assert.ok(windowAddEventListenerStub.calledWith('cardviewclosedhome'));
     assert.ok(windowAddEventListenerStub.calledWith('appopened'));
     assert.ok(windowAddEventListenerStub.calledWith('homescreenopened'));
+    assert.ok(windowAddEventListenerStub.calledWith('stackchanged'));
     assert.ok(rocketbarAddEventListenerStub.calledWith('touchstart'));
     assert.ok(rocketbarAddEventListenerStub.calledWith('touchmove'));
     assert.ok(rocketbarAddEventListenerStub.calledWith('touchend'));
@@ -116,8 +118,10 @@ suite('system/Rocketbar', function() {
     assert.ok(windowRemoveEventListenerStub.calledWith('apptitlechange'));
     assert.ok(windowRemoveEventListenerStub.calledWith('applocationchange'));
     assert.ok(windowRemoveEventListenerStub.calledWith('home'));
+    assert.ok(windowRemoveEventListenerStub.calledWith('cardviewclosedhome'));
     assert.ok(windowRemoveEventListenerStub.calledWith('appopened'));
     assert.ok(windowRemoveEventListenerStub.calledWith('homescreenopened'));
+    assert.ok(windowRemoveEventListenerStub.calledWith('stackchanged'));
     assert.ok(rocketbarRemoveEventListenerStub.calledWith('touchstart'));
     assert.ok(rocketbarRemoveEventListenerStub.calledWith('touchmove'));
     assert.ok(rocketbarRemoveEventListenerStub.calledWith('touchend'));
@@ -253,6 +257,20 @@ suite('system/Rocketbar', function() {
     sinon.assert.calledOnce(stub);
   });

+  test('showTaskManager()', function() {
+    var showResultsStub = this.sinon.stub(subject, 'showResults');
+    navigator.mozL10n = {
+      'get': function() {
+        return 'Search';
+      }
+    };
+    subject.showTaskManager();
+    assert.ok(showResultsStub.calledOnce);
+    assert.equal(subject.input.value, '');
+    assert.equal(subject.titleContent.textContent, 'Search');
+    showResultsStub.restore();
+  });
+
   test('focus()', function() {
     var loadSearchAppStub = this.sinon.stub(subject, 'loadSearchApp');
     subject.form.classList.add('hidden');
@@ -518,10 +536,11 @@ suite('system/Rocketbar', function() {
     assert.equal(subject._touchStart, 3);
   });

-  test('handleTouch() - touchmove', function() {
-    // Assumes EXPANSION_THRESHOLD: 5
+  test('handleTouch() - touchmove', function(done) {
+    // Assumes EXPANSION_THRESHOLD: 5, TASK_MANAGER_THRESHOLD: 200
     var expandStub = this.sinon.stub(subject, 'expand');
     var collapseStub = this.sinon.stub(subject, 'collapse');
+    var showTaskManagerStub = this.sinon.stub(subject, 'showTaskManager');

     // Expand
     subject._touchStart = 1;
@@ -536,6 +555,7 @@ suite('system/Rocketbar', function() {
     subject.handleTouch(event);
     assert.ok(expandStub.calledOnce);
     assert.ok(collapseStub.notCalled);
+    assert.ok(showTaskManagerStub.notCalled);

     // Collapse
     event = {
@@ -548,6 +568,7 @@ suite('system/Rocketbar', function() {
     };
     subject.handleTouch(event);
     assert.ok(collapseStub.calledOnce);
+    assert.ok(showTaskManagerStub.notCalled);

     // Show task manager
     event = {
@@ -559,10 +580,16 @@ suite('system/Rocketbar', function() {
       ]
     };

+    window.addEventListener('taskmanagershow', function taskmanagershow() {
+      window.removeEventListener('taskmanagershow', taskmanagershow);
+      done();
+    });
+
     subject.handleTouch(event);

     expandStub.restore();
     collapseStub.restore();
+    showTaskManagerStub.restore();
   });

   test('handleTouch() - touchend', function() {
@@ -635,7 +662,7 @@ suite('system/Rocketbar', function() {
     focusStub.restore();
   });

-  test('handleInput()', function() {
+  test('handleInput()', function(done) {
     var showResultsStub = this.sinon.stub(subject, 'showResults');
     var hideResultsStub = this.sinon.stub(subject, 'hideResults');

@@ -652,6 +679,13 @@ suite('system/Rocketbar', function() {
     subject.handleInput();
     assert.ok(hideResultsStub.calledOnce);

+    // Task manager shown
+    subject.screen.classList.add('task-manager');
+    window.addEventListener('taskmanagerhide', function() {
+      done();
+    });
+    subject.handleInput();
+
     showResultsStub.restore();
     hideResultsStub.restore();
   });
@@ -683,6 +717,32 @@ suite('system/Rocketbar', function() {
     subject.handleKeyboardChange(event);
   });

+  test('handleStackChanged() - empty stack', function() {
+    subject.cardView = true;
+    var focusStub = this.sinon.stub(subject, 'activate');
+    var event = {
+      detail: {
+        sheets: []
+      }
+    };
+    subject.handleStackChanged(event);
+    assert.ok(focusStub.calledOnce);
+    focusStub.restore();
+  });
+
+  test('handleStackChanged() - non-empty stack', function() {
+    subject.expanded = true;
+    var focusStub = this.sinon.stub(subject, 'focus');
+    var event = {
+      detail: {
+        sheets: ['a', 'b', 'c']
+      }
+    };
+    subject.handleStackChanged(event);
+    assert.ok(focusStub.notCalled);
+    focusStub.restore();
+  });
+
   test('loadSearchApp()', function() {
     var initSearchConnectionStub = this.sinon.stub(subject,
       'initSearchConnection');
@@ -792,7 +852,7 @@ suite('system/Rocketbar', function() {
     assert.equal(stubDispatchEvent.getCall(0).args[1].isActivity, true);
   });

-  test('handleSearchTerminated() - calls render after crash', function() {
+  test('handleSearchCrashed() - calls render after crash', function() {
     subject.start();

     subject._searchAppURL = 'http://search.example.com/';
@@ -806,7 +866,7 @@ suite('system/Rocketbar', function() {
     spy.restore();

     // Dispatch a crash event.
-    window.dispatchEvent(new CustomEvent('searchterminated'));
+    window.dispatchEvent(new CustomEvent('searchcrashed'));

     assert.equal(subject.searchWindow, null);
     assert.equal(subject._port, null);
@@ -818,22 +878,14 @@ suite('system/Rocketbar', function() {
     assert.equal(subject._port, 'pending');
   });

-  test('open', function() {
+  test('setVisible', function() {
     subject.activate();
-    var openStub = this.sinon.stub(subject.searchWindow, 'open');
-    var closeStub = this.sinon.stub(subject.searchWindow, 'close');
+    var setVisibleStub = this.sinon.stub(subject.searchWindow, '_setVisible');
     subject.showResults();
-    assert.isTrue(openStub.called);
+    setVisibleStub.calledWith(true);
     subject.hideResults();
-    assert.isTrue(closeStub.called);
-  });
-
-  test('search window should not be opened again if it is dead', function() {
-    subject.activate();
-    this.sinon.stub(subject.searchWindow, 'isDead').returns(true);
-    var openStub = this.sinon.stub(subject.searchWindow, 'open');
-    subject.showResults();
-    assert.isFalse(openStub.called);
+    setVisibleStub.calledWith(false);
+    setVisibleStub.restore();
   });

   test('focus after geolocation hidden', function() {
@@ -844,24 +896,5 @@ suite('system/Rocketbar', function() {
     assert.ok(focusStub.calledOnce);
     focusStub.restore();
   });
-
-  test('Dont clear input when search app crashes', function() {
-    subject.input.value = 'value to not clear';
-    window.dispatchEvent(new CustomEvent('searchterminated'));
-    assert.equal(subject.input.value, 'value to not clear');
-  });
-
-  test('focus on render after a tick', function() {
-    this.sinon.useFakeTimers();
-    var focusStub = this.sinon.stub(subject, 'focus');
-
-    subject.activate();
-    subject.active = true;
-    subject.handleSearchMessage({detail: {action: 'render'}});
-
-    sinon.assert.notCalled(focusStub);
-    this.sinon.clock.tick(1);
-    sinon.assert.calledOnce(focusStub);
-  });
 });

diff --git a/apps/system/test/unit/screenshot_test.js b/apps/system/test/unit/screenshot_test.js
index 1e905f5..1ff5697 100644
--- a/apps/system/test/unit/screenshot_test.js
+++ b/apps/system/test/unit/screenshot_test.js
@@ -6,7 +6,7 @@ requireApp('system/js/screenshot.js');
 requireApp('system/shared/test/unit/mocks/mock_event_target.js');
 requireApp('system/shared/test/unit/mocks/mock_dom_request.js');
 requireApp('system/test/unit/mock_navigator_get_device_storage.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/shared/test/unit/mocks/mock_notification.js');


diff --git a/apps/system/test/unit/search_window_test.js b/apps/system/test/unit/search_window_test.js
index 797368a..eeda219 100644
--- a/apps/system/test/unit/search_window_test.js
+++ b/apps/system/test/unit/search_window_test.js
@@ -34,7 +34,6 @@ suite('system/SearchWindow', function() {
     stubById = this.sinon.stub(document, 'getElementById')
                           .returns(fakeElement.cloneNode(true));

-    requireApp('system/js/system.js');
     requireApp('system/js/browser_config_helper.js');
     requireApp('system/js/app_window.js');
     requireApp('system/js/search_window.js', done);
@@ -67,10 +66,4 @@ suite('system/SearchWindow', function() {
     assert.equal(searchWindow.searchAppURL, 'app://mozilla.org/');
   });

-  test('request close should close directly', function() {
-    var searchWindow = new SearchWindow();
-    var stubClose = this.sinon.stub(searchWindow, 'close');
-    searchWindow.requestClose();
-    assert.isTrue(stubClose.called);
-  });
 });
diff --git a/apps/system/test/unit/secure_window_manager_test.js b/apps/system/test/unit/secure_window_manager_test.js
index ad006b6..9d75b2b 100644
--- a/apps/system/test/unit/secure_window_manager_test.js
+++ b/apps/system/test/unit/secure_window_manager_test.js
@@ -27,6 +27,9 @@ suite('system/SecureWindowManager', function() {
     stubById.returns(document.createElement('div'));
     appFake = new window.SecureWindow(configFake);
     window.secureWindowManager = new window.SecureWindowManager();
+    // To prevent the original one has been
+    // initialized in the bootstrap stage.
+    window.secureWindowManager.suspendEvents();
   });

   teardown(function() {
@@ -141,17 +144,23 @@ suite('system/SecureWindowManager', function() {
       stubKill.restore();
     });

-    test('Pressing home', function() {
-      var evt = {
-        type: 'home'
-      };
-      var stubSoftKillApps = this.sinon.stub(window.secureWindowManager,
-        'softKillApps');
-      window.secureWindowManager.registerApp(appFake);
-      window.secureWindowManager.handleEvent(evt);
+    test('Suspend the secure mode', function() {
+      window.secureWindowManager.handleEvent({type: 'secure-modeoff'});
+      window.dispatchEvent(new CustomEvent('secure-appcreated',
+          {detail: appFake}));
+      assert.isNull(
+        window.secureWindowManager.states.activeApp,
+        'the app was got activated in off mode');
+    });

-      assert.isTrue(stubSoftKillApps.called,
-          'should shut down secure apps after pressing home');
+    test('Resume the secure mode', function() {
+      window.secureWindowManager.handleEvent({type: 'secure-modeoff'});
+      window.dispatchEvent(new CustomEvent('secure-modeon'));
+      window.dispatchEvent(new CustomEvent('secure-appcreated',
+          {detail: appFake}));
+      assert.isNotNull(
+        window.secureWindowManager.states.activeApp,
+        'the app was not got activated when the secure mode is on by event');
     });
   });
 });
diff --git a/apps/system/test/unit/sheets_transition_test.js b/apps/system/test/unit/sheets_transition_test.js
index 755c161..6b47751 100644
--- a/apps/system/test/unit/sheets_transition_test.js
+++ b/apps/system/test/unit/sheets_transition_test.js
@@ -1,9 +1,4 @@
 'use strict';
-/* global MocksHelper */
-/* global MockHomescreenLauncher */
-/* global MockStackManager */
-/* global SheetsTransition */
-
 requireApp('system/js/sheets_transition.js');

 requireApp('system/test/unit/mock_stack_manager.js');
@@ -39,8 +34,7 @@ suite('system/SheetsTransition >', function() {
   var getPrevStub, getNextStub;

   setup(function() {
-    window.homescreenLauncher = new MockHomescreenLauncher();
-    window.homescreenLauncher.start();
+    window.homescreenLauncher = new MockHomescreenLauncher().start();
     getPrevStub = this.sinon.stub(MockStackManager, 'getPrev');
     getPrevStub.returns(dialer);
     dialerFrame = document.createElement('div');
@@ -464,4 +458,87 @@ suite('system/SheetsTransition >', function() {
       });
     });
   });
+
+  suite('Preparing edge candidates >', function() {
+    function dispatchStackChanged(apps, position) {
+      var details = {
+        position: position,
+        sheets: apps
+      };
+
+      var evt = new CustomEvent('stackchanged', { detail: details });
+      window.dispatchEvent(evt);
+    };
+
+    setup(function() {
+      SheetsTransition.init();
+      MockSettingsListener.mCallbacks['edgesgesture.enabled'](true);
+    });
+
+    suite('Going back to the homescreen', function() {
+      setup(function() {
+        dialerFrame.classList.add('edge-candidate');
+        dispatchStackChanged([dialer, contacts, settings], -1);
+      });
+
+      test('it should remove the css class', function() {
+        assert.isFalse(dialerFrame.classList.contains('edge-candidate'));
+        assert.isFalse(contactsFrame.classList.contains('edge-candidate'));
+        assert.isFalse(settingsFrame.classList.contains('edge-candidate'));
+      });
+    });
+
+    suite('With sheets only before', function() {
+      setup(function() {
+        dispatchStackChanged([dialer, contacts, settings], 1);
+      });
+
+      test('it should put the css class on all of them', function() {
+        assert.isTrue(dialerFrame.classList.contains('edge-candidate'));
+        assert.isTrue(contactsFrame.classList.contains('edge-candidate'));
+        assert.isTrue(settingsFrame.classList.contains('edge-candidate'));
+      });
+    });
+
+    suite('With sheets only after', function() {
+      setup(function() {
+        dispatchStackChanged([dialer, contacts, settings], 0);
+      });
+
+      test('it should put the css class on the next one', function() {
+        assert.isTrue(dialerFrame.classList.contains('edge-candidate'));
+        assert.isTrue(contactsFrame.classList.contains('edge-candidate'));
+        assert.isFalse(settingsFrame.classList.contains('edge-candidate'));
+      });
+    });
+
+    suite('With sheets only before', function() {
+      setup(function() {
+        dispatchStackChanged([dialer, contacts, settings], 2);
+      });
+
+      test('it should put the css class on the previous one', function() {
+        assert.isFalse(dialerFrame.classList.contains('edge-candidate'));
+        assert.isTrue(contactsFrame.classList.contains('edge-candidate'));
+        assert.isTrue(settingsFrame.classList.contains('edge-candidate'));
+      });
+    });
+
+    suite('If the edge gestures are disabled', function() {
+      setup(function() {
+        MockSettingsListener.mCallbacks['edgesgesture.enabled'](false);
+        dispatchStackChanged([dialer, contacts, settings], 1);
+      });
+
+      teardown(function() {
+        MockSettingsListener.mCallbacks['edgesgesture.enabled'](true);
+      });
+
+      test('it should not touch the sheets', function() {
+        assert.isFalse(dialerFrame.classList.contains('edge-candidate'));
+        assert.isFalse(contactsFrame.classList.contains('edge-candidate'));
+        assert.isFalse(settingsFrame.classList.contains('edge-candidate'));
+      });
+    });
+  });
 });
diff --git a/apps/system/test/unit/shrinking_ui_test.js b/apps/system/test/unit/shrinking_ui_test.js
index 40adddc..2a10712 100644
--- a/apps/system/test/unit/shrinking_ui_test.js
+++ b/apps/system/test/unit/shrinking_ui_test.js
@@ -173,9 +173,9 @@ suite('system/ShrinkingUI', function() {
     assert.isTrue(stubSwitchTo.calledWith(evt.detail.instanceID));
   });

-  test('Handle "appwill-become-active" event', function() {
+  test('Handle "appopen" event', function() {
     var evt = {
-      type: 'appwill-become-active',
+      type: 'appopen',
       detail: {
         manifestURL: 'app://www.fake.app/mfsturl',
         instanceID: 'instanceID'
diff --git a/apps/system/test/unit/sim_lock_test.js b/apps/system/test/unit/sim_lock_test.js
index edcf52a..6473ea5 100644
--- a/apps/system/test/unit/sim_lock_test.js
+++ b/apps/system/test/unit/sim_lock_test.js
@@ -1,19 +1,16 @@
 /* global SimLock, MockL10n, MocksHelper, SimPinDialog, MockSIMSlotManager */
-/* global preInit, VersionHelper:true */
-
+/* global preInit */
 'use strict';

-requireApp('system/shared/test/unit/mocks/mock_simslot_manager.js');
+requireApp('system/js/mock_simslot_manager.js');
 requireApp('system/test/unit/mock_simcard_dialog.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
-require('/shared/test/unit/mocks/mock_system.js');
-requireApp('system/test/unit/mock_version_helper.js');
+requireApp('system/test/unit/mock_l10n.js');
+requireApp('system/test/unit/mock_system.js');

 var mocksHelperForSimLock = new MocksHelper([
   'SimPinDialog',
   'SIMSlotManager',
-  'System',
-  'VersionHelper'
+  'System'
 ]).init();

 suite('SimLock', function() {
@@ -52,33 +49,17 @@ suite('SimLock', function() {
     });
   });

-  suite('when we are in ftu on first use', function() {
+  suite('when we are in ftu', function() {
     setup(function() {
       this.sinon.stub(SimPinDialog, 'close');
       this.sinon.stub(SimLock, 'showIfLocked');
-      SimLock.init();
-    });

-    test('no simpin dialog would show up on first run', function() {
-      VersionHelper = window.MockVersionHelper(false);
+      SimLock.init();
       window.dispatchEvent(new window.CustomEvent('ftuopen'));
-      VersionHelper.getVersionInfo();
-      VersionHelper.resolve({ isUpgrade: function () {
-                                return false;
-                              }
-                            });
-      assert.isTrue(SimPinDialog.close.called);
     });

-    test('simpin dialog would show up on upgrade', function() {
-      VersionHelper = window.MockVersionHelper(true);
-      window.dispatchEvent(new window.CustomEvent('ftuopen'));
-      VersionHelper.getVersionInfo();
-      VersionHelper.resolve({ isUpgrade: function () {
-                                return true;
-                              }
-                            });
-      assert.isFalse(SimPinDialog.close.called);
+    test('no simpin dialog would show up', function() {
+      assert.isTrue(SimPinDialog.close.called);
     });
   });

@@ -91,36 +72,4 @@ suite('SimLock', function() {
         'should not show the dialog');
     });
   });
-
-  suite('lockscreen request to unlock', function() {
-    var stubShowIfLocked;
-    setup(function() {
-      stubShowIfLocked = this.sinon.stub(SimLock, 'showIfLocked');
-    });
-
-    test('launch camera from lockscreen', function() {
-      var requestUnlockEvent = {
-        type: 'lockscreen-request-unlock',
-        detail: {
-          activity: {
-            name: 'record'
-          }
-        }
-      };
-      SimLock.handleEvent(requestUnlockEvent);
-      assert.isFalse(stubShowIfLocked.called,
-        'should not call showIfLocked');
-    });
-
-    test('unlock normally', function() {
-      SimLock.handleEvent({
-        type: 'lockscreen-request-unlock'
-      });
-      assert.isFalse(stubShowIfLocked.called,
-        'should not call showIfLocked if app is not closed yet');
-      window.dispatchEvent(new window.CustomEvent('lockscreen-appclosed'));
-      assert.isTrue(stubShowIfLocked.called,
-        'should call showIfLocked if app is closed');
-    });
-  });
 });
diff --git a/apps/system/test/unit/sim_settings_helper_test.js b/apps/system/test/unit/sim_settings_helper_test.js
index e67d56e..24b6907 100644
--- a/apps/system/test/unit/sim_settings_helper_test.js
+++ b/apps/system/test/unit/sim_settings_helper_test.js
@@ -5,8 +5,8 @@

 'use strict';

-requireApp('system/shared/test/unit/mocks/mock_simslot.js');
-requireApp('system/shared/test/unit/mocks/mock_simslot_manager.js');
+requireApp('system/js/mock_simslot.js');
+requireApp('system/js/mock_simslot_manager.js');
 requireApp('system/shared/test/unit/mocks/mock_settings_listener.js');

 var mocksForSIMSettingsHelper = new MocksHelper([
diff --git a/apps/system/test/unit/simcard_dialog_test.js b/apps/system/test/unit/simcard_dialog_test.js
index 5397198..6b75c73 100644
--- a/apps/system/test/unit/simcard_dialog_test.js
+++ b/apps/system/test/unit/simcard_dialog_test.js
@@ -1,10 +1,8 @@
-/* globals MockL10n, MocksHelper, MockSIMSlot, MockSIMSlotManager,
-           SimPinDialog */
 'use strict';

-require('/shared/test/unit/mocks/mock_l10n.js');
-requireApp('system//shared/test/unit/mocks/mock_simslot.js');
-requireApp('system//shared/test/unit/mocks/mock_simslot_manager.js');
+requireApp('system/test/unit/mock_l10n.js');
+requireApp('system/js/mock_simslot.js');
+requireApp('system/js/mock_simslot_manager.js');

 var mocksForSIMPINDialog = new MocksHelper([
   'SIMSlotManager'
@@ -25,12 +23,12 @@ suite('simcard dialog', function() {

   suiteSetup(function() {
     window.navigator.mozL10n = MockL10n;
-    window.SimPinSystemDialog = MockSimPinSystemDialog;
+    window['SimPinSystemDialog'] = MockSimPinSystemDialog;
   });

   suiteTeardown(function() {
     window.navigator.mozL10n = realL10n;
-    window.SimPinSystemDialog = null;
+    window['SimPinSystemDialog'] = null;
   });

   setup(function(callback) {
@@ -83,7 +81,7 @@ suite('simcard dialog', function() {
   });

   test('unlockPuk', function() {
-    this.sinon.stub(SimPinDialog, 'unlockCardLock');
+    var stubUnlockCardLock = this.sinon.stub(SimPinDialog, 'unlockCardLock');
     var stubClear = this.sinon.stub(SimPinDialog, 'clear');
     SimPinDialog.pukInput.value = '0000';
     SimPinDialog.newPinInput.value = '1111';
@@ -128,13 +126,13 @@ suite('simcard dialog', function() {
     });

     test('showErrorMsg', function() {
-      var stub_ = this.sinon.stub(MockL10n, 'setAttributes');
+      var stub_ = this.sinon.stub(MockL10n, 'get');
       var count = 0;
       stub_.returns(count++);
       SimPinDialog.showErrorMsg(1, 'pin');
-      assert.deepEqual(stub_.getCall(0).args[2], { n: 1 });
-      assert.deepEqual(stub_.getCall(1).args[1], 'pinErrorMsg');
-      assert.deepEqual(stub_.getCall(2).args[1], 'pinLastChanceMsg');
+      assert.deepEqual(stub_.getCall(0).args[1], { n: 1 });
+      assert.deepEqual(stub_.getCall(1).args[0], 'pinErrorMsg');
+      assert.deepEqual(stub_.getCall(2).args[0], 'pinLastChanceMsg');
     });
   });

diff --git a/apps/system/test/unit/simslot_manager_test.js b/apps/system/test/unit/simslot_manager_test.js
new file mode 100644
index 0000000..6e72c59
--- /dev/null
+++ b/apps/system/test/unit/simslot_manager_test.js
@@ -0,0 +1,99 @@
+'use strict';
+requireApp('system/js/mock_simslot.js');
+requireApp('system/test/unit/mock_icc_manager.js');
+requireApp('system/test/unit/mock_system.js');
+requireApp('system/shared/test/unit/mocks/' +
+  'mock_navigator_moz_mobile_connections.js');
+
+var mocksForSIMSlotManager = new MocksHelper([
+  'SIMSlot', 'NavigatorMozMobileConnections', 'System'
+]).init();
+
+suite('SIMSlotManager', function() {
+  var realIccManager = navigator.mozIccManager;
+  var realMobileConnections = navigator.mozMobileConnections;
+  mocksForSIMSlotManager.attachTestHelpers();
+
+  setup(function(callback) {
+    navigator.mozIccManager = MockIccManager;
+    navigator.mozMobileConnections = MockNavigatorMozMobileConnections;
+    requireApp('system/js/simslot_manager.js', callback);
+  });
+
+  teardown(function() {
+    MockNavigatorMozMobileConnections.mTeardown();
+    navigator.mozIccManager = realIccManager;
+    navigator.mozMobileConnections = realMobileConnections;
+  });
+
+  test('isMultiSIM', function() {
+    MockNavigatorMozMobileConnections.mAddMobileConnection();
+    MockNavigatorMozMobileConnections.mAddMobileConnection();
+    var stubAddEventListener = this.sinon.stub(
+      MockIccManager, 'addEventListener');
+    SIMSlotManager.init();
+    assert.isTrue(SIMSlotManager.isMultiSIM());
+    assert.equal(SIMSlotManager.length,
+      MockNavigatorMozMobileConnections.length);
+    assert.isTrue(
+      stubAddEventListener.calledWith('iccdetected', SIMSlotManager));
+  });
+
+  test('get current SIM count', function() {
+    MockIccManager.iccIds = [0, 1, 2];
+    assert.isFalse(SIMSlotManager.noSIMCardOnDevice());
+    MockIccManager.iccIds = [];
+    assert.isTrue(SIMSlotManager.noSIMCardOnDevice());
+  });
+
+  test('noSIMCardConnectedToNetwork', function() {
+    MockIccManager.iccIds = [0, 1];
+    MockNavigatorMozMobileConnections.mAddMobileConnection();
+
+    SIMSlotManager._instances = [];
+    SIMSlotManager.init();
+    MockNavigatorMozMobileConnections[0].voice = { emergencyCallsOnly: true };
+    MockNavigatorMozMobileConnections[1].voice = { emergencyCallsOnly: true };
+    assert.isTrue(SIMSlotManager.noSIMCardConnectedToNetwork());
+    MockNavigatorMozMobileConnections[0].voice.emergencyCallsOnly = false;
+    assert.isFalse(SIMSlotManager.noSIMCardConnectedToNetwork());
+  });
+
+  test('getSlotByIccId', function() {
+    var card1 = document.createElement('div');
+    card1.iccId = 1;
+    var card2 = document.createElement('div');
+    card2.iccId = 2;
+    var slot1 = new MockSIMSlot({ iccId: 1 }, 0, card1);
+    var slot2 = new MockSIMSlot({ iccId: 2 }, 1, card2);
+    var slot3 = new MockSIMSlot({ iccId: null}, 2);
+
+    SIMSlotManager._instances = [slot1, slot2, slot3];
+    assert.deepEqual(SIMSlotManager.getSlotByIccId(1), slot1);
+
+    assert.deepEqual(SIMSlotManager.getSlotByIccId(2), slot2);
+
+    assert.deepEqual(SIMSlotManager.getSlotByIccId(9999), null);
+  });
+
+  test('iccdetected', function() {
+    var stubGetIccById = this.sinon.stub(SIMSlotManager, 'getSlotByIccId');
+    var card1 = document.createElement('div');
+    card1.iccId = 1;
+    var slot = new MockSIMSlot(null, 1, card1);
+    var stubUpdate = this.sinon.stub(slot, 'update');
+    var card2 = document.createElement('div');
+    card2.iccId = 1;
+    var stubGetIccByIdOfIccManager =
+      this.sinon.stub(MockIccManager, 'getIccById');
+    stubGetIccByIdOfIccManager.returns(card2);
+    stubGetIccById.returns(slot);
+    SIMSlotManager.handleEvent({
+      type: 'iccdetected',
+      iccId: 1
+    });
+    assert.isTrue(stubGetIccById.calledWith(1));
+    assert.isTrue(stubUpdate.calledWith(card2));
+    assert.isTrue(SIMSlotManager.ready);
+  });
+});
diff --git a/apps/system/test/unit/simslot_test.js b/apps/system/test/unit/simslot_test.js
new file mode 100644
index 0000000..119d779
--- /dev/null
+++ b/apps/system/test/unit/simslot_test.js
@@ -0,0 +1,112 @@
+'use strict';
+
+suite('SIMSlot', function() {
+  suiteSetup(function() {
+  });
+
+  suiteTeardown(function() {
+  });
+
+  setup(function(callback) {
+    requireApp('system/js/simslot.js', callback);
+  });
+
+  teardown(function() {
+  });
+
+  test('new', function() {
+    var created = false;
+    window.addEventListener('simslot-created', function() {
+      created = true;
+    });
+    var slot = new SIMSlot(null, 0);
+    assert.isTrue(created);
+  });
+
+  test('update', function() {
+    var slot = new SIMSlot(null, 0);
+    var card = document.createElement('div');
+    slot.update(card);
+    assert.deepEqual(slot.simCard, card);
+  });
+
+  test('isAbsent', function() {
+    var card = document.createElement('div');
+    card.iccInfo = {
+      iccid: 1
+    };
+    var slot1 = new SIMSlot(null, 0, card);
+    assert.isFalse(slot1.isAbsent());
+
+    var slot2 = new SIMSlot(null, 0);
+    assert.isTrue(slot2.isAbsent());
+  });
+
+  ['permanentBlocked'].forEach(function(absentType) {
+    test('isAbsent: ' + absentType, function() {
+      var card = document.createElement('div');
+      card.cardState = absentType;
+      var slot = new SIMSlot(null, 0, card);
+      assert.isTrue(slot.isAbsent());
+    });
+  });
+
+  ['unknown', 'illegal', 'absent', 'ready', null].forEach(function(lockType) {
+    test('isLocked: ' + lockType, function() {
+      var card = document.createElement('div');
+      card.cardState = lockType;
+      var slot = new SIMSlot(null, 0, card);
+      assert.isFalse(slot.isLocked());
+    });
+  });
+
+  ['pinRequired', 'pukRequired', 'networkLocked',
+   'corporateLocked', 'serviceProviderLocked', 'network1Locked',
+   'network2Locked', 'hrpdNetworkLocked', 'ruimCorporateLocked',
+   'ruimServiceProviderLocked'].forEach(function(lockType) {
+    test('isLocked: ' + lockType, function() {
+      var card = document.createElement('div');
+      card.cardState = lockType;
+      var slot = new SIMSlot(null, 0, card);
+      assert.isTrue(slot.isLocked());
+    });
+  });
+
+  suite('handleEvent', function() {
+    test('cardstatechange', function() {
+      var slot = new SIMSlot(null, 0);
+      var stubPublish = this.sinon.stub(slot, 'publish');
+      slot.handleEvent({
+        type: 'cardstatechange'
+      });
+      assert.isTrue(stubPublish.calledWith('cardstatechange'));
+    });
+
+    test('iccinfochange', function() {
+      var slot = new SIMSlot(null, 0);
+      var stubPublish = this.sinon.stub(slot, 'publish');
+      slot.handleEvent({
+        type: 'iccinfochange'
+      });
+      assert.isTrue(stubPublish.calledWith('iccinfochange'));
+    });
+
+    test('stkcommand', function() {
+      var slot = new SIMSlot(null, 0);
+      var stubPublish = this.sinon.stub(slot, 'publish');
+      slot.handleEvent({
+        type: 'stkcommand'
+      });
+      assert.isTrue(stubPublish.calledWith('stkcommand'));
+    });
+
+    test('stksessionend', function() {
+      var slot = new SIMSlot(null, 0);
+      var stubPublish = this.sinon.stub(slot, 'publish');
+      slot.handleEvent({
+        type: 'stksessionend'
+      });
+      assert.isTrue(stubPublish.calledWith('stksessionend'));
+    });
+  });
+});
diff --git a/apps/system/test/unit/sleep_menu_test.js b/apps/system/test/unit/sleep_menu_test.js
index 6b25951..c18d9ff 100644
--- a/apps/system/test/unit/sleep_menu_test.js
+++ b/apps/system/test/unit/sleep_menu_test.js
@@ -2,13 +2,11 @@
 /* global MocksHelper */
 /* global MockL10n */
 /* global MockMozPower */
-/* global MockNavigatorMozTelephony */
 /* global SleepMenu */

-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/test/unit/mock_navigator_moz_power.js');
-require('/shared/test/unit/mocks/mock_navigator_moz_telephony.js');
-require('/shared/test/unit/mocks/mock_system.js');
+requireApp('system/test/unit/mock_system.js');
 requireApp('system/shared/test/unit/mocks/mock_settings_listener.js');
 requireApp('system/js/logo_loader.js');
 requireApp('system/js/init_logo_handler.js');
@@ -24,7 +22,6 @@ suite('system/SleepMenu', function() {
   var fakeElement;
   var realL10n;
   var realMozPower;
-  var realTelephony;
   var stubById;
   var stubByQuerySelector;
   var subject;
@@ -36,8 +33,6 @@ suite('system/SleepMenu', function() {
     realMozPower = navigator.mozPower;
     navigator.mozPower = MockMozPower;

-    realTelephony = navigator.mozTelephony;
-
     fakeElement = document.createElement('div');
     stubById = stubById = this.sinon.stub(document, 'getElementById',
       function(id) {
@@ -56,7 +51,6 @@ suite('system/SleepMenu', function() {
   teardown(function() {
     navigator.mozL10n = realL10n;
     navigator.mozPower = realMozPower;
-    navigator.mozTelephony = realTelephony;
     stubById.restore();
     stubByQuerySelector.restore();
   });
@@ -74,18 +68,11 @@ suite('system/SleepMenu', function() {
   });

   test('generateItems', function() {
-    navigator.mozTelephony = MockNavigatorMozTelephony;
     var items = subject.generateItems();
     assert.equal(items.length, 4);
   });

-  test('generateItems w/o mozTelephony', function() {
-    var items = subject.generateItems();
-    assert.equal(items.length, 3);
-  });
-
   test('generateItems /w developer options', function() {
-    navigator.mozTelephony = MockNavigatorMozTelephony;
     subject.isDeveloperMenuEnabled = true;
     subject.developerOptions = {
       testme: {
diff --git a/apps/system/test/unit/sound_manager_test.js b/apps/system/test/unit/sound_manager_test.js
deleted file mode 100644
index 3fb74a7..0000000
--- a/apps/system/test/unit/sound_manager_test.js
+++ /dev/null
@@ -1,375 +0,0 @@
-'use strict';
-
-/* global MocksHelper, MockL10n, SoundManager, MockSettingsListener, MockLock,
-          MockScreenManager, MockNavigatorSettings, MockasyncStorage,
-          MockCustomDialog */
-
-require('/shared/test/unit/load_body_html_helper.js');
-require('/shared/test/unit/mocks/mock_navigator_moz_settings.js');
-require('/shared/test/unit/mocks/mock_settings_listener.js');
-require('/shared/test/unit/mocks/mock_custom_dialog.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
-require('/shared/test/unit/mocks/mock_system.js');
-requireApp('system/test/unit/mock_asyncStorage.js');
-requireApp('system/test/unit/mock_bluetooth.js');
-requireApp('system/test/unit/mock_ftu_launcher.js');
-requireApp('system/test/unit/mock_navigator_moz_telephony.js');
-requireApp('system/test/unit/mock_screen_manager.js');
-requireApp('system/js/async_semaphore.js');
-requireApp('system/js/sound_manager.js');
-
-mocha.globals([
-  'SettingsListener',
-  'Bluetooth',
-  'CustomDialog',
-  'FtuLauncher',
-  'ScreenManager',
-  'SoundManager',
-  'system'
-]);
-
-var mocksForSoundManager = new MocksHelper([
-  'asyncStorage',
-  'Bluetooth',
-  'CustomDialog',
-  'FtuLauncher',
-  'ScreenManager',
-  'SettingsListener',
-  'System'
-]).init();
-
-suite('system/sound manager', function() {
-  var realL10n;
-  var realMozSettings;
-  var soundManager;
-
-  mocksForSoundManager.attachTestHelpers();
-
-  function sendChromeEvent(detail) {
-    var evt = new CustomEvent('mozChromeEvent', { detail: detail });
-    window.dispatchEvent(evt);
-  }
-
-  function checkVolume(data) {
-    for (var name in data) {
-      assert.equal(data[name], soundManager.currentVolume[name]);
-    }
-  }
-
-  suiteSetup(function() {
-    loadBodyHTML('/index.html');
-    realL10n = navigator.mozL10n;
-    realMozSettings = navigator.mozSettings;
-    navigator.mozL10n = MockL10n;
-    navigator.mozSettings = MockNavigatorSettings;
-  });
-
-  suiteTeardown(function() {
-    navigator.mozL10n = realL10n;
-    navigator.mozSettings = realMozSettings;
-    document.body.innerHTML = '';
-  });
-
-  suite('stop test', function() {
-    setup(function() {
-      soundManager = new SoundManager();
-      soundManager.start();
-    });
-
-    test('stop listening event listener', function() {
-      sendChromeEvent({'type': 'default-volume-channel-changed',
-                       'channel': 'normal'});
-      assert.equal('normal', soundManager.defaultVolumeControlChannel);
-      soundManager.stop();
-      sendChromeEvent({'type': 'default-volume-channel-changed',
-                       'channel': 'none'});
-      assert.equal('normal', soundManager.defaultVolumeControlChannel);
-    });
-  });
-
-  suite('auto start/stop', function() {
-    setup(function() {
-      soundManager = new SoundManager();
-      soundManager.start();
-    });
-
-    teardown(function() {
-      soundManager.stop();
-    });
-
-    suite('change channel', function() {
-      test('default volume channel changed', function() {
-        sendChromeEvent({'type': 'default-volume-channel-changed',
-                         'channel': 'normal'});
-
-        assert.equal('normal', soundManager.defaultVolumeControlChannel);
-      });
-
-      test('audio channel changed', function() {
-        sendChromeEvent({'type': 'audio-channel-changed',
-                         'channel': 'alarm'});
-
-        assert.equal('alarm', soundManager.currentChannel);
-      });
-    });
-
-    suite('read volume from settings', function() {
-      setup(function() {
-        MockSettingsListener.mTriggerCallback('audio.volume.alarm', 1);
-        MockSettingsListener.mTriggerCallback('audio.volume.bt_sco', 2);
-        MockSettingsListener.mTriggerCallback('audio.volume.content', 3);
-        MockSettingsListener.mTriggerCallback('audio.volume.notification', 4);
-        MockSettingsListener.mTriggerCallback('audio.volume.telephony', 5);
-      });
-
-      test('volume for each channel changed', function() {
-        assert.equal(1, soundManager.currentVolume.alarm);
-        assert.equal(2, soundManager.currentVolume.bt_sco);
-        assert.equal(3, soundManager.currentVolume.content);
-        assert.equal(4, soundManager.currentVolume.notification);
-        assert.equal(5, soundManager.currentVolume.telephony);
-      });
-    });
-
-    suite('settings changed', function() {
-      test('key: audio.volume.cemaxvol', function() {
-        MockSettingsListener.mTriggerCallback('audio.volume.cemaxvol', 6);
-        assert.equal(6, soundManager.CEWarningVol);
-      });
-
-      test('key: vibration.enabled', function() {
-        MockSettingsListener.mTriggerCallback('vibration.enabled', true);
-        assert.equal(true, soundManager.vibrationEnabled);
-        MockSettingsListener.mTriggerCallback('vibration.enabled', false);
-        assert.equal(false, soundManager.vibrationEnabled);
-      });
-    });
-
-    suite('volume change', function() {
-      setup(function() {
-        // reset the all volume to 5
-        soundManager.currentVolume.alarm = 5;
-        soundManager.currentVolume.bt_sco = 5;
-        soundManager.currentVolume.content = 5;
-        soundManager.currentVolume.notification = 5;
-        soundManager.currentVolume.telephony = 5;
-        soundManager.currentChannel = 'normal';
-      });
-
-      test('volume up event', function() {
-        window.dispatchEvent(new CustomEvent('volumeup'));
-        checkVolume({
-          'alarm': 5,
-          'bt_sco': 5,
-          'content': 6,
-          'notification': 5,
-          'telephony': 5
-        });
-      });
-
-      test('volume down event', function() {
-        window.dispatchEvent(new CustomEvent('volumedown'));
-        checkVolume({
-          'alarm': 5,
-          'bt_sco': 5,
-          'content': 4,
-          'notification': 5,
-          'telephony': 5
-        });
-      });
-
-      test('volume down to vibrate', function() {
-        soundManager.currentChannel = 'notification';
-        soundManager.currentVolume.notification = 1;
-        soundManager.vibrationEnabled = false;
-        window.dispatchEvent(new CustomEvent('volumedown'));
-        checkVolume({
-          'alarm': 5,
-          'bt_sco': 5,
-          'content': 5,
-          'notification': 0,
-          'telephony': 5
-        });
-        assert.equal('MUTE', soundManager.muteState);
-        assert.isTrue(soundManager.vibrationEnabled);
-        assert.isTrue(MockNavigatorSettings.mSettings['vibration.enabled']);
-        var vibrationClassList = document.getElementById('volume').classList;
-        assert.isTrue(vibrationClassList.contains('vibration'));
-      });
-
-      test('volume down to silent', function() {
-        soundManager.currentChannel = 'notification';
-        soundManager.currentVolume.notification = 0;
-        window.dispatchEvent(new CustomEvent('volumedown'));
-        // we cannot check content channel here, because it is driven by
-        // SettingsListener's event.
-        checkVolume({
-          'alarm': 5,
-          'bt_sco': 5,
-          'notification': 0,
-          'telephony': 5
-        });
-        assert.equal('MUTE', soundManager.muteState);
-        assert.isFalse(soundManager.vibrationEnabled);
-        assert.isFalse(MockNavigatorSettings.mSettings['vibration.enabled']);
-        // The content channel should be mute too.
-        assert.equal(0,
-                     MockNavigatorSettings.mSettings['audio.volume.content']);
-        var vibrationClassList = document.getElementById('volume').classList;
-        assert.isFalse(vibrationClassList.contains('vibration'));
-      });
-
-      test('handleVolumeKey: screen-off and channel none', function() {
-        MockScreenManager.screenEnabled = false;
-        soundManager.currentChannel = 'none';
-        window.dispatchEvent(new CustomEvent('volumeup'));
-        checkVolume({
-          'alarm': 5,
-          'bt_sco': 5,
-          'content': 5,
-          'notification': 5,
-          'telephony': 5
-        });
-        MockScreenManager.screenEnabled = true;
-      });
-
-      test('handleVolumeKey: headset connected and channel-normal', function() {
-        soundManager.isHeadsetConnected = true;
-        soundManager.homescreenVisible = true;
-        window.dispatchEvent(new CustomEvent('volumeup'));
-        checkVolume({
-          'alarm': 5,
-          'bt_sco': 5,
-          'content': 6,
-          'notification': 5,
-          'telephony': 5
-        });
-        window.dispatchEvent(new CustomEvent('volumedown'));
-        checkVolume({
-          'alarm': 5,
-          'bt_sco': 5,
-          'content': 5,
-          'notification': 5,
-          'telephony': 5
-        });
-      });
-
-      test('handleVolumeKey: headset connected and channel-none', function() {
-        soundManager.isHeadsetConnected = true;
-        soundManager.currentChannel = 'none';
-        soundManager.homescreenVisible = true;
-        window.dispatchEvent(new CustomEvent('volumeup'));
-        checkVolume({
-          'alarm': 5,
-          'bt_sco': 5,
-          'content': 5,
-          'notification': 6,
-          'telephony': 5
-        });
-      });
-
-      test('handleVolumeKey: not at homescreen', function() {
-        soundManager.currentChannel = 'none';
-        soundManager.homescreenVisible = false;
-        window.dispatchEvent(new CustomEvent('volumeup'));
-        checkVolume({
-          'alarm': 5,
-          'bt_sco': 5,
-          'content': 6,
-          'notification': 5,
-          'telephony': 5
-        });
-      });
-
-      test('over volume up', function() {
-        soundManager.changeVolume(20);
-        checkVolume({
-          'alarm': 5,
-          'bt_sco': 5,
-          'content': 15,
-          'notification': 5,
-          'telephony': 5
-        });
-      });
-
-      test('enter slient mode', function() {
-        soundManager.currentVolume.content = 15;
-        soundManager.enterSilentMode('content');
-        assert.equal(0,
-                     MockNavigatorSettings.mSettings['audio.volume.content']);
-        MockLock.mCallbacks.onsuccess();
-        assert.equal(15, MockasyncStorage.mItems['content.volume']);
-      });
-
-      test('leave slient mode', function() {
-        soundManager.currentVolume.content = 15;
-        soundManager.enterSilentMode('content');
-        soundManager.leaveSilentMode('content');
-        assert.equal(15,
-                     MockNavigatorSettings.mSettings['audio.volume.content']);
-      });
-
-      test('mute it', function() {
-        window.dispatchEvent(new CustomEvent('mute'));
-        assert.equal(0,
-                  MockNavigatorSettings.mSettings['audio.volume.notification']);
-      });
-
-      test('umute it', function() {
-        window.dispatchEvent(new CustomEvent('mute'));
-        window.dispatchEvent(new CustomEvent('unmute'));
-        assert.equal(5,
-                  MockNavigatorSettings.mSettings['audio.volume.notification']);
-      });
-
-      test('mute notification and unmute notification/content', function() {
-        soundManager.enterSilentMode('content');
-        assert.equal(0,
-                     MockNavigatorSettings.mSettings['audio.volume.content']);
-
-        window.dispatchEvent(new CustomEvent('mute'));
-        window.dispatchEvent(new CustomEvent('unmute'));
-
-        assert.isTrue(
-                  MockNavigatorSettings.mSettings['audio.volume.content'] > 0);
-      });
-    });
-
-    suite('CE accumulator', function() {
-      var fakeTimer;
-
-      setup(function() {
-        fakeTimer = sinon.useFakeTimers();
-        SoundManager.TIME_ONE_MINUTE = 10;
-        SoundManager.CE_RESET_TIME = 50;
-        soundManager.currentVolume.content = 15;
-        sendChromeEvent({'type': 'headphones-status-changed',
-                         'state': 'on' });
-        sendChromeEvent({'type': 'audio-channel-changed',
-                         'channel': 'content'});
-      });
-
-      teardown(function() {
-        fakeTimer.restore();
-      });
-
-      test('CE check', function() {
-        assert.equal(10,
-                     MockNavigatorSettings.mSettings['audio.volume.content']);
-        MockLock.mCallbacks.onsuccess();
-        assert.isTrue(MockCustomDialog.mShown);
-        MockCustomDialog.mShowedCancel.callback();
-        assert.isTrue(soundManager.CEAccumulatorID > 0);
-        assert.isTrue(soundManager.CEAccumulatorTime > 0);
-      });
-
-      test('CE times out and reset to original state', function() {
-        // trigger timer
-        MockLock.mCallbacks.onsuccess();
-        fakeTimer.tick(55);
-        assert.equal(0, soundManager.CEAccumulatorTime);
-        assert.equal(0, soundManager.CETimestamp);
-      });
-    });
-  });
-});
diff --git a/apps/system/test/unit/spin_date_picker_test.js b/apps/system/test/unit/spin_date_picker_test.js
index e1d1d4a..955c569 100644
--- a/apps/system/test/unit/spin_date_picker_test.js
+++ b/apps/system/test/unit/spin_date_picker_test.js
@@ -2,7 +2,7 @@

 requireApp('system/js/value_selector/value_picker.js');
 requireApp('system/js/value_selector/spin_date_picker.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');

 suite('value selector/spin date picker', function() {
   var subject;
@@ -30,11 +30,11 @@ suite('value selector/spin date picker', function() {
         appendChild(document.createElement('div'));
     };

-    stubById = this.sinon.stub(document, 'getElementsByClassName')
-                   .returns([new mock_obj()]);
+    stubById = this.sinon.stub(document, 'getElementById')
+                   .returns(new mock_obj());

-    var DateContainer = document.getElementsByClassName(
-      'value-selector-spin-date-picker')[0];
+    var DateContainer =
+      document.getElementById('spin-date-picker');
     subject = new SpinDatePicker(DateContainer);
   });

diff --git a/apps/system/test/unit/stack_manager_test.js b/apps/system/test/unit/stack_manager_test.js
index 71f5b54..6b3b056 100644
--- a/apps/system/test/unit/stack_manager_test.js
+++ b/apps/system/test/unit/stack_manager_test.js
@@ -24,8 +24,7 @@ suite('system/StackManager >', function() {
   setup(function() {
     this.sinon.useFakeTimers();

-    window.homescreenLauncher = new HomescreenLauncher();
-    window.homescreenLauncher.start();
+    window.homescreenLauncher = new HomescreenLauncher().start();
     dialer = new AppWindow({
       url: 'app://communications.gaiamobile.org/dialer/index.html',
       origin: 'app://communications.gaiamobile.org/',
diff --git a/apps/system/test/unit/statusbar_test.js b/apps/system/test/unit/statusbar_test.js
index c7086dd..0607733 100644
--- a/apps/system/test/unit/statusbar_test.js
+++ b/apps/system/test/unit/statusbar_test.js
@@ -1,25 +1,24 @@
 /* globals FtuLauncher, MockAppWindowManager, MockL10n, MockMobileOperator,
            MockNavigatorMozMobileConnections, MockNavigatorMozTelephony,
            MockSettingsListener, MocksHelper, MockSIMSlot, MockSIMSlotManager,
-           MockSystem, MockTouchForwarder, SimPinDialog, StatusBar, System */
+           MockSystem, MockTouchForwarder, StatusBar, System */

 'use strict';

-require('/shared/test/unit/mocks/mock_settings_listener.js');
-require('/shared/test/unit/mocks/mock_mobile_operator.js');
-require(
-  '/shared/test/unit/mocks/mock_navigator_moz_mobile_connections.js');
-require('/shared/test/unit/mocks/mock_icc_helper.js');
-require('/shared/test/unit/mocks/mock_navigator_moz_telephony.js');
-require('/shared/test/unit/mocks/mock_app_window_manager.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
-require('/shared/test/unit/mocks/mock_system.js');
-require('/shared/test/unit/mocks/mock_simslot.js');
-require('/shared/test/unit/mocks/mock_simslot_manager.js');
-require('/test/unit/mock_app_window_manager.js');
-require('/test/unit/mock_ftu_launcher.js');
-require('/test/unit/mock_touch_forwarder.js');
-require('/test/unit/mock_sim_pin_dialog.js');
+requireApp('system/shared/test/unit/mocks/mock_settings_listener.js');
+requireApp('system/shared/test/unit/mocks/mock_mobile_operator.js');
+requireApp('system/shared/test/unit/mocks/mock_navigator_moz_mobile_connections.js');
+requireApp('system/shared/test/unit/mocks/mock_icc_helper.js');
+requireApp('system/shared/test/unit/mocks/mock_navigator_moz_telephony.js');
+requireApp('system/shared/test/unit/mocks/mock_app_window_manager.js');
+requireApp('system/test/unit/mock_l10n.js');
+requireApp('system/test/unit/mock_system.js');
+requireApp('system/js/mock_simslot.js');
+requireApp('system/js/mock_simslot_manager.js');
+requireApp('system/test/unit/mock_app_window_manager.js');
+requireApp('system/test/unit/mock_ftu_launcher.js');
+requireApp('system/test/unit/mock_touch_forwarder.js');
+requireApp('system/test/unit/mock_sim_pin_dialog.js');

 var mocksForStatusBar = new MocksHelper([
   'FtuLauncher',
@@ -34,16 +33,33 @@ var mocksForStatusBar = new MocksHelper([
 suite('system/Statusbar', function() {
   var mobileConnectionCount = 2;
   var fakeStatusBarNode, fakeTopPanel, fakeStatusBarBackground,
-      fakeStatusBarIcons, fakeStatusBarConnections,
-      fakeStatusBarCallForwardings, fakeStatusBarTime, fakeStatusBarLabel,
-      fakeStatusBarBattery;
+    fakeStatusBarIcons;
   var realMozL10n, realMozMobileConnections, realMozTelephony, fakeIcons = [];

-  function prepareDOM() {
+  mocksForStatusBar.attachTestHelpers();
+  suiteSetup(function(done) {
+    window.System = MockSystem;
+    realMozL10n = navigator.mozL10n;
+    navigator.mozL10n = MockL10n;
+    realMozMobileConnections = navigator.mozMobileConnections;
+    navigator.mozMobileConnections = MockNavigatorMozMobileConnections;
+    realMozTelephony = navigator.mozTelephony;
+    navigator.mozTelephony = MockNavigatorMozTelephony;
+
+    requireApp('system/js/statusbar.js', done);
+  });
+
+  suiteTeardown(function() {
+    System.locked = false;
+    navigator.mozL10n = realMozL10n;
+    navigator.mozMobileConnections = realMozMobileConnections;
+    navigator.mozTelephony = realMozTelephony;
+  });
+
+  setup(function() {
     for (var i = 1; i < mobileConnectionCount; i++) {
       MockNavigatorMozMobileConnections.mAddMobileConnection();
     }
-
     fakeStatusBarNode = document.createElement('div');
     fakeStatusBarNode.id = 'statusbar';
     document.body.appendChild(fakeStatusBarNode);
@@ -60,90 +76,39 @@ suite('system/Statusbar', function() {
     fakeStatusBarIcons.id = 'statusbar-icons';
     document.body.appendChild(fakeStatusBarIcons);

-    fakeStatusBarConnections = document.createElement('div');
-    fakeStatusBarConnections.id = 'statusbar-connections';
-    document.body.appendChild(fakeStatusBarConnections);
-
-    fakeStatusBarCallForwardings = document.createElement('div');
-    fakeStatusBarCallForwardings.id = 'statusbar-call-forwardings';
-    document.body.appendChild(fakeStatusBarCallForwardings);
-
-    fakeStatusBarTime = document.createElement('div');
-    fakeStatusBarTime.id = 'statusbar-time';
-    document.body.appendChild(fakeStatusBarTime);
-
-    fakeStatusBarLabel = document.createElement('div');
-    fakeStatusBarLabel.id = 'statusbar-label';
-    document.body.appendChild(fakeStatusBarLabel);
-
-    fakeStatusBarBattery = document.createElement('div');
-    fakeStatusBarBattery.id = 'statusbar-battery';
-    document.body.appendChild(fakeStatusBarBattery);
-  }
-
-  mocksForStatusBar.attachTestHelpers();
-
-  setup(function(done) {
-    window.System = MockSystem;
-    realMozL10n = navigator.mozL10n;
-    navigator.mozL10n = MockL10n;
-    realMozMobileConnections = navigator.mozMobileConnections;
-    navigator.mozMobileConnections = MockNavigatorMozMobileConnections;
-    realMozTelephony = navigator.mozTelephony;
-    navigator.mozTelephony = MockNavigatorMozTelephony;
-
-    prepareDOM();
-
-    requireApp('system/js/statusbar.js', statusBarReady);
-
-    function statusBarReady() {
-
-      StatusBar.ELEMENTS.forEach(function testAddElement(elementName) {
-        var elt =document.getElementById('statusbar-' + elementName);
-        if (elt) {
-          elt.parentNode.removeChild(elt);
-        }
-        if (elementName == 'system-downloads' ||
-            elementName == 'network-activity') {
-          elt = document.createElement('canvas');
-        } else {
-          elt = document.createElement('div');
-        }
-        elt.id = 'statusbar-' + elementName;
-        elt.hidden = true;
-        fakeStatusBarNode.appendChild(elt);
-        fakeIcons[elementName] = elt;
-      });
-
-      // executing init again
-      StatusBar.init();
+    StatusBar.ELEMENTS.forEach(function testAddElement(elementName) {
+      var elt;
+      if (elementName == 'system-downloads' ||
+          elementName == 'network-activity') {
+        elt = document.createElement('canvas');
+      } else {
+        elt = document.createElement('div');
+      }
+      elt.id = 'statusbar-' + elementName;
+      elt.hidden = true;
+      fakeStatusBarNode.appendChild(elt);
+      fakeIcons[elementName] = elt;
+    });

-      var signalElements = document.querySelectorAll('.statusbar-signal');
-      var dataElements = document.querySelectorAll('.statusbar-data');
+    // executing init again
+    StatusBar.init();

-      fakeIcons.signals = {};
-      Array.prototype.slice.call(signalElements).forEach(
-        function(signal, index) {
-          fakeIcons.signals[mobileConnectionCount - index - 1] = signal;
-        }
-      );
-      fakeIcons.data = {};
-      Array.prototype.slice.call(dataElements).forEach(function(data, index) {
-        fakeIcons.data[mobileConnectionCount - index - 1] = data;
-      });
+    var signalElements = document.querySelectorAll('.statusbar-signal');
+    var dataElements = document.querySelectorAll('.statusbar-data');

-      done();
-    }
+    fakeIcons.signals = {};
+    Array.prototype.slice.call(signalElements).forEach(function(signal, index) {
+      fakeIcons.signals[mobileConnectionCount - index - 1] = signal;
+    });
+    fakeIcons.data = {};
+    Array.prototype.slice.call(dataElements).forEach(function(data, index) {
+      fakeIcons.data[mobileConnectionCount - index - 1] = data;
+    });
   });
-
   teardown(function() {
     fakeStatusBarNode.parentNode.removeChild(fakeStatusBarNode);
     MockNavigatorMozTelephony.mTeardown();
     MockNavigatorMozMobileConnections.mTeardown();
-    System.locked = false;
-    navigator.mozL10n = realMozL10n;
-    navigator.mozMobileConnections = realMozMobileConnections;
-    navigator.mozTelephony = realMozTelephony;
   });

   suite('airplane mode icon', function() {
@@ -276,14 +241,11 @@ suite('system/Statusbar', function() {
       assert.equal(StatusBar.icons.time.hidden, false);
     });
     test('moztime change while lockscreen is unlocked', function() {
-      this.sinon.useFakeTimers();
       System.locked = false;
       var evt = new CustomEvent('moztimechange');
       StatusBar.handleEvent(evt);
-      this.sinon.clock.tick();
       assert.notEqual(StatusBar.clock.timeoutID, null);
       assert.equal(StatusBar.icons.time.hidden, false);
-      this.sinon.clock.restore();
     });
     test('screen enable but screen is unlocked', function() {
       var evt = new CustomEvent('screenchange', {
@@ -334,372 +296,370 @@ suite('system/Statusbar', function() {
       mockSimSlots = null;
     });

-    function slotIndexTests(slotIndex) {
-      suite('slot: ' + slotIndex, function() {
-        var dataset;
-        setup(function() {
-          dataset = fakeIcons.signals[slotIndex].dataset;
-          MockSIMSlotManager.mInstances = mockSimSlots;
-        });
+    for (var i = 0; i < mobileConnectionCount; i++) {
+      (function(slotIndex) {
+        suite('slot: ' + slotIndex, function() {
+          var dataset;
+          setup(function() {
+            dataset = fakeIcons.signals[slotIndex].dataset;
+            MockSIMSlotManager.mInstances = mockSimSlots;
+          });

-        test('no network without sim, not searching', function() {
-          MockNavigatorMozMobileConnections[slotIndex].voice = {
-            connected: false,
-            relSignalStrength: null,
-            emergencyCallsOnly: false,
-            state: 'notSearching',
-            roaming: false,
-            network: {}
-          };
-
-          mockSimSlots[slotIndex].simCard.cardState = null;
-          mockSimSlots[slotIndex].simCard.iccInfo = {};
-          sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(true);
-
-          StatusBar.update.signal.call(StatusBar);
-
-          assert.notEqual(dataset.roaming, 'true');
-          assert.isUndefined(dataset.level);
-          assert.notEqual(dataset.searching, 'true');
-        });
+          test('no network without sim, not searching', function() {
+            MockNavigatorMozMobileConnections[slotIndex].voice = {
+              connected: false,
+              relSignalStrength: null,
+              emergencyCallsOnly: false,
+              state: 'notSearching',
+              roaming: false,
+              network: {}
+            };

-        test('no network without sim, searching', function() {
-          MockNavigatorMozMobileConnections[slotIndex].voice = {
-            connected: false,
-            relSignalStrength: null,
-            emergencyCallsOnly: false,
-            state: 'searching',
-            roaming: false,
-            network: {}
-          };
-
-          mockSimSlots[slotIndex].simCard.cardState = null;
-          mockSimSlots[slotIndex].simCard.iccInfo = {};
-          sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(true);
-
-          StatusBar.update.signal.call(StatusBar);
-
-          assert.notEqual(dataset.roaming, 'true');
-          assert.isUndefined(dataset.level);
-          assert.notEqual(dataset.searching, 'true');
-        });
+            mockSimSlots[slotIndex].simCard.cardState = null;
+            mockSimSlots[slotIndex].simCard.iccInfo = {};
+            sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(true);

-        test('no network with sim, sim locked', function() {
-          MockNavigatorMozMobileConnections[slotIndex].voice = {
-            connected: false,
-            relSignalStrength: null,
-            emergencyCallsOnly: false,
-            state: 'notSearching',
-            roaming: false,
-            network: {}
-          };
+            StatusBar.update.signal.call(StatusBar);

-          mockSimSlots[slotIndex].simCard.cardState = 'pinRequired';
-          mockSimSlots[slotIndex].simCard.iccInfo = {};
-          sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
-          sinon.stub(mockSimSlots[slotIndex], 'isLocked').returns(true);
+            assert.notEqual(dataset.roaming, 'true');
+            assert.isUndefined(dataset.level);
+            assert.notEqual(dataset.searching, 'true');
+          });

-          StatusBar.update.signal.call(StatusBar);
+          test('no network without sim, searching', function() {
+            MockNavigatorMozMobileConnections[slotIndex].voice = {
+              connected: false,
+              relSignalStrength: null,
+              emergencyCallsOnly: false,
+              state: 'searching',
+              roaming: false,
+              network: {}
+            };

-          assert.equal(fakeIcons.signals[slotIndex].hidden, true);
-        });
+            mockSimSlots[slotIndex].simCard.cardState = null;
+            mockSimSlots[slotIndex].simCard.iccInfo = {};
+            sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(true);

-        test('searching', function() {
-          MockNavigatorMozMobileConnections[slotIndex].voice = {
-            connected: false,
-            relSignalStrength: null,
-            emergencyCallsOnly: false,
-            state: 'searching',
-            roaming: false,
-            network: {}
-          };
-
-          mockSimSlots[slotIndex].simCard.cardState = 'ready';
-          mockSimSlots[slotIndex].simCard.iccInfo = {};
-          sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
-
-          StatusBar.update.signal.call(StatusBar);
-
-          assert.notEqual(dataset.roaming, 'true');
-          assert.equal(dataset.level, -1);
-          assert.equal(dataset.searching, 'true');
-        });
+            StatusBar.update.signal.call(StatusBar);

-        test('emergency calls only, no sim', function() {
-          MockNavigatorMozMobileConnections[slotIndex].voice = {
-            connected: false,
-            relSignalStrength: 80,
-            emergencyCallsOnly: true,
-            state: 'notSearching',
-            roaming: false,
-            network: {}
-          };
-
-          mockSimSlots[slotIndex].simCard.cardState = null;
-          mockSimSlots[slotIndex].simCard.iccInfo = {};
-          sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(true);
-
-          StatusBar.update.signal.call(StatusBar);
-
-          assert.notEqual(dataset.roaming, 'true');
-          assert.isUndefined(dataset.level);
-          assert.notEqual(dataset.searching, 'true');
-        });
+            assert.notEqual(dataset.roaming, 'true');
+            assert.isUndefined(dataset.level);
+            assert.notEqual(dataset.searching, 'true');
+          });

-        test('emergency calls only, with sim', function() {
-          MockNavigatorMozMobileConnections[slotIndex].voice = {
-            connected: false,
-            relSignalStrength: 80,
-            emergencyCallsOnly: true,
-            state: 'notSearching',
-            roaming: false,
-            network: {}
-          };
+          test('no network with sim, sim locked', function() {
+            MockNavigatorMozMobileConnections[slotIndex].voice = {
+              connected: false,
+              relSignalStrength: null,
+              emergencyCallsOnly: false,
+              state: 'notSearching',
+              roaming: false,
+              network: {}
+            };

-          mockSimSlots[slotIndex].simCard.cardState = 'pinRequired';
-          mockSimSlots[slotIndex].simCard.iccInfo = {};
-          sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
-          sinon.stub(mockSimSlots[slotIndex], 'isLocked').returns(true);
+            mockSimSlots[slotIndex].simCard.cardState = 'pinRequired';
+            mockSimSlots[slotIndex].simCard.iccInfo = {};
+            sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
+            sinon.stub(mockSimSlots[slotIndex], 'isLocked').returns(true);

-          StatusBar.update.signal.call(StatusBar);
+            StatusBar.update.signal.call(StatusBar);

-          assert.equal(fakeIcons.signals[slotIndex].hidden, true);
-        });
+            assert.equal(fakeIcons.signals[slotIndex].hidden, true);
+          });

-        test('emergency calls only, in call', function() {
-          MockNavigatorMozMobileConnections[slotIndex].voice = {
-            connected: false,
-            relSignalStrength: 80,
-            emergencyCallsOnly: true,
-            state: 'notSearching',
-            roaming: false,
-            network: {}
-          };
-
-          mockSimSlots[slotIndex].simCard.cardState = 'pinRequired';
-          mockSimSlots[slotIndex].simCard.iccInfo = {};
-          sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
-          sinon.stub(mockSimSlots[slotIndex], 'isLocked').returns(true);
-
-          MockNavigatorMozTelephony.active = {
-            state: 'connected',
-            serviceId: slotIndex
-          };
-
-          StatusBar.update.signal.call(StatusBar);
-
-          assert.notEqual(dataset.roaming, 'true');
-          assert.equal(dataset.level, 4);
-          assert.notEqual(dataset.searching, 'true');
-        });
+          test('searching', function() {
+            MockNavigatorMozMobileConnections[slotIndex].voice = {
+              connected: false,
+              relSignalStrength: null,
+              emergencyCallsOnly: false,
+              state: 'searching',
+              roaming: false,
+              network: {}
+            };

-        test('emergency calls only, dialing', function() {
-          MockNavigatorMozMobileConnections[slotIndex].voice = {
-            connected: false,
-            relSignalStrength: 80,
-            emergencyCallsOnly: true,
-            state: 'notSearching',
-            roaming: false,
-            network: {}
-          };
-
-          mockSimSlots[slotIndex].simCard.cardState = 'pinRequired';
-          mockSimSlots[slotIndex].simCard.iccInfo = {};
-          sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
-          sinon.stub(mockSimSlots[slotIndex], 'isLocked').returns(true);
-
-          MockNavigatorMozTelephony.active = {
-            state: 'dialing',
-            serviceId: slotIndex
-          };
-
-          StatusBar.update.signal.call(StatusBar);
-
-          assert.notEqual(dataset.roaming, 'true');
-          assert.equal(dataset.level, 4);
-          assert.notEqual(dataset.searching, 'true');
-        });
+            mockSimSlots[slotIndex].simCard.cardState = 'ready';
+            mockSimSlots[slotIndex].simCard.iccInfo = {};
+            sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);

-        test('emergency calls, passing a call', function() {
-          MockNavigatorMozMobileConnections[slotIndex].voice = {
-            connected: false,
-            relSignalStrength: 80,
-            emergencyCallsOnly: true,
-            state: 'notSearching',
-            roaming: false,
-            network: {}
-          };
-
-          mockSimSlots[slotIndex].simCard.cardState = 'pinRequired';
-          mockSimSlots[slotIndex].simCard.iccInfo = {};
-          sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
-          sinon.stub(mockSimSlots[slotIndex], 'isLocked').returns(true);
-
-          StatusBar.update.signal.call(StatusBar);
-
-          var activeCall = {
-            state: 'dialing',
-            serviceId: slotIndex
-          };
-
-          MockNavigatorMozTelephony.active = activeCall;
-          MockNavigatorMozTelephony.calls = [activeCall];
-
-          var evt = new CustomEvent('callschanged');
-          MockNavigatorMozTelephony.mTriggerEvent(evt);
-
-          assert.notEqual(dataset.roaming, 'true');
-          assert.equal(dataset.level, 4);
-          assert.notEqual(dataset.searching, 'true');
-        });
+            StatusBar.update.signal.call(StatusBar);

-        test('normal carrier', function() {
-          MockNavigatorMozMobileConnections[slotIndex].voice = {
-            connected: true,
-            relSignalStrength: 80,
-            emergencyCallsOnly: false,
-            state: 'notSearching',
-            roaming: false,
-            network: {}
-          };
-
-          mockSimSlots[slotIndex].simCard.cardState = 'ready';
-          mockSimSlots[slotIndex].simCard.iccInfo = {};
-          sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
-
-          StatusBar.update.signal.call(StatusBar);
-
-          assert.notEqual(dataset.roaming, 'true');
-          assert.equal(dataset.level, 4);
-          assert.notEqual(dataset.searching, 'true');
-        });
+            assert.notEqual(dataset.roaming, 'true');
+            assert.equal(dataset.level, -1);
+            assert.equal(dataset.searching, 'true');
+          });

-        test('airplane mode', function() {
-          MockNavigatorMozMobileConnections[slotIndex].voice = {
-            connected: true,
-            relSignalStrength: 80,
-            emergencyCallsOnly: false,
-            state: 'notSearching',
-            roaming: false,
-            network: {}
-          };
+          test('emergency calls only, no sim', function() {
+            MockNavigatorMozMobileConnections[slotIndex].voice = {
+              connected: false,
+              relSignalStrength: 80,
+              emergencyCallsOnly: true,
+              state: 'notSearching',
+              roaming: false,
+              network: {}
+            };

-          mockSimSlots[slotIndex].simCard.cardState = 'ready';
-          mockSimSlots[slotIndex].simCard.iccInfo = {};
-          sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
+            mockSimSlots[slotIndex].simCard.cardState = null;
+            mockSimSlots[slotIndex].simCard.iccInfo = {};
+            sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(true);

-          MockSettingsListener.mCallbacks['airplaneMode.enabled'](true);
+            StatusBar.update.signal.call(StatusBar);

-          assert.isFalse(StatusBar.icons.flightMode.hidden);
-          assert.isTrue(StatusBar.icons.data[slotIndex].hidden);
-        });
+            assert.notEqual(dataset.roaming, 'true');
+            assert.isUndefined(dataset.level);
+            assert.notEqual(dataset.searching, 'true');
+          });

-        test('roaming', function() {
-          MockNavigatorMozMobileConnections[slotIndex].voice = {
-            connected: true,
-            relSignalStrength: 80,
-            emergencyCallsOnly: false,
-            state: 'notSearching',
-            roaming: true,
-            network: {}
-          };
-
-          mockSimSlots[slotIndex].simCard.cardState = 'ready';
-          mockSimSlots[slotIndex].simCard.iccInfo = {};
-          sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
-
-          StatusBar.update.signal.call(StatusBar);
-
-          assert.equal(dataset.roaming, 'true');
-          assert.equal(dataset.level, 4);
-          assert.notEqual(dataset.searching, 'true');
-        });
+          test('emergency calls only, with sim', function() {
+            MockNavigatorMozMobileConnections[slotIndex].voice = {
+              connected: false,
+              relSignalStrength: 80,
+              emergencyCallsOnly: true,
+              state: 'notSearching',
+              roaming: false,
+              network: {}
+            };

-        test('emergency calls, roaming', function() {
-          MockNavigatorMozMobileConnections[slotIndex].voice = {
-            connected: false,
-            relSignalStrength: 80,
-            emergencyCallsOnly: true,
-            state: 'notSearching',
-            roaming: true,
-            network: {}
-          };
-
-          mockSimSlots[slotIndex].simCard.cardState = 'ready';
-          mockSimSlots[slotIndex].simCard.iccInfo = {};
-          sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
-
-          StatusBar.update.signal.call(StatusBar);
-
-          assert.notEqual(dataset.roaming, 'true');
-          assert.equal(dataset.level, -1);
-          assert.notEqual(dataset.searching, 'true');
-        });
+            mockSimSlots[slotIndex].simCard.cardState = 'pinRequired';
+            mockSimSlots[slotIndex].simCard.iccInfo = {};
+            sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
+            sinon.stub(mockSimSlots[slotIndex], 'isLocked').returns(true);

-        test('emergency calls, avoid infinite callback loop', function() {
-          MockNavigatorMozMobileConnections[slotIndex].voice = {
-            connected: false,
-            relSignalStrength: 80,
-            emergencyCallsOnly: true,
-            state: 'notSearching',
-            roaming: false,
-            network: {}
-          };
-
-          mockSimSlots[slotIndex].simCard.cardState = 'pinRequired';
-          mockSimSlots[slotIndex].simCard.iccInfo = {};
-          sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
-          sinon.stub(mockSimSlots[slotIndex], 'isLocked').returns(true);
-
-          var mockTel = MockNavigatorMozTelephony;
-
-          StatusBar.update.signal.call(StatusBar);
-          assert.equal(mockTel.mCountEventListener('callschanged',
-                                                   StatusBar), 1);
-
-          // Bug 880390: On B2G18 adding a 'callschanged' listener can trigger
-          // another event immediately.  To avoid an infinite loop, the
-          // listener must only be added once.  Simulate this immediate event
-          // here and then check that we still only have one listener.
-
-          var evt = new CustomEvent('callschanged');
-          mockTel.mTriggerEvent(evt);
-          assert.equal(mockTel.mCountEventListener('callschanged',
-                                                   StatusBar), 1);
-        });
+            StatusBar.update.signal.call(StatusBar);

-        test('EVDO connection, show data call signal strength', function() {
-          MockNavigatorMozMobileConnections[slotIndex].voice = {
-            connected: false,
-            relSignalStrength: 0,
-            emergencyCallsOnly: false,
-            state: 'notSearching',
-            roaming: false,
-            network: {}
-          };
-
-          MockNavigatorMozMobileConnections[slotIndex].data = {
-            connected: true,
-            relSignalStrength: 80,
-            type: 'evdo',
-            emergencyCallsOnly: false,
-            state: 'notSearching',
-            roaming: false,
-            network: {}
-          };
-
-          mockSimSlots[slotIndex].simCard.cardState = 'ready';
-          mockSimSlots[slotIndex].simCard.iccInfo = {};
-          sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
-
-          StatusBar.update.signal.call(StatusBar);
-          assert.equal(dataset.level, 4);
-        });
-      });
-    }
+            assert.equal(fakeIcons.signals[slotIndex].hidden, true);
+          });

-    for (var i = 0; i < mobileConnectionCount; i++) {
-      slotIndexTests(i);
+          test('emergency calls only, in call', function() {
+            MockNavigatorMozMobileConnections[slotIndex].voice = {
+              connected: false,
+              relSignalStrength: 80,
+              emergencyCallsOnly: true,
+              state: 'notSearching',
+              roaming: false,
+              network: {}
+            };
+
+            mockSimSlots[slotIndex].simCard.cardState = 'pinRequired';
+            mockSimSlots[slotIndex].simCard.iccInfo = {};
+            sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
+            sinon.stub(mockSimSlots[slotIndex], 'isLocked').returns(true);
+
+            MockNavigatorMozTelephony.active = {
+              state: 'connected',
+              serviceId: slotIndex
+            };
+
+            StatusBar.update.signal.call(StatusBar);
+
+            assert.notEqual(dataset.roaming, 'true');
+            assert.equal(dataset.level, 4);
+            assert.notEqual(dataset.searching, 'true');
+          });
+
+          test('emergency calls only, dialing', function() {
+            MockNavigatorMozMobileConnections[slotIndex].voice = {
+              connected: false,
+              relSignalStrength: 80,
+              emergencyCallsOnly: true,
+              state: 'notSearching',
+              roaming: false,
+              network: {}
+            };
+
+            mockSimSlots[slotIndex].simCard.cardState = 'pinRequired';
+            mockSimSlots[slotIndex].simCard.iccInfo = {};
+            sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
+            sinon.stub(mockSimSlots[slotIndex], 'isLocked').returns(true);
+
+            MockNavigatorMozTelephony.active = {
+              state: 'dialing',
+              serviceId: slotIndex
+            };
+
+            StatusBar.update.signal.call(StatusBar);
+
+            assert.notEqual(dataset.roaming, 'true');
+            assert.equal(dataset.level, 4);
+            assert.notEqual(dataset.searching, 'true');
+          });
+
+          test('emergency calls, passing a call', function() {
+            MockNavigatorMozMobileConnections[slotIndex].voice = {
+              connected: false,
+              relSignalStrength: 80,
+              emergencyCallsOnly: true,
+              state: 'notSearching',
+              roaming: false,
+              network: {}
+            };
+
+            mockSimSlots[slotIndex].simCard.cardState = 'pinRequired';
+            mockSimSlots[slotIndex].simCard.iccInfo = {};
+            sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
+            sinon.stub(mockSimSlots[slotIndex], 'isLocked').returns(true);
+
+            StatusBar.update.signal.call(StatusBar);
+
+            var activeCall = {
+              state: 'dialing',
+              serviceId: slotIndex
+            };
+
+            MockNavigatorMozTelephony.active = activeCall;
+            MockNavigatorMozTelephony.calls = [activeCall];
+
+            var evt = new CustomEvent('callschanged');
+            MockNavigatorMozTelephony.mTriggerEvent(evt);
+
+            assert.notEqual(dataset.roaming, 'true');
+            assert.equal(dataset.level, 4);
+            assert.notEqual(dataset.searching, 'true');
+          });
+
+          test('normal carrier', function() {
+            MockNavigatorMozMobileConnections[slotIndex].voice = {
+              connected: true,
+              relSignalStrength: 80,
+              emergencyCallsOnly: false,
+              state: 'notSearching',
+              roaming: false,
+              network: {}
+            };
+
+            mockSimSlots[slotIndex].simCard.cardState = 'ready';
+            mockSimSlots[slotIndex].simCard.iccInfo = {};
+            sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
+
+            StatusBar.update.signal.call(StatusBar);
+
+            assert.notEqual(dataset.roaming, 'true');
+            assert.equal(dataset.level, 4);
+            assert.notEqual(dataset.searching, 'true');
+          });
+
+          test('airplane mode', function() {
+            MockNavigatorMozMobileConnections[slotIndex].voice = {
+              connected: true,
+              relSignalStrength: 80,
+              emergencyCallsOnly: false,
+              state: 'notSearching',
+              roaming: false,
+              network: {}
+            };
+
+            mockSimSlots[slotIndex].simCard.cardState = 'ready';
+            mockSimSlots[slotIndex].simCard.iccInfo = {};
+            sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
+
+            MockSettingsListener.mCallbacks['airplaneMode.enabled'](true);
+
+            assert.isFalse(StatusBar.icons.flightMode.hidden);
+            assert.isTrue(StatusBar.icons.data[slotIndex].hidden);
+          });
+
+          test('roaming', function() {
+            MockNavigatorMozMobileConnections[slotIndex].voice = {
+              connected: true,
+              relSignalStrength: 80,
+              emergencyCallsOnly: false,
+              state: 'notSearching',
+              roaming: true,
+              network: {}
+            };
+
+            mockSimSlots[slotIndex].simCard.cardState = 'ready';
+            mockSimSlots[slotIndex].simCard.iccInfo = {};
+            sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
+
+            StatusBar.update.signal.call(StatusBar);
+
+            assert.equal(dataset.roaming, 'true');
+            assert.equal(dataset.level, 4);
+            assert.notEqual(dataset.searching, 'true');
+          });
+
+          test('emergency calls, roaming', function() {
+            MockNavigatorMozMobileConnections[slotIndex].voice = {
+              connected: false,
+              relSignalStrength: 80,
+              emergencyCallsOnly: true,
+              state: 'notSearching',
+              roaming: true,
+              network: {}
+            };
+
+            mockSimSlots[slotIndex].simCard.cardState = 'ready';
+            mockSimSlots[slotIndex].simCard.iccInfo = {};
+            sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
+
+            StatusBar.update.signal.call(StatusBar);
+
+            assert.notEqual(dataset.roaming, 'true');
+            assert.equal(dataset.level, -1);
+            assert.notEqual(dataset.searching, 'true');
+          });
+
+          test('emergency calls, avoid infinite callback loop', function() {
+            MockNavigatorMozMobileConnections[slotIndex].voice = {
+              connected: false,
+              relSignalStrength: 80,
+              emergencyCallsOnly: true,
+              state: 'notSearching',
+              roaming: false,
+              network: {}
+            };
+
+            mockSimSlots[slotIndex].simCard.cardState = 'pinRequired';
+            mockSimSlots[slotIndex].simCard.iccInfo = {};
+            sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
+            sinon.stub(mockSimSlots[slotIndex], 'isLocked').returns(true);
+
+            var mockTel = MockNavigatorMozTelephony;
+
+            StatusBar.update.signal.call(StatusBar);
+            assert.equal(mockTel.mCountEventListener('callschanged',
+                                                     StatusBar), 1);
+
+            // Bug 880390: On B2G18 adding a 'callschanged' listener can trigger
+            // another event immediately.  To avoid an infinite loop, the
+            // listener must only be added once.  Simulate this immediate event
+            // here and then check that we still only have one listener.
+
+            var evt = new CustomEvent('callschanged');
+            mockTel.mTriggerEvent(evt);
+            assert.equal(mockTel.mCountEventListener('callschanged',
+                                                     StatusBar), 1);
+          });
+
+          test('EVDO connection, show data call signal strength', function() {
+            MockNavigatorMozMobileConnections[slotIndex].voice = {
+              connected: false,
+              relSignalStrength: 0,
+              emergencyCallsOnly: false,
+              state: 'notSearching',
+              roaming: false,
+              network: {}
+            };
+
+            MockNavigatorMozMobileConnections[slotIndex].data = {
+              connected: true,
+              relSignalStrength: 80,
+              type: 'evdo',
+              emergencyCallsOnly: false,
+              state: 'notSearching',
+              roaming: false,
+              network: {}
+            };
+
+            mockSimSlots[slotIndex].simCard.cardState = 'ready';
+            mockSimSlots[slotIndex].simCard.iccInfo = {};
+            sinon.stub(mockSimSlots[slotIndex], 'isAbsent').returns(false);
+
+            StatusBar.update.signal.call(StatusBar);
+            assert.equal(dataset.level, 4);
+          });
+        });
+      })(i);
     }
   });

@@ -816,290 +776,148 @@ suite('system/Statusbar', function() {
       StatusBar.settingValues['ril.cf.enabled'] = defaultValue;
     });

-    function slotIndexTests(slotIndex) {
-      suite('slot: ' + slotIndex, function() {
-        test('call forwarding enabled', function() {
-          StatusBar.settingValues['ril.cf.enabled'][slotIndex] = true;
-          StatusBar.update.callForwarding.call(StatusBar);
-          assert.isFalse(StatusBar.icons.callForwardings[slotIndex].hidden);
-        });
-
-        test('call forwarding disabled', function() {
-          StatusBar.settingValues['ril.cf.enabled'][slotIndex] = false;
-          StatusBar.update.callForwarding.call(StatusBar);
-          assert.isTrue(StatusBar.icons.callForwardings[slotIndex].hidden);
-        });
-      });
-    }
-
     for (var i = 0; i < mobileConnectionCount; i++) {
-      slotIndexTests(i);
-    }
-  });
-
-  suite('data connection', function() {
-    function slotIndexTests(slotIndex) {
-      suite('slot: ' + slotIndex, function() {
-        suite('data connection unavailable', function() {
-          teardown(function() {
-            StatusBar.settingValues = {};
+      (function(slotIndex) {
+        suite('slot: ' + slotIndex, function() {
+          test('call forwarding enabled', function() {
+            StatusBar.settingValues['ril.cf.enabled'][slotIndex] = true;
+            StatusBar.update.callForwarding.call(StatusBar);
+            assert.isFalse(StatusBar.icons.callForwardings[slotIndex].hidden);
           });

-          test('radio disabled', function() {
-            StatusBar.settingValues['ril.radio.disabled'] = true;
-            StatusBar.update.data.call(StatusBar);
-            assert.isTrue(StatusBar.icons.data[slotIndex].hidden);
-            // Just because radio is disabled doesn't mean we're in airplane
-            // mode.
-            assert.isTrue(StatusBar.icons.flightMode.hidden);
-          });
-
-          test('data disabled', function() {
-            StatusBar.settingValues['ril.data.enabled'] = false;
-            StatusBar.update.data.call(StatusBar);
-            assert.isTrue(StatusBar.icons.data[slotIndex].hidden);
-          });
-
-          test('data not connected', function() {
-            MockNavigatorMozMobileConnections[slotIndex].data =
-              { connected: false };
-            StatusBar.update.data.call(StatusBar);
-            assert.isTrue(StatusBar.icons.data[slotIndex].hidden);
-          });
-
-          test('wifi icon is displayed', function() {
-            StatusBar.icons.wifi.hidden = false;
-            StatusBar.update.data.call(StatusBar);
-            assert.isTrue(StatusBar.icons.data[slotIndex].hidden);
+          test('call forwarding disabled', function() {
+            StatusBar.settingValues['ril.cf.enabled'][slotIndex] = false;
+            StatusBar.update.callForwarding.call(StatusBar);
+            assert.isTrue(StatusBar.icons.callForwardings[slotIndex].hidden);
           });
         });
+      })(i);
+    }
+  });

-        suite('data connection available', function() {
-          setup(function() {
-            StatusBar.settingValues['ril.radio.disabled'] = false;
-            StatusBar.settingValues['ril.data.enabled'] = true;
-            StatusBar.icons.wifi.hidden = true;
-          });
-
-          teardown(function() {
-            StatusBar.settingValues = {};
-          });
-
-          test('type lte', function() {
-            MockNavigatorMozMobileConnections[slotIndex].data = {
-              connected: true,
-              type: 'lte'
-            };
-            StatusBar.update.data.call(StatusBar);
-            assert.equal(StatusBar.icons.data[slotIndex].textContent, '4G');
-          });
-
-          // GSM
-          test('type hspa+', function() {
-            MockNavigatorMozMobileConnections[slotIndex].data = {
-              connected: true,
-              type: 'hspa+'
-            };
-            StatusBar.update.data.call(StatusBar);
-            assert.equal(StatusBar.icons.data[slotIndex].textContent, 'H+');
-          });
-
-          test('type hsdpa', function() {
-            MockNavigatorMozMobileConnections[slotIndex].data = {
-              connected: true,
-              type: 'hsdpa'
-            };
-            StatusBar.update.data.call(StatusBar);
-            assert.equal(StatusBar.icons.data[slotIndex].textContent, 'H');
-          });
-
-          test('type hsupa', function() {
-            MockNavigatorMozMobileConnections[slotIndex].data = {
-              connected: true,
-              type: 'hsupa'
-            };
-            StatusBar.update.data.call(StatusBar);
-            assert.equal(StatusBar.icons.data[slotIndex].textContent, 'H');
-          });
-
-          test('type hspa', function() {
-            MockNavigatorMozMobileConnections[slotIndex].data = {
-              connected: true,
-              type: 'hspa'
-            };
-            StatusBar.update.data.call(StatusBar);
-            assert.equal(StatusBar.icons.data[slotIndex].textContent, 'H');
-          });
-
-          test('type umts', function() {
-            MockNavigatorMozMobileConnections[slotIndex].data = {
-              connected: true,
-              type: 'umts'
-            };
-            StatusBar.update.data.call(StatusBar);
-            assert.equal(StatusBar.icons.data[slotIndex].textContent, '3G');
-          });
-
-          test('type edge', function() {
-            MockNavigatorMozMobileConnections[slotIndex].data = {
-              connected: true,
-              type: 'edge'
-            };
-            StatusBar.update.data.call(StatusBar);
-            assert.equal(StatusBar.icons.data[slotIndex].textContent, 'E');
-          });
+  suite('data connection', function() {
+    for (var i = 0; i < mobileConnectionCount; i++) {
+      (function(slotIndex) {
+        suite('slot: ' + slotIndex, function() {
+          suite('data connection unavailable', function() {
+            teardown(function() {
+              StatusBar.settingValues = {};
+            });

-          test('type gprs', function() {
-            MockNavigatorMozMobileConnections[slotIndex].data = {
-              connected: true,
-              type: 'gprs'
-            };
-            StatusBar.update.data.call(StatusBar);
-            assert.equal(StatusBar.icons.data[slotIndex].textContent, '2G');
-          });
+            test('radio disabled', function() {
+              StatusBar.settingValues['ril.radio.disabled'] = true;
+              StatusBar.update.data.call(StatusBar);
+              assert.isTrue(StatusBar.icons.data[slotIndex].hidden);
+              // Just because radio is disabled doesn't mean we're in airplane
+              // mode.
+              assert.isTrue(StatusBar.icons.flightMode.hidden);
+            });

-          // CDMA
-          test('type 1xrtt', function() {
-            MockNavigatorMozMobileConnections[slotIndex].data = {
-              connected: true,
-              type: '1xrtt'
-            };
-            StatusBar.update.data.call(StatusBar);
-            assert.equal(StatusBar.icons.data[slotIndex].textContent, '1x');
-          });
+            test('data disabled', function() {
+              StatusBar.settingValues['ril.data.enabled'] = false;
+              StatusBar.update.data.call(StatusBar);
+              assert.isTrue(StatusBar.icons.data[slotIndex].hidden);
+            });

-          test('type is95a', function() {
-            MockNavigatorMozMobileConnections[slotIndex].data = {
-              connected: true,
-              type: 'is95a'
-            };
-            StatusBar.update.data.call(StatusBar);
-            assert.equal(StatusBar.icons.data[slotIndex].textContent, '1x');
-          });
+            test('data not connected', function() {
+              MockNavigatorMozMobileConnections[slotIndex].data =
+                { connected: false };
+              StatusBar.update.data.call(StatusBar);
+              assert.isTrue(StatusBar.icons.data[slotIndex].hidden);
+            });

-          test('type is95b', function() {
-            MockNavigatorMozMobileConnections[slotIndex].data = {
-              connected: true,
-              type: 'is95b'
-            };
-            StatusBar.update.data.call(StatusBar);
-            assert.equal(StatusBar.icons.data[slotIndex].textContent, '1x');
+            test('wifi icon is displayed', function() {
+              StatusBar.icons.wifi.hidden = false;
+              StatusBar.update.data.call(StatusBar);
+              assert.isTrue(StatusBar.icons.data[slotIndex].hidden);
+            });
           });

-          // CDMA related to calls
-          suite('CDMA network types when there is a call',
-            function() {
-              test('type ehrpd', function() {
-                MockNavigatorMozTelephony.calls = [{}];
-                MockNavigatorMozMobileConnections[slotIndex].data = {
-                  connected: true,
-                  type: 'ehrpd'
-                };
-                StatusBar.update.data.call(StatusBar);
-                assert.equal(StatusBar.icons.data[slotIndex].textContent,
-                             '4G');
+          suite('data connection available', function() {
+            setup(function() {
+              StatusBar.settingValues['ril.radio.disabled'] = false;
+              StatusBar.settingValues['ril.data.enabled'] = true;
+              StatusBar.icons.wifi.hidden = true;
             });

-            test('type evdo0', function() {
-              MockNavigatorMozTelephony.calls = [{}];
-              MockNavigatorMozMobileConnections[slotIndex].data = {
-                connected: true,
-                type: 'evdo0'
-              };
-              StatusBar.update.data.call(StatusBar);
-              assert.equal(StatusBar.icons.data[slotIndex].textContent, '');
+            teardown(function() {
+              StatusBar.settingValues = {};
             });

-            test('type evdoa', function() {
-              MockNavigatorMozTelephony.calls = [{}];
+            test('type lte', function() {
               MockNavigatorMozMobileConnections[slotIndex].data = {
                 connected: true,
-                type: 'evdoa'
+                type: 'lte'
               };
               StatusBar.update.data.call(StatusBar);
-              assert.equal(StatusBar.icons.data[slotIndex].textContent, '');
+              assert.equal(StatusBar.icons.data[slotIndex].textContent, '4G');
             });

-            test('type evdob', function() {
-              MockNavigatorMozTelephony.calls = [{}];
+            // GSM
+            test('type hspa+', function() {
               MockNavigatorMozMobileConnections[slotIndex].data = {
                 connected: true,
-                type: 'evdob'
+                type: 'hspa+'
               };
               StatusBar.update.data.call(StatusBar);
-              assert.equal(StatusBar.icons.data[slotIndex].textContent, '');
+              assert.equal(StatusBar.icons.data[slotIndex].textContent, 'H+');
             });

-            test('type 1xrtt', function() {
-              MockNavigatorMozTelephony.calls = [{}];
+            test('type hsdpa', function() {
               MockNavigatorMozMobileConnections[slotIndex].data = {
                 connected: true,
-                type: '1xrtt'
+                type: 'hsdpa'
               };
               StatusBar.update.data.call(StatusBar);
-              assert.equal(StatusBar.icons.data[slotIndex].textContent, '');
+              assert.equal(StatusBar.icons.data[slotIndex].textContent, 'H');
             });

-            test('type is95a', function() {
-              MockNavigatorMozTelephony.calls = [{}];
+            test('type hsupa', function() {
               MockNavigatorMozMobileConnections[slotIndex].data = {
                 connected: true,
-                type: 'is95a'
+                type: 'hsupa'
               };
               StatusBar.update.data.call(StatusBar);
-              assert.equal(StatusBar.icons.data[slotIndex].textContent, '');
+              assert.equal(StatusBar.icons.data[slotIndex].textContent, 'H');
             });

-            test('type is95b', function() {
-              MockNavigatorMozTelephony.calls = [{}];
+            test('type hspa', function() {
               MockNavigatorMozMobileConnections[slotIndex].data = {
                 connected: true,
-                type: 'is95b'
+                type: 'hspa'
               };
               StatusBar.update.data.call(StatusBar);
-              assert.equal(StatusBar.icons.data[slotIndex].textContent, '');
-            });
-          });
-
-          suite('CDMA network types when there is no call',
-            function() {
-              test('type ehrpd', function() {
-                MockNavigatorMozMobileConnections[slotIndex].data = {
-                  connected: true,
-                  type: 'ehrpd'
-                };
-                StatusBar.update.data.call(StatusBar);
-                assert.equal(StatusBar.icons.data[slotIndex].textContent,
-                             '4G');
+              assert.equal(StatusBar.icons.data[slotIndex].textContent, 'H');
             });

-            test('type evdo0', function() {
+            test('type umts', function() {
               MockNavigatorMozMobileConnections[slotIndex].data = {
                 connected: true,
-                type: 'evdo0'
+                type: 'umts'
               };
               StatusBar.update.data.call(StatusBar);
-              assert.equal(StatusBar.icons.data[slotIndex].textContent, 'Ev');
+              assert.equal(StatusBar.icons.data[slotIndex].textContent, '3G');
             });

-            test('type evdoa', function() {
+            test('type edge', function() {
               MockNavigatorMozMobileConnections[slotIndex].data = {
                 connected: true,
-                type: 'evdoa'
+                type: 'edge'
               };
               StatusBar.update.data.call(StatusBar);
-              assert.equal(StatusBar.icons.data[slotIndex].textContent, 'Ev');
+              assert.equal(StatusBar.icons.data[slotIndex].textContent, 'E');
             });

-            test('type evdob', function() {
+            test('type gprs', function() {
               MockNavigatorMozMobileConnections[slotIndex].data = {
                 connected: true,
-                type: 'evdob'
+                type: 'gprs'
               };
               StatusBar.update.data.call(StatusBar);
-              assert.equal(StatusBar.icons.data[slotIndex].textContent, 'Ev');
+              assert.equal(StatusBar.icons.data[slotIndex].textContent, '2G');
             });

+            // CDMA
             test('type 1xrtt', function() {
               MockNavigatorMozMobileConnections[slotIndex].data = {
                 connected: true,
@@ -1126,13 +944,151 @@ suite('system/Statusbar', function() {
               StatusBar.update.data.call(StatusBar);
               assert.equal(StatusBar.icons.data[slotIndex].textContent, '1x');
             });
+
+            // CDMA related to calls
+            suite('CDMA network types when there is a call',
+              function() {
+                test('type ehrpd', function() {
+                  MockNavigatorMozTelephony.calls = [{}];
+                  MockNavigatorMozMobileConnections[slotIndex].data = {
+                    connected: true,
+                    type: 'ehrpd'
+                  };
+                  StatusBar.update.data.call(StatusBar);
+                  assert.equal(StatusBar.icons.data[slotIndex].textContent,
+                               '4G');
+              });
+
+              test('type evdo0', function() {
+                MockNavigatorMozTelephony.calls = [{}];
+                MockNavigatorMozMobileConnections[slotIndex].data = {
+                  connected: true,
+                  type: 'evdo0'
+                };
+                StatusBar.update.data.call(StatusBar);
+                assert.equal(StatusBar.icons.data[slotIndex].textContent, '');
+              });
+
+              test('type evdoa', function() {
+                MockNavigatorMozTelephony.calls = [{}];
+                MockNavigatorMozMobileConnections[slotIndex].data = {
+                  connected: true,
+                  type: 'evdoa'
+                };
+                StatusBar.update.data.call(StatusBar);
+                assert.equal(StatusBar.icons.data[slotIndex].textContent, '');
+              });
+
+              test('type evdob', function() {
+                MockNavigatorMozTelephony.calls = [{}];
+                MockNavigatorMozMobileConnections[slotIndex].data = {
+                  connected: true,
+                  type: 'evdob'
+                };
+                StatusBar.update.data.call(StatusBar);
+                assert.equal(StatusBar.icons.data[slotIndex].textContent, '');
+              });
+
+              test('type 1xrtt', function() {
+                MockNavigatorMozTelephony.calls = [{}];
+                MockNavigatorMozMobileConnections[slotIndex].data = {
+                  connected: true,
+                  type: '1xrtt'
+                };
+                StatusBar.update.data.call(StatusBar);
+                assert.equal(StatusBar.icons.data[slotIndex].textContent, '');
+              });
+
+              test('type is95a', function() {
+                MockNavigatorMozTelephony.calls = [{}];
+                MockNavigatorMozMobileConnections[slotIndex].data = {
+                  connected: true,
+                  type: 'is95a'
+                };
+                StatusBar.update.data.call(StatusBar);
+                assert.equal(StatusBar.icons.data[slotIndex].textContent, '');
+              });
+
+              test('type is95b', function() {
+                MockNavigatorMozTelephony.calls = [{}];
+                MockNavigatorMozMobileConnections[slotIndex].data = {
+                  connected: true,
+                  type: 'is95b'
+                };
+                StatusBar.update.data.call(StatusBar);
+                assert.equal(StatusBar.icons.data[slotIndex].textContent, '');
+              });
+            });
+
+            suite('CDMA network types when there is no call',
+              function() {
+                test('type ehrpd', function() {
+                  MockNavigatorMozMobileConnections[slotIndex].data = {
+                    connected: true,
+                    type: 'ehrpd'
+                  };
+                  StatusBar.update.data.call(StatusBar);
+                  assert.equal(StatusBar.icons.data[slotIndex].textContent,
+                               '4G');
+              });
+
+              test('type evdo0', function() {
+                MockNavigatorMozMobileConnections[slotIndex].data = {
+                  connected: true,
+                  type: 'evdo0'
+                };
+                StatusBar.update.data.call(StatusBar);
+                assert.equal(StatusBar.icons.data[slotIndex].textContent, 'Ev');
+              });
+
+              test('type evdoa', function() {
+                MockNavigatorMozMobileConnections[slotIndex].data = {
+                  connected: true,
+                  type: 'evdoa'
+                };
+                StatusBar.update.data.call(StatusBar);
+                assert.equal(StatusBar.icons.data[slotIndex].textContent, 'Ev');
+              });
+
+              test('type evdob', function() {
+                MockNavigatorMozMobileConnections[slotIndex].data = {
+                  connected: true,
+                  type: 'evdob'
+                };
+                StatusBar.update.data.call(StatusBar);
+                assert.equal(StatusBar.icons.data[slotIndex].textContent, 'Ev');
+              });
+
+              test('type 1xrtt', function() {
+                MockNavigatorMozMobileConnections[slotIndex].data = {
+                  connected: true,
+                  type: '1xrtt'
+                };
+                StatusBar.update.data.call(StatusBar);
+                assert.equal(StatusBar.icons.data[slotIndex].textContent, '1x');
+              });
+
+              test('type is95a', function() {
+                MockNavigatorMozMobileConnections[slotIndex].data = {
+                  connected: true,
+                  type: 'is95a'
+                };
+                StatusBar.update.data.call(StatusBar);
+                assert.equal(StatusBar.icons.data[slotIndex].textContent, '1x');
+              });
+
+              test('type is95b', function() {
+                MockNavigatorMozMobileConnections[slotIndex].data = {
+                  connected: true,
+                  type: 'is95b'
+                };
+                StatusBar.update.data.call(StatusBar);
+                assert.equal(StatusBar.icons.data[slotIndex].textContent, '1x');
+              });
+            });
           });
         });
-      });
-    }
-
-    for (var i = 0; i < mobileConnectionCount; i++) {
-      slotIndexTests(i);
+      })(i);
     }
   });

@@ -1559,9 +1515,9 @@ suite('system/Statusbar', function() {
       suite('if it\'s not a tap and the statusbar is not fully displayed',
       function() {
         test('it should not forward any events', function() {
-          fakeDispatch('touchstart', 100, 0);
+          var touchstart = fakeDispatch('touchstart', 100, 0);
           fakeDispatch('touchmove', 100, 8);
-          fakeDispatch('touchend', 100, 8);
+          var touchend = fakeDispatch('touchend', 100, 8);

           assert.isTrue(forwardSpy.notCalled);
         });
diff --git a/apps/system/test/unit/storage_test.js b/apps/system/test/unit/storage_test.js
index c2b1241..4f9cfe2 100644
--- a/apps/system/test/unit/storage_test.js
+++ b/apps/system/test/unit/storage_test.js
@@ -1,7 +1,7 @@
 'use strict';
 /* global MocksHelper, MockSettingsListener, Storage */

-require('/shared/test/unit/mocks/mock_system.js');
+requireApp('system/test/unit/mock_system.js');
 requireApp('system/shared/test/unit/mocks/mock_settings_listener.js');
 requireApp('system/js/storage.js');

diff --git a/apps/system/test/unit/system_dialog_test.js b/apps/system/test/unit/system_dialog_test.js
index c4d8b9c..df40c6b 100644
--- a/apps/system/test/unit/system_dialog_test.js
+++ b/apps/system/test/unit/system_dialog_test.js
@@ -4,13 +4,11 @@
 requireApp('system/test/unit/mock_app_window_manager.js');
 requireApp('system/test/unit/mock_layout_manager.js');
 requireApp('system/test/unit/mock_system_dialog_manager.js');
-requireApp('system/test/unit/mock_keyboard_manager.js');

 var mocksForSystemDialog = new MocksHelper([
   'AppWindowManager',
   'LayoutManager',
-  'SystemDialogManager',
-  'KeyboardManager'
+  'SystemDialogManager'
 ]).init();

 suite('system/SystemDialog', function() {
diff --git a/apps/system/test/unit/system_nfc_connect_dialog_test.js b/apps/system/test/unit/system_nfc_connect_dialog_test.js
index 2da08d1..ac70f79 100644
--- a/apps/system/test/unit/system_nfc_connect_dialog_test.js
+++ b/apps/system/test/unit/system_nfc_connect_dialog_test.js
@@ -3,7 +3,7 @@
 /* globals NfcConnectSystemDialog, document, MockL10n,
             MockBluetooth  */

-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/test/unit/mock_bluetooth.js');

 suite('NfcConnectSystemDialog', function() {
diff --git a/apps/system/test/unit/system_simcard_dialog_test.js b/apps/system/test/unit/system_simcard_dialog_test.js
index 22441e0..e667d9a 100644
--- a/apps/system/test/unit/system_simcard_dialog_test.js
+++ b/apps/system/test/unit/system_simcard_dialog_test.js
@@ -4,13 +4,11 @@
 requireApp('system/test/unit/mock_app_window_manager.js');
 requireApp('system/test/unit/mock_layout_manager.js');
 requireApp('system/test/unit/mock_system_dialog_manager.js');
-requireApp('system/test/unit/mock_keyboard_manager.js');

 var mocksForSystemSimPinDialog = new MocksHelper([
   'AppWindowManager',
   'LayoutManager',
-  'SystemDialogManager',
-  'KeyboardManager'
+  'SystemDialogManager'
 ]).init();

 suite('system/SimPinSystemDialog', function() {
diff --git a/apps/system/test/unit/task_manager_test.js b/apps/system/test/unit/task_manager_test.js
index a474c4a..22f46f8 100644
--- a/apps/system/test/unit/task_manager_test.js
+++ b/apps/system/test/unit/task_manager_test.js
@@ -10,7 +10,7 @@ requireApp('system/test/unit/mock_trusted_ui_manager.js');
 requireApp('system/test/unit/mock_utility_tray.js');
 requireApp('system/test/unit/mock_app_window_manager.js');
 requireApp('system/test/unit/mock_app_window.js');
-require('/shared/test/unit/mocks/mock_system.js');
+requireApp('system/test/unit/mock_system.js');
 requireApp('system/test/unit/mock_orientation_manager.js');
 requireApp('system/test/unit/mock_rocketbar.js');
 requireApp('system/test/unit/mock_sleep_menu.js');
@@ -671,38 +671,6 @@ suite('system/TaskManager >', function() {
       taskManager.isRocketbar = false;
       taskManager.show();
     });
-
-    suite('display empty cardsview >', function() {
-      setup(function(done) {
-        assert.isFalse(taskManager.isShown(), 'taskManager isnt showing yet');
-        waitForEvent(window, 'cardviewshown')
-          .then(function() { done(); }, failOnReject);
-        taskManager.show();
-      });
-
-      test('on touchstart, empty cardsview is closed and back to home screen',
-      function(done) {
-        var events = [];
-        assert.isTrue(cardsView.classList.contains('empty'));
-        assert.isTrue(cardsView.classList.contains('active'));
-        assert.isTrue(taskManager.isShown());
-
-        waitForEvent(window, 'cardviewclosedhome').then(function(){
-          events.push('cardviewclosedhome');
-        }, failOnReject).then(function() {
-          assert.equal(events.length, 1, 'sanity check, only 1 event received');
-          assert.equal(events[0],
-                      'cardviewclosedhome',
-                      'cardviewclosedhome event raised when touch starts');
-          assert.isFalse(cardsView.classList.contains('active'));
-          assert.isFalse(taskManager.isShown());
-          done();
-        }, failOnReject);
-
-        cardsView.dispatchEvent(
-          createTouchEvent('touchstart', cardsView, 100, 100));
-      });
-    });
   });

   suite('hide > ', function() {
diff --git a/apps/system/test/unit/text_selection_dialog_test.js b/apps/system/test/unit/text_selection_dialog_test.js
index 7cb2bdc..0c8652e 100644
--- a/apps/system/test/unit/text_selection_dialog_test.js
+++ b/apps/system/test/unit/text_selection_dialog_test.js
@@ -4,6 +4,7 @@
 mocha.globals(['AppWindow', 'TextSelectionDialog', 'System', 'BaseUI',
   'layoutManager']);

+// requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/test/unit/mock_layout_manager.js');
 requireApp('system/test/unit/mock_app_window.js');

@@ -16,8 +17,7 @@ suite('system/TextSelectionDialog', function() {
   mocksForTextSelectionDialog.attachTestHelpers();
   var mockDetail = {};
   setup(function(done) {
-    window.layoutManager = new LayoutManager();
-    window.layoutManager.start();
+    window.layoutManager = new LayoutManager().start();
     window.layoutManager.width = 360;
     window.layoutManager.height = 480;
     mockDetail = {
diff --git a/apps/system/test/unit/update_manager_test.js b/apps/system/test/unit/update_manager_test.js
index c9be265..8d5be69 100644
--- a/apps/system/test/unit/update_manager_test.js
+++ b/apps/system/test/unit/update_manager_test.js
@@ -15,7 +15,7 @@ requireApp('system/test/unit/mock_notification_screen.js');
 requireApp('system/shared/test/unit/mocks/mock_navigator_moz_settings.js');
 requireApp('system/shared/test/unit/mocks/mock_navigator_wake_lock.js');
 requireApp('system/shared/test/unit/mocks/mock_navigator_moz_mobile_connection.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/test/unit/mock_asyncStorage.js');

 var mocksForUpdateManager = new MocksHelper([
diff --git a/apps/system/test/unit/utility_tray_test.js b/apps/system/test/unit/utility_tray_test.js
index efe97f7..e19afd5 100644
--- a/apps/system/test/unit/utility_tray_test.js
+++ b/apps/system/test/unit/utility_tray_test.js
@@ -2,7 +2,7 @@

 requireApp('system/shared/test/unit/mocks/mock_lazy_loader.js');
 requireApp('system/test/unit/mock_app_window_manager.js');
-require('/shared/test/unit/mocks/mock_system.js');
+requireApp('system/test/unit/mock_system.js');

 var mocksHelperForUtilityTray = new MocksHelper([
   'AppWindowManager',
@@ -61,12 +61,6 @@ suite('system/UtilityTray', function() {
     var screen = document.createElement('div');
     screen.style.cssText = 'height: 100px; display: block;';

-    var placeholder = document.createElement('div');
-    placeholder.style.cssText = 'height: 100px; display: block;';
-
-    var notifications = document.createElement('div');
-    notifications.style.cssText = 'height: 100px; display: block;';
-
     stubById = this.sinon.stub(document, 'getElementById', function(id) {
       switch (id) {
         case 'statusbar':
@@ -79,10 +73,6 @@ suite('system/UtilityTray', function() {
           return overlay;
         case 'screen':
           return screen;
-        case 'notifications-placeholder':
-          return placeholder;
-        case 'utility-tray-notifications':
-          return notifications;
         default:
           return null;
       }
diff --git a/apps/system/test/unit/value_selector_test.js b/apps/system/test/unit/value_selector_test.js
index 2a81d56..1c7e468 100644
--- a/apps/system/test/unit/value_selector_test.js
+++ b/apps/system/test/unit/value_selector_test.js
@@ -1,186 +1,136 @@
 'use strict';

-/* global loadBodyHTML, MocksHelper, MockL10n, AppWindow, ValueSelector */
-
+require('/shared/js/input_parser.js');
 require('/shared/test/unit/load_body_html_helper.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
-require('/shared/test/unit/mocks/mock_lazy_loader.js');
-requireApp('system/shared/js/template.js');
-requireApp('system/test/unit/mock_app_window.js');
-
-var mocksForValueSelector = new MocksHelper([
-  'AppWindow',
-  'LazyLoader'
-]).init();
+require('/apps/system/js/value_selector/value_picker.js');
+require('/shared/test/unit/mocks/mock_settings_listener.js');
+require('/apps/system/test/unit/mock_l10n.js');

 suite('value selector/value selector', function() {
-  var realL10n, realKeyboard, stubMozl10nGet, app, fragment, vs;
-
-  var fakeAppConfig = {
-    url: 'app://www.fake/index.html',
-    manifest: {},
-    manifestURL: 'app://wwww.fake/ManifestURL',
-    origin: 'app://www.fake',
-    name: 'Fake Application'
-  };
-  var fakeTimeInputMethodContextChangeEvent = {
-    type: '_inputmethod-contextchange',
-    detail: {
-      inputType: 'time'
-    }
-  };
-  var fakeDateInputMethodContextChangeEvent = {
-    type: '_inputmethod-contextchange',
-    detail: {
-      inputType: 'date'
-    }
-  };
-  var fakeSheetsTransitionStart = { type: '_sheetstransitionstart' };
-  var fakeClosing = { type: '_closing' };
-  var fakeOpening = { type: '_opening' };
-  var fakeLocalizedEvent = { type: '_localized' };
-
-  mocksForValueSelector.attachTestHelpers();
-
-  setup(function(done) {
+  var realL10n;
+  var realKeyboard;
+  var realSettings;
+  var stubMozl10nGet;
+  var element;
+  var screen;
+  var timePickerContainer;
+  var timeSeparator;
+
+  suiteSetup(function(done) {
+    realSettings = navigator.mozSettings;
+    navigator.mozSettings = MockNavigatorSettings;

     realL10n = navigator.mozL10n;
     navigator.mozL10n = MockL10n;

-    realKeyboard = window.navigator.mozInputMethod;
-    window.navigator.mozInputMethod = sinon.stub();
-
     loadBodyHTML('/index.html');

-    requireApp('system/js/base_ui.js');
-    requireApp('system/js/value_selector/value_picker.js');
-    requireApp('system/js/value_selector/spin_date_picker.js');
-    requireApp('system/js/value_selector/value_selector.js', function() {
-      app = new AppWindow(fakeAppConfig);
-      vs = new ValueSelector(app);
+    timePickerContainer =
+      document.querySelector('#time-picker .picker-container');
+    timeSeparator = document.getElementById('hours-minutes-separator');

-      fragment = document.createElement('div');
-      fragment.innerHTML = vs.view();
-      document.body.appendChild(fragment);
+    realKeyboard = window.navigator.mozInputMethod;
+    window.navigator.mozInputMethod = sinon.stub();

-      done();
-    });
+    require('/apps/system/js/value_selector/value_selector.js', done);
   });

-  teardown(function() {
+  suiteTeardown(function() {
+    navigator.mozSettings = realSettings;
     navigator.mozL10n = realL10n;
     window.navigator.mozInputMethod = realKeyboard;
     document.body.innerHTML = '';
-    fragment = null;
-    vs = null;
-    app = null;
   });

-  test('New', function() {
-    assert.isDefined(vs.instanceID);
+  setup(function() {
+    ValueSelector.init();
+    element = document.getElementById('value-selector');
   });

-  test('Time Picker (en-US)', function() {
-    stubMozl10nGet =
-      this.sinon.stub(navigator.mozL10n, 'get').returns('%I:%M %p');
-
-    assert.isNull(vs._timePicker);
-
-    vs.handleEvent(fakeTimeInputMethodContextChangeEvent);
-
-    assert.isFalse(vs.element.hidden);
-    assert.isFalse(vs.elements.timePickerPopup.hidden);
-    assert.isTrue(vs._timePicker.is12hFormat);
-    assert.equal('time', vs._currentPickerType);
-    assert.equal(':',
-      vs._timePicker.elements.hoursMinutesSeparator.textContent);
-    assert.ok(vs.elements.timePickerContainer.classList.contains('format12h'));
+  test('show', function() {
+    ValueSelector.show();
+    assert.isFalse(element.hidden);
   });

-  test('Time Picker (pt-BR)', function() {
-    stubMozl10nGet =
-      this.sinon.stub(navigator.mozL10n, 'get').returns('%Hh%M');
+  test('hide', function() {
+    ValueSelector.hide();
+    assert.isTrue(element.hidden);
+  });

-    vs.handleEvent(fakeTimeInputMethodContextChangeEvent);
+  test('hide on "appopened" event', function() {
+    ValueSelector.show();
+    assert.isFalse(element.hidden);

-    assert.isFalse(vs._timePicker.is12hFormat);
-    assert.equal('h',
-      vs._timePicker.elements.hoursMinutesSeparator.textContent);
-    assert.ok(vs.elements.timePickerContainer.classList.contains('format24h'));
+    ValueSelector.handleEvent({ type: 'appopened' });
+    assert.isTrue(element.hidden);
   });

-  test('Time Picker (zh-CN)', function() {
-    stubMozl10nGet =
-      this.sinon.stub(navigator.mozL10n, 'get').returns('%p %I:%M');
+  test('hide on "appclosing" event', function() {
+    ValueSelector.show();
+    assert.isFalse(element.hidden);

-    vs.handleEvent(fakeTimeInputMethodContextChangeEvent);
-
-    assert.isTrue(vs._timePicker.is12hFormat);
-    assert.equal(':',
-      vs._timePicker.elements.hoursMinutesSeparator.textContent);
-    assert.ok(vs.elements.timePickerContainer.classList.contains(
-      'format12hrev'));
+    ValueSelector.handleEvent({ type: 'appclosing' });
+    assert.isTrue(element.hidden);
   });

-  test('Time Picker reset at language change', function() {
-    // start with 12h format
-    var sinon = this.sinon;
-    stubMozl10nGet = sinon.stub(navigator.mozL10n, 'get').returns('%I:%M %p');
-    vs.handleEvent(fakeTimeInputMethodContextChangeEvent);
-    assert.ok(vs.elements.timePickerContainer.classList.contains('format12h'));
-    stubMozl10nGet.restore();
+  test('hide on "activityclosing" event', function() {
+    ValueSelector.show();
+    assert.isFalse(element.hidden);

-    // change to 24h format
-    vs.handleEvent(fakeLocalizedEvent);
-    assert.isNull(vs._timePicker);
-    stubMozl10nGet = sinon.stub(navigator.mozL10n, 'get').returns('%H:%M');
-    vs.handleEvent(fakeTimeInputMethodContextChangeEvent);
-    assert.ok(vs.elements.timePickerContainer.classList.contains(
-      'format24h'));
+    ValueSelector.handleEvent({ type: 'activityclosing' });
+    assert.isTrue(element.hidden);
   });

-  test('Date Picker (en-US)', function() {
-    assert.isNull(vs._datePicker);
-
-    vs.handleEvent(fakeDateInputMethodContextChangeEvent);
+  test('cancel on "sheetstransitionstart" event', function() {
+    ValueSelector.show();
+    this.sinon.stub(ValueSelector, 'cancel');

-    assert.isFalse(vs.element.hidden);
-    assert.isFalse(vs.elements.spinDatePickerPopup.hidden);
-    assert.equal('date', vs._currentPickerType);
+    ValueSelector.handleEvent({ type: 'sheetstransitionstart' });
+    sinon.assert.calledOnce(ValueSelector.cancel);
   });

-  test('hide', function() {
-    var stub_setVisibleForScreenReader = this.sinon.stub(app,
-      '_setVisibleForScreenReader');
-    vs.handleEvent(fakeTimeInputMethodContextChangeEvent);
-    assert.isTrue(stub_setVisibleForScreenReader.calledWith(false));
-    vs.hide();
-    assert.isTrue(vs.element.hidden);
-    assert.isTrue(stub_setVisibleForScreenReader.calledWith(true));
+  test('Time Picker (en-US)', function() {
+    stubMozl10nGet =
+      this.sinon.stub(navigator.mozL10n, 'get').returns('%I:%M %p');
+    ValueSelector.showTimePicker();
+    assert.isTrue(TimePicker.timePicker.is12hFormat);
+    assert.equal('time', ValueSelector._currentPickerType);
+    assert.equal(':', timeSeparator.textContent);
+    assert.ok(timePickerContainer.classList.contains('format12h'));
   });

-  test('cancel on "_sheetstransitionstart" event', function() {
-    vs.handleEvent(fakeTimeInputMethodContextChangeEvent);
-    this.sinon.stub(vs, 'cancel');
-
-    vs.handleEvent(fakeSheetsTransitionStart);
-    sinon.assert.calledOnce(vs.cancel);
+  test('Time Picker (pt-BR)', function() {
+    stubMozl10nGet =
+      this.sinon.stub(navigator.mozL10n, 'get').returns('%Hh%M');
+    TimePicker.initTimePicker();
+    assert.isFalse(TimePicker.timePicker.is12hFormat);
+    assert.equal('h', timeSeparator.textContent);
+    assert.ok(timePickerContainer.classList.contains('format24h'));
   });

-  test('hide on "_closing" event', function() {
-    vs.handleEvent(fakeTimeInputMethodContextChangeEvent);
-    this.sinon.stub(vs, 'hide');
-
-    vs.handleEvent(fakeClosing);
-    sinon.assert.calledOnce(vs.hide);
+  test('Time Picker (zh-CN)', function() {
+    stubMozl10nGet =
+      this.sinon.stub(navigator.mozL10n, 'get').returns('%p %I:%M');
+    TimePicker.initTimePicker();
+    assert.isTrue(TimePicker.timePicker.is12hFormat);
+    assert.equal(':', timeSeparator.textContent);
+    assert.ok(timePickerContainer.classList.contains('format12hrev'));
   });

-  test('hide on "_opening" event', function() {
-    vs.handleEvent(fakeTimeInputMethodContextChangeEvent);
-    this.sinon.stub(vs, 'hide');
+  test('Time Picker reset at language change', function() {
+    // start with 12h format
+    stubMozl10nGet =
+      this.sinon.stub(navigator.mozL10n, 'get').returns('%I:%M %p');
+    TimePicker.initTimePicker();
+    assert.ok(timePickerContainer.classList.contains('format12h'));
+    stubMozl10nGet.restore();

-    vs.handleEvent(fakeOpening);
-    sinon.assert.calledOnce(vs.hide);
+    // change to 24h format
+    ValueSelector._timePickerInitialized = false;
+    TimePicker.uninitTimePicker();
+    stubMozl10nGet =
+      this.sinon.stub(navigator.mozL10n, 'get').returns('%H:%M');
+    TimePicker.initTimePicker();
+    assert.ok(timePickerContainer.classList.contains('format24h'));
   });
-
 });
diff --git a/apps/system/test/unit/visibility_manager_test.js b/apps/system/test/unit/visibility_manager_test.js
index 35a67f3..7ffcbac 100644
--- a/apps/system/test/unit/visibility_manager_test.js
+++ b/apps/system/test/unit/visibility_manager_test.js
@@ -1,12 +1,11 @@
 /* globals MocksHelper, VisibilityManager,
-           MockAttentionScreen, MockTaskManager */
+           MockAttentionScreen */
 'use strict';

 requireApp('system/test/unit/mock_orientation_manager.js');
-requireApp('system/test/unit/mock_task_manager.js');
 requireApp('system/shared/test/unit/mocks/mock_manifest_helper.js');
 requireApp('system/test/unit/mock_attention_screen.js');
-require('/shared/test/unit/mocks/mock_system.js');
+requireApp('system/test/unit/mock_system.js');

 var mocksForVisibilityManager = new MocksHelper([
   'AttentionScreen', 'System'
@@ -22,8 +21,7 @@ suite('system/VisibilityManager', function() {
     stubById = this.sinon.stub(document, 'getElementById');
     stubById.returns(document.createElement('div'));
     requireApp('system/js/visibility_manager.js', function() {
-      visibilityManager = new VisibilityManager();
-      visibilityManager.start();
+      visibilityManager = new VisibilityManager().start();
       done();
     });
   });
@@ -74,6 +72,20 @@ suite('system/VisibilityManager', function() {
       assert.isTrue(stubPublish.calledOnce);
     });

+    test('lockscreen-request-unlock should be ignore if' +
+          ' it is launching camera', function() {
+      var stubPublish = this.sinon.stub(visibilityManager, 'publish');
+
+      visibilityManager.handleEvent({
+        type: 'lockscreen-request-unlock',
+        detail: {
+          activity: true
+        }
+      });
+
+      assert.isFalse(stubPublish.called);
+    });
+
     test('attentionscreenshow', function() {
       var stubPublish = this.sinon.stub(visibilityManager, 'publish');
       visibilityManager.handleEvent({
@@ -171,49 +183,5 @@ suite('system/VisibilityManager', function() {

       assert.isFalse(visibilityManager._normalAudioChannelActive);
     });
-
-    test('show task manager, hide windows from screen reader', function () {
-      var stubPublish = this.sinon.stub(visibilityManager, 'publish');
-      visibilityManager.handleEvent({
-        type: 'cardviewshown'
-      });
-
-      assert.isTrue(stubPublish.called);
-      assert.isTrue(stubPublish.calledWith('hidewindowforscreenreader'));
-    });
-
-    test('hide task manager, unhide windows from screen reader', function () {
-      var stubPublish = this.sinon.stub(visibilityManager, 'publish');
-      visibilityManager.handleEvent({
-        type: 'cardviewclosed'
-      });
-
-      assert.isTrue(stubPublish.called);
-      assert.isTrue(stubPublish.calledWith('showwindowforscreenreader'));
-    });
-
-    test('show homescreen when task manager is showing', function () {
-      var stubPublish = this.sinon.stub(visibilityManager, 'publish');
-      window.taskManager = new MockTaskManager();
-      window.taskManager.show();
-      visibilityManager.handleEvent({
-        type: 'homescreenopened'
-      });
-
-      assert.isTrue(stubPublish.called);
-      assert.isTrue(stubPublish.calledWith('hidewindowforscreenreader'));
-    });
-
-    test('show homescreen when task manager is hidden', function () {
-      var stubPublish = this.sinon.stub(visibilityManager, 'publish');
-      window.taskManager = new MockTaskManager();
-      window.taskManager.hide();
-      visibilityManager.handleEvent({
-        type: 'homescreenopened'
-      });
-
-      assert.isFalse(stubPublish.called);
-      assert.isFalse(stubPublish.calledWith('hidewindowforscreenreader'));
-    });
   });
 });
diff --git a/apps/system/test/unit/voicemail_test.js b/apps/system/test/unit/voicemail_test.js
index 74973e4..80d9abc 100644
--- a/apps/system/test/unit/voicemail_test.js
+++ b/apps/system/test/unit/voicemail_test.js
@@ -18,10 +18,10 @@
 requireApp('system/js/voicemail.js');
 requireApp('system/shared/js/settings_helper.js');

-requireApp('system/shared/test/unit/mocks/mock_simslot.js');
-requireApp('system/shared/test/unit/mocks/mock_simslot_manager.js');
+requireApp('system/js/mock_simslot.js');
+requireApp('system/js/mock_simslot_manager.js');
 requireApp('system/test/unit/mock_activity.js');
-require('/shared/test/unit/mocks/mock_l10n.js');
+requireApp('system/test/unit/mock_l10n.js');
 requireApp('system/test/unit/mock_navigator_moz_voicemail.js');
 requireApp('system/test/unit/mock_modal_dialog.js');
 requireApp('system/shared/test/unit/mocks/mock_navigator_moz_settings.js');
@@ -269,107 +269,66 @@ suite('voicemail notification', function() {
         });
     });

-    function serviceIdTests(serviceId) {
-      suite('sim count: ' + (i + 1), function() {
-        suiteSetup(function() {
-          // When service id is 2, we test the multi sim case.
-          this.isMultiSIM = (serviceId !== 0);
-          sinon.stub(SIMSlotManager, 'isMultiSIM').returns(this.isMultiSIM);
-        });
-
-        suiteTeardown(function() {
-          SIMSlotManager.isMultiSIM.restore();
-        });
-
-        suite('showNotification should be called with correct parameters',
-          function() {
-            setup(function() {
-              this.voiceNumbers = ['111', '222'];
-              MockNavigatorMozVoicemail.mServiceId = serviceId;
-              MockNavigatorMozVoicemail.mNumbers = this.voiceNumbers;
-              MockNavigatorMozVoicemail.mHasMessages = true;
-              sinon.spy(Voicemail, 'showNotification');
-            });
-
-            teardown(function() {
-              Voicemail.showNotification.restore();
-            });
-
-            test('should/should not display SIM indicator', function() {
-              var baseTitle = 'aaaa';
-              var multiSimTitle =
-                MockL10n.get('voicemailNotificationMultiSim', {
-                  n: 2,
-                  title: baseTitle
-                });
-
-              Voicemail.showNotification(
-                baseTitle, 'bbbb', '1111', serviceId);
-
-              sinon.assert.calledWithNew(notificationSpy);
-              sinon.assert.calledOnce(notificationSpy);
-              assert.equal(notificationSpy.firstCall.args[1].body, 'bbbb');
-              assert.equal(notificationSpy.firstCall.args[1].tag,
-                           'voicemailNotification:' + serviceId);
-
-              if (this.isMultiSIM) {
-                assert.equal(
-                  notificationSpy.firstCall.args[0], multiSimTitle);
-              } else {
-                assert.equal(notificationSpy.firstCall.args[0], baseTitle);
-              }
-            });
-
-            test('with returnMessage, with voicemail number', function(done) {
-              MockNavigatorMozVoicemail.mTriggerEvent('statuschanged');
-              setTimeout((function() {
-                // display the message count as title
-                var expectedTitle = MockNavigatorMozVoicemail.mMessage;
-                // display the voice mail number as body
-                var expectedText = 'dialNumber{"number":"' +
-                  this.voiceNumbers[serviceId] + '"}';
-
-                sinon.assert.calledWithExactly(Voicemail.showNotification,
-                  expectedTitle, expectedText,
-                  this.voiceNumbers[serviceId], serviceId);
-
-                done();
-              }).bind(this));
-            });
-
-            test('without returnMessage, with voicemail number',
-              function(done) {
-                MockNavigatorMozVoicemail.mMessage = null;
+    for (var i = 0; i < 2; i++) {
+      (function(serviceId) {
+        suite('sim count: ' + (i + 1), function() {
+          suiteSetup(function() {
+            // When service id is 2, we test the multi sim case.
+            this.isMultiSIM = (serviceId !== 0);
+            sinon.stub(SIMSlotManager, 'isMultiSIM').returns(this.isMultiSIM);
+          });

-                MockNavigatorMozVoicemail.mTriggerEvent('statuschanged');
-                setTimeout((function() {
-                  // display the message count as title
-                  var expectedTitle = 'newVoicemails{"n":' +
-                    MockNavigatorMozVoicemail.mMessageCount + '}';
-                  // display the voice mail number as body
-                  var expectedText = 'dialNumber{"number":"' +
-                    MockNavigatorMozVoicemail.mNumbers[serviceId] + '"}';
+          suiteTeardown(function() {
+            SIMSlotManager.isMultiSIM.restore();
+          });

-                  sinon.assert.calledWithExactly(Voicemail.showNotification,
-                    expectedTitle, expectedText,
-                    this.voiceNumbers[serviceId], serviceId);
+          suite('showNotification should be called with correct parameters',
+            function() {
+              setup(function() {
+                this.voiceNumbers = ['111', '222'];
+                MockNavigatorMozVoicemail.mServiceId = serviceId;
+                MockNavigatorMozVoicemail.mNumbers = this.voiceNumbers;
+                MockNavigatorMozVoicemail.mHasMessages = true;
+                sinon.spy(Voicemail, 'showNotification');
+              });

-                  done();
-                }).bind(this));
-            });
+              teardown(function() {
+                Voicemail.showNotification.restore();
+              });

-            test('without returnMessage, messageCount is zero',
-              function(done) {
-                MockNavigatorMozVoicemail.mMessage = null;
-                MockNavigatorMozVoicemail.mMessageCount = 0;
+              test('should/should not display SIM indicator', function() {
+                var baseTitle = 'aaaa';
+                var multiSimTitle =
+                  MockL10n.get('voicemailNotificationMultiSim', {
+                    n: 2,
+                    title: baseTitle
+                  });
+
+                Voicemail.showNotification(
+                  baseTitle, 'bbbb', '1111', serviceId);
+
+                sinon.assert.calledWithNew(notificationSpy);
+                sinon.assert.calledOnce(notificationSpy);
+                assert.equal(notificationSpy.firstCall.args[1].body, 'bbbb');
+                assert.equal(notificationSpy.firstCall.args[1].tag,
+                             'voicemailNotification:' + serviceId);
+
+                if (this.isMultiSIM) {
+                  assert.equal(
+                    notificationSpy.firstCall.args[0], multiSimTitle);
+                } else {
+                  assert.equal(notificationSpy.firstCall.args[0], baseTitle);
+                }
+              });

+              test('with returnMessage, with voicemail number', function(done) {
                 MockNavigatorMozVoicemail.mTriggerEvent('statuschanged');
                 setTimeout((function() {
-                  // display the unknown message as title
-                  var expectedTitle = 'newVoicemailsUnknown';
+                  // display the message count as title
+                  var expectedTitle = MockNavigatorMozVoicemail.mMessage;
                   // display the voice mail number as body
                   var expectedText = 'dialNumber{"number":"' +
-                    MockNavigatorMozVoicemail.mNumbers[serviceId] + '"}';
+                    this.voiceNumbers[serviceId] + '"}';

                   sinon.assert.calledWithExactly(Voicemail.showNotification,
                     expectedTitle, expectedText,
@@ -377,47 +336,41 @@ suite('voicemail notification', function() {

                   done();
                 }).bind(this));
-            });
-
-            test('without voicemail number', function(done) {
-              MockNavigatorMozVoicemail.mNumbers = [];
-
-              MockNavigatorMozVoicemail.mTriggerEvent('statuschanged');
-              setTimeout((function() {
-                // display the message as title
-                var expectedTitle = MockNavigatorMozVoicemail.mMessage;
-                // display the message as body
-                var expectedText = MockNavigatorMozVoicemail.mMessage;
+              });

-                sinon.assert.calledWithExactly(Voicemail.showNotification,
-                  expectedTitle, expectedText, undefined, serviceId);
+              test('without returnMessage, with voicemail number',
+                function(done) {
+                  MockNavigatorMozVoicemail.mMessage = null;

-                done();
-              }).bind(this));
-            });
+                  MockNavigatorMozVoicemail.mTriggerEvent('statuschanged');
+                  setTimeout((function() {
+                    // display the message count as title
+                    var expectedTitle = 'newVoicemails{"n":' +
+                      MockNavigatorMozVoicemail.mMessageCount + '}';
+                    // display the voice mail number as body
+                    var expectedText = 'dialNumber{"number":"' +
+                      MockNavigatorMozVoicemail.mNumbers[serviceId] + '"}';

-            suite('value from settings', function() {
-              setup(function() {
-                MockNavigatorMozVoicemail.mNumbers = [];
-                MockSettingsHelper.instances['ril.iccInfo.mbdn'] =
-                  {value: this.voiceNumbers};
-              });
+                    sinon.assert.calledWithExactly(Voicemail.showNotification,
+                      expectedTitle, expectedText,
+                      this.voiceNumbers[serviceId], serviceId);

-              teardown(function() {
-                MockNavigatorMozVoicemail.mNumbers = this.voiceNumbers;
-                MockSettingsHelper.instances['ril.iccInfo.mbdn'] =
-                  {value: undefined};
+                    done();
+                  }).bind(this));
               });

-              test('without voicemail number, with ril.iccInfo.mbdn',
+              test('without returnMessage, messageCount is zero',
                 function(done) {
+                  MockNavigatorMozVoicemail.mMessage = null;
+                  MockNavigatorMozVoicemail.mMessageCount = 0;
+
                   MockNavigatorMozVoicemail.mTriggerEvent('statuschanged');
                   setTimeout((function() {
-                    // display the message as title
-                    var expectedTitle = MockNavigatorMozVoicemail.mMessage;
-                    // display the message as body
+                    // display the unknown message as title
+                    var expectedTitle = 'newVoicemailsUnknown';
+                    // display the voice mail number as body
                     var expectedText = 'dialNumber{"number":"' +
-                      this.voiceNumbers[serviceId] + '"}';
+                      MockNavigatorMozVoicemail.mNumbers[serviceId] + '"}';

                     sinon.assert.calledWithExactly(Voicemail.showNotification,
                       expectedTitle, expectedText,
@@ -425,14 +378,59 @@ suite('voicemail notification', function() {

                     done();
                   }).bind(this));
+              });
+
+              test('without voicemail number', function(done) {
+                MockNavigatorMozVoicemail.mNumbers = [];
+
+                MockNavigatorMozVoicemail.mTriggerEvent('statuschanged');
+                setTimeout((function() {
+                  // display the message as title
+                  var expectedTitle = MockNavigatorMozVoicemail.mMessage;
+                  // display the message as body
+                  var expectedText = MockNavigatorMozVoicemail.mMessage;
+
+                  sinon.assert.calledWithExactly(Voicemail.showNotification,
+                    expectedTitle, expectedText, undefined, serviceId);
+
+                  done();
+                }).bind(this));
+              });
+
+              suite('value from settings', function() {
+                setup(function() {
+                  MockNavigatorMozVoicemail.mNumbers = [];
+                  MockSettingsHelper.instances['ril.iccInfo.mbdn'] =
+                    {value: this.voiceNumbers};
                 });
-            });
-        });
-      });
-    }

-    for (var i = 0; i < 2; i++) {
-      serviceIdTests(i);
+                teardown(function() {
+                  MockNavigatorMozVoicemail.mNumbers = this.voiceNumbers;
+                  MockSettingsHelper.instances['ril.iccInfo.mbdn'] =
+                    {value: undefined};
+                });
+
+                test('without voicemail number, with ril.iccInfo.mbdn',
+                  function(done) {
+                    MockNavigatorMozVoicemail.mTriggerEvent('statuschanged');
+                    setTimeout((function() {
+                      // display the message as title
+                      var expectedTitle = MockNavigatorMozVoicemail.mMessage;
+                      // display the message as body
+                      var expectedText = 'dialNumber{"number":"' +
+                        this.voiceNumbers[serviceId] + '"}';
+
+                      sinon.assert.calledWithExactly(Voicemail.showNotification,
+                        expectedTitle, expectedText,
+                        this.voiceNumbers[serviceId], serviceId);
+
+                      done();
+                    }).bind(this));
+                  });
+              });
+          });
+        });
+      })(i);
     }
   });

diff --git a/apps/verticalhome/build/default-homescreens.json b/apps/verticalhome/build/default-homescreens.json
index 98f899b..3b82130 100644
--- a/apps/verticalhome/build/default-homescreens.json
+++ b/apps/verticalhome/build/default-homescreens.json
@@ -24,8 +24,7 @@
     ]
   ],
   "preferences": {
-    "grid.cols": 3,
-    "cols.preference.enabled": true
+    "grid.cols": 3
   },
   "bookmarks": [
     {
diff --git a/apps/verticalhome/index.html b/apps/verticalhome/index.html
index 20c417e..b3327ba 100644
--- a/apps/verticalhome/index.html
+++ b/apps/verticalhome/index.html
@@ -85,7 +85,6 @@
     </div>

     <gaia-menu id="contextmenu-dialog" hidden>
-      <button id="homescreen-settings-action" data-l10n-id="homescreen-settings" type="button"></button>
       <button id="change-wallpaper-action" data-l10n-id="change-wallpaper" type="button"></button>
       <button id="create-smart-collection" data-l10n-id="add-smart-collections" type="button"></button>
     </gaia-menu>
diff --git a/apps/verticalhome/js/configurator.js b/apps/verticalhome/js/configurator.js
index 28860f8..576626e 100644
--- a/apps/verticalhome/js/configurator.js
+++ b/apps/verticalhome/js/configurator.js
@@ -5,11 +5,6 @@

 var configurator = (function() {

-  const CAPABILITIES = {
-    LOW: 'low',
-    HIGH: 'high'
-  };
-
   // We're going to use the mcc_mnc as a semaphore as well as to store its
   // value during the singleVariant file's processing time.
   var mcc_mnc;
@@ -168,47 +163,12 @@ var configurator = (function() {
   }

   function setup() {
-    navigator.getFeature('hardware.memory').then(mem => {
-      // If capability is defined in the build or customization.
-      var capability = conf && conf.preferences && conf.preferences.capability;
-      var colsPrefEnabled = conf && conf.preferences &&
-        conf.preferences['cols.preference.enabled'];
-
-      if (!capability) {
-        capability = CAPABILITIES.HIGH;
-        // Devices below 512mb are served a lower quality version.
-        // Currently the following changes are made for low capability devices:
-        // - Icons default to 4 per row.
-        // - Icon resolution is reduced.
-        // - Icon rendering does not account for devicePixelRatio.
-        if (mem < 512) {
-          capability = CAPABILITIES.LOW;
-          colsPrefEnabled = false;
-        }
-      }
-      verticalPreferences.put('capability', capability);
-      verticalPreferences.put('cols.preference.enabled', colsPrefEnabled);
-      setupColumns(capability);
-    });
-  }
-
-  /**
-   * Sets up the default columns. For low capability devices, default to four
-   * columns per row as this saves on memory.
-   */
-  function setupColumns(capability) {
-    var defaultCols = conf && conf.preferences &&
+    var colsByDefault = conf && conf.preferences &&
                           conf.preferences['grid.cols'] || undefined;
-
-    // Set default capability to 4 for low-end devices.
-    if (capability === CAPABILITIES.LOW) {
-      defaultCols = 4;
-    }
-
-    if (defaultCols) {
+    if (colsByDefault) {
       verticalPreferences.get('grid.cols').then(function(cols) {
         // Set the number of cols by default in preference's datastore
-        !cols && verticalPreferences.put('grid.cols', defaultCols);
+        !cols && verticalPreferences.put('grid.cols', colsByDefault);
       });
     }
   }
diff --git a/apps/verticalhome/js/contextmenu_ui.js b/apps/verticalhome/js/contextmenu_ui.js
index d767e4d..8bd06b4 100644
--- a/apps/verticalhome/js/contextmenu_ui.js
+++ b/apps/verticalhome/js/contextmenu_ui.js
@@ -11,7 +11,6 @@
     this.dialog = document.getElementById('contextmenu-dialog');
     this.collectionOption = document.getElementById('create-smart-collection');
     this.wallpaperOption = document.getElementById('change-wallpaper-action');
-    this.settingsOption = document.getElementById('homescreen-settings-action');

     this.handleCancel = this._handleCancel.bind(this);
   }
@@ -38,7 +37,6 @@
       this.dialog.removeAttribute('hidden');
       this.collectionOption.addEventListener('click', this);
       this.wallpaperOption.addEventListener('click', this);
-      this.settingsOption.addEventListener('click', this);
       window.addEventListener('visibilitychange', this);
     },

@@ -47,7 +45,6 @@
       this.dialog.setAttribute('hidden', '');
       this.collectionOption.removeEventListener('click', this);
       this.wallpaperOption.removeEventListener('click', this);
-      this.settingsOption.removeEventListener('click', this);
       window.removeEventListener('visibilitychange', this);

       window.dispatchEvent(new CustomEvent('context-menu-close'));
@@ -96,18 +93,6 @@
             alert(this.error.name);
           }
         };
-      },
-
-      'homescreen-settings-action': function() {
-        this.hide();
-
-        new MozActivity({
-          name: 'configure',
-          data: {
-            target: 'device',
-            section: 'homescreen'
-          }
-        });
       }
     },

diff --git a/apps/verticalhome/js/search.js b/apps/verticalhome/js/search.js
index b91f3bf..8d2264a 100644
--- a/apps/verticalhome/js/search.js
+++ b/apps/verticalhome/js/search.js
@@ -24,12 +24,7 @@
     }

     var input = document.getElementById('search');
-    input.addEventListener('click', this.open.bind(this));
-    // Prevent the context menu from appearing as we will not allow
-    // long-tapping on the search bar later in 2.1.
-    input.addEventListener('contextmenu', (e) => {
-      e.stopPropagation();
-    });
+    input.addEventListener('touchstart', this.open.bind(this));
   }

   Search.prototype = {
diff --git a/apps/verticalhome/js/sources/application.js b/apps/verticalhome/js/sources/application.js
index 41254b4..6754f66 100644
--- a/apps/verticalhome/js/sources/application.js
+++ b/apps/verticalhome/js/sources/application.js
@@ -122,15 +122,8 @@

     appMgr.onuninstall = function onuninstall(event) {
       var application = event.application;
-      var manifest = application.updateManifest || application.manifest;
-
       this.removeIconFromGrid(application.manifestURL);
       app.itemStore.save(app.grid.getItems());
-
-      if (app.HIDDEN_ROLES.indexOf(manifest.role) !== -1) {
-        return;
-      }
-
       appManager.sendEventToCollectionApp('uninstall',
         { id: application.manifestURL });
     }.bind(this);
@@ -187,9 +180,7 @@
       var appObject = this.mapToApp({
         manifestURL: application.manifestURL
       });
-      var lastDivider = app.grid.removeUntilDivider();
       app.grid.add(appObject);
-      app.grid.add(lastDivider);
       app.grid.render();
     },

diff --git a/apps/verticalhome/js/sources/bookmark.js b/apps/verticalhome/js/sources/bookmark.js
index 467494a..dfa8297 100644
--- a/apps/verticalhome/js/sources/bookmark.js
+++ b/apps/verticalhome/js/sources/bookmark.js
@@ -1,6 +1,7 @@
 'use strict';
 /* global GaiaGrid */
 /* global BookmarksDatabase */
+/* global appManager */

 (function(exports) {

@@ -84,6 +85,10 @@
         case 'updated':
           this.addIconToGrid(e.target);
           app.itemStore.save(app.grid.getItems());
+          if (e.type === 'added') {
+            appManager.sendEventToCollectionApp('install',
+              { id: e.target.id });
+          }
           break;
         case 'removed':
           // The 'id' of a bookmark is really the url.
diff --git a/apps/verticalhome/js/statusbar.js b/apps/verticalhome/js/statusbar.js
index defab88..33d3c96 100644
--- a/apps/verticalhome/js/statusbar.js
+++ b/apps/verticalhome/js/statusbar.js
@@ -37,8 +37,6 @@
         case 'editmode-start':
           window.removeEventListener('context-menu-open', this);
           window.removeEventListener('context-menu-close', this);
-          window.removeEventListener('gaia-confirm-open', this);
-          window.removeEventListener('gaia-confirm-close', this);
           /* falls through */
         case 'context-menu-open':
         case 'gaia-confirm-open':
@@ -48,8 +46,6 @@
         case 'editmode-end':
           window.addEventListener('context-menu-open', this);
           window.addEventListener('context-menu-close', this);
-          window.addEventListener('gaia-confirm-open', this);
-          window.addEventListener('gaia-confirm-close', this);
           /* falls through */
         case 'context-menu-close':
         case 'gaia-confirm-close':
@@ -59,17 +55,9 @@
         case 'collection-close':
         case 'collections-create-return':
         case 'scroll':
-          this.setAppearance(this.calculateAppearance());
-          break;
-        case 'visibilitychange':
-          // If the document is not hidden, set appearance based on scroll top.
-          if (document.hidden) {
-            break;
-          }
-          // Note: we always want to set statusbar transparency on
-          // visibilitychange, so we remove the cached appearance value.
-          this.appearance = null;
-          this.setAppearance(this.calculateAppearance());
+          var scrollTop = this.scrollable.scrollTop;
+          this.setAppearance(scrollTop > this.threshold ? APPEARANCE.OPAQUE :
+                                         APPEARANCE.SEMI_TRANSPARENT);
           break;
       }
     },
@@ -93,7 +81,6 @@
           window.addEventListener('context-menu-open', this);
           window.addEventListener('gaia-confirm-open', this);
           window.addEventListener('gaia-confirm-close', this);
-          window.addEventListener('visibilitychange', this);
           this.setAppearance(APPEARANCE.SEMI_TRANSPARENT);
         }.bind(this), function fail(reason) {
           console.error('Cannot notify changes of appearance: ', reason);
@@ -101,14 +88,6 @@
       );
     },

-    /**
-     * Calculate the appearance of the status bar based on scroll state.
-     */
-    calculateAppearance: function() {
-      return this.scrollable.scrollTop > this.threshold ?
-        APPEARANCE.OPAQUE : APPEARANCE.SEMI_TRANSPARENT;
-    },
-
     setAppearance: function(value) {
       if (this.appearance === value) {
         return;
diff --git a/apps/verticalhome/locales/homescreen.en-US.properties b/apps/verticalhome/locales/homescreen.en-US.properties
index 33da4c7..919a1fb 100644
--- a/apps/verticalhome/locales/homescreen.en-US.properties
+++ b/apps/verticalhome/locales/homescreen.en-US.properties
@@ -8,7 +8,6 @@ delete=Delete
 cancel=Cancel

 # Context menu options
-homescreen-settings=Homescreen Settings
 change-wallpaper=Change Wallpaper
 add-smart-collections=Add Smart Collections

diff --git a/apps/verticalhome/manifest.webapp b/apps/verticalhome/manifest.webapp
index 3bc9031..74b0714 100644
--- a/apps/verticalhome/manifest.webapp
+++ b/apps/verticalhome/manifest.webapp
@@ -9,7 +9,6 @@
     "url": "https://github.com/mozilla-b2g/gaia"
   },
   "permissions": {
-    "feature-detection": {},
     "mobileconnection":{},
     "open-remote-window":{},
     "storage": {},
@@ -37,11 +36,10 @@
     }
   },
   "icons": {
-    "84": "/style/icons/vertical_84.png",
-    "126": "/style/icons/vertical_126.png",
-    "142": "/style/icons/vertical_142.png",
-    "189": "/style/icons/vertical_189.png",
-    "284": "/style/icons/vertical_284.png"
+    "30": "/style/icons/vertical_30.png",
+    "45": "/style/icons/vertical_45.png",
+    "60": "/style/icons/vertical_60.png",
+    "68": "/style/icons/vertical_68.png"
   },
   "orientation": "default",
   "activities": {},
diff --git a/apps/verticalhome/style/icons/vertical_126.png b/apps/verticalhome/style/icons/vertical_126.png
deleted file mode 100644
index 5ea6d9e..0000000
Binary files a/apps/verticalhome/style/icons/vertical_126.png and /dev/null differ
diff --git a/apps/verticalhome/style/icons/vertical_142.png b/apps/verticalhome/style/icons/vertical_142.png
deleted file mode 100644
index 5e46cd8..0000000
Binary files a/apps/verticalhome/style/icons/vertical_142.png and /dev/null differ
diff --git a/apps/verticalhome/style/icons/vertical_189.png b/apps/verticalhome/style/icons/vertical_189.png
deleted file mode 100644
index 98bb293..0000000
Binary files a/apps/verticalhome/style/icons/vertical_189.png and /dev/null differ
diff --git a/apps/verticalhome/style/icons/vertical_256.png b/apps/verticalhome/style/icons/vertical_256.png
deleted file mode 100644
index 15690c7..0000000
Binary files a/apps/verticalhome/style/icons/vertical_256.png and /dev/null differ
diff --git a/apps/verticalhome/style/icons/vertical_284.png b/apps/verticalhome/style/icons/vertical_284.png
deleted file mode 100644
index aa2d1ce..0000000
Binary files a/apps/verticalhome/style/icons/vertical_284.png and /dev/null differ
diff --git a/apps/verticalhome/style/icons/vertical_30.png b/apps/verticalhome/style/icons/vertical_30.png
new file mode 100644
index 0000000..3113378
Binary files /dev/null and b/apps/verticalhome/style/icons/vertical_30.png differ
diff --git a/apps/verticalhome/style/icons/vertical_45.png b/apps/verticalhome/style/icons/vertical_45.png
new file mode 100644
index 0000000..755ce5e
Binary files /dev/null and b/apps/verticalhome/style/icons/vertical_45.png differ
diff --git a/apps/verticalhome/style/icons/vertical_60.png b/apps/verticalhome/style/icons/vertical_60.png
new file mode 100644
index 0000000..1ac19b5
Binary files /dev/null and b/apps/verticalhome/style/icons/vertical_60.png differ
diff --git a/apps/verticalhome/style/icons/vertical_68.png b/apps/verticalhome/style/icons/vertical_68.png
new file mode 100644
index 0000000..0da0973
Binary files /dev/null and b/apps/verticalhome/style/icons/vertical_68.png differ
diff --git a/apps/verticalhome/style/icons/vertical_84.png b/apps/verticalhome/style/icons/vertical_84.png
deleted file mode 100644
index a6f8a9c..0000000
Binary files a/apps/verticalhome/style/icons/vertical_84.png and /dev/null differ
diff --git a/apps/verticalhome/test/marionette/app_pending_update_test.js b/apps/verticalhome/test/marionette/app_pending_update_test.js
index 795beed..8db704b 100644
--- a/apps/verticalhome/test/marionette/app_pending_update_test.js
+++ b/apps/verticalhome/test/marionette/app_pending_update_test.js
@@ -34,11 +34,8 @@ marionette('Vertical Home - Packaged App Update', function() {

     // wait for the system app to be running
     system.waitForStartup();
-    client.apps.launch(Home2.URL);
-    subject.waitForLaunch();

     // install the app
-    client.switchToFrame();
     appInstall.installPackage(server.packageManifestURL);

     // switch to the homescreen
diff --git a/apps/verticalhome/test/marionette/app_uninstall_test.js b/apps/verticalhome/test/marionette/app_uninstall_test.js
index 1dd4c06..28548f6 100644
--- a/apps/verticalhome/test/marionette/app_uninstall_test.js
+++ b/apps/verticalhome/test/marionette/app_uninstall_test.js
@@ -59,8 +59,6 @@ marionette('Vertical - App Uninstall', function() {
       el.scrollIntoView(false);
     });

-    home.waitForSystemBanner();
-
     // remove the icon
     remove.click();
     // confirm the dialog to ensure it was removed.
diff --git a/apps/verticalhome/test/marionette/collection_localization_test.js b/apps/verticalhome/test/marionette/collection_localization_test.js
index 32aa370..252ad4c 100644
--- a/apps/verticalhome/test/marionette/collection_localization_test.js
+++ b/apps/verticalhome/test/marionette/collection_localization_test.js
@@ -57,16 +57,12 @@ marionette('Vertical - Collection', function() {
       });
     });

-    /*
-    // XXX: Loading this locale file seems to no longer work.
-    // Hardcode the expected value for now.
     var expected = home.l10n(
       '/locales-obj/qps-ploc.json',
       // XXX: harcoded number 376 taken from the fixture
       'collection-categoryId-376'
     );
-    */
-    var expected = 'Ḗḗƞŧḗḗřŧȧȧīīƞḿḗḗƞŧ'; // Entertainment
+
     client.waitFor(function() {
       return expected === collectionIcon.text();
     });
diff --git a/apps/verticalhome/test/marionette/collection_pin_dragdrop_test.js b/apps/verticalhome/test/marionette/collection_pin_dragdrop_test.js
index b36ec1a..b86f898 100644
--- a/apps/verticalhome/test/marionette/collection_pin_dragdrop_test.js
+++ b/apps/verticalhome/test/marionette/collection_pin_dragdrop_test.js
@@ -1,5 +1,6 @@
 'use strict';

+var assert = require('assert');
 var Actions = require('marionette-client').Actions;
 var Bookmark = require('./lib/bookmark');
 var Collection = require('./lib/collection');
@@ -44,7 +45,7 @@ marionette('Vertical - Collection', function() {
     var dialerManifest = 'app://communications.gaiamobile.org/manifest.webapp';
     var dialerEntryPoint = 'dialer';

-    collection.enterCreateScreen(1);
+    collection.enterCreateScreen();

     // A collection name from the cateories_list.json stub
     var collectionName = 'Around Me';
@@ -56,9 +57,20 @@ marionette('Vertical - Collection', function() {
     var phoneIcon = home.getIcon(dialerManifest, dialerEntryPoint);
     var collectionIcon = collection.getCollectionByName(collectionName);

+    var bodyHeight = client.findElement('body').size().height;
+    var iconTop = phoneIcon.scriptWith(function(el) {
+      return el.getBoundingClientRect().top;
+    });
+
     actions
       .press(phoneIcon)
       .wait(1)
+
+      // Move the phone icon to the bottom of the screen to scroll down.
+      .moveByOffset(0, bodyHeight - iconTop)
+      .wait(4)
+
+      // Now drop the icon into the collection
       .move(collectionIcon)
       .release()
       .wait(1)
@@ -71,9 +83,7 @@ marionette('Vertical - Collection', function() {
     // Enter the created collection.
     collection.enterCollection(collectionIcon);

-    var expected = home.localizedAppName('communications', 'dialer', 'en-US');
-    client.waitFor(function() {
-      return collection.firstPinnedResult.text() === expected;
-    });
+    assert.equal(collection.firstPinnedResult.text(),
+      home.localizedAppName('communications', 'dialer', 'en-US'));
   });
 });
diff --git a/apps/verticalhome/test/marionette/lib/collection.js b/apps/verticalhome/test/marionette/lib/collection.js
index 0799337..5114de3 100644
--- a/apps/verticalhome/test/marionette/lib/collection.js
+++ b/apps/verticalhome/test/marionette/lib/collection.js
@@ -112,23 +112,13 @@ Collection.prototype = {

   /**
    * Enters the create collection screen from the homescreen.
-   * @param {Integer} position The desired position to create the collection.
    */
-  enterCreateScreen: function(position) {
+  enterCreateScreen: function() {
     var selectors = Collection.Selectors;
     var container = this.client.helper.waitForElement(
       selectors.contextMenuTarget);
     this.actions.longPress(container, 1).perform();

-    if (position !== undefined) {
-      // Manually override the collection insertion position.
-      // This is to simplify dragdrop logic into the collection.
-      this.client.executeScript(function(position) {
-        window.wrappedJSObject.app.itemStore.collectionSource.insertPosition =
-          position;
-      }, [position]);
-    }
-
     this.client.helper.waitForElement(selectors.menuAddButton).click();
   },

diff --git a/apps/verticalhome/test/marionette/lib/home2.js b/apps/verticalhome/test/marionette/lib/home2.js
index 552edfa..1eaca72 100644
--- a/apps/verticalhome/test/marionette/lib/home2.js
+++ b/apps/verticalhome/test/marionette/lib/home2.js
@@ -231,14 +231,15 @@ Home2.prototype = {
     var client = this.client.scope({context: 'chrome'});

     var file = 'app://' + app + '.gaiamobile.org/manifest.webapp';
-    var manifest = client.executeAsyncScript(function(file) {
+    var manifest = client.executeScript(function(file) {
       var xhr = new XMLHttpRequest();
-      xhr.open('GET', file, true);
+      var data;
+      xhr.open('GET', file, false); // Intentional sync
       xhr.onload = function(o) {
-        var data = JSON.parse(xhr.response);
-        marionetteScriptFinished(data);
+        data = JSON.parse(xhr.response);
       };
       xhr.send(null);
+      return data;
     }, [file]);

     var locales;
@@ -256,14 +257,15 @@ Home2.prototype = {
    * @param {String} key of the string to lookup.
    */
   l10n: function(file, key) {
-    var string = this.client.executeAsyncScript(function(file, key) {
+    var string = this.client.executeScript(function(file, key) {
       var xhr = new XMLHttpRequest();
-      xhr.open('GET', file, true);
+      var data;
+      xhr.open('GET', file, false); // Intentional sync
       xhr.onload = function(o) {
-        var data = JSON.parse(xhr.response);
-        marionetteScriptFinished(data);
+        data = JSON.parse(xhr.response);
       };
       xhr.send(null);
+      return data;
     }, [file, key]);

     return string[key];
@@ -273,16 +275,6 @@ Home2.prototype = {
     return this.client.executeScript(function(selector, clazz) {
       return document.querySelector(selector).classList.contains(clazz);
     }, [selector, clazz]);
-  },
-
-  /**
-   * Waits for the system banner to go away and switches back to the homescreen
-   */
-  waitForSystemBanner: function() {
-    this.client.switchToFrame();
-    var banner = this.client.findElement('.banner.generic-dialog');
-    this.client.helper.waitForElementToDisappear(banner);
-    this.client.switchToFrame(this.system.getHomescreenIframe());
   }
 };

diff --git a/apps/verticalhome/test/marionette/manifest.ini b/apps/verticalhome/test/marionette/manifest.ini
deleted file mode 100644
index 3939e58..0000000
--- a/apps/verticalhome/test/marionette/manifest.ini
+++ /dev/null
@@ -1,33 +0,0 @@
-[app_hosted_install_test.js]
-[search_string_test.js]
-[app_packaged_resume_test.js]
-[app_unrecoverable_error_test.js]
-[collection_pin_dragdrop_test.js]
-[app_hosted_use_cached_icon_test.js]
-[app_packaged_resume_update_test.js]
-[search_test.js]
-[bookmark_uninstall_test.js]
-[app_packaged_pending_test.js]
-[app_packaged_update_test.js]
-[app_hosted_failed_icon_fetch_test.js]
-[app_retry_icon_fetch_test.js]
-[collection_bookmark_pinned_test.js]
-[app_pending_update_test.js]
-[app_uninstall_test.js]
-[statusbar_test.js]
-[app_uninstall_pending_test.js]
-[collection_create_test.js]
-[app_packaged_install_test.js]
-[localization_test.js]
-[collection_pinned_edit_mode_test.js]
-[app_appcache_pending_test.js]
-[collection_localization_test.js]
-[app_packaged_role_hidden_test.js]
-[collection_offline_test.js]
-[bookmark_test.js]
-[collection_pin_result_uninstall_test.js]
-[collection_pin_result_test.js]
-[edit_mode_test.js]
-[app_failed_icon_fetch_test.js]
-[app_packaged_fail_test.js]
-[collection_uninstall_test.js]
diff --git a/apps/verticalhome/test/marionette/statusbar_test.js b/apps/verticalhome/test/marionette/statusbar_test.js
index 84464bc..fc5ee3c 100644
--- a/apps/verticalhome/test/marionette/statusbar_test.js
+++ b/apps/verticalhome/test/marionette/statusbar_test.js
@@ -1,6 +1,5 @@
 'use strict';

-var assert = require('assert');
 var Homescreen = require('./lib/home2');
 var Actions = require('marionette-client').Actions;
 var System = require('../../../../apps/system/test/marionette/lib/system');
@@ -36,20 +35,6 @@ marionette('Statusbar', function() {
                'opaque');
       });

-      // Launch an app to make sure the statusbar turns opaque.
-      client.apps.switchToApp(Homescreen.URL);
-      var settingsOrigin = 'app://settings.gaiamobile.org';
-      var icon = home.getIcon(settingsOrigin + '/manifest.webapp');
-      icon.tap();
-      client.switchToFrame();
-      client.waitFor(function() {
-        return home.containsClass(System.Selector.statusbarBackground,
-               'opaque');
-      });
-      client.apps.close(settingsOrigin);
-      assert.ok(home.containsClass(System.Selector.statusbarBackground,
-               'opaque'));
-
       // We can't trust our panning physics on B2G desktop using Actions.
       // The same scroll down may not result in the same upward scroll.
       // We may be able to use a larger upward scroll, but to be 100% sure we
diff --git a/apps/verticalhome/test/unit/configurator_test.js b/apps/verticalhome/test/unit/configurator_test.js
index 70776c6..53f32a8 100644
--- a/apps/verticalhome/test/unit/configurator_test.js
+++ b/apps/verticalhome/test/unit/configurator_test.js
@@ -1,12 +1,10 @@
 'use strict';

 /* global configurator, MockNavigatorSettings, IccHelper, App, app,
-   MocksHelper, MockVersionHelper, verticalPreferences,
-   MockNavigatorGetFeature */
+   MocksHelper, MockVersionHelper, verticalPreferences  */

 require('/shared/js/homescreens/vertical_preferences.js');
 require('/shared/test/unit/mocks/mock_navigator_moz_settings.js');
-require('/shared/test/unit/mocks/mock_navigator_get_feature.js');
 require('/shared/test/unit/mocks/mock_icc_helper.js');
 require('/test/unit/mock_app.js');
 require('/test/unit/mock_version_helper.js');
@@ -20,7 +18,6 @@ var mocksHelperForConfigurator = new MocksHelper([
 suite('configurator.js >', function() {
   mocksHelperForConfigurator.attachTestHelpers();

-  var realGetFeature;
   var realMozSettings;
   var xhr;
   var requests = [];
@@ -66,15 +63,12 @@ suite('configurator.js >', function() {
   suiteSetup(function() {
     mocksHelperForConfigurator.suiteSetup();
     realMozSettings = navigator.mozSettings;
-    realGetFeature = navigator.getFeature;
-    navigator.getFeature = MockNavigatorGetFeature;
     navigator.mozSettings = MockNavigatorSettings;
     MockNavigatorSettings.mSyncRepliesOnly = true;
   });

   suiteTeardown(function() {
     mocksHelperForConfigurator.suiteTeardown();
-    navigator.getFeature = realGetFeature;
     navigator.mozSettings = realMozSettings;
     MockNavigatorSettings.mSyncRepliesOnly = false;
   });
diff --git a/apps/video/index.html b/apps/video/index.html
index 61ecd3e..f19a30f 100644
--- a/apps/video/index.html
+++ b/apps/video/index.html
@@ -27,8 +27,6 @@
     <script defer src="shared/js/media/video_stats.js"></script>
     <script defer src="shared/js/performance_testing_helper.js"></script>
     <script defer src="shared/js/font_size_utils.js"></script>
-    <script defer src="shared/js/lazy_loader.js"></script>
-    <script defer src="shared/js/dialogs.js"></script>
     <script defer src="js/metadata.js"></script>
     <script defer src="js/db.js"></script>
     <script defer src="js/thumbnail_list.js"></script>
@@ -187,14 +185,6 @@
         <button type="button" id="overlay-action-button" class="full"></button>
       </menu>
     </form>
-    <form id="confirm-dialog" role="dialog" data-type="confirm" class="hidden">
-      <section>
-        <p id="confirm-msg"></p>
-      </section>
-      <menu>
-        <button id="confirm-cancel"></button>
-        <button id="confirm-ok"></button>
-      </menu>
-    </form>
+
   </body>
 </html>
diff --git a/apps/video/js/video.js b/apps/video/js/video.js
index 730b6f3..24e6c85 100644
--- a/apps/video/js/video.js
+++ b/apps/video/js/video.js
@@ -36,7 +36,6 @@ ids.forEach(function createElementRef(name) {

 dom.player.mozAudioChannelType = 'content';

-function $(id) { return document.getElementById(id); }
 var playing = false;

 // if this is true then the video tag is showing
@@ -558,13 +557,10 @@ function deleteSelectedItems() {
   if (selectedFileNames.length === 0)
     return;

-  Dialogs.confirm({
-    message: navigator.mozL10n.get('delete-n-items?',
-             {n: selectedFileNames.length}),
-    cancelText: navigator.mozL10n.get('cancel'),
-    confirmText: navigator.mozL10n.get('delete'),
-    danger: true
-  }, function() { // onSuccess
+  var msg = navigator.mozL10n.get('delete-n-items?',
+                                  {n: selectedFileNames.length});
+  if (confirm(msg)) {
+    // XXX
     // deleteFile is O(n), so this loop is O(n*n). If used with really large
     // selections, it might have noticably bad performance.  If so, we
     // can write a more efficient deleteFiles() function.
@@ -572,7 +568,7 @@ function deleteSelectedItems() {
       deleteFile(selectedFileNames[i]);
     }
     clearSelection();
-  });
+  }
 }

 function deleteFile(filename) {
@@ -594,6 +590,16 @@ function deleteFile(filename) {
   videodb.deleteFile(filename);
 }

+function deleteSingleFile(file) {
+  var msg = navigator.mozL10n.get('confirm-delete');
+  if (confirm(msg + ' ' + file)) {
+    deleteFile(file);
+    return true;
+  }
+
+  return false;
+}
+
 // Clicking on the share button in select mode shares all selected images
 function shareSelectedItems() {
   var blobs = selectedFileNames.map(function(name) {
@@ -828,13 +834,7 @@ function deleteCurrentVideo() {
   // If we're deleting the file shown in the player we've got to
   // return to the thumbnail list. We pass false to hidePlayer() to tell it
   // not to record new metadata for the file we're about to delete.
-  Dialogs.confirm({
-    message: navigator.mozL10n.get('delete-video?'),
-    cancelText: navigator.mozL10n.get('cancel'),
-    confirmText: navigator.mozL10n.get('delete'),
-    danger: true
-  }, function _onSuccess() { // onSuccess
-    deleteFile(currentVideo.name);
+  if (deleteSingleFile(currentVideo.name)) {
     if (!isPhone && !isPortrait) {
       // If the file is deleted, we need to load another video file. This is
       // only required at tablet and landscape mode. When there is no video in
@@ -845,10 +845,10 @@ function deleteCurrentVideo() {
     } else {
       hidePlayer(false);
     }
-  }, function _onError() {
-     // Enable NFC sharing when cancels delete and returns to fullscreen mode
-     setNFCSharing(true);
-  });
+  } else {
+      // Enable NFC sharing when cancels delete and returns to fullscreen mode
+      setNFCSharing(true);
+  }
 }

 function handlePlayButtonClick() {
diff --git a/apps/video/locales/video.en-US.properties b/apps/video/locales/video.en-US.properties
index bfb7131..a226b90 100644
--- a/apps/video/locales/video.en-US.properties
+++ b/apps/video/locales/video.en-US.properties
@@ -19,8 +19,6 @@ delete-n-items?[other] = Delete {{ n }} items?
 share-noprovider = Try sharing one video at a time.

 videos   = Videos
-cancel   = Cancel
-delete-video? = Delete video?

 empty-title = Add videos to get started
 empty-text  = Load videos on to the memory card.
diff --git a/apps/video/manifest.webapp b/apps/video/manifest.webapp
index 06cd0b2..40c031e 100644
--- a/apps/video/manifest.webapp
+++ b/apps/video/manifest.webapp
@@ -12,6 +12,7 @@
     "storage":{},
     "device-storage:pictures":{ "access": "readwrite" },
     "device-storage:videos":{ "access": "readwrite" },
+    "settings":{ "access": "readonly" },
     "deprecated-hwvideo":{},
     "audio-channel-content":{},
     "nfc": { "access": "readwrite" }
diff --git a/apps/video/style/images/back_div_line.png b/apps/video/style/images/back_div_line.png
new file mode 100644
index 0000000..4e98a30
Binary files /dev/null and b/apps/video/style/images/back_div_line.png differ
diff --git a/apps/video/style/images/back_div_line@1.5x.png b/apps/video/style/images/back_div_line@1.5x.png
new file mode 100644
index 0000000..1d0c86d
Binary files /dev/null and b/apps/video/style/images/back_div_line@1.5x.png differ
diff --git a/apps/video/style/images/back_div_line@2.25x.png b/apps/video/style/images/back_div_line@2.25x.png
new file mode 100644
index 0000000..b6aee95
Binary files /dev/null and b/apps/video/style/images/back_div_line@2.25x.png differ
diff --git a/apps/video/style/images/back_div_line@2x.png b/apps/video/style/images/back_div_line@2x.png
new file mode 100644
index 0000000..59fc919
Binary files /dev/null and b/apps/video/style/images/back_div_line@2x.png differ
diff --git a/apps/video/style/images/background.png b/apps/video/style/images/background.png
new file mode 100644
index 0000000..49e0605
Binary files /dev/null and b/apps/video/style/images/background.png differ
diff --git a/apps/video/style/images/background@1.5x.png b/apps/video/style/images/background@1.5x.png
new file mode 100644
index 0000000..5bfb7f4
Binary files /dev/null and b/apps/video/style/images/background@1.5x.png differ
diff --git a/apps/video/style/images/background@2.25x.png b/apps/video/style/images/background@2.25x.png
new file mode 100644
index 0000000..dec44e4
Binary files /dev/null and b/apps/video/style/images/background@2.25x.png differ
diff --git a/apps/video/style/images/background@2x.png b/apps/video/style/images/background@2x.png
new file mode 100644
index 0000000..16f026b
Binary files /dev/null and b/apps/video/style/images/background@2x.png differ
diff --git a/apps/video/style/images/iconaction_media_info_30x30.png b/apps/video/style/images/iconaction_media_info_30x30.png
new file mode 100644
index 0000000..e8af7af
Binary files /dev/null and b/apps/video/style/images/iconaction_media_info_30x30.png differ
diff --git a/apps/video/style/images/iconaction_media_info_30x30@1.5x.png b/apps/video/style/images/iconaction_media_info_30x30@1.5x.png
new file mode 100644
index 0000000..c2bd62d
Binary files /dev/null and b/apps/video/style/images/iconaction_media_info_30x30@1.5x.png differ
diff --git a/apps/video/style/images/iconaction_media_info_30x30@2.25x.png b/apps/video/style/images/iconaction_media_info_30x30@2.25x.png
new file mode 100644
index 0000000..38a0cf5
Binary files /dev/null and b/apps/video/style/images/iconaction_media_info_30x30@2.25x.png differ
diff --git a/apps/video/style/images/iconaction_media_info_30x30@2x.png b/apps/video/style/images/iconaction_media_info_30x30@2x.png
new file mode 100644
index 0000000..54af00c
Binary files /dev/null and b/apps/video/style/images/iconaction_media_info_30x30@2x.png differ
diff --git a/apps/video/style/video.css b/apps/video/style/video.css
index 8c0ee7a..6dbb80b 100644
--- a/apps/video/style/video.css
+++ b/apps/video/style/video.css
@@ -236,8 +236,7 @@ span.line-break {
  * the issue.  The user can't interact with the app while the overlay
  * is displayed.
  */
-#overlay,
-#confirm-dialog {
+#overlay {
   /* it takes up the whole screen */
   position: absolute;
   top: 0;
diff --git a/apps/video/test/marionette/manifest.ini b/apps/video/test/marionette/manifest.ini
deleted file mode 100644
index 12f662d..0000000
--- a/apps/video/test/marionette/manifest.ini
+++ /dev/null
@@ -1,2 +0,0 @@
-[video_list_test.js]
-[overlay_test.js]
diff --git a/apps/video/test/unit/video_test.js b/apps/video/test/unit/video_test.js
index c44a989..a3af81c 100644
--- a/apps/video/test/unit/video_test.js
+++ b/apps/video/test/unit/video_test.js
@@ -1719,357 +1719,4 @@ suite('Video App Unit Tests', function() {
       assert.equal(setControlsVisibilitySpy.callCount, 0);
     });
   });
-
-  /*
-   * updateSelection is called when entering thumbnail selection mode, or
-   * when the selection changes. The function updates the message the top
-   * of the screen and enables or disables the Delete and Share buttons.
-   */
-  suite('updateSelection flows', function() {
-    var videodata = {};
-    var videoBlob;
-
-    suiteSetup(function(done) {
-      videodata = {'name': videoName};
-
-      MockThumbnailGroup.reset();
-      var dummyContainer = document.createElement('div');
-
-      thumbnailList = new ThumbnailList(MockThumbnailGroup, dummyContainer);
-      thumbnailList.addItem({'name': videodata.name});
-
-      getAsset('/test/unit/media/test.webm', function(blob) {
-        videoBlob = blob;
-        videodb = new MockMediaDB(videoBlob);
-        done();
-      });
-    });
-
-    setup(function() {
-      selectedFileNames = [];
-      selectedFileNamesToBlobs = {};
-    });
-
-    test('#updateSelection: toggle thumbnail as selected', function() {
-      var thumbnail = thumbnailList.thumbnailMap[videodata.name];
-      thumbnail.htmlNode.classList.remove('selected'); // not selected
-      updateSelection(videodata);
-      assert.isTrue(thumbnail.htmlNode.classList.contains('selected'),
-                    'thumbnail should contain \'selected\' class');
-    });
-
-    test('#updateSelection: toggle thumbnail as not selected', function() {
-      var thumbnail = thumbnailList.thumbnailMap[videodata.name];
-      thumbnail.htmlNode.classList.add('selected'); // selected
-      updateSelection(videodata);
-      assert.isFalse(thumbnail.htmlNode.classList.contains('selected'),
-                     'thumbnail should not contain \'selected\' class');
-    });
-
-    test('#updateSelection: update (add to) selected filenames', function() {
-      var thumbnail = thumbnailList.thumbnailMap[videodata.name];
-      thumbnail.htmlNode.classList.remove('selected'); // not selected
-      updateSelection(videodata);
-      assert.equal(selectedFileNames.length, 1,
-                   'should be one selected file');
-      assert.equal(selectedFileNames[0], videodata.name,
-                   'name of selected file should be name of videodata');
-      assert.equal(selectedFileNamesToBlobs[videodata.name], videoBlob,
-                   'blob associated with videodata name should be video blob');
-    });
-
-    test('#updateSelection: update (remove) selected filenames', function() {
-      var thumbnail = thumbnailList.thumbnailMap[videodata.name];
-      thumbnail.htmlNode.classList.add('selected'); // selected
-      updateSelection(videodata);
-      assert.equal(selectedFileNames.length, 0,
-                   'shouldnt be any selected files');
-      assert.equal(selectedFileNamesToBlobs[videodata.name], undefined,
-                   'no blob associated with videodata name');
-    });
-
-    test('#updateSelection: update UI, thumbnail is selected', function() {
-      dom.thumbnailsDeleteButton.classList.add('disabled');
-      dom.thumbnailsShareButton.classList.add('disabled');
-      var thumbnail = thumbnailList.thumbnailMap[videodata.name];
-      thumbnail.htmlNode.classList.remove('selected'); // not selected
-
-      updateSelection(videodata);
-      assert.equal(dom.thumbnailsNumberSelected.textContent,
-                   'number-selected2{"n":1}',
-                   'there should be one thumbnail selected');
-      assert.isFalse(containsClass(dom.thumbnailsDeleteButton, 'disabled'),
-                     'thumbnail delete button should be enabled');
-      assert.isFalse(containsClass(dom.thumbnailsShareButton, 'disabled'),
-                     'thumbnail share button should be enabled');
-    });
-
-    test('#updateSelection: update UI, no thumbnail is selected', function() {
-      var thumbnail = thumbnailList.thumbnailMap[videodata.name];
-      thumbnail.htmlNode.classList.add('selected'); // selected
-
-      updateSelection(videodata);
-      assert.equal(dom.thumbnailsNumberSelected.textContent,
-                   'number-selected2{"n":0}',
-                   'there shouldnt be any thumbnails selected');
-      assert.isTrue(containsClass(dom.thumbnailsDeleteButton, 'disabled'),
-                    'thumbnail delete button should be disabled');
-      assert.isTrue(containsClass(dom.thumbnailsShareButton, 'disabled'),
-                    'thumbnail share button should be disabled');
-    });
-  });
-
-  suite('handleSliderTouchStart flows', function() {
-    var handleSliderTouchMoveSpy;
-    var nativeHandleSliderTouchMove;
-    var existingTouchStartEventId = 1;
-    var touchStartIdFromEvent = 10;
-    var event = { 'changedTouches': [{'identifier': touchStartIdFromEvent}] };
-    var playerPauseSpy;
-    var width, height;
-
-    suiteSetup(function() {
-      nativeHandleSliderTouchMove = handleSliderTouchMove;
-      handleSliderTouchMoveSpy = sinon.spy();
-      handleSliderTouchMove = handleSliderTouchMoveSpy;
-      playerPauseSpy = sinon.spy(dom.player, 'pause');
-      width = 50;
-      height = 100;
-    });
-
-    setup(function() {
-      dragging = false;
-      touchStartID = null;
-      handleSliderTouchMoveSpy.reset();
-      playerPauseSpy.reset();
-      dom.sliderWrapper.style.width = width + 'px';
-      dom.sliderWrapper.style.height = height + 'px';
-    });
-
-    teardown(function() {
-      dom.sliderWrapper.style.width = 0 + 'px';
-      dom.sliderWrapper.style.height = 0 + 'px';
-    });
-
-    suiteTeardown(function() {
-      handleSliderTouchMove = nativeHandleSliderTouchMove;
-      playerPauseSpy.restore();
-    });
-
-    test('#handleSliderTouchStart: already have touch start event',
-         function() {
-      // stage data to indicate there has already been a touch start event
-      touchStartID = existingTouchStartEventId;
-
-      handleSliderTouchStart();
-
-      assert.equal(touchStartID, existingTouchStartEventId);
-      assert.equal(handleSliderTouchMoveSpy.callCount, 0);
-      assert.isFalse(dragging);
-      assert.equal(sliderRect, undefined);
-    });
-
-    test('#handleSliderTouchStart: dont know video duration',
-         function() {
-      dom.player.duration = Infinity;
-
-      handleSliderTouchStart(event);
-
-      assert.isTrue(dragging);
-      assert.equal(touchStartID, touchStartIdFromEvent,
-                   'touch start id should come from event');
-      assert.equal(handleSliderTouchMoveSpy.callCount, 0,
-                   'function returns before calling handleSliderTouchMove');
-      assert.equal(sliderRect.width, width);
-      assert.equal(sliderRect.height, height);
-      assert.equal(sliderRect.right, sliderRect.left + width);
-      assert.equal(sliderRect.bottom, sliderRect.top + height);
-    });
-
-    test('#handleSliderTouchStart: paused while dragging',
-         function() {
-      dom.player.duration = 100;
-      dom.player.paused = true;
-
-      handleSliderTouchStart(event);
-
-      assert.isTrue(dragging);
-      assert.equal(touchStartID, touchStartIdFromEvent,
-                   'touch start id should come from event');
-      assert.isTrue(handleSliderTouchMoveSpy.calledOnce,
-                   'handleSliderTouchMove is called once');
-      assert.equal(playerPauseSpy.callCount, 0,
-                   'dom.player.pause is not called');
-      assert.equal(sliderRect.width, width);
-      assert.equal(sliderRect.height, height);
-      assert.equal(sliderRect.right, sliderRect.left + width);
-      assert.equal(sliderRect.bottom, sliderRect.top + height);
-    });
-
-    test('#handleSliderTouchStart: not paused while dragging',
-         function() {
-      dom.player.duration = 100;
-      dom.player.paused = false;
-
-      handleSliderTouchStart(event);
-
-      assert.isTrue(dragging);
-      assert.equal(touchStartID, touchStartIdFromEvent,
-                   'touch start id should come from event');
-      assert.isTrue(handleSliderTouchMoveSpy.calledOnce,
-                   'handleSliderTouchMove is called once');
-      assert.isTrue(playerPauseSpy.calledOnce,
-                   'dom.player.pause is called');
-      assert.equal(sliderRect.width, width);
-      assert.equal(sliderRect.height, height);
-      assert.equal(sliderRect.right, sliderRect.left + width);
-      assert.equal(sliderRect.bottom, sliderRect.top + height);
-    });
-  });
-
-  suite('handleSliderTouchMove flows', function() {
-    var fastSeekSpy;
-
-    var clientX = 110;
-    var touch = {'clientX': clientX};
-    var identifiedTouchSuccess = function(touchStartID) {
-      return touch;
-    };
-
-    var identifiedTouchFailure = function(touchStartID) {
-      return null;
-    };
-
-    var successEvent = { 'changedTouches':
-                         {'identifiedTouch': identifiedTouchSuccess} };
-    var failureEvent = { 'changedTouches':
-                         {'identifiedTouch': identifiedTouchFailure} };
-
-    suiteSetup(function() {
-      fastSeekSpy = sinon.spy(dom.player, 'fastSeek');
-      sliderRect = {'left': 10,
-                    'width': 200};
-    });
-
-    setup(function() {
-      fastSeekSpy.reset();
-      dragging = true;
-      dom.playHead.classList.remove('active');
-    });
-
-    suiteTeardown(function() {
-      fastSeekSpy.restore();
-    });
-
-    test('#handleSliderTouchMove: update the slider', function() {
-
-      handleSliderTouchMove(successEvent);
-
-      assert.isTrue(containsClass(dom.playHead, 'active'));
-      assert.equal(dom.playHead.style.left, '50%');
-      assert.equal(dom.elapsedTime.style.width, '50%');
-      assert.isTrue(fastSeekSpy.calledOnce);
-    });
-
-    test('#handleSliderTouchMove: not dragging', function() {
-      dragging = false;
-
-      handleSliderTouchMove(successEvent);
-
-      assert.isFalse(containsClass(dom.playHead, 'active'));
-      assert.equal(fastSeekSpy.callCount, 0);
-    });
-
-    test('#handleSliderTouchMove: no touch start event', function() {
-      dragging = false;
-
-      handleSliderTouchMove(failureEvent);
-
-      assert.isFalse(containsClass(dom.playHead, 'active'));
-      assert.equal(fastSeekSpy.callCount, 0);
-    });
-  });
-
-  suite('handleSliderTouchEnd flows', function() {
-    var playerPlaySpy;
-    var playerPauseSpy;
-    var existingTouchEventId = 1;
-
-    var identifiedTouchSuccess = function(touchStartID) {
-      return true;
-    };
-
-    var identifiedTouchFailure = function(touchStartID) {
-      return false;
-    };
-
-    var touchEvent = { 'changedTouches':
-                            {'identifiedTouch': identifiedTouchSuccess} };
-    var unrelatedTouchEvent = { 'changedTouches':
-                                {'identifiedTouch': identifiedTouchFailure} };
-
-    suiteSetup(function() {
-      playerPlaySpy = sinon.spy(dom.player, 'play');
-      playerPauseSpy = sinon.spy(dom.player, 'pause');
-    });
-
-    setup(function() {
-      playerPlaySpy.reset();
-      playerPauseSpy.reset();
-      dragging = true;
-      dom.playHead.classList.add('active');
-    });
-
-    suiteTeardown(function() {
-      playerPlaySpy.restore();
-      playerPauseSpy.restore();
-    });
-
-    test('#handleSliderTouchEnd: no touch start event', function() {
-
-      touchStartID = existingTouchEventId;
-
-      handleSliderTouchEnd(unrelatedTouchEvent);
-
-      assert.equal(touchStartID, existingTouchEventId);
-      assert.isTrue(containsClass(dom.playHead, 'active'));
-    });
-
-    test('#handleSliderTouchEnd: not dragging', function() {
-
-      touchStartID = existingTouchEventId;
-      dragging = false;
-
-      handleSliderTouchEnd(touchEvent);
-
-      assert.isNull(touchStartID);
-      assert.isTrue(containsClass(dom.playHead, 'active'));
-    });
-
-    test('#handleSliderTouchEnd: video at end', function() {
-      touchStartID = existingTouchEventId;
-      dragging = true;
-      dom.player.currentTime = dom.player.duration = 10;
-
-      handleSliderTouchEnd(touchEvent);
-
-      assert.isNull(touchStartID);
-      assert.isFalse(containsClass(dom.playHead, 'active'));
-      assert.isTrue(playerPauseSpy.calledOnce);
-    });
-
-    test('#handleSliderTouchEnd: video not at end', function() {
-      touchStartID = existingTouchEventId;
-      dragging = true;
-      dom.player.currentTime = 5;
-      dom.player.duration = 10;
-
-      handleSliderTouchEnd(touchEvent);
-
-      assert.isNull(touchStartID);
-      assert.isFalse(containsClass(dom.playHead, 'active'));
-      assert.equal(playerPauseSpy.callCount, 0);
-      assert.isTrue(playerPlaySpy.calledOnce);
-    });
-  });
 });
diff --git a/apps/wallpaper/js/pick.js b/apps/wallpaper/js/pick.js
index e9e66f5..cf93291 100644
--- a/apps/wallpaper/js/pick.js
+++ b/apps/wallpaper/js/pick.js
@@ -37,14 +37,11 @@ var Wallpaper = {
       self.wallpapers.innerHTML = '';
       xhr.response.forEach(function(wallpaper) {
         var fileName = 'resources/' + wallpaper;
-        // Use image tag instead of backgroundImage because gecko handles
-        // memory for off-screen images better
-        var imgNode = document.createElement('img');
-        imgNode.alt = '';
-        imgNode.classList.add('wallpaper');
-        imgNode.dataset.filename = fileName;
-        imgNode.src = fileName + sampleSize;
-        self.wallpapers.appendChild(imgNode);
+        var div = document.createElement('div');
+        div.classList.add('wallpaper');
+        div.dataset.filename = fileName;
+        div.style.backgroundImage = 'url(' + fileName + sampleSize + ')';
+        self.wallpapers.appendChild(div);
       });
       if (cb) {
         cb();
diff --git a/apps/wallpaper/style/wallpaper.css b/apps/wallpaper/style/wallpaper.css
index 9809ba8..85b7448 100644
--- a/apps/wallpaper/style/wallpaper.css
+++ b/apps/wallpaper/style/wallpaper.css
@@ -14,10 +14,13 @@ html, body {
 }

 .wallpaper {
+  background-size:cover;
+  background-repeat: no-repeat;
   border-bottom: 0.1rem solid #000000;
   border-right: 0.1rem solid #000000;
   position: relative;
   overflow: hidden;
+  height: 15.9rem;
   float: left;
   width: 33%;
 }
diff --git a/build/config/common-settings.json b/build/config/common-settings.json
index 1b17cd8..7e397b7 100644
--- a/build/config/common-settings.json
+++ b/build/config/common-settings.json
@@ -5,7 +5,6 @@
    "app-transition.enabled": true,
    "app.cards_view.screenshots.enabled": true,
    "app-suspending.enabled": false,
-   "app-themecolor.enabled": false,
    "app.launch_path.blacklist": [],
    "app.reportCrashes": "ask",
    "app.update.channel": "",
diff --git a/build/config/keyboard-layouts.json b/build/config/keyboard-layouts.json
index 830badb..4552927 100644
--- a/build/config/keyboard-layouts.json
+++ b/build/config/keyboard-layouts.json
@@ -1,8 +1,5 @@
 {
   "layout"  : {
-    "af": [
-        {"layoutId": "en", "app": ["apps", "keyboard"]}
-    ],
     "ar": [
         {"layoutId": "ar", "app": ["apps", "keyboard"]},
         {"layoutId": "en", "app": ["apps", "keyboard"]}
@@ -37,9 +34,6 @@
         {"layoutId": "el", "app": ["apps", "keyboard"]},
         {"layoutId": "en", "app": ["apps", "keyboard"]}
     ],
-    "en-GB": [
-        {"layoutId": "en", "app": ["apps", "keyboard"]}
-    ],
     "en-US": [
         {"layoutId": "en", "app": ["apps", "keyboard"]}
     ],
@@ -111,18 +105,9 @@
     "lij": [
         {"layoutId": "en", "app": ["apps", "keyboard"]}
     ],
-    "mk": [
-        {"layoutId": "mk", "app": ["apps", "keyboard"]}
-    ],
     "ml": [
         {"layoutId": "en", "app": ["apps", "keyboard"]}
     ],
-    "mr": [
-        {"layoutId": "en", "app": ["apps", "keyboard"]}
-    ],
-    "my": [
-        {"layoutId": "my", "app": ["apps", "keyboard"]}
-    ],
     "nb": [
         {"layoutId": "nb", "app": ["apps", "keyboard"]}
     ],
@@ -154,9 +139,6 @@
     "sl": [
         {"layoutId": "en", "app": ["apps", "keyboard"]}
     ],
-    "son": [
-        {"layoutId": "en", "app": ["apps", "keyboard"]}
-    ],
     "sq": [
         {"layoutId": "en", "app": ["apps", "keyboard"]}
     ],
@@ -199,8 +181,11 @@
         {"layoutId": "zh-Hant-Zhuyin", "app": ["apps", "keyboard"]},
         {"layoutId": "en", "app": ["apps", "keyboard"]}
     ],
-    "zu": [
-        {"layoutId": "en", "app": ["apps", "keyboard"]}
+    "mk": [
+        {"layoutId": "mk", "app": ["apps", "keyboard"]}
+    ],
+    "my": [
+        {"layoutId": "my", "app": ["apps", "keyboard"]}
     ]
   },
   "langIndependentLayouts": [
diff --git a/build/config/payment-dev-prefs.js b/build/config/payment-dev-prefs.js
index 3335c44..98a4d04 100644
--- a/build/config/payment-dev-prefs.js
+++ b/build/config/payment-dev-prefs.js
@@ -1,25 +1,20 @@
-/*global pref*/
+pref("dom.payment.skipHTTPSCheck", true);
+pref("dom.payment.debug", true);

-pref('dom.payment.skipHTTPSCheck', true);
-pref('dom.payment.debug', true);
+pref("dom.payment.provider.1.name", "firefoxmarketdev");
+pref("dom.payment.provider.1.description", "marketplace-dev.allizom.org");
+pref("dom.payment.provider.1.uri", "https://marketplace-dev.allizom.org/mozpay/?req=");
+pref("dom.payment.provider.1.type", "mozilla-dev/payments/pay/v1");
+pref("dom.payment.provider.1.requestMethod", "GET");

-pref('dom.payment.provider.1.name', 'firefoxmarketdev');
-pref('dom.payment.provider.1.description', 'marketplace-dev.allizom.org');
-pref('dom.payment.provider.1.uri',
-       'https://marketplace-dev.allizom.org/mozpay/?req=');
-pref('dom.payment.provider.1.type', 'mozilla-dev/payments/pay/v1');
-pref('dom.payment.provider.1.requestMethod', 'GET');
+pref("dom.payment.provider.2.name", "firefoxmarketstage");
+pref("dom.payment.provider.2.description", "marketplace.allizom.org");
+pref("dom.payment.provider.2.uri", "https://marketplace.allizom.org/mozpay/?req=");
+pref("dom.payment.provider.2.type", "mozilla-stage/payments/pay/v1");
+pref("dom.payment.provider.2.requestMethod", "GET");

-pref('dom.payment.provider.2.name', 'firefoxmarketstage');
-pref('dom.payment.provider.2.description', 'marketplace.allizom.org');
-pref('dom.payment.provider.2.uri',
-       'https://marketplace.allizom.org/mozpay/?req=');
-pref('dom.payment.provider.2.type', 'mozilla-stage/payments/pay/v1');
-pref('dom.payment.provider.2.requestMethod', 'GET');
-
-pref('dom.payment.provider.3.name', 'mockpayprovider');
-pref('dom.payment.provider.3.description', 'Mock Payment Provider');
-pref('dom.payment.provider.3.uri',
-       'http://ferjm.github.io/gaia-mock-payment-provider/index.html?req=');
-pref('dom.payment.provider.3.type', 'tests/payments/pay/v1');
-pref('dom.payment.provider.3.requestMethod', 'GET');
+pref("dom.payment.provider.3.name", "mockpayprovider");
+pref("dom.payment.provider.3.description", "Mock Payment Provider");
+pref("dom.payment.provider.3.uri", "http://ferjm.github.io/gaia-mock-payment-provider/index.html?req=");
+pref("dom.payment.provider.3.type", "tests/payments/pay/v1");
+pref("dom.payment.provider.3.requestMethod", "GET");
diff --git a/build/csslint/xfail.list b/build/csslint/xfail.list
index edf0c5b..2047f51 100644
--- a/build/csslint/xfail.list
+++ b/build/csslint/xfail.list
@@ -5,8 +5,8 @@
 apps/video/style/video_tablet.css 0 1
 apps/video/style/video.css 0 7
 apps/video/style/info.css 0 2
-apps/email/style/common.css 0 4
 apps/email/style/message_cards.css 0 1
+apps/email/style/common.css 0 5
 apps/email/style/setup_cards.css 0 1
 apps/costcontrol/style/bb/input-areas/style.css 2 0
 apps/costcontrol/style/bb/menus-dialogues/valueselector/date/style.css 1 0
@@ -16,7 +16,8 @@ apps/costcontrol/style/views/balance.css 0 4
 apps/costcontrol/style/app.css 0 3
 apps/keyboard/style/keyboard.css 1 3
 apps/callscreen/style/oncall.css 0 2
-apps/communications/dialer/style/call_log.css 0 1
+apps/communications/ftu/css/style.css 0 8
+apps/communications/dialer/style/call_log.css 0 3
 apps/communications/dialer/style/dialer.css 0 3
 apps/communications/dialer/style/toolbar.css 0 1
 apps/communications/contacts/style/overlay.css 0 1
@@ -24,13 +25,12 @@ apps/communications/contacts/style/contacts.css 0 5
 apps/communications/contacts/style/status.css 0 1
 apps/communications/contacts/style/matching_contacts.css 0 3
 apps/communications/contacts/style/search.css 0 3
-apps/communications/contacts/style/app.css 0 6
+apps/communications/contacts/style/app.css 1 7
 apps/communications/contacts/style/import.css 0 4
 apps/calendar/style/ui.css 0 2
 apps/calendar/style/month.css 0 6
 apps/browser/style/modal_dialog/modal_dialog.css 0 1
 apps/browser/style/browser.css 0 2
-apps/ftu/style/style.css 0 9
 apps/gallery/style/gallery_tablet.css 0 2
 apps/gallery/style/info.css 0 2
 apps/gallery/style/gallery.css 0 3
@@ -54,7 +54,7 @@ apps/music/style/music.css 0 1
 apps/pdfjs/content/web/viewer.css 3 3
 apps/system/emergency-call/style/keypad.css 1 1
 apps/system/emergency-call/style/dialer.css 2 0
-apps/system/style/notifications/notifications.css 0 1
+apps/system/style/notifications/notifications.css 1 0
 apps/system/style/wrapper/wrapper.css 0 1
 apps/system/style/update_manager/update_manager.css 1 0
 apps/system/style/sleep_menu/sleep_menu.css 0 1
@@ -63,7 +63,7 @@ apps/system/style/net_error.css 1 0
 apps/system/style/window.css 0 3
 apps/system/style/zindex.css 0 2
 apps/system/style/sound_manager/sound_manager.css 1 3
-apps/system/style/lockscreen/lockscreen.css 0 3
+apps/system/style/lockscreen/lockscreen.css 0 2
 apps/system/style/system/system.css 0 2
 apps/system/style/system/keyboard.css 0 1
 apps/sms/style/root.css 0 2
diff --git a/build/image-resolution.js b/build/image-resolution.js
new file mode 100644
index 0000000..50ff72d
--- /dev/null
+++ b/build/image-resolution.js
@@ -0,0 +1,73 @@
+/*global require, exports*/
+'use strict';
+var utils = require('./utils');
+
+var ImageResolution = function() {
+  this.config = null;
+  this.webapp = null;
+  this.buildDir = null;
+};
+
+ImageResolution.prototype.setOptions = function(option) {
+  this.config = option.config;
+  this.webapp = option.webapp;
+  this.buildDir = this.webapp.buildDirectoryFile;
+};
+
+// If config.GAIA_DEV_PIXELS_PER_PX is not 1 and the file is a bitmap let's
+// check if there is a bigger version in the directory. If so let's ignore the
+// file in order to use the bigger version later.
+ImageResolution.prototype.pickImageByResolution = function(file) {
+  if (!/\.(png|gif|jpg)$/.test(file.path)) {
+    return;
+  }
+  var suffix = '@' + this.config.GAIA_DEV_PIXELS_PER_PX + 'x';
+  var matchResult = /@([0-9]+\.?[0-9]*)x/.exec(file.path);
+  var gaiaPixelsPerPx = this.config.GAIA_DEV_PIXELS_PER_PX;
+
+
+  if ((this.config.GAIA_DEV_PIXELS_PER_PX === '1' && matchResult) ||
+      (matchResult && matchResult[1] !== this.config.GAIA_DEV_PIXELS_PER_PX)) {
+      file.remove(true);
+  }
+
+  if (this.config.GAIA_DEV_PIXELS_PER_PX !== '1') {
+    if (matchResult && matchResult[1] === this.config.GAIA_DEV_PIXELS_PER_PX) {
+      // Save the hidpi file to the zip, strip the name to be more generic.
+      utils.copyFileTo(file.path, file.parent.path,
+        utils.basename(file.path).replace(suffix, ''), true);
+      file.remove(true);
+    } else {
+      // Check if there a hidpi file. If yes, let's ignore this bitmap since
+      // it will be loaded later (or it has already been loaded, depending on
+      // how the OS organize files.
+      var hqfile = utils.getFile(
+        file.path.replace(/(\.[a-z]+$)/, suffix + '$1'));
+      if (hqfile.exists()) {
+        file.remove(true);
+      }
+    }
+  }
+};
+
+ImageResolution.prototype.fileProcess = function(file) {
+  this.pickImageByResolution(file);
+};
+
+ImageResolution.prototype.execute = function(options) {
+  this.setOptions(options);
+
+  var files = utils.ls(this.buildDir, true);
+  files.forEach(this.fileProcess.bind(this));
+};
+
+function execute(config) {
+  var gaia = utils.gaia.getInstance(config);
+  gaia.webapps.forEach(function(webapp) {
+    (new ImageResolution()).execute({webapp: webapp, config: config});
+  });
+
+}
+
+exports.execute = execute;
+exports.ImageResolution = ImageResolution;
diff --git a/build/jshint/xfail.list b/build/jshint/xfail.list
index 85cfeeb..2e989f7 100644
--- a/build/jshint/xfail.list
+++ b/build/jshint/xfail.list
@@ -28,9 +28,11 @@ apps/communications/dialer/test/marionette/lib/dialer.js
 apps/communications/dialer/test/marionette/navigation_test.js
 apps/communications/dialer/test/unit/call_log_db_test.js
 apps/communications/dialer/test/unit/mock_call_handler.js
+apps/communications/dialer/test/unit/mock_call_log_db_manager.js
 apps/communications/dialer/test/unit/mock_confirm_dialog.js
 apps/communications/dialer/test/unit/mock_dialer_index.html.js
 apps/communications/dialer/test/unit/mock_icc_helper.js
+apps/communications/dialer/test/unit/mock_mmi_ui.js
 apps/communications/dialer/test/unit/mock_mozVoicemail.js
 apps/communications/dialer/test/unit/utils_test.js
 apps/communications/dialer/test/unit/voicemail_test.js
@@ -77,9 +79,11 @@ apps/email/js/message_list_topbar.js
 apps/email/js/mix.js
 apps/email/js/model.js
 apps/email/js/query_string.js
+apps/email/js/query_uri.js
 apps/email/js/sync.js
 apps/email/js/text.js
 apps/email/js/tmpl.js
+apps/email/js/wake_locks.js
 apps/email/test/config.js
 apps/email/test/marionette/activity_create_email_account_complete_test.js
 apps/email/test/marionette/lib/debug.js
@@ -248,6 +252,7 @@ apps/keyboard/js/imes/jszhuyin/jszhuyin.js
 apps/keyboard/js/imes/latin/latin.js
 apps/keyboard/js/imes/latin/predictions.js
 apps/keyboard/js/imes/latin/worker.js
+apps/keyboard/js/keyboard.js
 apps/keyboard/js/render.js
 apps/keyboard/js/settings/settings.js
 apps/keyboard/test/unit/jspinyin_test.js
@@ -264,6 +269,7 @@ apps/music/js/open.js
 apps/music/js/utils.js
 apps/music/test/unit/remote_controls_test.js
 apps/settings/js/about.js
+apps/settings/js/about_more_info.js
 apps/settings/js/airplane_mode.js
 apps/settings/js/bluetooth.js
 apps/settings/js/call.js
@@ -293,6 +299,8 @@ apps/settings/js/telephony_settings.js
 apps/settings/js/try_show_homescreen_section.js
 apps/settings/js/utils.js
 apps/settings/js/wallpaper.js
+apps/settings/js/wifi.js
+apps/settings/js/wifi_select_certificate_file.js
 apps/settings/test/marionette/app/regions/feedback.js
 apps/settings/test/marionette/app/regions/improve.js
 apps/settings/test/marionette/tests/improve_settings_test.js
@@ -303,7 +311,9 @@ apps/settings/test/unit/download_item_test.js
 apps/settings/test/unit/download_ui_test.js
 apps/settings/test/unit/downloads_list_test.js
 apps/settings/test/unit/hotspot_test.js
+apps/settings/test/unit/messaging_test.js
 apps/settings/test/unit/mock_navigator_settings.js
+apps/settings/test/unit/mock_settings.js
 apps/settings/test/unit/mock_template.js
 apps/settings/test/unit/sim_settings_helper_test.js
 apps/settings/test/unit/simcard_lock_test.js
@@ -338,6 +348,7 @@ apps/system/js/bluetooth_transfer.js
 apps/system/js/browser_config_helper.js
 apps/system/js/browser_frame.js
 apps/system/js/browser_mixin.js
+apps/system/js/captive_portal.js
 apps/system/js/carrier_info_notifier.js
 apps/system/js/cell_broadcast_system.js
 apps/system/js/crash_reporter.js
@@ -353,6 +364,7 @@ apps/system/js/icc_worker.js
 apps/system/js/identity.js
 apps/system/js/init_logo_handler.js
 apps/system/js/keyboard_manager.js
+apps/system/js/lockscreen_connection_info_manager.js
 apps/system/js/media_playback.js
 apps/system/js/modal_dialog.js
 apps/system/js/notifications.js
@@ -364,6 +376,9 @@ apps/system/js/quick_settings.js
 apps/system/js/screen_manager.js
 apps/system/js/sheets_transition.js
 apps/system/js/sim_lock.js
+apps/system/js/simslot.js
+apps/system/js/simslot_manager.js
+apps/system/js/sound_manager.js
 apps/system/js/statusbar.js
 apps/system/js/storage_watcher.js
 apps/system/js/system.js
@@ -374,6 +389,7 @@ apps/system/js/utility_tray.js
 apps/system/js/value_selector/date_picker.js
 apps/system/js/value_selector/spin_date_picker.js
 apps/system/js/value_selector/value_picker.js
+apps/system/js/value_selector/value_selector.js
 apps/system/js/wifi.js
 apps/system/test/marionette/fakemusic/js/comms.js
 apps/system/test/marionette/fakemusic/js/fakemusic.js
@@ -383,16 +399,19 @@ apps/system/test/marionette/lib/system.js
 apps/system/test/marionette/lockscreen_disabled_test.js
 apps/system/test/marionette/media_playback_test.js
 apps/system/test/marionette/net_error_test.js
+apps/system/test/marionette/notification_get_test.js
 apps/system/test/marionette/notification_launch_app.js
 apps/system/test/marionette/notification_test.js
 apps/system/test/unit/app_install_manager_test.js
 apps/system/test/unit/battery_manager_test.js
 apps/system/test/unit/bluetooth_transfer_test.js
 apps/system/test/unit/browser_frame_test.js
+apps/system/test/unit/captive_portal_test.js
 apps/system/test/unit/carrier_info_notifier_test.js
 apps/system/test/unit/date_picker_test.js
 apps/system/test/unit/download_manager_test.js
 apps/system/test/unit/download_notification_test.js
+apps/system/test/unit/edge_swipe_detector_test.js
 apps/system/test/unit/entery_sheet_test.js
 apps/system/test/unit/fxa_client_test.js
 apps/system/test/unit/fxa_iac_client_test.js
@@ -410,9 +429,11 @@ apps/system/test/unit/fxa_test/screens/fxam_refresh_auth_test.js
 apps/system/test/unit/fxa_test/screens/fxam_set_password_test.js
 apps/system/test/unit/fxa_test/screens/fxam_signin_success_test.js
 apps/system/test/unit/fxa_test/screens/fxam_signup_success_test.js
+apps/system/test/unit/homescreen_launcher_test.js
 apps/system/test/unit/iac_handler_test.js
 apps/system/test/unit/identity_test.js
 apps/system/test/unit/keyboard_helper_test.js
+apps/system/test/unit/lockscreen_conn_info_manager_test.js
 apps/system/test/unit/lockscreen_test.js
 apps/system/test/unit/mobile_operator_test.js
 apps/system/test/unit/mock_activity.js
@@ -431,9 +452,11 @@ apps/system/test/unit/mock_download_ui.js
 apps/system/test/unit/mock_ftu_launcher.js
 apps/system/test/unit/mock_fxa_client.js
 apps/system/test/unit/mock_fxa_ui.js
+apps/system/test/unit/mock_homescreen_launcher.js
 apps/system/test/unit/mock_homescreen_window.js
 apps/system/test/unit/mock_iac_handler.js
 apps/system/test/unit/mock_iachandler.js
+apps/system/test/unit/mock_icc_manager.js
 apps/system/test/unit/mock_keyboard_manager.js
 apps/system/test/unit/mock_lock_screen.js
 apps/system/test/unit/mock_media_files.js
@@ -456,7 +479,12 @@ apps/system/test/unit/orientation_manager_test.js
 apps/system/test/unit/quick_settings_test.js
 apps/system/test/unit/screen_manager_test.js
 apps/system/test/unit/settings_helper_test.js
+apps/system/test/unit/sheets_transition_test.js
+apps/system/test/unit/simcard_dialog_test.js
+apps/system/test/unit/simslot_manager_test.js
+apps/system/test/unit/simslot_test.js
 apps/system/test/unit/spin_date_picker_test.js
+apps/system/test/unit/statusbar_test.js
 apps/system/test/unit/storage_watcher_test.js
 apps/system/test/unit/updatable_test.js
 apps/system/test/unit/update_manager_test.js
diff --git a/build/jsonlint.js b/build/jsonlint.js
deleted file mode 100644
index 2a19194..0000000
--- a/build/jsonlint.js
+++ /dev/null
@@ -1,29 +0,0 @@
-'use strict';
-
-/* global exports, require, dump */
-
-var utils = require('utils');
-var RE_JSON = /\.json$/;
-
-exports.execute = function(options) {
-  var jsons = [];
-  var dirs = ['apps', 'dev_apps', 'build', 'customization', 'dev_apps',
-    'locales', 'shared'];
-
-  dirs.forEach(function(dir) {
-    var dirFile = utils.getFile(options.GAIA_DIR, dir);
-    var files = utils.ls(dirFile, true).filter(function(f) {
-      return RE_JSON.test(f.leafName);
-    });
-    jsons.push(...files);
-  });
-
-  jsons.forEach(function(json) {
-    try {
-      JSON.parse(utils.getFileContent(json));
-    } catch (e) {
-      dump('JSON lint error: ' + json.path + '\n');
-      throw e;
-    }
-  });
-};
diff --git a/build/l10n.js b/build/l10n.js
index 46321ff..80b75cf 100644
--- a/build/l10n.js
+++ b/build/l10n.js
@@ -2,6 +2,132 @@
   'use strict';

   /* jshint validthis:true */
+
+  /* Utility functions */
+
+  // Recursively walk an AST node searching for content leaves
+  function walkContent(node, fn) {
+    if (typeof node === 'string') {
+      return fn(node);
+    }
+
+    var rv = {};
+    for (var key in node) {
+      if (key !== '_index' && (key in node)) {
+        rv[key] = walkContent(node[key], fn);
+      }
+    }
+    return rv;
+  }
+
+
+  /* Pseudolocalizations
+   *
+   * PSEUDO_STRATEGIES is a dict of strategies to be used to modify the English
+   * context in order to create pseudolocalizations.  These can be used by
+   * developers to test the localizability of their code without having to
+   * actually speak a foreign language.
+   *
+   * Currently, the following pseudolocales are supported:
+   *
+   *   qps-ploc - Ȧȧƈƈḗḗƞŧḗḗḓ Ḗḗƞɠŀīīşħ
+   *
+   *     In Accented English all English letters are replaced by accented
+   *     Unicode counterparts which don't impair the readability of the content.
+   *     This allows developers to quickly test if any given string is being
+   *     correctly displayed in its 'translated' form.  Additionally, simple
+   *     heuristics are used to make certain words longer to better simulate the
+   *     experience of international users.
+   *
+   *   qps-plocm - ɥsıʅƃuƎ pǝɹoɹɹıW
+   *
+   *     Mirrored English is a fake RTL locale.  All words are surrounded by
+   *     Unicode formatting marks forcing the RTL directionality of characters.
+   *     In addition, to make the reversed text easier to read, individual
+   *     letters are flipped.
+   *
+   *     Note: The name above is hardcoded to be RTL in case code editors have
+   *     trouble with the RLO and PDF Unicode marks.  In reality, it should be
+   *     surrounded by those marks as well.
+   *
+   * See https://bugzil.la/900182 for more information.
+   *
+   */
+
+  var reAlphas = /[a-zA-Z]/g;
+  var reVowels = /[aeiouAEIOU]/g;
+
+  // ȦƁƇḒḖƑƓĦĪĴĶĿḾȠǾƤɊŘŞŦŬṼẆẊẎẐ + [\\]^_` + ȧƀƈḓḗƒɠħīĵķŀḿƞǿƥɋřşŧŭṽẇẋẏẑ
+  var ACCENTED_MAP = '\u0226\u0181\u0187\u1E12\u1E16\u0191\u0193\u0126\u012A' +
+                     '\u0134\u0136\u013F\u1E3E\u0220\u01FE\u01A4\u024A\u0158' +
+                     '\u015E\u0166\u016C\u1E7C\u1E86\u1E8A\u1E8E\u1E90' +
+                     '[\\]^_`' +
+                     '\u0227\u0180\u0188\u1E13\u1E17\u0192\u0260\u0127\u012B' +
+                     '\u0135\u0137\u0140\u1E3F\u019E\u01FF\u01A5\u024B\u0159' +
+                     '\u015F\u0167\u016D\u1E7D\u1E87\u1E8B\u1E8F\u1E91';
+
+  // XXX Until https://bugzil.la/1007340 is fixed, ᗡℲ⅁⅂⅄ don't render correctly
+  // on the devices.  For now, use the following replacements: pɟפ˥ʎ
+  // ∀ԐↃpƎɟפHIſӼ˥WNOԀÒᴚS⊥∩ɅＭXʎZ + [\\]ᵥ_, + ɐqɔpǝɟƃɥıɾʞʅɯuodbɹsʇnʌʍxʎz
+  var FLIPPED_MAP = '\u2200\u0510\u2183p\u018E\u025F\u05E4HI\u017F' +
+                    '\u04FC\u02E5WNO\u0500\xD2\u1D1AS\u22A5\u2229\u0245' +
+                    '\uFF2DX\u028EZ' +
+                    '[\\]\u1D65_,' +
+                    '\u0250q\u0254p\u01DD\u025F\u0183\u0265\u0131\u027E' +
+                    '\u029E\u0285\u026Fuodb\u0279s\u0287n\u028C\u028Dx\u028Ez';
+
+  function makeLonger(val) {
+    return val.replace(reVowels, function(match) {
+      return match + match.toLowerCase();
+    });
+  }
+
+  function makeAccented(map, val) {
+    // Replace each Latin letter with a Unicode character from map
+    return val.replace(reAlphas, function(match) {
+      return map.charAt(match.charCodeAt(0) - 65);
+    });
+  }
+
+  var reWords = /[^\W0-9_]+/g;
+
+  function makeRTL(val) {
+    // Surround each word with Unicode formatting codes, RLO and PDF:
+    //   U+202E:   RIGHT-TO-LEFT OVERRIDE (RLO)
+    //   U+202C:   POP DIRECTIONAL FORMATTING (PDF)
+    // See http://www.w3.org/International/questions/qa-bidi-controls
+    return val.replace(reWords, function(match) {
+      return '\u202e' + match + '\u202c';
+    });
+  }
+
+  // strftime tokens (%a, %Eb), {{ placeables }} and template {vars}
+  var reExcluded = /(%[EO]?\w|\{\{?\s*.+?\s*\}?\})/;
+
+  function mapContent(fn, val) {
+    if (!val) {
+      return val;
+    }
+    var parts = val.split(reExcluded);
+    var modified = parts.map(function(part) {
+      if (reExcluded.test(part)) {
+        return part;
+      }
+      return fn(part);
+    });
+    return modified.join('');
+  }
+
+  var PSEUDO_STRATEGIES = {
+    'qps-ploc': mapContent.bind(null, function(val) {
+      return makeAccented(ACCENTED_MAP, makeLonger(val));
+    }),
+    'qps-plocm': mapContent.bind(null, function(val) {
+      return makeAccented(FLIPPED_MAP, makeRTL(val));
+    })
+  };
+
+
   /* Buildtime optimizations logic
    *
    * Below are defined functions to perform buildtime optimizations in Gaia.
@@ -17,6 +143,12 @@

   var L10n = navigator.mozL10n._getInternalAPI();

+  navigator.mozL10n._getInternalAPI = function() {
+    L10n.walkContent = walkContent;
+    L10n.PSEUDO_STRATEGIES = PSEUDO_STRATEGIES;
+    return L10n;
+  };
+
   navigator.mozL10n.bootstrap = function(callback, debug) {
     var ctx = navigator.mozL10n.ctx = new L10n.Context();
     requiresInlineLocale = false;
@@ -76,17 +208,28 @@

   /* API for webapp-optimize */

+  L10n.Entity.prototype.toString = function(ctxdata) {
+    var value;
+    try {
+      value = this.resolve(ctxdata);
+    } catch (e) {
+      return undefined;
+    }
+    var currentLoc = navigator.mozL10n.language.code;
+    if (PSEUDO_STRATEGIES.hasOwnProperty(currentLoc)) {
+      return PSEUDO_STRATEGIES[currentLoc](value);
+    } else {
+      return value;
+    }
+  };
+
   L10n.Locale.prototype.addAST = function(ast) {
     if (!this.ast) {
-      this.ast = Object.create(null);
+      this.ast = {};
     }
-
-    var keys = Object.keys(ast);
-
-    /* jshint -W084 */
-    for (var i = 0, key; key = keys[i]; i++) {
-      this.entries[key] = ast[key];
-      this.ast[key] = ast[key];
+    for (var id in ast) {
+      this.ast[id] = ast[id];
+      this.entries[id] = ast[id];
     }
   };

@@ -107,8 +250,13 @@
         locale.build(null);
       }

-      if (locale.ast) {
-        return locale.ast[id];
+      if (locale.ast && locale.ast.hasOwnProperty(id)) {
+        if (PSEUDO_STRATEGIES.hasOwnProperty(this.supportedLocales[0])) {
+          return walkContent(locale.ast[id],
+                             PSEUDO_STRATEGIES[this.supportedLocales[0]]);
+        } else {
+          return locale.ast[id];
+        }
       }

       var e = new L10n.Error(id + ' not found in ' + loc, id, loc);
@@ -142,16 +290,12 @@

   navigator.mozL10n.translateDocument = L10n.translateDocument;

-  navigator.mozL10n.getDictionary = function getDictionary(fragment) {
-    // don't do anything for pseudolocales
-    if (this.ctx.supportedLocales[0] in L10n.PSEUDO_STRATEGIES) {
-      return null;
-    }
-
+  navigator.mozL10n.getDictionary = function getDictionary(defLoc, fragment) {
     var ast = {};

     if (!fragment) {
-      // en-US is the de facto source locale of Gaia
+      // en-US is the de facto source locale of Gaia;  defLoc can be something
+      // else, as configured in GAIA_DEFAULT_LOCALE
       var sourceLocale = this.ctx.getLocale('en-US');
       if (!sourceLocale.isReady) {
         sourceLocale.build(null);
@@ -164,13 +308,18 @@
       return ast;
     }

+    // don't build inline JSON for default language
+    if (!requiresInlineLocale && this.ctx.supportedLocales[0] === defLoc) {
+      return null;
+    }
+
     var elements = L10n.getTranslatableChildren(fragment);

     for (var i = 0; i < elements.length; i++) {
       var attrs = this.getAttributes(elements[i]);
       var val = this.ctx.getEntitySource(attrs.id);
       ast[attrs.id] = val;
-      L10n.walkContent(val, getPlaceables.bind(this, ast));
+      walkContent(val, getPlaceables.bind(this, ast));
     }
     flushBuildMessages.call(this, 'in the visible DOM');

diff --git a/build/media-resolution.js b/build/media-resolution.js
deleted file mode 100644
index 18d5b34..0000000
--- a/build/media-resolution.js
+++ /dev/null
@@ -1,82 +0,0 @@
-/*global require, exports*/
-'use strict';
-var utils = require('./utils');
-
-var MediaResolution = function() {
-  this.config = null;
-  this.webapp = null;
-  this.buildDir = null;
-};
-
-MediaResolution.prototype.setOptions = function(option) {
-  this.config = option.config;
-  this.webapp = option.webapp;
-  this.buildDir = this.webapp.buildDirectoryFile;
-};
-
-// If config.GAIA_DEV_PIXELS_PER_PX is not 1 and the file is a bitmap or video
-// let's check if there is a bigger version in the directory.
-// If so let's ignore the file in order to use the bigger version later.
-MediaResolution.prototype.pickMediaByResolution = function(file) {
-  if (!/\.(png|gif|jpg|webm|mp4|m4v|ogg|ogv)$/.test(file.path)) {
-    return;
-  }
-  var gaiaPixelsPerPx = this.config.GAIA_DEV_PIXELS_PER_PX;
-  var suffix = '@' + gaiaPixelsPerPx + 'x';
-  var matchResult = /@([0-9]+\.?[0-9]*)x/.exec(file.path);
-
-  if ((gaiaPixelsPerPx === '1' && matchResult) ||
-      (matchResult && matchResult[1] !== gaiaPixelsPerPx)) {
-      file.remove(true);
-  }
-
-  if (gaiaPixelsPerPx !== '1') {
-    if (matchResult && matchResult[1] === gaiaPixelsPerPx) {
-      // Save the hidpi file to the zip, strip the name to be more generic.
-      utils.copyFileTo(file.path, file.parent.path,
-        utils.basename(file.path).replace(suffix, ''), true);
-      file.remove(true);
-    } else {
-      // Check if there a hidpi file. If yes, let's ignore this file since
-      // it will be loaded later (or it has already been loaded, depending on
-      // how the OS organize files.
-      var hqfile = utils.getFile(
-        file.path.replace(/(\.[a-z]+$)/, suffix + '$1'));
-      if (hqfile.exists()) {
-        file.remove(true);
-      }
-    }
-  }
-};
-
-MediaResolution.prototype.fileProcess = function(file) {
-  this.pickMediaByResolution(file);
-};
-
-MediaResolution.prototype.execute = function(options) {
-  this.setOptions(options);
-
-  // sort listing by path to ensure hidpi files are processed *after* the
-  // corresponding 1x file
-  var files = utils.ls(this.buildDir, true).sort(function(a, b) {
-    if(a.path < b.path) {
-      return -1;
-    }
-    if(a.path > b.path) {
-      return 1;
-    }
-    return 0;
-  });
-  files.forEach(this.fileProcess.bind(this));
-};
-
-function execute(config) {
-  var gaia = utils.gaia.getInstance(config);
-  gaia.webapps.forEach(function(webapp) {
-    (new MediaResolution()).execute({webapp: webapp, config: config});
-  });
-
-}
-
-exports.execute = execute;
-exports.MediaResolution = MediaResolution;
diff --git a/build/multilocale.js b/build/multilocale.js
index 4ca95f0..64cc452 100644
--- a/build/multilocale.js
+++ b/build/multilocale.js
@@ -252,13 +252,10 @@ function L10nManager(gaiaDir, localesFilePath, localeBasedir, official) {
   function localizeManifest(webapp) {
     var localesProps = [];
     var localesForManifest = self.locales.filter(function(locale) {
-      if (locale === 'en-US') {
-        return false;
-      }
       var parent = webapp.sourceDirectoryFile.parent.leafName;
       var propFile = utils.getFile(self.localeBasedir, locale, parent,
         webapp.sourceDirectoryName, 'manifest.properties');
-      if (!propFile.exists()) {
+      if (!propFile.exists() ) {
         // we don't show warning message if it isn't in "apps" directory.
         if (locale !== 'en-US' && parent === 'apps') {
           utils.log(MODNAME, 'App "' + webapp.sourceDirectoryName +
diff --git a/build/post-app.js b/build/post-app.js
index 70778b2..bf6d583 100644
--- a/build/post-app.js
+++ b/build/post-app.js
@@ -4,8 +4,8 @@
 function execute(options) {
   require('./clean-build-files').execute(options);

-  // Filter images/video by GAIA_DEV_PIXELS_PER_PX.
-  require('./media-resolution').execute(options);
+  // Filter images by GAIA_DEV_PIXELS_PER_PX.
+  require('./image-resolution').execute(options);

   // Updates hostnames for InterApp Communication APIs.
   require('./post-manifest').execute(options);
diff --git a/build/test/integration/build.test.js b/build/test/integration/build.test.js
index 919a24d..4c0cd52 100644
--- a/build/test/integration/build.test.js
+++ b/build/test/integration/build.test.js
@@ -768,30 +768,6 @@ suite('Build Integration tests', function() {
     );
   });

-  test('make app with custom origin', function(done) {
-    // add custom-origin app to apps list
-    var appsListPath  = path.join('build', 'config', 'phone',
-      'apps-engineering.list');
-    fs.renameSync(appsListPath, appsListPath + '.bak');
-    fs.writeFileSync(appsListPath, 'apps/*\ndev_apps/custom-origin\n');
-
-    helper.exec('DEBUG=1 make', function(error, stdout, stderr) {
-      fs.unlinkSync(appsListPath);
-      fs.renameSync(appsListPath + '.bak', appsListPath);
-
-      helper.checkError(error, stdout, stderr);
-
-      var webappsPath = path.join(process.cwd(), 'profile-debug',
-        'webapps', 'webapps.json');
-      var webapps = JSON.parse(fs.readFileSync(webappsPath));
-
-      assert.isNotNull(webapps['test.mozilla.com']);
-      assert.equal(webapps['test.mozilla.com'].origin, 'app://test.mozilla.com');
-
-      done();
-    });
-  });
-
   suite('Build file inclusion tests', function() {
     test('build includes elements folder and sim_picker', function(done) {
       helper.exec('make', function(error, stdout, stderr) {
@@ -811,7 +787,7 @@ suite('Build Integration tests', function() {
       helper.exec('GAIA_CONCAT_LOCALES=0 make', function(error, stdout, stderr) {
         helper.checkError(error, stdout, stderr);
         var zipPath = path.join(process.cwd(), 'profile', 'webapps',
-          'system.gaiamobile.org', 'application.zip');
+          'settings.gaiamobile.org', 'application.zip');
         var zip = new AdmZip(zipPath);
         var qpsPlocPathInZip = 'locales-obj/qps-ploc.json';
         assert.isNull(zip.getEntry(qpsPlocPathInZip),
@@ -828,12 +804,21 @@ suite('Build Integration tests', function() {
         var zipPath = path.join(process.cwd(), 'profile', 'webapps',
           'system.gaiamobile.org', 'application.zip');
         var zip = new AdmZip(zipPath);
+        var enUSFileInZip = zip.getEntry('locales-obj/en-US.json');
         var qpsPlocPathInZip = 'locales-obj/qps-ploc.json';
-        assert.isNull(zip.getEntry(qpsPlocPathInZip),
-          'accented English file ' + qpsPlocPathInZip + ' should not exist');
         var qpsPlocmPathInZip = 'locales-obj/qps-plocm.json';
-        assert.isNull(zip.getEntry(qpsPlocmPathInZip),
-          'mirrored English file ' + qpsPlocmPathInZip + ' should not exist');
+        var qpsPlocFileInZip = zip.getEntry(qpsPlocPathInZip);
+        var qpsPlocmFileInZip = zip.getEntry(qpsPlocmPathInZip);
+        assert.isNotNull(qpsPlocFileInZip,
+          'accented English file ' + qpsPlocPathInZip + ' should exist');
+        assert.notDeepEqual(JSON.parse(zip.readAsText(qpsPlocFileInZip)),
+                            JSON.parse(zip.readAsText(enUSFileInZip)),
+          'accented English file should not be identical to regular English');
+        assert.isNotNull(qpsPlocmFileInZip,
+          'mirrored English file ' + qpsPlocmPathInZip + ' should exist');
+        assert.notDeepEqual(JSON.parse(zip.readAsText(qpsPlocmFileInZip)),
+                            JSON.parse(zip.readAsText(enUSFileInZip)),
+          'mirrored English file should not be identical to regular English');
         done();
       });
     });
diff --git a/build/test/integration/distribution.test.js b/build/test/integration/distribution.test.js
index d9461f2..c966742 100644
--- a/build/test/integration/distribution.test.js
+++ b/build/test/integration/distribution.test.js
@@ -262,10 +262,7 @@ suite('Distribution mechanism', function() {
     assert.equal(config.grid[0][1].entry_point, 'dialer');
     assert.equal(config.grid[0][2].name, 'Messages');
     assert.equal(config.grid[0][3].name, 'Marketplace');
-    assert.equal(config.grid[1][0].name, 'Social');
-    assert.equal(config.grid[1][1].name, 'Games');
-    assert.equal(config.grid[1][2].name, 'Music');
-    assert.equal(config.grid[2][0].name, 'Gallery');
+    assert.equal(config.grid[1][0].name, 'Gallery');

     assert.isTrue(fs.existsSync(path.join(process.cwd(), 'profile',
       'svoperapps', 'Twitter')),
diff --git a/build/test/integration/multilocale.test.js b/build/test/integration/multilocale.test.js
index 0ad9711..194caed 100644
--- a/build/test/integration/multilocale.test.js
+++ b/build/test/integration/multilocale.test.js
@@ -26,18 +26,6 @@ suite('multilocale Integration tests', function() {
           '/archive/tip.tar.gz';
         var dl = download(url, dir, {extract: true, strip: 1});
         dl.once('close', function() {
-          if (locale === 'en-US') {
-            var manifestPath = path.join(dir, 'apps', 'settings',
-              'manifest.properties');
-            var systemTranslation = fs.readFileSync(manifestPath,
-              {encoding: 'utf-8'});
-            // bug 1007485: we shouldn't translate en-US even if
-            // LOCALES_BASEDIR/en-US exists, so change "Gaia Settings" to
-            // "Gaea Settings" in en-US and assume it shouldn't be translated to
-            // "Gaea Settings".
-            fs.writeFileSync(manifestPath,
-              systemTranslation.replace('Gaia Settings', 'Gaea Settings'));
-          }
           callback();
         });
       };
@@ -79,9 +67,6 @@ suite('multilocale Integration tests', function() {
       }

       assert.deepEqual(JSON.parse(zip.readAsText(langPathInZip)), localesFileObj);
-      var manifest =
-        JSON.parse(zip.readAsText(zip.getEntry('manifest.webapp')));
-      assert.equal(manifest.locales['en-US'].description, 'Gaia Settings');
       done();
     });
   }
diff --git a/build/test/unit/image-resolution.test.js b/build/test/unit/image-resolution.test.js
new file mode 100644
index 0000000..6ef70f4
--- /dev/null
+++ b/build/test/unit/image-resolution.test.js
@@ -0,0 +1,104 @@
+'use strict';
+
+var assert = require('chai').assert;
+var proxyquire = require('proxyquire');
+var mockUtils =
+  require('./mock_utils.js');
+
+suite('image-resolution.js', function() {
+  var app;
+  var isFileExists;
+  setup(function() {
+    app = proxyquire.noCallThru().load(
+            '../../image-resolution', {
+              './utils': mockUtils
+            });
+
+    var GetFile = function(path) {
+      this.path = path;
+      this.isRemoved = false;
+    };
+    GetFile.prototype = {
+      remove: function() {
+        this.isRemoved = true;
+      },
+      get parent() {
+        return mockUtils.getFile(this.path + '_parent');
+      },
+      exists: function() {
+        return isFileExists;
+      }
+    };
+
+    mockUtils.getFile = function(path) {
+      return new GetFile(path);
+    };
+  });
+
+  teardown(function() {
+    app = null;
+    isFileExists = null;
+  });
+
+  suite('pickImageByResolution', function() {
+    var imageResolution;
+    setup(function() {
+      imageResolution = new app.ImageResolution();
+    });
+
+    test('pickImageByResolution, when scanned file is 2x and ' +
+      'GAIA_DEV_PIXELS_PER_PX is 1', function() {
+        var filePath = 'test@2x.png';
+
+        var file = mockUtils.getFile(filePath);
+        imageResolution.config = {};
+
+        imageResolution.config.GAIA_DEV_PIXELS_PER_PX = '1';
+        imageResolution.pickImageByResolution(file);
+
+        assert.equal(file.isRemoved, true);
+      });
+
+    test('pickImageByResolution, when scanned file is default and ' +
+      'GAIA_DEV_PIXELS_PER_PX is 1', function() {
+        var filePath = 'test.png';
+
+        var file = mockUtils.getFile(filePath);
+        imageResolution.config = {};
+
+        imageResolution.config.GAIA_DEV_PIXELS_PER_PX = '1';
+        imageResolution.pickImageByResolution(file);
+
+        assert.equal(file.isRemoved, false);
+      });
+
+    test('pickImageByResolution, when scanned file is default and ' +
+      'GAIA_DEV_PIXELS_PER_PX is 2 and @2x file exists', function() {
+        var filePath = 'test.png';
+
+        var file = mockUtils.getFile(filePath);
+        imageResolution.config = {};
+
+        imageResolution.config.GAIA_DEV_PIXELS_PER_PX = '2';
+        imageResolution.pickImageByResolution(file);
+
+        // hidpi file which meet GAIA_DEV_PIXELS_PER_PX exists.
+        isFileExists = true;
+        assert.equal(file.isRemoved, false);
+      });
+
+    test('pickImageByResolution, when scanned file is default and ' +
+      'GAIA_DEV_PIXELS_PER_PX is 2 and @2x file doenot exist', function() {
+        var filePath = 'test.png';
+
+        var file = mockUtils.getFile(filePath);
+        imageResolution.config = {};
+
+        imageResolution.config.GAIA_DEV_PIXELS_PER_PX = '2';
+        imageResolution.pickImageByResolution(file);
+
+        isFileExists = false;
+        assert.equal(file.isRemoved, false);
+      });
+  });
+});
diff --git a/build/test/unit/media-resolution.test.js b/build/test/unit/media-resolution.test.js
deleted file mode 100644
index 992825b..0000000
--- a/build/test/unit/media-resolution.test.js
+++ /dev/null
@@ -1,119 +0,0 @@
-'use strict';
-
-var assert = require('chai').assert;
-var proxyquire = require('proxyquire');
-var mockUtils =
-  require('./mock_utils.js');
-
-suite('media-resolution.js', function() {
-  var app;
-  var isFileExists;
-  setup(function() {
-    app = proxyquire.noCallThru().load(
-            '../../media-resolution', {
-              './utils': mockUtils
-            });
-
-    var GetFile = function(path) {
-      this.path = path;
-      this.isRemoved = false;
-    };
-    GetFile.prototype = {
-      remove: function() {
-        this.isRemoved = true;
-      },
-      get parent() {
-        return mockUtils.getFile(this.path + '_parent');
-      },
-      exists: function() {
-        return isFileExists;
-      }
-    };
-
-    mockUtils.getFile = function(path) {
-      return new GetFile(path);
-    };
-  });
-
-  teardown(function() {
-    app = null;
-    isFileExists = null;
-  });
-
-  suite('pickMediaByResolution', function() {
-    var mediaResolution;
-    setup(function() {
-      mediaResolution = new app.MediaResolution();
-    });
-
-    test('pickMediaByResolution, when scanned file is 2x and ' +
-      'GAIA_DEV_PIXELS_PER_PX is 1', function() {
-        var filePath = 'test@2x.png';
-
-        var file = mockUtils.getFile(filePath);
-        mediaResolution.config = {};
-
-        mediaResolution.config.GAIA_DEV_PIXELS_PER_PX = '1';
-        mediaResolution.pickMediaByResolution(file);
-
-        assert.equal(file.isRemoved, true);
-      });
-
-    test('pickMediaByResolution, when scanned file is default and ' +
-      'GAIA_DEV_PIXELS_PER_PX is 1', function() {
-        var filePath = 'test.png';
-
-        var file = mockUtils.getFile(filePath);
-        mediaResolution.config = {};
-
-        mediaResolution.config.GAIA_DEV_PIXELS_PER_PX = '1';
-        mediaResolution.pickMediaByResolution(file);
-
-        assert.equal(file.isRemoved, false);
-      });
-
-    test('pickMediaByResolution, when scanned file is default and ' +
-      'GAIA_DEV_PIXELS_PER_PX is 2 and @2x file exists', function() {
-        var filePath = 'test.png';
-
-        var file = mockUtils.getFile(filePath);
-        mediaResolution.config = {};
-
-        mediaResolution.config.GAIA_DEV_PIXELS_PER_PX = '2';
-        mediaResolution.pickMediaByResolution(file);
-
-        // hidpi file which meet GAIA_DEV_PIXELS_PER_PX exists.
-        isFileExists = true;
-        assert.equal(file.isRemoved, false);
-      });
-
-    test('pickMediaByResolution, when scanned file is default and ' +
-      'GAIA_DEV_PIXELS_PER_PX is 2 and @2x file doenot exist', function() {
-        var filePath = 'test.png';
-
-        var file = mockUtils.getFile(filePath);
-        mediaResolution.config = {};
-
-        mediaResolution.config.GAIA_DEV_PIXELS_PER_PX = '2';
-        mediaResolution.pickMediaByResolution(file);
-
-        isFileExists = false;
-        assert.equal(file.isRemoved, false);
-      });
-
-    test('pickMediaByResolution, when scanned file has video extension and ' +
-      'GAIA_DEV_PIXELS_PER_PX is 2 and @2x file exists', function() {
-        var filePath = 'test.mp4';
-
-        var file = mockUtils.getFile(filePath);
-        mediaResolution.config = {};
-
-        mediaResolution.config.GAIA_DEV_PIXELS_PER_PX = '2';
-        mediaResolution.pickMediaByResolution(file);
-
-        // hidpi file which meet GAIA_DEV_PIXELS_PER_PX exists.
-        isFileExists = true;
-        assert.equal(file.isRemoved, false);
-      });
-  });
-});
diff --git a/build/test/unit/webapp-optimize.test.js b/build/test/unit/webapp-optimize.test.js
index d30fd10..08445d3 100644
--- a/build/test/unit/webapp-optimize.test.js
+++ b/build/test/unit/webapp-optimize.test.js
@@ -108,6 +108,8 @@ suite('webapp-optimize.js', function() {
       });
     };

+    mockDictionary = ['en-test'];
+
     mockUtils.writeContent = function(file, content) {
       writeFileContent = content;
       writeFile = file;
@@ -216,9 +218,10 @@ suite('webapp-optimize.js', function() {
             code: 'testlangcode',
             direction: 'testleft'
           },
-          getDictionary: function() {
+          getDictionary: function(locale) {
             return function(docElt) {
               return {
+                locale: locale,
                 doc: docElt
               };
             };
@@ -299,15 +302,15 @@ suite('webapp-optimize.js', function() {
       var buildDirectoryFile = mockUtils.getFile('build_stage');
       webappOptimize.webapp = {
         buildDirectoryFile: buildDirectoryFile,
-        dictionary: {'en-test': { testId: 'testIdContent'}}
+        dictionary: mockDictionary
       };
       fileChildren[buildDirectoryFile.leafName + '/locales-obj'] = [
-        mockUtils.getFile('en-test.json')
+        mockUtils.getFile(mockDictionary[0] + '.json')
       ];
       webappOptimize.writeDictionaries();
-      assert.equal(writeFileContent, '{"testId":"testIdContent"}',
+      assert.equal(writeFileContent, JSON.stringify(mockDictionary[0]),
         'should write locale content');
-      assert.equal(writeFile.leafName, 'build_stage/locales-obj/en-test.json',
+      assert.equal(writeFile.leafName, 'build_stage/locales-obj/0.json',
         'should write locale content to this path');
       assert.deepEqual(removedFilePath,
         ['en-test.json', 'build_stage/locales', 'build_stage/shared/locales'],
@@ -335,8 +338,8 @@ suite('webapp-optimize.js', function() {
         },
         locales: ['en-test']
       });
-      assert.deepEqual(webappOptimize.webapp.dictionary, {},
-        'should create an empty dictionary for webapp');
+      assert.deepEqual(webappOptimize.webapp.dictionary, {'en-test': {}},
+        'should copy locales to webapp');
       assert.equal(webappOptimize.numOfFiles, 2,
         'should have two file left');
       assert.equal(processFiles[0].leafName, 'test.html',
@@ -354,12 +357,12 @@ suite('webapp-optimize.js', function() {
       htmlOptimizer = new app.HTMLOptimizer({
         htmlFile: htmlFile,
         webapp: {
-          dictionary: {'en-test': {}},
+          dictionary: {'test-en': {}},
           buildDirectoryFile: mockUtils.getFile('build_stage')
         },
         config: mockConfig,
         win: mockWin,
-        locales: ['en-test'],
+        locales: ['test-en'],
         optimizeConfig: mockoptimizeConfig,
         callback: function(files) {
           doneFiles = files;
@@ -395,8 +398,8 @@ suite('webapp-optimize.js', function() {
       mockWin.document.documentElement = {};
       htmlOptimizer._proceedLocales();
       assert.deepEqual(htmlOptimizer.fullDict,
-        {'en-test': {'test-id': 'testIdContent'}});
-      assert.equal(htmlOptimizer.webapp.dictionary['en-test']['test-id'],
+        {'test-en': {'test-id': 'testIdContent'}});
+      assert.equal(htmlOptimizer.webapp.dictionary['test-en']['test-id'],
         'testIdContent');
     });

@@ -549,4 +552,4 @@ suite('webapp-optimize.js', function() {
       assert.equal(result.file.getCurrentPath(), 'build_stage/test/official');
     });
   });
-});
+});
\ No newline at end of file
diff --git a/build/utils-node.js b/build/utils-node.js
index 17d34e7..92819e7 100644
--- a/build/utils-node.js
+++ b/build/utils-node.js
@@ -1,15 +1,5 @@
 'use strict';

-/**
- * This file contains all Node.js version of utils functions.
- * Since we're stil in the progress to migrate to Node.js, the
- * missing functions in this file should be in the 'utils-xpc.js'
- *
- * About documents:
- * Users can find comments in the 'utils-xpc.js',
- * which contains the complete functions used in 'utils.js'
- */
-
 /* global require, exports, Buffer */

 var utils = require('./utils.js');
diff --git a/build/utils-xpc.js b/build/utils-xpc.js
index 2454d4d..5d3a527 100644
--- a/build/utils-xpc.js
+++ b/build/utils-xpc.js
@@ -14,7 +14,6 @@ Cu.import('resource://gre/modules/Promise.jsm');
 Cu.import('resource://gre/modules/reflect.jsm');

 var utils = require('./utils.js');
-var subprocess = require('sdk/system/child_process/subprocess');
 /**
  * Returns an array of nsIFile's for a given directory
  *
@@ -67,12 +66,6 @@ function isExternalApp(webapp) {
   }
 }

-/**
- * Read the file and output as an UTF-8 string.
- *
- * @param file {nsIFile} - the File object.
- * @return {string}
- */
 function getFileContent(file) {
   var content;
   try {
@@ -100,12 +93,7 @@ function getFileContent(file) {
   return content;
 }

-/**
- * Write content to file, if the file doesn't exist, the it will auto create one
- *
- * @param file {nsIFile} - the file object
- * @param content {string} - would write it as string to string
- */
+// Write content to file, if the file doesn't exist, the it will auto create one
 function writeContent(file, content) {
   try {
     var fileStream = Cc['@mozilla.org/network/file-output-stream;1']
@@ -124,18 +112,8 @@ function writeContent(file, content) {
   }
 }

-/**
- * Return an nsIFile by joining paths given as arguments
- * First path has to be an absolute one.
- *
- * The file path should be separated paths like:
- * getFile('/Users/foo', 'bar', 'car.js')
- *
- * Note we don't support '../foo/bar.js', since the first
- * argument must be absolute path.
- *
- * @return {nsIFile}
- */
+// Return an nsIFile by joining paths given as arguments
+// First path has to be an absolute one
 function getFile() {
   try {
     let file = new FileUtils.File(arguments[0]);
@@ -158,12 +136,6 @@ function getFile() {
   }
 }

-/**
- * Give a File object for the directory.
- * If it doesn't exist, create it.
- *
- * @param file {nsIFile} - the object
- */
 function ensureFolderExists(file) {
   if (!file.exists()) {
     try {
@@ -175,12 +147,6 @@ function ensureFolderExists(file) {
   }
 }

-/**
- * Concat scripts and put it to the target path.
- *
- * @param scriptsPaths {[string]} - the paths of the script files
- * @param targetPath {string}
- */
 function concatenatedScripts(scriptsPaths, targetPath) {
   var concatedScript = scriptsPaths.map(function(path) {
     return getFileContent(getFile.apply(this, path));
@@ -192,11 +158,6 @@ function concatenatedScripts(scriptsPaths, targetPath) {
   writeContent(targetFile, concatedScript);
 }

-/**
- * Get one JSON file's content and parse it as object.
- * @param file {nsIFile} - the file object
- * @return {object} - the parsed object
- */
 function getJSON(file) {
   let content;
   try {
@@ -211,12 +172,6 @@ function getJSON(file) {
   }
 }

-/**
- * Read the file and assume it as binary, and convert it to base64 string.
- *
- * @param file {nsIFile}
- * @return {string} - the base64 encoded string, prefix with the contentType
- */
 function getFileAsDataURI(file) {
   var contentType = Cc['@mozilla.org/mime;1']
                     .getService(Ci.nsIMIMEService)
@@ -231,16 +186,6 @@ function getFileAsDataURI(file) {
   return 'data:' + contentType + ';base64,' + encoded;
 }

-/**
- * Read the `manifest.webapp` from an app's `application.zip` file.
- * The `appDir` file object must be `profile/webapps/someapp.gaiamobile.org`,
- * which contains the `application.zip` file.
- *
- * The read out manifest would be an object.
- *
- * @param appDir {nsIFile}
- * @return {object} - parsed from the JSON file: manifest.webapp
- */
 function readZipManifest(appDir) {
   let zipFile = appDir.clone();
   zipFile.append('application.zip');
@@ -276,22 +221,6 @@ function readZipManifest(appDir) {
                   ' app (' + appDir.leafName + ')\n');
 }

-/**
- * Get an app's detail in an object. For example:
- * {
- *    manifest: the parsed JSON object of the manifest,
- *    manifestFile: the File object of the manifest,
- *    ...
- *    domain: the domain
- * }
- *
- * @param app {string} - the app name
- * @param domain {string} - the domain name, like 'gaiamobile.org'
- * @param scheme {string} - 'http://' or 'app://'
- * @param port {string} - '8080' or keep null
- * @param stageDir {string} - the path of the build stage directory
- * @return {obeject} - the information of the webapp
- */
 function getWebapp(app, domain, scheme, port, stageDir) {
   let appDir = getFile(app);
   if (!appDir.exists()) {
@@ -311,16 +240,11 @@ function getWebapp(app, domain, scheme, port, stageDir) {
   }

   let manifest = manifestFile.exists() ? manifestFile : updateFile;
-  let manifestJSON = getJSON(manifest);

   // Use the folder name as the the domain name
   let appDomain = appDir.leafName + '.' + domain;
-  if (manifestJSON.origin) {
-    appDomain = utils.getNewURI(manifestJSON.origin).host;
-  }
-
   let webapp = {
-    manifest: manifestJSON,
+    manifest: getJSON(manifest),
     manifestFile: manifest,
     buildManifestFile: manifest,
     url: scheme + appDomain,
@@ -351,16 +275,6 @@ function getWebapp(app, domain, scheme, port, stageDir) {
   return webapp;
 }

-/**
- * Get the collection of the information of webapps.
- *
- * @param appdirs {[string]} - the list of all app names
- * @param domain {string} - the domain name, like 'gaiamobile.org'
- * @param scheme {string} - 'http://' or 'app://'
- * @param port {string} - '8080' or keep null
- * @param stageDir {string} - the path of the build stage directory
- * @return {[obeject]} - the list of information of the webapps
- */
 function makeWebappsObject(appdirs, domain, scheme, port, stageDir) {
   var apps = [];
   appdirs.forEach(function(app) {
@@ -372,16 +286,6 @@ function makeWebappsObject(appdirs, domain, scheme, port, stageDir) {
   return apps;
 }

-/**
- * Information of Gaia building session. For example, if we `getInstance`
- * from it, the result would be:
- * {
- *    stageDir: the path of the `build_stage` directory,
- *    engine: 'firefox' or 'b2g'
- *    ...
- *    distributionDir: the path of the `distribution` directory
- * }
- */
 var gaia = {
   config: {},
   getInstance: function(config) {
@@ -413,14 +317,6 @@ function getLocaleBasedir(original) {
     original.replace('/', '\\', 'g') : original;
 }

-/**
- * To see if one app is existing in the app directories.
- * It would try to get the app to see if it's really existing.
- *
- * @param appDirs {string} - <'path to system> <path to video> ...' list of apps
- * @param appName {string} - the name of the app
- * @return {bool}
- */
 function existsInAppDirs(appDirs, appName) {
   var apps = appDirs.split(' ');
   var exists = apps.some(function (appPath) {
@@ -430,14 +326,6 @@ function existsInAppDirs(appDirs, appName) {
   return exists;
 }

-/**
- * Give the content of config file in distribution directory.
- * If there is no such JSON file, give the default content.
- *
- * @param name {string} - the config name
- * @param defaultContent {object} - the default content map
- * @param distDir {string} - the path of distribution direction
- */
 function getDistributionFileContent(name, defaultContent, distDir) {
   if (distDir) {
     let distributionFile = getFile(distDir, name + '.json');
@@ -448,17 +336,6 @@ function getDistributionFileContent(name, defaultContent, distDir) {
   return JSON.stringify(defaultContent, null, '  ');
 }

-/**
- * Give the relative or absolute path, then try to get the file to give
- * the indicated file object.
- *
- * This is similar to the `getFile`, but it can use relative path to invoke
- * the `getFile` implicitly.
- *
- * @param path {string}
- * @param gaiaDir {string} - the path of Gaia directory
- * @return {nsIFile}
- */
 function resolve(path, gaiaDir) {
   // First check relative path to gaia folder
   let abs_path_chunks = [gaiaDir].concat(path.split(/\/|\\/));
@@ -518,20 +395,16 @@ function listFiles(path, type, recursive, exclude) {
 }

 /**
- * Check if a file or directory exists.
+ * check if a file or directory exists.
  * Note: this function is a wrapper function  for node.js
- *
- * @param path {string} - the path; must not come with '../' or './'
  */
 function fileExists(path) {
   return getFile(path).exists();
 }

 /**
- * Create dir and its parents.
+ * create dir and its parents.
  * Note: this function is a wrapper function  for node.js
- *
- * @param path {string} - the path; must not come with '../' or './'
  */
 function mkdirs(path) {
   ensureFolderExists(getFile(path));
@@ -545,31 +418,19 @@ function joinPath() {
   return OS.Path.join.apply(OS.Path, arguments);
 }

-/**
- * From a path to extract it's directory name.
- * For example:
- *  '/tmp/b2g/foo/bar.json' -> '/tmp/b2g/foo'
- */
 function dirname(path) {
   return OS.Path.dirname(path);
 }

-/**
- * From a path to extract it's directory name.
- * For example:
- *  '/tmp/b2g/foo/bar.json' -> 'foo.json'
- */
 function basename(path) {
   return OS.Path.basename(path);
 }

 /**
- * Copy path to parentPath/name.
- * The 'path' and 'toParent' must not come with '../' or './' .
- *
- * @param  {string}  path       the file to copy,
- * @param  {string}  toParent   where to put the new file,
- * @param  {string}  name       the name of the new file,
+ * copy path to parentPath/name.
+ * @param  {string}  path       directory to be copied,
+ * @param  {string}  toParent   the parent folder of destination,
+ * @param  {string}  name       the parent folder of destination,
  * @param  {boolean} override   set to true to overwride it if it is existed.

  * Note: this function is a wrapper function for node.js
@@ -587,17 +448,6 @@ function copyFileTo(path, toParent, name, override) {
   file.copyTo(parentFile, name);
 }

-/**
- * Copy path to parentPath/name.
- * The 'path' and 'toParent' must not come with '../' or './' .
- *
- * @param  {string}  path       the directory to copy,
- * @param  {string}  toParent   where to put the new directory,
- * @param  {string}  name       the name of the copied directory,
- * @param  {boolean} override   set to true to overwride it if it is existed.
-
- * Note: this function is a wrapper function for node.js
- */
 function copyDirTo(path, toParent, name, override) {
   var dir = ((typeof path === 'string') ? getFile(path) : path);
   var parentFile = getFile(toParent);
@@ -615,7 +465,7 @@ function copyDirTo(path, toParent, name, override) {
 }

 /**
- * Create standard XMLHttpRequest object.
+ * create standard XMLHttpRequest object.
  * Note: this function is a wrapper function  for node.js
  */
 function createXMLHttpRequest() {
@@ -627,7 +477,7 @@ function createXMLHttpRequest() {
 }

 /**
- * Download JSON file from internet with XMLHttpRequest.
+ * download JSON file from internet
  * Note: this function is a wrapper function  for node.js
  */
 function downloadJSON(url, callback) {
@@ -650,7 +500,7 @@ function downloadJSON(url, callback) {


 /**
- * Read JSON object from path, if the path is folder, it returns null.
+ * read JSON object from path, if the path is folder, it returns null.
  * Note: this function is a wrapper for node.js
  */
 function readJSONFromPath(path) {
@@ -663,8 +513,7 @@ function readJSONFromPath(path) {
 }

 /**
- * Write content to a file
- * The 'path' must not come with '../' or './' .
+ * write content to a file
  * Note: this function is a wrapper for node.js
  */
 function writeContentToFile(path, content) {
@@ -694,15 +543,6 @@ function processEvents(exitResultFunc) {
   }
 }

-/**
- * To create a tempory directory.
- * It would append the directory under the default temporary directory.
- * If the directory is already there, the function would create a
- * directory with the variated name according to the 'dirName'.
- *
- * @param dirName {string}
- * @return {nsIFile}
- */
 function getTempFolder(dirName) {
   var file = Cc['@mozilla.org/file/directory_service;1']
                .getService(Ci.nsIProperties).get('TmpD', Ci.nsIFile);
@@ -712,15 +552,6 @@ function getTempFolder(dirName) {
   return file;
 }

-/**
- * Get one XML file's content and parse it as DOM tree.
- *
- * About the parser:
- * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser
- *
- * @param file {nsIFile} - the file object
- * @return {DOM} - the parsed DOM tree
- */
 function getXML(file) {
   try {
     var parser = Cc['@mozilla.org/xmlextras/domparser;1']
@@ -749,21 +580,6 @@ function log(/*tag, ...*/) {
   dump(msg + '\n');
 }

-/**
- * To retrive all 'apps-*.list' in the build directory.
- * Will turn them into POD object. For example:
- *
- *    Gaia/build/config/phone/apps-production.list ->
- *    {'production': {
- *      'path': <absolute path of the above file>,
- *      'content': <stringified content of the file>
- *    }}
- *
- * The 'builddir' must not come with '../' or './' .
- *
- * @param builddir {string} - the path to the build directory
- * @return {object}
- */
 function getBuildConfig(builddir) {
   var result = {};
   ls(getFile(builddir), false).forEach(function(file) {
@@ -778,17 +594,6 @@ function getBuildConfig(builddir) {
   return result;
 }

-/**
- * To get all listed apps' name, manifest and path.
- * The 'gaiadir' and 'distdir' must not come with '../' or './'
- *
- * @see getApp
-
- * @param content {string} - stringified list of apps' name; one line per app
- * @param gaiadir {string} - the path of Gaia
- * @param distdir {string} - the path of distribution directory
- * @return {object} - the map of all apps it found
- */
 function getAppsByList(content, gaiadir, distdir) {
   var re = /(.+)\/(.+)/;
   var apps = {};
@@ -824,24 +629,6 @@ function getAppsByList(content, gaiadir, distdir) {
   return apps;
 }

-/**
- * Get one app's information.
- * The 'parent' must be relative path under Gaia directory.
- * The 'gaiadir' and 'distdir' must not come with '../' or './'
- *
- * The information would be in object like:
- *
- *  { 'name': 'system,
- *    'manifest': <the manifest information object>,
- *    'path': <path from Gaia or distribution's absolute one to the app>
- *  }
- *
- * @param parent {string} - the path of the app's parent under Gaia directory
- * @param appname {string} - the name of the app
- * @param gaiadir {string} - the path of Gaia
- * @param distdir {string} - the path of distribution directory
- * @return {object}
- */
 function getApp(parent, appname, gaiadir, distdir) {
   var app = { 'name': appname, 'parent': parent };
   var appInGaia = getFile(gaiadir, parent, appname);
@@ -868,26 +655,12 @@ function getApp(parent, appname, gaiadir, distdir) {
   return app;
 }

-/**
- * Retrive the app's name from the path of the manifest file.
- * The 'manifestPath' must not come with '../' or './' .
- *
- * @param manifestPath {string} - the path to the manifest file
- * @return {string} - the name of the app
- */
 function getAppName(manifestPath) {
   var file = getFile(manifestPath);
   var content = getJSON(file);
   return content.name;
 }

-/**
- * To replace the ' ' to '-', and turn all characters to lower case,
- * and eliminate all non-word characters.
- *
- * @param appname {string} - the string
- * @return {string}
- */
 function normalizeString(appname) {
   return appname.replace(' ', '-').toLowerCase().replace(/\W/g, '');
 }
@@ -944,30 +717,6 @@ function Commander(cmd) {
     }
     callback && callback();
   };
-
-  /**
-   * This function use subprocess module to run command. We can capture stdout
-   * throught it.
-   *
-   * @param {Array} args Arrays of command. ex: ['adb', 'b2g-ps'].
-   * @param {Object} options Callback for stdin, stdout, stderr and done.
-   *
-   * XXXX: Since method "runWithSubprocess" cannot be executed in Promise yet,
-   *       we need to keep original method "run" for push-to-device.js (nodejs
-   *       support). We'll file another bug for migration things.
-   */
-  this.runWithSubprocess = function(args, options) {
-    log('cmd', command + ' ' + args.join(' '));
-    var p = subprocess.call({
-      command: _file,
-      arguments: args,
-      stdin: (options && options.stdin) || function(){},
-      stdout: (options && options.stdout) || function(){},
-      stderr: (options && options.stderr) || function(){},
-      done: (options && options.done) || function(){},
-    });
-    p.wait();
-  };
 }

 function getEnv(name) {
@@ -976,10 +725,7 @@ function getEnv(name) {
   return env.get(name);
 }

-/**
- * Get PATH of the environment
- * @return {[string]}
- */
+// Get PATH of the environment
 function getEnvPath() {
   var paths;
   var os = getOsType();
@@ -996,11 +742,6 @@ function getEnvPath() {
   return paths;
 }

-/**
- * Kill one running app by PID.
- * @param appName {string} - the app name
- * @param gaiaDir {string} - the absolute path to Gaia directory
- */
 function killAppByPid(appName, gaiaDir) {

   var sh = new Commander('sh');
@@ -1020,38 +761,11 @@ function killAppByPid(appName, gaiaDir) {
   }
 }

-/**
- * Give the stringified HTML to parse it as DOM tree.
- * @param content {string} - the HTML content
- * @return {DOM}
- */
 function getDocument(content) {
   var DOMParser = CC('@mozilla.org/xmlextras/domparser;1', 'nsIDOMParser');
   return (new DOMParser()).parseFromString(content, 'text/html');
 }

-/**
- * To add a new file with the data into the ZIP file. If the file exists,
- * it would be overwritten.
- *
- * The 'compression' is an enum of 'interfacensIZipWriter', which indicates
- * the level of compression:
- *
- *  COMPRESSION_NONE = 0
- *  COMPRESSION_FASTEST = 1
- *  COMPRESSION_DEFAULT = 6
- *  COMPRESSION_BEST = 9  (default one in this function)
- *
- * @see http://mdn.beonex.com/en/nsIZipWriter.html
- *
- * The 'pathInZip' can be initial with '/' or no '/'.
- *
- * @param zip {nsIZipWriter} - the zip file
- * @param pathInZip {string} - the relative path to the new file
- * @param data {string} - the content of the file
- * @param time {string} - the timestamp of the file
- * @param compression {number} - the enum shows above
- */
 function addEntryContentWithTime(zip, pathInZip, data, time, compression) {
   if (!data) {
     return;
@@ -1079,10 +793,6 @@ function addEntryContentWithTime(zip, pathInZip, data, time, compression) {

 }

-/**
- * Convert the 'none' to nsIZipWriter.COMPRESSION_NONE and
- * 'best' to nsIZipWriter.COMPRESSION_BEST.
- */
 function getCompression(type) {
   switch(type) {
     case 'none':
@@ -1092,22 +802,12 @@ function getCompression(type) {
   }
 }

-/**
- * Generate UUID. It's just a wrapper of 'nsIUUIDGenerator'
- * See the 'nsIUUIDGenerator' page on MDN.
- */
 function generateUUID() {
   var uuidGenerator = Cc['@mozilla.org/uuid-generator;1']
                       .createInstance(Ci.nsIUUIDGenerator);
   return uuidGenerator.generateUUID();
 }

-/**
- * Copy directory recursively.
- *
- * @param source {nsIFile} - the source directory
- * @param target {nsIFile} - the target directlry
- */
 function copyRec(source, target) {
   var files = source.directoryEntries;
   if (!target.exists()) {
@@ -1126,31 +826,11 @@ function copyRec(source, target) {
   }
 }

-/**
- * Create an empty ZIP file.
- * For users, the way to read/write a ZIP file is
- *
- * 1. create an nsIZipWriter
- * 2. open it with the open method, which
- * 3. puts an nsIFile as the first argument
- *
- * For example:
- *
- *  createZip().open(getFile(<some file>, <mode>))
- *
- * @return {nsIZipWriter}
- */
 function createZip() {
   var zip = Cc['@mozilla.org/zipwriter;1'].createInstance(Ci.nsIZipWriter);
   return zip;
 }

-/**
- * Remove all listed files in the directory.
- *
- * @param dir {nsIFile} - the directory
- * @param filenames {[string]} - the file names
- */
 function removeFiles(dir, filenames) {
   filenames.forEach(function(fn) {
     var file = getFile(dir.path, fn);
@@ -1159,12 +839,6 @@ function removeFiles(dir, filenames) {
     }
   });
 }
-
-/**
- * To cache loaded scripts with a wrapped loader.
- * The 'exportObj' is the context of the script, which is to prevent
- * the script overwrite the things in the global context.
- */
 var scriptLoader = {
   scripts: {},
   load: function(path, exportObj) {
diff --git a/build/utils.js b/build/utils.js
index 7f48c59..59452ef 100644
--- a/build/utils.js
+++ b/build/utils.js
@@ -1,7 +1,3 @@
-/**
- * This file exports all 'utils' functions, which indeed exports the
- * implementations inside the 'utils-node' and 'utils-xpc' files.
- */

 const FILE_TYPE_FILE = 0;
 const FILE_TYPE_DIRECTORY = 1;
@@ -13,11 +9,7 @@ if (isNode()) {
   utils = require('./utils-xpc.js');
 }

-/**
- * Detect if we're in Node.js mode.
- *
- * @return {bool}
- */
+
 function isNode() {
   try {
     return process && process.versions && process.versions.node;
@@ -26,39 +18,18 @@ function isNode() {
   }
 }

-/**
- * Detect if this path is a Mozilla branding logo or L10N resource.
- *
- * @param path {string} - the file path
- * @return {bool}
- */
 function isSubjectToBranding(path) {
   return /shared[\/\\]?[a-zA-Z]*[\/\\]?branding$/.test(path) ||
          /branding[\/\\]initlogo.png/.test(path);
 }

-/**
- * Get file extension from a name.
- *
- * @return string: the extension name
- */
 function getExtension(filename) {
   return filename.substr(filename.lastIndexOf('.') + 1).toLowerCase();
 }

-/**
- * We parse list like ps aux and b2g-ps into object
- * ex: root 24692 nginx -> {
- *     user: 'root',
- *     pid: '24692',
- *     command: 'nginx'
- * }
- *
- * @param psresult {string} - the result of `ps` command.
- * @return object - {ps title: ps column content}
- */
-function psParser(psresult) {
-  var rows = psresult.split('\n');
+// We parse list like ps aux and b2g-ps into object
+function psParser(out) {
+  var rows = out.split('\n');
   if (rows.length < 2)
     return {};

@@ -91,48 +62,14 @@ function psParser(psresult) {
   return result;
 }

-/**
- * Concat to Gaia URL original like:
- * 'app://system.gaiamobile.org'
- *
- * @param name {string} - the app name
- * @param scheme {string} - the scheme, like 'app://' or 'http://'
- * @param domain {string} - the domain for Gaia, like 'gaiamobile.org'
- * @param port {string} - the port, but we don't use it
- * @return {string}
- */
 function gaiaOriginURL(name, scheme, domain, port) {
   return scheme + name + '.' + domain;
 }

-/**
- * Give the default app manifest URL like:
- * 'app://system.gaiamobile.org:8080/manifest.webapp'
- *
- * In fact, what we do is only to append the '/manifest.webapp'
- * to the origin URL.
- *
- * @param name {string} - the app name
- * @param scheme {string} - the scheme, like 'app://' or 'http://'
- * @param domain {string} - the domain for Gaia, like 'gaiamobile.org'
- * @param port {string} - the port, like 8080 or '8080'
- * @return {string}
- */
 function gaiaManifestURL(name, scheme, domain, port) {
   return gaiaOriginURL(name, scheme, domain, port) + '/manifest.webapp';
 }

-/**
- * To see if the app status is 'certified', 'privileged' or 'web',
- * and give the corresponding status code:
- *
- * 'certified': 3,
- * 'privileged': 2,
- * 'web': 1
- *
- * @param status {string} - 'certified', 'privileged' or 'web'
- * @return {number} - 3, 2 or 1
- */
 function getAppStatus(status) {
   var appStatus;
   switch (status) {
@@ -150,12 +87,6 @@ function getAppStatus(status) {
   return appStatus;
 }

-/**
- * Serialize an object, then parse it as a cloned, new object.
- *
- * @param obj {object}
- * @return {object} - the cloned new object
- */
 function cloneJSON(obj) {
   var result = null;
   try {
@@ -166,13 +97,7 @@ function cloneJSON(obj) {
   return result;
 }

-/**
- * Compare contents of two JavaScript scripts.
- *
- * @param jsa {string}
- * @param jsb {string}
- * @return {bool} - if they're strictly equal
- */
+// Compare contents of two js scripts.
 function jsComparator(jsa, jsb) {
   try {
     var jsaPrsed = JSON.stringify(utils.scriptParser(jsa, {loc: 0}));
@@ -183,16 +108,7 @@ function jsComparator(jsa, jsb) {
   }
 }

-/**
- * NodeJS library Q for promise.
- * @exports Q
- */
 exports.Q = utils.Q;
-
-/**
- * Common function.
- * @exports isSubjectToBranding
- */
 exports.isSubjectToBranding = isSubjectToBranding;
 exports.ls = utils.ls;
 exports.getFileContent = utils.getFileContent;
@@ -202,17 +118,7 @@ exports.ensureFolderExists = utils.ensureFolderExists;
 exports.getJSON = utils.getJSON;
 exports.getFileAsDataURI = utils.getFileAsDataURI;
 exports.makeWebappsObject = utils.makeWebappsObject;
-
-/**
- * Common function.
- * @exports gaiaOriginURL
- */
 exports.gaiaOriginURL = gaiaOriginURL;
-
-/**
- * Common function.
- * @exports gaiaManifestURL
- */
 exports.gaiaManifestURL = gaiaManifestURL;
 exports.getDistributionFileContent = utils.getDistributionFileContent;
 exports.resolve = utils.resolve;
@@ -231,11 +137,6 @@ exports.getNewURI = utils.getNewURI;
 exports.getOsType = utils.getOsType;
 exports.generateUUID = utils.generateUUID;
 exports.copyRec = utils.copyRec;
-
-/**
- * Common function.
- * @exports getAppStatus
- */
 exports.getAppStatus = getAppStatus;
 exports.createZip = utils.createZip;
 exports.scriptLoader = utils.scriptLoader;
@@ -245,11 +146,6 @@ exports.FILE_TYPE_FILE = FILE_TYPE_FILE;
 exports.FILE_TYPE_DIRECTORY = FILE_TYPE_DIRECTORY;
 exports.deleteFile = utils.deleteFile;
 exports.listFiles = utils.listFiles;
-
-/**
- * Common function.
- * @exports psParser
- */
 exports.psParser = psParser;
 exports.fileExists = utils.fileExists;
 exports.mkdirs = utils.mkdirs;
@@ -277,15 +173,5 @@ exports.copyDirTo = utils.copyDirTo;
 exports.existsInAppDirs = utils.existsInAppDirs;
 exports.getCompression = utils.getCompression;
 exports.removeFiles = utils.removeFiles;
-
-/**
- * Common function.
- * @exports cloneJSON
- */
 exports.cloneJSON = cloneJSON;
-
-/**
- * Common function.
- * @exports jsComparator
- */
 exports.jsComparator = jsComparator;
diff --git a/build/webapp-manifests.js b/build/webapp-manifests.js
index 9eca073..d3cfcd9 100644
--- a/build/webapp-manifests.js
+++ b/build/webapp-manifests.js
@@ -123,17 +123,11 @@ ManifestBuilder.prototype.checkOrigin = function(origin) {

 ManifestBuilder.prototype.fillAppManifest = function(webapp) {
   var url = webapp.url;
-
-  var installOrigin = url;
-  if (webapp.metadata && webapp.metadata.installOrigin) {
-    installOrigin = webapp.metadata.installOrigin;
-  }
-
   this.stageManifests[webapp.sourceDirectoryName] = {
     originalManifest: webapp.manifest,
     origin: url,
     manifestURL: url + '/manifest.webapp',
-    installOrigin: installOrigin,
+    installOrigin: url,
     receipt: null,
     installTime: this.INSTALL_TIME,
     updateTime: this.UPDATE_TIME,
diff --git a/build/webapp-optimize.js b/build/webapp-optimize.js
index 6247e41..2df9407 100644
--- a/build/webapp-optimize.js
+++ b/build/webapp-optimize.js
@@ -5,7 +5,7 @@
  * 1. Inline embeded html from <link rel="import" href="test.html" name="name">
  *    into html and commented (<!--CONTENT-->).
  * 2. Embed l10n resource in script tag to html.
- * 3. Concat l10n resource to json files and put them as link and attach to
+ * 3. Concat l10n resource to json files and put them as link and attach to
  *    html.
  * 4. Aggregate and uglify all JS files used in html to one JS file.
  * 5. Optimize inline JS/CSS content.
@@ -15,7 +15,7 @@ var utils = require('./utils');
 var jsmin = require('./jsmin');
 /**
  * HTMLOptimizer will optimize all the resources of HTML, including javascripts,
- *
+ *
  */
 var HTMLOptimizer = function(options) {
   this.htmlFile = options.htmlFile;
@@ -58,7 +58,10 @@ HTMLOptimizer.prototype.process = function() {
   var mozL10n = this.win.navigator.mozL10n;
   this.mockWinObj();

-  this.getDictionary = mozL10n.getDictionary.bind(mozL10n);
+  // configure mozL10n.getDictionary to skip the default locale when populating
+  // subDicts
+  this.getDictionary =
+    mozL10n.getDictionary.bind(mozL10n, this.config.GAIA_DEFAULT_LOCALE);

   var ignore = this.optimizeConfig.L10N_OPTIMIZATION_BLACKLIST;
   // If this HTML document uses l10n.js, pre-localize it --
@@ -93,7 +96,6 @@ HTMLOptimizer.prototype._optimize = function() {


   this.embedHtmlImports();
-  this.optimizeDeviceTypeCSS();

   var jsAggregationBlacklist = this.optimizeConfig.JS_AGGREGATION_BLACKLIST;
   if (this.config.GAIA_OPTIMIZE === '1' &&
@@ -107,7 +109,7 @@ HTMLOptimizer.prototype._optimize = function() {
   var globalVarWhiltelist = this.optimizeConfig.INLINE_GLOBAL_VAR_WHITELIST;
   if (globalVarWhiltelist[this.webapp.sourceDirectoryName] &&
        globalVarWhiltelist[this.webapp.sourceDirectoryName]
-         .indexOf(this.htmlFile.leafName) !== -1) {
+         .indexOf(this.htmlFile.leafName) !== -1){
     this.embededGlobals();
   }

@@ -143,13 +145,6 @@ HTMLOptimizer.prototype._proceedLocales = function() {
   }

   for (var lang in this.fullDict)  {
-    // skip to the next language if the dictionary is null
-    if (!this.fullDict[lang]) {
-      continue;
-    }
-    if (!this.webapp.dictionary[lang]) {
-      this.webapp.dictionary[lang] = {};
-    }
     for (var id in this.fullDict[lang]) {
       this.webapp.dictionary[lang][id] = this.fullDict[lang][id];
     }
@@ -179,9 +174,9 @@ HTMLOptimizer.prototype._proceedLocales = function() {
  * *** index.html ***
  * <link rel="import" href="test.html">
  * <section is="test"></section>
- *
+ *
  * ---- after -----
- * *** index.html ***
+ * *** index.html ***
  * <section><!--SOMETHING--></section>
  *
  * Note: one link can have multiple elements, but one lement can only have one
@@ -485,19 +480,6 @@ HTMLOptimizer.prototype.inlineCSSResources = function() {
 };

 /**
- * Removes stylesheets that are not relevant for the current device
- */
-HTMLOptimizer.prototype.optimizeDeviceTypeCSS = function() {
-  var doc = this.win.document;
-  let links = doc.querySelectorAll('link[data-device-type]');
-  Array.prototype.forEach.call(links, function(el) {
-    if (el.dataset.deviceType !== this.config.GAIA_DEVICE_TYPE) {
-      el.parentNode.removeChild(el);
-    }
-  }.bind(this));
-};
-
-/**
  * Write the optimized result into html file.
  */
 HTMLOptimizer.prototype.serializeNewHTMLDocumentOutput = function() {
@@ -710,11 +692,14 @@ WebappOptimize.prototype.execute = function(config) {
     return;
   }

-  // Locale dictionaries are created when they're needed in HTMLOptimizer's
-  // _proceedLocales.  mozL10n controls which languages to create the
-  // dictionaries for (e.g. pseudolanguages don't have JSON dictionaries
-  // associated with them).
-  this.webapp.dictionary = {};
+  var dictionary = {};
+  this.locales.forEach(function(lang) {
+    dictionary[lang] = {};
+  });
+  // We store all locale lang to webapp object and pass it to all HTMLOptimizer
+  // in order to store the content of each html, and then execute
+  // writingDictionaries after all html are processed.
+  this.webapp.dictionary = dictionary;

   // remove excluded condition /^(shared|tests?)$/)
   var files = utils.ls(this.webapp.buildDirectoryFile, true,
diff --git a/customization/findmydevice.json b/customization/findmydevice.json
index 72c784d..69597a3 100644
--- a/customization/findmydevice.json
+++ b/customization/findmydevice.json
@@ -1,5 +1,5 @@
 {
-  "api_url": "https://find.firefox.com",
-  "api_version": "1",
-  "audience_url": "https://oauth.accounts.firefox.com/v1"
-}
+    'api_url': 'https://find.firefox.com',
+    'api_version': '1',
+    'audience_url': 'https://oauth.accounts.firefox.com/v1'
+};
diff --git a/customization/homescreens.json b/customization/homescreens.json
index 0ff14b2..e0b2fa8 100644
--- a/customization/homescreens.json
+++ b/customization/homescreens.json
@@ -6,10 +6,6 @@
       ["apps", "sms"],
       ["external-apps", "marketplace.firefox.com"]
     ], [
-      ["apps/collection/collections", "social"],
-      ["apps/collection/collections", "games"],
-      ["apps/collection/collections", "music"]
-    ], [
       ["apps", "gallery"],
       ["apps", "fm"],
       ["apps", "settings"]
diff --git a/dev_apps/custom-origin/manifest.webapp b/dev_apps/custom-origin/manifest.webapp
deleted file mode 100644
index 6eb7b30..0000000
--- a/dev_apps/custom-origin/manifest.webapp
+++ /dev/null
@@ -1,12 +0,0 @@
-{
-  "name": "Custom origin",
-  "description": "Gaia Test custom origin",
-  "type": "privileged",
-  "developer": {
-    "name": "The Gaia Team",
-    "url": "https://github.com/mozilla-b2g/gaia"
-  },
-  "default_locale": "en-US",
-  "orientation": "default",
-  "origin": "app://test.mozilla.com"
-}
diff --git a/dev_apps/ds-test/js/ds-test.js b/dev_apps/ds-test/js/ds-test.js
index 4fa284c..238a731 100644
--- a/dev_apps/ds-test/js/ds-test.js
+++ b/dev_apps/ds-test/js/ds-test.js
@@ -38,23 +38,17 @@ function ds_changeHandler(label, e) {
   }
 }

-function ds_defaultStorageChanged(setting) {
-  log(setting.settingName + " changed to '" + setting.settingValue + "'");
-}
-
 function AddListeners() {
   for (i = 0; i < gVolumeStorages.length; i++) {
     gVolumeStorages[i].addEventListener('change',
       ds_changeHandler.bind(this, gVolumeStorages[i].storageName));
   }
-  navigator.mozSettings.addObserver('device.storage.writable.name', ds_defaultStorageChanged);
 }

 function RemoveListeners() {
   for (i = 0; i < gVolumeStorages.length; i++) {
     gVolumeStorages[i].removeEventListener('change', ds_changeHandler);
   }
-  navigator.mozSettings.removeObserver('device.storage.writable.name', ds_defaultStorageChanged);
 }

 function UpdateStorage() {
diff --git a/dev_apps/ds-test/manifest.webapp b/dev_apps/ds-test/manifest.webapp
index 42c412b..4ad5f51 100644
--- a/dev_apps/ds-test/manifest.webapp
+++ b/dev_apps/ds-test/manifest.webapp
@@ -15,7 +15,6 @@
     "device-storage:music":{ "access": "readwrite" },
     "device-storage:pictures":{ "access": "readwrite" },
     "device-storage:videos":{ "access": "readwrite" },
-    "settings":{ "access": "readonly" },
     "webapps-manage":{}
   },
   "activities": {
diff --git a/dev_apps/mochitest/manifest.webapp b/dev_apps/mochitest/manifest.webapp
index 65e0d04..4336f28 100644
--- a/dev_apps/mochitest/manifest.webapp
+++ b/dev_apps/mochitest/manifest.webapp
@@ -17,7 +17,6 @@
     "voicemail":{},
     "device-storage:music":{ "access": "readwrite" },
     "device-storage:pictures":{ "access": "readwrite" },
-    "device-storage:sdcard":{ "access": "readwrite" },
     "settings":{ "access": "readwrite" },
     "storage":{},
     "camera":{},
@@ -25,9 +24,7 @@
     "desktop-notification":{},
     "idle":{},
     "network-events":{},
-    "embed-apps":{},
-    "audio-channel-content":{},
-    "audio-channel-alarm":{}
+    "embed-apps":{}
   },
   "locales": {
     "en-US": {
diff --git a/dev_apps/sheet-app-1/index.html b/dev_apps/sheet-app-1/index.html
index 67dae0a..f73503c 100644
--- a/dev_apps/sheet-app-1/index.html
+++ b/dev_apps/sheet-app-1/index.html
@@ -43,10 +43,9 @@
         </fieldset>
         <fieldset>
           <legend>Activity</legend>
-          <section data-items="3">
+          <section data-items="2">
             <button data-activity="inline">^inline</button>
             <button data-activity="window">>window</button>
-            <button data-dialog="window">>dialog</button>
           </section>
         </fieldset>
         <fieldset>
diff --git a/dev_apps/sheet-app-1/manifest.webapp b/dev_apps/sheet-app-1/manifest.webapp
index c6df9a6..f847a8e 100644
--- a/dev_apps/sheet-app-1/manifest.webapp
+++ b/dev_apps/sheet-app-1/manifest.webapp
@@ -72,15 +72,6 @@
       "disposition": "inline",
       "href": "page3f.html",
       "returnValue": true
-    },
-    "view": {
-      "filters": {
-        "type": "url",
-        "url": { "required":true, "pattern":"test:.{1,16384}" },
-        "disposition": "window",
-        "href": "page3e.html",
-        "returnValue": true
-      }
     }
   }
 }
\ No newline at end of file
diff --git a/dev_apps/sheet-app-1/sheet.js b/dev_apps/sheet-app-1/sheet.js
index 4befe1c..25baeff 100644
--- a/dev_apps/sheet-app-1/sheet.js
+++ b/dev_apps/sheet-app-1/sheet.js
@@ -54,8 +54,6 @@
       request.onerror = function() {
         this.INPUT.value = 'canceled';
       }.bind(this);
-    } else if (data.dialog) { // for window.open dialog test
-      window.open('test:test.sheet', '_blank', 'dialog');
     } else if (data.target) {
       var child = window.open(data.target, data.target, data.feature);
       if (data.feature !== 'dialog') {
diff --git a/dev_apps/sheet-app-2/manifest.webapp b/dev_apps/sheet-app-2/manifest.webapp
index ce642c5..e30c9eb 100644
--- a/dev_apps/sheet-app-2/manifest.webapp
+++ b/dev_apps/sheet-app-2/manifest.webapp
@@ -72,15 +72,6 @@
       "disposition": "inline",
       "href": "page3f.html",
       "returnValue": true
-    },
-    "view": {
-      "filters": {
-        "type": "url",
-        "url": { "required":true, "pattern":"test:.{1,16384}" },
-        "disposition": "window",
-        "href": "page3e.html",
-        "returnValue": true
-      }
     }
   }
 }
\ No newline at end of file
diff --git a/dev_apps/sheet-app-3/manifest.webapp b/dev_apps/sheet-app-3/manifest.webapp
index f043e0a..717973e 100644
--- a/dev_apps/sheet-app-3/manifest.webapp
+++ b/dev_apps/sheet-app-3/manifest.webapp
@@ -70,15 +70,6 @@
        },
       "disposition": "inline",
       "href": "page3f.html"
-    },
-    "view": {
-      "filters": {
-        "type": "url",
-        "url": { "required":true, "pattern":"test:.{1,16384}" },
-        "disposition": "window",
-        "href": "page3e.html",
-        "returnValue": true
-      }
     }
   }
 }
\ No newline at end of file
diff --git a/dev_apps/uitest/manifest.webapp b/dev_apps/uitest/manifest.webapp
index fb1e3a6..18316c1 100644
--- a/dev_apps/uitest/manifest.webapp
+++ b/dev_apps/uitest/manifest.webapp
@@ -30,7 +30,6 @@
     "audio-capture":{},
     "video-capture":{},
     "bluetooth":{},
-    "downloads":{},
-    "firefox-accounts": {}
+    "downloads":{}
   }
 }
diff --git a/dev_apps/uitest/tests_html/API/composeemail.html b/dev_apps/uitest/tests_html/API/composeemail.html
index cb2f98e..4050bba 100644
--- a/dev_apps/uitest/tests_html/API/composeemail.html
+++ b/dev_apps/uitest/tests_html/API/composeemail.html
@@ -9,10 +9,7 @@
     <link rel="stylesheet" type="text/css" href="/shared/style/buttons.css">
   </head>
   <body>
-    <h3>Compose Email with 'new' activity:</h3>
-    <button id="compose-email">Compose Email</button>
-    <h3>Compose Email with mailto url link:</h3>
-    <a href="mailto:example@example.org">Compose Email</a>
+    <button id="compose-email">Compose Email</button>
   </body>
 </html>

diff --git a/gaia_node_modules.revision b/gaia_node_modules.revision
index 367a5a9..1c29022 100644
--- a/gaia_node_modules.revision
+++ b/gaia_node_modules.revision
@@ -1 +1 @@
-04665f6b35fe0c556d3786c337ea3a2d0ffbb7cd
+4e1567fc0205ef14dec82cb024c583531eafe829
diff --git a/locales/languages_all.json b/locales/languages_all.json
index ebfaf78..6e4eb75 100644
--- a/locales/languages_all.json
+++ b/locales/languages_all.json
@@ -1,5 +1,4 @@
 {
-  "af"        : "Afrikaans",
   "ar"        : "عربي",
   "as"        : "অসমীয়া",
   "ast"       : "Asturianu",
@@ -14,7 +13,6 @@
   "da"        : "Dansk",
   "de"        : "Deutsch",
   "el"        : "Ελληνικά",
-  "en-GB"     : "English (GB)",
   "en-US"     : "English (US)",
   "eo"        : "Esperanto",
   "es"        : "Español",
@@ -41,10 +39,10 @@
   "lij"       : "Ligure",
   "lt"        : "Lietuvių",
   "mai"       : "मैथिली",
-  "mk"        : "Македонски",
   "ml"        : "മലയാളം",
-  "mr"        : "मराठी",
+  "mk"        : "Македонски",
   "ms"        : "Melayu",
+  "mr"        : "मराठी",
   "nb-NO"     : "Norsk bokmål",
   "ne-NP"     : "नेपाली",
   "nl"        : "Nederlands",
@@ -71,6 +69,5 @@
   "vi"        : "Tiếng Việt",
   "xh"        : "isiXhosa",
   "zh-CN"     : "中文 (简体)",
-  "zh-TW"     : "正體中文 (繁體)",
-  "zu"        : "isiZulu"
+  "zh-TW"     : "正體中文 (繁體)"
 }
diff --git a/package.json b/package.json
index 047ca74..db06180 100644
--- a/package.json
+++ b/package.json
@@ -7,7 +7,7 @@
   "devDependencies": {
     "async": "0.2.9",
     "adm-zip": "0.4.3",
-    "chai": "1.9.1",
+    "chai": "~1.4.2",
     "dateformat": "1.0.6-1.2.3",
     "debug": "*",
     "download": "0.1.7",
@@ -21,23 +21,23 @@
     "grunt-jsdoc": "0.5.1",
     "jshint": "2.4.2",
     "load-grunt-tasks": "0.4.0",
-    "mail-fakeservers": "0.0.20",
+    "mail-fakeservers": "0.0.19",
     "marionette-apps": "0.3.7",
-    "marionette-client": "1.1.8",
+    "marionette-client": "1.1.7",
     "marionette-content-script": "0.0.4",
     "marionette-device-host": "0.0.2",
     "marionette-file-manager": "0.0.2",
     "marionette-helper": "~0.3.1",
     "marionette-plugin-forms": "0.0.3",
     "marionette-profile-builder": "0.0.3",
-    "marionette-js-runner": "0.5.4",
+    "marionette-js-runner": "0.5.2",
     "marionette-settings-api": "~0.1.0",
     "mocha": "1.20.0",
     "mocha-json-proxy": "~0.0.7",
     "mocha-parallel": "0.1.0",
     "mocha-tbpl-reporter": "0.1.3",
     "moment": "~2.4.0",
-    "mozilla-download": "~0.4.3",
+    "mozilla-download": "~0.4.1-alpha",
     "proxyquire": "~0.4",
     "node-static": "0.6.9",
     "q": "~0.9.7",
diff --git a/shared/elements/gaia_grid/js/grid_icon_renderer.js b/shared/elements/gaia_grid/js/grid_icon_renderer.js
index bc02c72..38a7bd6 100644
--- a/shared/elements/gaia_grid/js/grid_icon_renderer.js
+++ b/shared/elements/gaia_grid/js/grid_icon_renderer.js
@@ -52,7 +52,7 @@
      * @return {CanvasRenderingContext2D}
      */
     _decorateShadowCanvas: function(canvas) {
-      var ctx = canvas.getContext('2d', { willReadFrequently: true });
+      var ctx = canvas.getContext('2d');

       ctx.shadowColor = SHADOW_COLOR;
       ctx.shadowBlur = SHADOW_BLUR;
@@ -75,8 +75,7 @@
         var shadowCtx = this._decorateShadowCanvas(shadowCanvas);

         var clipCanvas = this._createCanvas();
-        var clipCtx = clipCanvas.getContext('2d',
-                                            { willReadFrequently: true });
+        var clipCtx = clipCanvas.getContext('2d');

         clipCtx.beginPath();
         clipCtx.arc(clipCanvas.width / 2, clipCanvas.height / 2,
diff --git a/shared/elements/gaia_grid/js/grid_layout.js b/shared/elements/gaia_grid/js/grid_layout.js
index 7e4f3fb..829b04d 100644
--- a/shared/elements/gaia_grid/js/grid_layout.js
+++ b/shared/elements/gaia_grid/js/grid_layout.js
@@ -8,7 +8,6 @@

   // 320 / 5 = 64px | 480 / 5 = 96px | 540 / 5 = 108px | ...
   const iconScaleFactorMaxIconsPerRow = 5;
-  const lowCapabilityIconDivisor = 5;

   const minIconsPerRow = 3;

@@ -25,14 +24,10 @@
     this.gridView = gridView;

     if (window.verticalPreferences) {
-      verticalPreferences.get('grid.cols').then(value => {
+      verticalPreferences.get('grid.cols').then(function(value) {
         this.cols = value;
-      }, this.onReady);
-
-      verticalPreferences.get('capability').then(value => {
-        this.capability = value;
         this.onReady();
-      }, this.onReady);
+      }.bind(this), this.onReady);

       verticalPreferences.addEventListener('updated', this);
     } else {
@@ -103,16 +98,15 @@

     /**
      * Returns the maximum size in pixels for an icon image. It is the size when
-     * the grid is displayed with the minimum number of columns per row.
+     * the grid is displayed with the minimum number of columns plus the scale
+     * applied in dragdrop
      */
     get gridMaxIconSize() {
-      // For low capability devices, do not scale the base icon size.
-      if (this.capability === 'low') {
-        return (windowWidth / lowCapabilityIconDivisor);
-      }
-
-      var baseSize = (windowWidth / iconScaleFactorMinIconsPerRow);
-      return baseSize * devicePixelRatio;
+      var dragdrop = this.gridView.dragdrop;
+      var scaledSize = (windowWidth / iconScaleFactorMinIconsPerRow) *
+              (dragdrop ? dragdrop.maxActiveScale : 1);
+      scaledSize *= devicePixelRatio;
+      return scaledSize;
     },

     /**
diff --git a/shared/elements/gaia_grid/js/items/grid_item.js b/shared/elements/gaia_grid/js/items/grid_item.js
index 110b84d..73470b2 100644
--- a/shared/elements/gaia_grid/js/items/grid_item.js
+++ b/shared/elements/gaia_grid/js/items/grid_item.js
@@ -248,11 +248,6 @@
      * @param {Blob} blob The image blob to display.
      */
     _displayDecoratedIcon: function(blob, isCachedIcon) {
-      if (!this.element) {
-        // The icon could be removed while it is being decorated
-        return;
-      }
-
       var style = this.element.style;

       if (!style.backgroundSize) {
@@ -347,7 +342,7 @@
      */
     _stampElementWithIcon: function(uri) {
       // ensure we don't stamp URI
-      if (!this.element || uri.startsWith('data:')) {
+      if (uri.startsWith('data:')) {
         return;
       }

diff --git a/shared/js/bluetooth_helper.js b/shared/js/bluetooth_helper.js
index 961fe0d..3133024 100644
--- a/shared/js/bluetooth_helper.js
+++ b/shared/js/bluetooth_helper.js
@@ -43,7 +43,7 @@ var BluetoothHelper = function() {
     };
   };

-  var _getAdapter = function() {
+  if (_bluetooth) {
     var req = _bluetooth.getDefaultAdapter();
     req.onsuccess = function() {
       _isReady = true;
@@ -58,12 +58,6 @@ var BluetoothHelper = function() {
       // We can do nothing without default adapter.
       console.log('BluetoothHelper(): connot get default adapter!!!');
     };
-  };
-
-  if (_bluetooth) {
-    _bluetooth.addEventListener('enabled', _getAdapter);
-    _bluetooth.addEventListener('adapteradded', _getAdapter);
-    _getAdapter();
   }

   return {
diff --git a/shared/js/contacts/import/importer_ui.js b/shared/js/contacts/import/importer_ui.js
index 3403ba9..5ec018c 100644
--- a/shared/js/contacts/import/importer_ui.js
+++ b/shared/js/contacts/import/importer_ui.js
@@ -95,6 +95,7 @@ if (typeof window.importer === 'undefined') {
       var recommend = serviceConnector.name === 'facebook';
       var dialog = parent.document.getElementById('confirmation-message');
       parent.LazyLoader.load(dialog, function() {
+        navigator.mozL10n.translate(dialog);
         LazyLoader.load('/shared/js/confirm.js',
           function() {
           ConfirmDialog.show(_('connectionLost'), _('connectionLostMsg'),
@@ -341,8 +342,8 @@ if (typeof window.importer === 'undefined') {
       var serviceName = connector.name;

       // Setting UI title
-      document.querySelector('#content h1').
-        setAttribute('data-l10n-id', serviceName + '-serviceName');
+      document.querySelector('#content h1').textContent =
+                                          _(serviceName + '-serviceName');
       document.body.classList.add(serviceName);

       serviceConnector = connector;
diff --git a/shared/js/dialer/contacts.js b/shared/js/dialer/contacts.js
index d3b5d4b..8e226ea 100644
--- a/shared/js/dialer/contacts.js
+++ b/shared/js/dialer/contacts.js
@@ -76,22 +76,31 @@ var Contacts = {
     request.onsuccess = function findCallback() {
       var contacts = request.result;
       if (contacts.length === 0) {
-        // It is only necessary to search for one variant as FB takes care
-        fb.getContactByNumber(number, function fb_ready(finalContact) {
-          var objMatching = null;
-          if (finalContact) {
-            objMatching = {
-              value: number,
-              // Facebook telephone are always of type personal
-              type: 'personal',
-              // We don't know the carrier from FB phones
-              carrier: null
-            };
+        // Checking if FB is enabled or not
+        window.asyncStorage.getItem('tokenData', function(data) {
+          if (!data || !data.access_token) {
+            // Facebook is not even enabled
+            callback(null);
+            return;
           }
-          callback(finalContact, objMatching);
-        }, function fb_err(err) {
-          callback(null);
-        });
+
+          // It is only necessary to search for one variant as FB takes care
+          fb.getContactByNumber(number, function fb_ready(finalContact) {
+              var objMatching = null;
+              if (finalContact) {
+                objMatching = {
+                  value: number,
+                  // Facebook telephone are always of type personal
+                  type: 'personal',
+                  // We don't know the carrier from FB phones
+                  carrier: null
+                };
+              }
+              callback(finalContact, objMatching);
+            }, function fb_err(err) {
+                callback(null);
+            });
+          });
         return;
       }

@@ -183,7 +192,13 @@ var Contacts = {

       // If we have contacts data from Facebook, we need to merge it with the
       // one from the Contacts API db.
-      self._mergeFbContacts(contacts, callback);
+      window.asyncStorage.getItem('tokenData', function(data) {
+        if (data && data.access_token) {
+          self._mergeFbContacts(contacts, callback);
+        } else {
+          callback(contacts);
+        }
+      });
     };

     req.onerror = function onerror() {
diff --git a/shared/js/dialer/keypad.js b/shared/js/dialer/keypad.js
index fcd67ba..dd61a0f 100644
--- a/shared/js/dialer/keypad.js
+++ b/shared/js/dialer/keypad.js
@@ -228,19 +228,8 @@ var KeypadManager = {
     TonePlayer.init('normal');
     var channel = this._onCall ? 'telephony' : 'normal';
     window.addEventListener('visibilitychange', (function() {
-      var telephony = navigator.mozTelephony;
-      var callIsActive = telephony.calls.length ||
-            telephony.conferenceGroup.calls.length;
-
       if (TonePlayer) {
-        // If app is hidden and we are not in the middle of a call, then switch
-        // to normal channel, no matter what channel this app should use
-        if (document.hidden && !callIsActive) {
-          TonePlayer.setChannel('normal');
-        } else {
-          // Otherwise switch to the channel this app is supposed to use
-          TonePlayer.setChannel(channel);
-        }
+        TonePlayer.setChannel(document.mozHidden ? 'normal' : channel);
       }
     }).bind(this));

diff --git a/shared/js/dialer/tone_player.js b/shared/js/dialer/tone_player.js
index 4afbf19..d51a17b 100644
--- a/shared/js/dialer/tone_player.js
+++ b/shared/js/dialer/tone_player.js
@@ -36,7 +36,7 @@ var TonePlayer = {
   },

   ensureAudio: function tp_ensureAudio() {
-    if (this._audioContext || !this._channel) {
+    if (this._audioContext) {
       return;
     }

@@ -49,6 +49,7 @@ var TonePlayer = {
       this._audioContext.mozAudioChannelType = 'normal';
     }
     this._audioContext = null;
+    this._channel = null;
   },

   /**
@@ -71,8 +72,8 @@ var TonePlayer = {

     oscNode.type = 'sine';
     oscNode.frequency.value = 1000; // Whatever
-    oscNode.start(this._audioContext.currentTime);
-    oscNode.stop(this._audioContext.currentTime + 0.025);
+    oscNode.start(0);
+    oscNode.stop(0.005);
     oscNode.connect(gainNode);

     setTimeout(callback);
@@ -172,10 +173,7 @@ var TonePlayer = {
     if (shortPress) {
       this._playSample(frequencies);
     } else {
-      this.dummySound((function() {
-        this._startAt(frequencies, this._audioContext.currentTime + 0.050,
-                      shortPress ? kShortPressDuration : 0);
-      }).bind(this));
+      this._startAt(frequencies, 0, shortPress ? kShortPressDuration : 0);
     }
   },

@@ -239,8 +237,7 @@ var TonePlayer = {

   _channel: null,
   setChannel: function tp_setChannel(channel) {
-    var ctx = this._audioContext;
-    if (!channel || (ctx && ctx.mozAudioChannelType === channel)) {
+    if (!channel || this._channel === channel) {
       return;
     }

diff --git a/shared/js/dialogs.js b/shared/js/dialogs.js
deleted file mode 100644
index 0e92c06..0000000
--- a/shared/js/dialogs.js
+++ /dev/null
@@ -1,144 +0,0 @@
-/* jshint unused: true */
-/* global LazyLoader, $, pendingPick */
-/* exported Dialogs */
-
-'use strict';
-
-var Dialogs = {
-  // show a confirm dialog
-  confirm: function(options, onConfirm, onCancel) {
-    LazyLoader.load('shared/style/confirm.css', function() {
-      var dialog = $('confirm-dialog');
-      var msgEle = $('confirm-msg');
-      var cancelButton = $('confirm-cancel');
-      var confirmButton = $('confirm-ok');
-
-      // set up the dialog based on the options
-      msgEle.textContent = options.message;
-      cancelButton.textContent = options.cancelText ||
-                                 navigator.mozL10n.get('cancel');
-      confirmButton.textContent = options.confirmText ||
-                                  navigator.mozL10n.get('ok');
-
-      if (options.danger) {
-        confirmButton.classList.add('danger');
-      } else {
-        confirmButton.classList.remove('danger');
-      }
-
-      // show the confirm dialog
-      dialog.classList.remove('hidden');
-
-      function close(ev) {
-        dialog.classList.add('hidden');
-        cancelButton.removeEventListener('click', onCancelClick);
-        confirmButton.removeEventListener('click', onConfirmClick);
-        ev.preventDefault();
-        ev.stopPropagation();
-        return false;
-      }
-
-      // attach event handlers
-      var onCancelClick = function(ev) {
-        close(ev);
-        if (onCancel) {
-          onCancel();
-        }
-        return false;
-      };
-      var onConfirmClick = function(ev) {
-        close(ev);
-        if (onConfirm) {
-          onConfirm();
-        }
-        return false;
-      };
-      cancelButton.addEventListener('click', onCancelClick);
-      confirmButton.addEventListener('click', onConfirmClick);
-
-    });
-  },
-  //
-  // If id is null then hide the overlay. Otherwise, look up the localized
-  // text for the specified id and display the overlay with that text.
-  // Supported ids include:
-  //
-  //   nocard: no sdcard is installed in the phone
-  //   pluggedin: the sdcard is being used by USB mass storage
-  //   emptygallery: no pictures found
-  //   scanning: scanning the sdcard for photo's, but none found yet
-  //
-  // Localization is done using the specified id with "-title" and "-text"
-  // suffixes.
-  //
-  showOverlay: function(id) {
-    LazyLoader.load('shared/style/confirm.css', function() {
-
-      // hide any special elements
-      $('overlay-camera-button').classList.add('hidden');
-      $('overlay-cancel-button').classList.add('hidden');
-      $('overlay-menu').classList.add('hidden');
-      var title, text;
-      var _ = navigator.mozL10n.get;
-      switch (id) {
-        case null:
-          $('overlay').classList.add('hidden');
-          return;
-        case 'nocard':
-          title = _('nocard3-title');
-          text = _('nocard4-text');
-          if (pendingPick) {
-            $('overlay-cancel-button').classList.remove('hidden');
-            $('overlay-menu').classList.remove('hidden');
-          }
-          break;
-        case 'pluggedin':
-          title = _('pluggedin2-title');
-          text = _('pluggedin2-text');
-          if (pendingPick) {
-            $('overlay-cancel-button').classList.remove('hidden');
-            $('overlay-menu').classList.remove('hidden');
-          }
-          break;
-        case 'scanning':
-          title = _('scanning-title');
-          text = _('scanning-text');
-          if (pendingPick) {
-            $('overlay-cancel-button').classList.remove('hidden');
-            $('overlay-menu').classList.remove('hidden');
-          }
-          break;
-        case 'emptygallery':
-          title = _(pendingPick ? 'emptygallery2-title-pick' :
-                                  'emptygallery2-title');
-          text = _('emptygallery2-text');
-          $('overlay-menu').classList.remove('hidden');
-          if (pendingPick) {
-            $('overlay-cancel-button').classList.remove('hidden');
-          } else {
-            $('overlay-camera-button').classList.remove('hidden');
-          }
-          break;
-        case 'upgrade':
-          title = _('upgrade-title');
-          text = _('upgrade-text');
-          if (pendingPick) {
-            $('overlay-cancel-button').classList.remove('hidden');
-            $('overlay-menu').classList.remove('hidden');
-          }
-          break;
-        default:
-          console.warn('Reference to undefined overlay', id);
-          if (pendingPick) {
-            $('overlay-cancel-button').classList.remove('hidden');
-            $('overlay-menu').classList.remove('hidden');
-          }
-          return;
-      }
-
-      $('overlay-title').textContent = title;
-      $('overlay-text').textContent = text;
-      $('overlay').classList.remove('hidden');
-    });
-  }
-};
diff --git a/shared/js/download/download_ui.js b/shared/js/download/download_ui.js
index b1f94c9..4066399 100644
--- a/shared/js/download/download_ui.js
+++ b/shared/js/download/download_ui.js
@@ -156,6 +156,8 @@ var DownloadUI = (function() {
   }

   function createConfirm(type, req, downloads) {
+    var _ = navigator.mozL10n.get;
+
     addConfirm();

     var dialog = document.createElement('section');
@@ -187,8 +189,9 @@ var DownloadUI = (function() {
       // Left button
       var lButton = document.createElement('button');
       lButton.type = 'button';
-      lButton.setAttribute('data-l10n-id',
-                           type.name + '_download_left_button');
+      lButton.appendChild(
+        document.createTextNode(_(type.name + '_download_left_button'))
+      );

       lButton.onclick = function l_cancel() {
         lButton.onclick = null;
@@ -204,8 +207,9 @@ var DownloadUI = (function() {
       rButton.classList.add(clazz);
     });

-    rButton.setAttribute('data-l10n-id',
-                         type.name + '_download_right_button');
+    rButton.appendChild(
+      document.createTextNode(_(type.name + '_download_right_button'))
+    );

     rButton.onclick = function r_confirm() {
       rButton.onclick = null;
diff --git a/shared/js/findmydevice_iac_api.js b/shared/js/findmydevice_iac_api.js
deleted file mode 100644
index d7a4eab..0000000
--- a/shared/js/findmydevice_iac_api.js
+++ /dev/null
@@ -1,23 +0,0 @@
-/* exported IAC_API_WAKEUP_REASON_ENABLED */
-/* exported IAC_API_WAKEUP_REASON_TRY_DISABLE */
-/* exported IAC_API_WAKEUP_REASON_LOGIN */
-/* exported IAC_API_WAKEUP_REASON_LOGOUT */
-/* exported IAC_API_WAKEUP_REASON_STALE_REGISTRATION */
-/* exported wakeUpFindMyDevice */
-
-'use strict';
-
-const IAC_API_WAKEUP_REASON_ENABLED = 0;
-const IAC_API_WAKEUP_REASON_STALE_REGISTRATION = 1;
-const IAC_API_WAKEUP_REASON_LOGIN = 2;
-const IAC_API_WAKEUP_REASON_LOGOUT = 3;
-const IAC_API_WAKEUP_REASON_TRY_DISABLE = 4;
-
-function wakeUpFindMyDevice(reason) {
-  navigator.mozApps.getSelf().onsuccess = function() {
-    var app = this.result;
-    app.connect('findmydevice-wakeup').then(function(ports) {
-      ports[0].postMessage(reason);
-    });
-  };
-}
diff --git a/shared/js/l10n.js b/shared/js/l10n.js
index a8eb4e9..1cf44a4 100644
--- a/shared/js/l10n.js
+++ b/shared/js/l10n.js
@@ -712,10 +712,7 @@
       this.value = node;
     } else {
       // it's either a hash or it has attrs, or both
-      var keys = Object.keys(node);
-
-      /* jshint -W084 */
-      for (var i = 0, key; key = keys[i]; i++) {
+      for (var key in node) {
         if (key[0] !== '_') {
           if (!this.attributes) {
             this.attributes = Object.create(null);
@@ -865,142 +862,14 @@



-  /* Utility functions */
-
-  // Recursively walk an AST node searching for content leaves
-  function walkContent(node, fn) {
-    if (typeof node === 'string') {
-      return fn(node);
-    }
-
-    var rv = {};
-    for (var key in node) {
-      if (key !== '_index' && (key in node)) {
-        rv[key] = walkContent(node[key], fn);
-      }
-    }
-    return rv;
-  }
-
-
-  /* Pseudolocalizations
-   *
-   * PSEUDO_STRATEGIES is a dict of strategies to be used to modify the English
-   * context in order to create pseudolocalizations.  These can be used by
-   * developers to test the localizability of their code without having to
-   * actually speak a foreign language.
-   *
-   * Currently, the following pseudolocales are supported:
-   *
-   *   qps-ploc - Ȧȧƈƈḗḗƞŧḗḗḓ Ḗḗƞɠŀīīşħ
-   *
-   *     In Accented English all English letters are replaced by accented
-   *     Unicode counterparts which don't impair the readability of the content.
-   *     This allows developers to quickly test if any given string is being
-   *     correctly displayed in its 'translated' form.  Additionally, simple
-   *     heuristics are used to make certain words longer to better simulate the
-   *     experience of international users.
-   *
-   *   qps-plocm - ɥsıʅƃuƎ pǝɹoɹɹıW
-   *
-   *     Mirrored English is a fake RTL locale.  All words are surrounded by
-   *     Unicode formatting marks forcing the RTL directionality of characters.
-   *     In addition, to make the reversed text easier to read, individual
-   *     letters are flipped.
-   *
-   *     Note: The name above is hardcoded to be RTL in case code editors have
-   *     trouble with the RLO and PDF Unicode marks.  In reality, it should be
-   *     surrounded by those marks as well.
-   *
-   * See https://bugzil.la/900182 for more information.
-   *
-   */
-
-  var reAlphas = /[a-zA-Z]/g;
-  var reVowels = /[aeiouAEIOU]/g;
-
-  // ȦƁƇḒḖƑƓĦĪĴĶĿḾȠǾƤɊŘŞŦŬṼẆẊẎẐ + [\\]^_` + ȧƀƈḓḗƒɠħīĵķŀḿƞǿƥɋřşŧŭṽẇẋẏẑ
-  var ACCENTED_MAP = '\u0226\u0181\u0187\u1E12\u1E16\u0191\u0193\u0126\u012A' +
-                     '\u0134\u0136\u013F\u1E3E\u0220\u01FE\u01A4\u024A\u0158' +
-                     '\u015E\u0166\u016C\u1E7C\u1E86\u1E8A\u1E8E\u1E90' +
-                     '[\\]^_`' +
-                     '\u0227\u0180\u0188\u1E13\u1E17\u0192\u0260\u0127\u012B' +
-                     '\u0135\u0137\u0140\u1E3F\u019E\u01FF\u01A5\u024B\u0159' +
-                     '\u015F\u0167\u016D\u1E7D\u1E87\u1E8B\u1E8F\u1E91';
-
-  // XXX Until https://bugzil.la/1007340 is fixed, ᗡℲ⅁⅂⅄ don't render correctly
-  // on the devices.  For now, use the following replacements: pɟפ˥ʎ
-  // ∀ԐↃpƎɟפHIſӼ˥WNOԀÒᴚS⊥∩ɅＭXʎZ + [\\]ᵥ_, + ɐqɔpǝɟƃɥıɾʞʅɯuodbɹsʇnʌʍxʎz
-  var FLIPPED_MAP = '\u2200\u0510\u2183p\u018E\u025F\u05E4HI\u017F' +
-                    '\u04FC\u02E5WNO\u0500\xD2\u1D1AS\u22A5\u2229\u0245' +
-                    '\uFF2DX\u028EZ' +
-                    '[\\]\u1D65_,' +
-                    '\u0250q\u0254p\u01DD\u025F\u0183\u0265\u0131\u027E' +
-                    '\u029E\u0285\u026Fuodb\u0279s\u0287n\u028C\u028Dx\u028Ez';
-
-  function makeLonger(val) {
-    return val.replace(reVowels, function(match) {
-      return match + match.toLowerCase();
-    });
-  }
-
-  function makeAccented(map, val) {
-    // Replace each Latin letter with a Unicode character from map
-    return val.replace(reAlphas, function(match) {
-      return map.charAt(match.charCodeAt(0) - 65);
-    });
-  }
-
-  var reWords = /[^\W0-9_]+/g;
-
-  function makeRTL(val) {
-    // Surround each word with Unicode formatting codes, RLO and PDF:
-    //   U+202E:   RIGHT-TO-LEFT OVERRIDE (RLO)
-    //   U+202C:   POP DIRECTIONAL FORMATTING (PDF)
-    // See http://www.w3.org/International/questions/qa-bidi-controls
-    return val.replace(reWords, function(match) {
-      return '\u202e' + match + '\u202c';
-    });
-  }
-
-  // strftime tokens (%a, %Eb), {{ placeables }} and template {vars}
-  var reExcluded = /(%[EO]?\w|\{\{?\s*.+?\s*\}?\})/;
-
-  function mapContent(fn, val) {
-    if (!val) {
-      return val;
-    }
-    var parts = val.split(reExcluded);
-    var modified = parts.map(function(part) {
-      if (reExcluded.test(part)) {
-        return part;
-      }
-      return fn(part);
-    });
-    return modified.join('');
-  }
-
-  var PSEUDO_STRATEGIES = {
-    'qps-ploc': mapContent.bind(null, function(val) {
-      return makeAccented(ACCENTED_MAP, makeLonger(val));
-    }),
-    'qps-plocm': mapContent.bind(null, function(val) {
-      return makeAccented(FLIPPED_MAP, makeRTL(val));
-    })
-  };
-
-
-
   var propertiesParser = null;

   function Locale(id, ctx) {
     this.id = id;
     this.ctx = ctx;
     this.isReady = false;
-    this.isPseudo = PSEUDO_STRATEGIES.hasOwnProperty(id);
     this.entries = Object.create(null);
-    this.entries.__plural = getPluralRule(this.isPseudo ?
-                                          this.ctx.defaultLocale : id);
+    this.entries.__plural = getPluralRule(id);
   }

   Locale.prototype.getEntry = function L_getEntry(id) {
@@ -1061,9 +930,9 @@
       onL10nLoaded(err);
     }

-    var idToFetch = this.isPseudo ? ctx.defaultLocale : this.id;
+
     for (var i = 0; i < ctx.resLinks.length; i++) {
-      var path = ctx.resLinks[i].replace('{{locale}}', idToFetch);
+      var path = ctx.resLinks[i].replace('{{locale}}', this.id);
       var type = path.substr(path.lastIndexOf('.') + 1);

       switch (type) {
@@ -1078,18 +947,9 @@
   };

   Locale.prototype.addAST = function(ast) {
-    /* jshint -W084 */
-    var keys = Object.keys(ast);
-    var i = 0, key;
-
-    if (this.isPseudo) {
-      for (; key = keys[i]; i++) {
-        this.entries[key] = walkContent(ast[key], PSEUDO_STRATEGIES[this.id]);
-      }
-    } else {
-      for (; key = keys[i]; i++) {
-        this.entries[key] = ast[key];
-      }
+    /* jshint -W089 */
+    for (var id in ast) {
+      this.entries[id] = ast[id];
     }
   };

@@ -1110,7 +970,6 @@
     this.isReady = false;
     this.isLoading = false;

-    this.defaultLocale = 'en-US';
     this.supportedLocales = [];
     this.resLinks = [];
     this.locales = {};
@@ -1217,9 +1076,7 @@
       this.isLoading = true;
       var requested = Array.prototype.slice.call(arguments);

-      var supported = negotiate(requested.concat(this.defaultLocale),
-                                requested,
-                                this.defaultLocale);
+      var supported = negotiate(requested.concat('en-US'), requested, 'en-US');
       freeze.call(this, supported);
     };

@@ -1335,9 +1192,7 @@
         loadINI: loadINI,
         fireLocalizedEvent: fireLocalizedEvent,
         PropertiesParser: PropertiesParser,
-        compile: compile,
-        walkContent: walkContent,
-        PSEUDO_STRATEGIES: PSEUDO_STRATEGIES
+        compile: compile
       };
     }
   };
@@ -1375,8 +1230,7 @@
   }

   if (window.document) {
-    isPretranslated = !PSEUDO_STRATEGIES.hasOwnProperty(navigator.language) &&
-                      (document.documentElement.lang === navigator.language);
+    isPretranslated = (document.documentElement.lang === navigator.language);

     // this is a special case for netError bug; see https://bugzil.la/444165
     if (document.documentElement.dataset.noCompleteBug) {
@@ -1411,15 +1265,14 @@
   }

   function inlineLocalization() {
-    var locale = this.ctx.getLocale(navigator.language);
-    var scriptLoc = locale.isPseudo ? this.ctx.defaultLocale : locale.id;
     var script = document.documentElement
                          .querySelector('script[type="application/l10n"]' +
-                         '[lang="' + scriptLoc + '"]');
+                         '[lang="' + navigator.language + '"]');
     if (!script) {
       return false;
     }

+    var locale = this.ctx.getLocale(navigator.language);
     // the inline localization is happenning very early, when the ctx is not
     // yet ready and when the resources haven't been downloaded yet;  add the
     // inlined JSON directly to the current locale
diff --git a/shared/js/lockscreen_connection_info_manager.js b/shared/js/lockscreen_connection_info_manager.js
deleted file mode 100644
index 31411ab..0000000
--- a/shared/js/lockscreen_connection_info_manager.js
+++ /dev/null
@@ -1,316 +0,0 @@
-/* globals MobileOperator, SettingsListener, SIMSlotManager */
-'use strict';
-
-(function(exports) {
-  var _lockedStateMsgMap = {
-    'unknown': 'emergencyCallsOnly-unknownSIMState',
-    'pinRequired': 'emergencyCallsOnly-pinRequired',
-    'pukRequired': 'emergencyCallsOnly-pukRequired',
-    'networkLocked': 'emergencyCallsOnly-networkLocked',
-    'serviceProviderLocked': 'emergencyCallsOnly-serviceProviderLocked',
-    'corporateLocked': 'emergencyCallsOnly-corporateLocked',
-    'network1Locked': 'emergencyCallsOnly-network1Locked',
-    'network2Locked': 'emergencyCallsOnly-network2Locked',
-    'hrpdNetworkLocked' : 'emergencyCallsOnly-hrpdNetworkLocked',
-    'ruimCorporateLocked' : 'emergencyCallsOnly-ruimCorporateLocked',
-    'ruimServiceProviderLocked' : 'emergencyCallsOnly-ruimServiceProviderLocked'
-  };
-
-  /*
-  * Types of 2G Networks
-  */
-  var _NETWORKS_2G = ['gsm', 'gprs', 'edge'];
-
-  /**
-   * Constructor of LockScreenConnInfoManager. LockScreenConnInfoManager updates
-   * mobile connection related information on lockscreen.
-   *
-   * @param {HTMLElement} root The root element of connection states.
-   * @constructor LockScreenConnInfoManager
-   */
-  var LockScreenConnInfoManager = function(root) {
-    if (root) {
-      this._initialize(root);
-    }
-  };
-
-  var LockScreenConnInfoManagerPrototype = {
-    _connStates: null,
-    _settings: null,
-    _cellbroadcastLabel: null,
-    /*
-     * Telephony default service ID
-     */
-    _telephonyDefaultServiceId: 0,
-    /*
-     * Airplane mode
-     */
-    _airplaneMode: false
-  };
-
-  /**
-   * Initialize connection state elements and event handlers.
-   *
-   * @param {HTMLElement} root The root element of connection states.
-   */
-  LockScreenConnInfoManagerPrototype._initialize =
-    function lscs_initialize(root) {
-      this._connStates = root;
-      this._settings = navigator.mozSettings;
-
-      this._connStates.hidden = false;
-      SIMSlotManager.getSlots().forEach(function(simslot, index) {
-        // connection state
-        this._connStates.appendChild(this._createConnStateElement());
-        simslot.conn.addEventListener('voicechange',
-          (function(index) {
-            this.updateConnState(simslot);
-        }).bind(this));
-      }, this);
-
-      // event handlers
-      navigator.mozL10n.ready(this.updateConnStates.bind(this));
-
-      window.addEventListener('simslot-cardstatechange', (function(evt) {
-        this.updateConnState(evt.detail);
-      }).bind(this));
-
-      window.addEventListener('simslot-iccinfochange', (function(evt) {
-        this.updateConnState(evt.detail);
-      }).bind(this));
-
-      // Handle incoming CB messages that need to be displayed.
-      window.addEventListener('cellbroadcastmsgchanged', (function(evt) {
-        this._cellbroadcastLabel = evt.detail;
-        this.updateConnStates();
-      }).bind(this));
-
-      this._settings.addObserver('ril.radio.disabled', (function(evt) {
-        this._airplaneMode = evt.settingValue;
-        this.updateConnStates();
-      }).bind(this));
-
-      this._settings.addObserver('ril.telephony.defaultServiceId',
-        (function(evt) {
-          this._telephonyDefaultServiceId = evt.settingValue;
-          this.updateConnStates();
-      }).bind(this));
-
-      // update UI
-      var req = SettingsListener.getSettingsLock().get('ril.radio.disabled');
-      req.onsuccess = (function() {
-        this._airplaneMode = !!req.result['ril.radio.disabled'];
-        var req2 =
-          SettingsListener.getSettingsLock()
-            .get('ril.telephony.defaultServiceId');
-        req2.onsuccess = (function() {
-          this._telephonyDefaultServiceId =
-            req2.result['ril.telephony.defaultServiceId'] || 0;
-          this.updateConnStates();
-        }).bind(this);
-      }).bind(this);
-  };
-
-  /**
-   * Create connection state element.
-   *
-   * @this {LockScreenConnInfoManager}
-   */
-  LockScreenConnInfoManagerPrototype._createConnStateElement =
-    function lscs_createConnStateElement() {
-      //
-      // <div>
-      //   <span></span>
-      //   <span class="connstate-line"></span>
-      //   <span class="connstate-line"></span>
-      // </div>
-      //
-
-      var div = document.createElement('div');
-      var span = document.createElement('span');
-      var line1 = document.createElement('span');
-      var line2 = document.createElement('span');
-
-      line1.className = line2.className = 'connstate-line';
-      div.appendChild(span);
-      div.appendChild(line1);
-      div.appendChild(line2);
-
-      return div;
-  };
-
-  /**
-   * Update states of all sim slots.
-   *
-   * @this {LockScreenConnInfoManager}
-   */
-  LockScreenConnInfoManagerPrototype.updateConnStates =
-    function lscs_updateConnStates() {
-      SIMSlotManager.getSlots().forEach((function(simslot) {
-        this.updateConnState(simslot);
-      }).bind(this));
-  };
-
-  /**
-   * This is a helper function that uses a flag dataset.content
-   * to determine if the line has content or not.
-   *
-   * The content of the connstateLine may come from l10nId or manually
-   * injected text content.
-   */
-  function lineText(node, l10nId, l10nArgs, text) {
-    if (!l10nId && !text) {
-      node.setAttribute('data-content', true);
-    } else {
-      node.removeAttribute('data-content');
-    }
-
-    if (l10nId) {
-      navigator.mozL10n.setAttributes(node, l10nId, l10nArgs);
-    } else {
-      node.removeAttribute('data-l10n-id');
-      if (text) {
-        node.textContent = text;
-      }
-    }
-  }
-
-  /**
-   * Update the state of a sim slot.
-   *
-   * @param {SIMSlot} simslot
-   * @this {LockScreenConnInfoManager}
-   */
-  LockScreenConnInfoManagerPrototype.updateConnState =
-    function lscs_updateConnState(simslot) {
-      var conn = simslot.conn;
-      var index = simslot.index;
-
-      var connstate = this._connStates.children[index];
-      var simIDLine = connstate.children[0];
-      var connstateLines =
-        Array.prototype.slice.call(
-          connstate.querySelectorAll('.connstate-line'));
-      var iccObj = simslot.simCard;
-      var voice = conn.voice;
-
-      connstate.hidden = false;
-
-      // Set sim ID line
-      if (SIMSlotManager.isMultiSIM()) {
-        simIDLine.hidden = false;
-        lineText(simIDLine, 'lockscreen-sim-id', {n: (index + 1)});
-      } else {
-        simIDLine.hidden = true;
-      }
-
-      // Reset Lines
-      connstateLines.forEach(function(line) {
-        lineText(line);
-      });
-      var nextLine = function() {
-        for (var i = 0; i < connstateLines.length; i++) {
-          var line = connstateLines[i];
-          if (line.hasAttribute('data-content')) {
-            return line;
-          }
-        }
-        return connstateLines[connstateLines.length - 1];
-      };
-
-      // Airplane mode
-      if (this._airplaneMode) {
-        // Only show one airplane mode status
-        if (index === 0) {
-          lineText(nextLine(), 'airplaneMode');
-        } else {
-          connstate.hidden = true;
-        }
-        simIDLine.hidden = true;
-        return;
-      }
-
-      // If there is no sim card on the device, we only show one information.
-      if (SIMSlotManager.noSIMCardOnDevice()) {
-        if (index === 0) {
-          if (voice.emergencyCallsOnly) {
-            lineText(nextLine(), 'emergencyCallsOnly');
-            lineText(nextLine(), 'emergencyCallsOnly-noSIM');
-          } else {
-            lineText(nextLine(), 'emergencyCallsOnly-noSIM');
-          }
-        }
-        simIDLine.hidden = true;
-        return;
-      } else if (SIMSlotManager.noSIMCardConnectedToNetwork()) {
-        if (index === 0) {
-          lineText(nextLine(), 'emergencyCallsOnly');
-        }
-        simIDLine.hidden = true;
-        return;
-      }
-
-      // If there are multiple sim slots and only one sim card inserted, we
-      // only show the state of the inserted sim card.
-      if (SIMSlotManager.isMultiSIM() &&
-          navigator.mozIccManager.iccIds.length == 1 &&
-          simslot.isAbsent()) {
-        connstate.hidden = true;
-        return;
-      }
-
-      // Possible value of voice.state are:
-      // 'notSearching', 'searching', 'denied', 'registered',
-      // where the latter three mean the phone is trying to grab the network.
-      // See https://bugzilla.mozilla.org/show_bug.cgi?id=777057
-      if (voice && 'state' in voice && voice.state == 'notSearching') {
-        lineText(nextLine(), 'noNetwork');
-        return;
-      }
-
-      if (!voice.connected && !voice.emergencyCallsOnly) {
-        // "Searching"
-        // voice.state can be any of the latter three values.
-        // (it's possible that the phone is briefly 'registered'
-        // but not yet connected.)
-        lineText(nextLine(), 'searching');
-        return;
-      }
-
-      if (voice.emergencyCallsOnly) {
-        if (this._telephonyDefaultServiceId == index) {
-          lineText(nextLine(), 'emergencyCallsOnly');
-          lineText(nextLine(), _lockedStateMsgMap[iccObj.cardState]);
-        } else {
-          connstate.hidden = true;
-        }
-        return;
-      }
-
-      var operatorInfos = MobileOperator.userFacingInfo(conn);
-      var operator = operatorInfos.operator;
-      var is2G = _NETWORKS_2G.some(function checkConnectionType(elem) {
-        return (conn.voice.type == elem);
-      });
-
-      var l10nArgs;
-      if (voice.roaming) {
-        l10nArgs = { operator: operator };
-        lineText(nextLine(), 'roaming', l10nArgs);
-      } else {
-        lineText(nextLine(), null, null, operator);
-      }
-
-
-      if (this._cellbroadcastLabel && is2G) {
-        lineText(nextLine(), null, null, this._cellbroadcastLabel);
-      } else if (operatorInfos.carrier) {
-        l10nArgs = { carrier: operatorInfos.carrier,
-                         region: operatorInfos.region };
-        lineText(nextLine(), 'operator-info', l10nArgs);
-      }
-  };
-
-  LockScreenConnInfoManager.prototype = LockScreenConnInfoManagerPrototype;
-  exports.LockScreenConnInfoManager = LockScreenConnInfoManager;
-})(window);
diff --git a/shared/js/lockscreen_slide.js b/shared/js/lockscreen_slide.js
index 0df4aa65..a1b8f52 100644
--- a/shared/js/lockscreen_slide.js
+++ b/shared/js/lockscreen_slide.js
@@ -67,13 +67,8 @@
     },

     iconBG: {
-      radius: 20,
-      left: {
-        color: 'rgba(255, 255, 255, 0.25)'
-      },
-      right: {
-        color: 'rgba(255, 255, 255, 0.25)'
-      }
+      color: 'rgba(255, 255, 255, 0.25)',
+      radius: 20
     },

     slides: {
@@ -152,13 +147,13 @@

     colors: {
       left: {
-        touchedColor: '255, 255, 255',
-        touchedColorStop: '255, 255, 255'
+        touchedColor: '0, 170, 204',
+        touchedColorStop: '178, 229, 239'
       },

       right: {
-        touchedColor: '255, 255, 255',
-        touchedColorStop: '255, 255, 255'
+        touchedColor: '0, 170, 204',
+        touchedColorStop: '178, 229, 239'
       }
     },

@@ -967,8 +962,7 @@

           strokeStyle = 'transparent';

-          ctx.fillStyle = 'rgba(' + this.handle.touchedColor + ', ' +
-            fillAlpha + ')';
+          ctx.fillStyle = 'rgba(255, 255, 255, ' + fillAlpha + ')';
           ctx.strokeStyle = strokeStyle;

           // Start to draw it.
@@ -1072,7 +1066,7 @@
       var canvas = this.canvas;
       var ctx = canvas.getContext('2d');

-      ctx.fillStyle = this.iconBG.left.color;
+      ctx.fillStyle = this.iconBG.color;
       ctx.strokeStyle = 'transparent';

       ctx.beginPath();
@@ -1082,7 +1076,6 @@
       ctx.closePath();
       ctx.fill();

-      ctx.fillStyle = this.iconBG.right.color;
       ctx.beginPath();
       ctx.arc(this.track.to, this.track.y,
               this.iconBG.radius, 0, 2 * Math.PI, false);
diff --git a/shared/js/media/media_frame.js b/shared/js/media/media_frame.js
index e8b0d57..671c3e1 100644
--- a/shared/js/media/media_frame.js
+++ b/shared/js/media/media_frame.js
@@ -25,12 +25,7 @@
  * the MediaFrame will just move the photo within itself, if it can, and
  * return 0.
  *
- * MediaFrame uses the #-moz-samplesize media fragment (via the downsample.js
- * module) to downsample large jpeg images while decoding them when necessary.
- * You can specify a maximum image decode size (in megapixels) when invoking
- * the constructor. The MediaFrame code also includes a runtime check for
- * the amount of RAM available on the device, and may limit the image decode
- * size on low-memory devices.
+ * Much of the code in this file used to be part of the PhotoState class.
  */
 function MediaFrame(container, includeVideo, maxImageSize) {
   if (typeof container === 'string')
@@ -52,55 +47,6 @@ function MediaFrame(container, includeVideo, maxImageSize) {
   var self = this;
 }

-MediaFrame.computeMaxImageDecodeSize = function(mem) {
-  if (!mem) {
-    return 0;
-  }
-  else if (mem < 256) {  // This is a Tarako-class device ultra low-end device.
-    return 2 * 1024 * 1024;   // 2 megapixels
-  }
-  else if (mem < 512) {  // This is a low-end 256mb device
-    // Normally we can handle 3mp images on devices like this, but if
-    // this device has a big screen and low memory (like a memory
-    // throttled Flame) then it needs something smaller than 3mp.
-    var screensize = screen.width * window.devicePixelRatio *
-      screen.height * window.devicePixelRatio;
-    if (mem < 325 && screensize > 480 * 800) {
-      return 2.5 * 1024 * 1024;  // 2.5mp megapixels for throttled Flame
-    }
-
-    return 3 * 1024 * 1024;      // 3 megapixels otherwise
-  }
-  else if (mem < 1024) { // A mid-range 512mb device
-    return 5 * 1024 * 1024;   // 5 megapixels
-  }
-  else {                 // A high-end device with 1 gigabyte or more of memory
-    // Allow 8 megapixels of image decode size per gigabyte of memory
-    return (mem / 1024) * 8 * 1024 * 1024;
-  }
-};
-
-//
-// Find out how much memory this device has because we may need to limit image
-// decode size on low-end devices.  Note that navigator.getFeature requires
-// the "feature-detection" permission (at least for now) so we only run this
-// code if the client app has that permission.
-//
-if (navigator.getFeature) {
-  MediaFrame.pendingPromise = navigator.getFeature('hardware.memory');
-  MediaFrame.pendingPromise.then(
-    function resolve(mem) {
-      delete MediaFrame.pendingPromise;
-      MediaFrame.maxImageDecodeSize = MediaFrame.computeMaxImageDecodeSize(mem);
-    },
-    function reject(err) {
-      // This should never happen!
-      delete MediaFrame.pendingPromise;
-      MediaFrame.maxImageDecodeSize = 0;
-    }
-  );
-}
-
 MediaFrame.prototype.displayImage = function displayImage(blob,
                                                           width,
                                                           height,
@@ -108,15 +54,6 @@ MediaFrame.prototype.displayImage = function displayImage(blob,
                                                           rotation,
                                                           mirrored)
 {
-  // If we are still querying the device memory, wait for that query to
-  // complete and then try again.
-  if (MediaFrame.pendingPromise) {
-    MediaFrame.pendingPromise.then(function resolve() {
-      displayImage(blob, width, height, preview, rotation, mirrored);
-    });
-    return;
-  }
-
   var self = this;
   this.clear();  // Reset everything
   // Remember what we're displaying
@@ -217,19 +154,11 @@ MediaFrame.prototype.displayImage = function displayImage(blob,
       // We're not using #-moz-samplesize at all
       return Downsample.NONE;
     }
-
-    // Determine the maximum size we will decode the image at, based on
-    // device memory and the maximum size passed to the constructor.
-    var max = MediaFrame.maxImageDecodeSize || 0;
-    if (self.maximumImageSize && (max === 0 || self.maximumImageSize < max)) {
-      max = self.maximumImageSize;
-    }
-
-    if (!max || width * height <= max) {
+    if (!self.maximumImageSize || width * height <= self.maximumImageSize) {
       return Downsample.NONE;
     }

-    return Downsample.areaAtLeast(max / (width * height));
+    return Downsample.areaAtLeast(self.maximumImageSize / (width * height));
   }

   function computePreviewSampleSize(blob, width, height) {
diff --git a/shared/js/media/video_player.js b/shared/js/media/video_player.js
index c6473c7..d48ba55 100644
--- a/shared/js/media/video_player.js
+++ b/shared/js/media/video_player.js
@@ -103,10 +103,6 @@ function VideoPlayer(container) {
   }

   function showPlayer() {
-    if (self.onloading) {
-      self.onloading();
-    }
-
     player.style.display = 'block';
     player.src = videourl;
     self.playerShowing = true;
@@ -174,20 +170,20 @@ function VideoPlayer(container) {
       return;
     }

-    // Hide the play button
-    playbutton.classList.add('hidden');
     this.playing = true;

     // Start playing the video
     player.play();

+    // Hide the play button
+    playbutton.classList.add('hidden');
+
     // Show the controls
     footer.classList.remove('hidden');
     controlsHidden = false;

-    if (this.onplaying) {
+    if (this.onplaying)
       this.onplaying();
-    }
   };

   fullscreenButton.addEventListener('tap', function(e) {
diff --git a/shared/js/multi_sim_action_button.js b/shared/js/multi_sim_action_button.js
index dc6c600..ba3e28f 100644
--- a/shared/js/multi_sim_action_button.js
+++ b/shared/js/multi_sim_action_button.js
@@ -105,9 +105,9 @@ MultiSimActionButton.prototype._updateUI = function() {
       var self = this;
       var l10nId = this._simIndication.dataset.l10nId || 'sim-picker-button';
       navigator.mozL10n.ready(function() {
-        navigator.mozL10n.setAttributes(self._simIndication,
-                                        l10nId,
-                                        {n: cardIndex+1});
+        navigator.mozL10n.localize(self._simIndication,
+                                   l10nId,
+                                   {n: cardIndex+1});
       });
     }

diff --git a/shared/js/operator_variant_helper.js b/shared/js/operator_variant_helper.js
index 8b71141..2165be7 100644
--- a/shared/js/operator_variant_helper.js
+++ b/shared/js/operator_variant_helper.js
@@ -89,17 +89,12 @@ OperatorVariantHelper.prototype = {
   //
   _iccCard: null,
   // Cached ICC information.
-  _iccSettings: { mcc: '', mnc: '', iccId: '' },
+  _iccSettings: { mcc: '', mnc: '' },
   // Settings persistence key.
   _persistKey: null,
   // Are operator variant customizations disabled?
   _disableAll: false,

-  // The mozSettings key for the saved ICCIDs.
-  get ICCID_SETTINGS_KEY() {
-    return 'operatorvariant.iccId';
-  },
-
   // The mozSettings key for the saved MCCs.
   get MCC_SETTINGS_KEY() {
     return 'operatorvariant.mcc';
@@ -151,12 +146,8 @@ OperatorVariantHelper.prototype = {
         } else {
           this._iccSettings.mnc = mncs[this._iccCardIndex];
         }
-        var iccIdsRequest = transaction.get(this.ICCID_SETTINGS_KEY);
-        iccIdsRequest.onsuccess = (function() {
-          var iccIds = iccIdsRequest.result[this.ICCID_SETTINGS_KEY];
-          this._iccSettings.iccId = iccIds && iccIds[this._iccCardIndex];
-          this.checkICCInfo();
-        }).bind(this);
+        this.checkICCInfo();
+
       }).bind(this);
     }).bind(this);
   },
@@ -180,17 +171,16 @@ OperatorVariantHelper.prototype = {
     // XXX sometimes we get 000/00 for mcc/mnc, even when cardState === 'ready'
     var mcc = this._iccCard.iccInfo.mcc || '000';
     var mnc = this._iccCard.iccInfo.mnc || '00';
-    var iccId = this._iccId;
     if (mcc === '000') {
       return;
     }

     // ensure that the iccSettings have been retrieved
-    if (this._iccSettings.iccId === '') {
+    if ((this._iccSettings.mcc === '') || (this._iccSettings.mnc === '')) {
       return;
     }

-    if (iccId !== this._iccSettings.iccId) {
+    if ((mcc !== this._iccSettings.mcc) || (mnc !== this._iccSettings.mnc)) {
       if (this._addedListener) {
         try {
           // apply new settings
@@ -247,22 +237,8 @@ OperatorVariantHelper.prototype = {
         var mncSettings = {};
         mncSettings[this.MNC_SETTINGS_KEY] = mncs;
         transaction.set(mncSettings);
-
-        var iccIdsRequest = transaction.get(this.ICCID_SETTINGS_KEY);
-        iccIdsRequest.onsuccess = (function() {
-          var iccIds = iccIdsRequest.result[this.ICCID_SETTINGS_KEY];
-          if (!iccIds || !Array.isArray(iccIds)) {
-            iccIds = [null, null];
-          }
-          iccIds[this._iccCardIndex] = iccId;
-          var iccIdSettings = {};
-          iccIdSettings[this.ICCID_SETTINGS_KEY] = iccIds;
-          transaction.set(iccIdSettings);
-
-          this._iccSettings.mcc = mcc;
-          this._iccSettings.mnc = mnc;
-          this._iccSettings.iccId = iccId;
-        }).bind(this);
+        this._iccSettings.mcc = mcc;
+        this._iccSettings.mnc = mnc;
       }).bind(this);
     }).bind(this);
   },
diff --git a/shared/js/sim_picker.js b/shared/js/sim_picker.js
index d1abde9..ac676d0 100644
--- a/shared/js/sim_picker.js
+++ b/shared/js/sim_picker.js
@@ -27,34 +27,32 @@
         }
       }

+      this._buildDom();
+      var self = this;
+      navigator.mozL10n.ready(function() {
+        var dialViaElt = document.getElementById('sim-picker-dial-via');
+        if (phoneNumber) {
+          navigator.mozL10n.localize(
+            dialViaElt, 'sim-picker-dial-via-with-number',
+            {phoneNumber: phoneNumber});
+        } else {
+          navigator.mozL10n.localize(dialViaElt, 'sim-picker-select-sim');
+        }

-      var dialViaElt = document.getElementById('sim-picker-dial-via');
-      if (phoneNumber) {
-        navigator.mozL10n.setAttributes(dialViaElt,
-                                        'sim-picker-dial-via-with-number',
-                                        {phoneNumber: phoneNumber});
-      } else {
-        dialViaElt.setAttribute('data-l10n-id', 'sim-picker-select-sim');
-      }
-
-      var simButtons = this._simPickerElt.querySelectorAll(
+        var simButtons = self._simPickerElt.querySelectorAll(
           'button[data-card-index]');

-      for (var i = 0; i < simButtons.length; i++) {
-        if (simButtons[i].dataset.cardIndex == defaultCardIndex) {
-          simButtons[i].classList.add('is-default');
-        } else {
-          simButtons[i].classList.remove('is-default');
+        for (var i = 0; i < simButtons.length; i++) {
+          if (simButtons[i].dataset.cardIndex == defaultCardIndex) {
+            simButtons[i].classList.add('is-default');
+          } else {
+            simButtons[i].classList.remove('is-default');
+          }
         }
-      }

-      this._buildDom();
-
-      // we want to wait for l10n to happen before we display the UI
-      navigator.mozL10n.once(function() {
-        this._simPickerElt.hidden = false;
-        this._simPickerElt.focus();
-      }.bind(this));
+        self._simPickerElt.hidden = false;
+        self._simPickerElt.focus();
+      });
     },

     _buildDom: function() {
@@ -63,30 +61,23 @@
       }

       this._domBuilt = true;
-
-      var templateNode = document.getElementById(
+      var self = this;
+      navigator.mozL10n.ready(function() {
+        var templateNode = document.getElementById(
           'sim-picker-button-template');

-      for (var i = 0; i < navigator.mozIccManager.iccIds.length; i++) {
-        var clonedNode = templateNode.cloneNode(true);
-        clonedNode.dataset.cardIndex = i;
+        for (var i = 0; i < navigator.mozIccManager.iccIds.length; i++) {
+          var clonedNode = templateNode.cloneNode(true);
+          clonedNode.dataset.cardIndex = i;

-        var button = clonedNode.querySelector('.js-sim-picker-button');
-        navigator.mozL10n.setAttributes(button,
-                                        'sim-picker-button',
-                                        {n: i + 1});
-        templateNode.parentNode.insertBefore(clonedNode, templateNode);
-      }
-      templateNode.remove();
-
-      this._simPickerElt.addEventListener('click', this);
+          var button = clonedNode.querySelector('.js-sim-picker-button');
+          navigator.mozL10n.localize(button, 'sim-picker-button', {n: i + 1});
+          templateNode.parentNode.insertBefore(clonedNode, templateNode);
+        }
+        templateNode.remove();

-      // because this code is not reacting to l10n.js Mutation Observer
-      // we need to manually retranslate the content
-      // XXX: Remove once bug 1040922 is fixed
-      navigator.mozL10n.ready(function() {
-        navigator.mozL10n.translateFragment(this._simPickerElt);
-      }.bind(this));
+        self._simPickerElt.addEventListener('click', self);
+      });
     },

     handleEvent: function(e) {
diff --git a/shared/js/sim_settings_helper.js b/shared/js/sim_settings_helper.js
index 3ff6f5c..c987dd0 100644
--- a/shared/js/sim_settings_helper.js
+++ b/shared/js/sim_settings_helper.js
@@ -3,7 +3,6 @@
 'use strict';

 (function(exports) {
-
   /*
    * SimSettingsHelper is a helper to provide semantic ways set / get
    * mozSettings. It is used by SimCardManager.
@@ -12,26 +11,7 @@
     EMPTY_OPTION_TEXT: '--',
     EMPTY_OPTION_VALUE: '-2',
     ALWAYS_ASK_OPTION_VALUE: '-1',
-    _callbacks: {
-      outgoingCall: [],
-      outgoingMessages: [],
-      outgoingData: []
-    },
-    observe: function(serviceName, callback) {
-      var serviceCallbacks = this._callbacks[serviceName];
-      if (serviceCallbacks) {
-        serviceCallbacks.push(callback);
-      }
-    },
-    unobserve: function(serviceName, callback) {
-      var serviceCallbacks = this._callbacks[serviceName];
-      if (serviceCallbacks) {
-        var index = serviceCallbacks.indexOf(callback);
-        if (index > -1) {
-          serviceCallbacks.splice(index, 1);
-        }
-      }
-    },
+
     getCardIndexFrom: function(serviceName, callback) {
       // _get(), _onWhichCard() and _getFromSettingsDB() are internal methods
       // and should be used together, so I wrap them inside this method
@@ -132,33 +112,9 @@
         }
       };
       getReq.onerror = done;
-    },
-    _addSettingsObservers: function() {
-      var self = this;
-
-      navigator.mozSettings.addObserver('ril.telephony.defaultServiceId',
-        function(event) {
-          self._callbacks.outgoingCall.forEach(function(cb) {
-            cb(event.settingValue);
-          });
-      });
-      navigator.mozSettings.addObserver('ril.sms.defaultServiceId',
-        function(event) {
-          self._callbacks.outgoingMessages.forEach(function(cb) {
-            cb(event.settingValue);
-          });
-      });
-      navigator.mozSettings.addObserver('ril.data.defaultServiceId',
-        function(event) {
-          self._callbacks.outgoingData.forEach(function(cb) {
-            cb(event.settingValue);
-          });
-      });
     }
   };

-  // add obsersvers
-  SimSettingsHelper._addSettingsObservers();
-
   exports.SimSettingsHelper = SimSettingsHelper;
+
 })(window);
diff --git a/shared/js/simslot.js b/shared/js/simslot.js
deleted file mode 100644
index bdd65ff..0000000
--- a/shared/js/simslot.js
+++ /dev/null
@@ -1,138 +0,0 @@
-/* globals SIMSlot */
-'use strict';
-
-(function(window) {
-  var _start = Date.now();
-  var DEBUG = false;
-
-  /**
-   * SIMSlot is the API wrapper for each mobileConnection,
-   * and since one mobileConnection matches one SIM slot,
-   * we call it SIMSlot.
-   *
-   * @param {Object} conn  mobileConnection
-   * @param {index} index The slot number of this SIM slot.
-   * @param {Object} [card] iccObject
-   *
-   * @property {Object} simCard Represent the current active iccObj,
-   *                         i.e., SIM card.
-   * @property {Number} index The slot number of this SIM slot.
-   */
-  window.SIMSlot = function SIMSlot(conn, index, card) {
-    this.index = index;
-    this.conn = conn;
-    if (card) {
-      this.update(card);
-    }
-
-    /**
-     * TODO: Add event listeners on this.conn
-     */
-    /**
-     * The event represents the instance is initialized.
-     * @event SIMSlot#simslot-created
-     */
-    this.publish('created');
-  };
-
-  SIMSlot.EVENTS = ['cardstatechange', 'iccinfochange',
-                    'stkcommand', 'stksessionend'];
-
-  SIMSlot.METHODS = ['sendStkResponse', 'sendStkMenuSelection',
-                   'sendStkTimerExpiration', 'sendStkEventDownload'];
-  SIMSlot.DOM_REQUEST_METHODS = ['getCardLock', 'unlockCardLock', 'setCardLock',
-                       'getCardLockRetryCount', 'readContacts',
-                       'updateContact', 'iccOpenChannel', 'iccExchangeAPDU',
-                       'iccCloseChannel'];
-
-  SIMSlot.ABSENT_TYPES = ['permanentBlocked'];
-  SIMSlot.LOCK_TYPES = ['pinRequired', 'pukRequired', 'networkLocked',
-                      'corporateLocked', 'serviceProviderLocked',
-                      'network1Locked', 'network2Locked', 'hrpdNetworkLocked',
-                      'ruimCorporateLocked', 'ruimServiceProviderLocked'];
-
-  /**
-   * Update the iccObj.
-   *
-   * This method is called by SIMSlotManager when the iccObj
-   * needs to be updated.
-   * @param  {Object} iccObj The iccObj belongs to this slot.
-   */
-  SIMSlot.prototype.update = function ss_update(iccObj) {
-    this.simCard = iccObj;
-    this.constructor.EVENTS.forEach(function iterater(evt) {
-      iccObj.addEventListener(evt, this);
-    }, this);
-
-    this.constructor.DOM_REQUEST_METHODS.forEach(function iterator(domRequest) {
-      this[domRequest] = function() {
-        return iccObj[domRequest].apply(iccObj, arguments);
-      };
-    }, this);
-
-    this.constructor.METHODS.forEach(function iterator(method) {
-      this[method] = function() {
-        return iccObj[method].apply(iccObj, arguments);
-      };
-    }, this);
-
-    this.publish('updated');
-  };
-
-  /**
-   * The prefix of every event published by the SIMSlot instance.
-   * @type {String}
-   */
-  SIMSlot.prototype.EVENT_PREFIX = 'simslot-';
-  SIMSlot.prototype.CLASS_NAME = 'SIMSLOT';
-
-  /**
-   * Publish an event with this instance in the detail.
-   * @param  {String} eventName The event name without prefix
-   */
-  SIMSlot.prototype.publish = function ss_publish(eventName) {
-    this.debug(' publish: ' + eventName);
-    window.dispatchEvent(new CustomEvent(this.EVENT_PREFIX + eventName, {
-      detail: this
-    }));
-  };
-
-  SIMSlot.prototype.handleEvent = function ss_handleEvent(evt) {
-    switch (evt.type) {
-      default:
-        this.publish(evt.type);
-        if (this.simCard) {
-          this.debug(this.simCard.cardState);
-        }
-        break;
-    }
-  };
-
-  SIMSlot.prototype.debug = function() {
-    if (DEBUG) {
-      console.log('[' + this.CLASS_NAME + ']' +
-        '[' + (this.index) + ']' +
-        '[' + (new Date().getTime() / 1000 - _start).toFixed(3) + ']' +
-        Array.slice(arguments).concat());
-    }
-  };
-
-  /**
-   * Indicate the slot has SIM card or not.
-   * @return {Boolean} Without SIM card or not.
-   */
-  SIMSlot.prototype.isAbsent = function ss_isAbsent() {
-    return (!this.simCard ||
-      this.constructor.ABSENT_TYPES.indexOf(this.simCard.cardState) >= 0 ||
-      this.simCard && this.simCard.iccInfo &&
-      this.simCard.iccInfo.iccid === null);
-  };
-
-  /**
-   * Indicate SIM card in the slot is locked or not.
-   * @return {Boolean} SIM card locked or not.
-   */
-  SIMSlot.prototype.isLocked = function ss_isLocked() {
-    return this.constructor.LOCK_TYPES.indexOf(this.simCard.cardState) >= 0;
-  };
-}(window));
diff --git a/shared/js/simslot_manager.js b/shared/js/simslot_manager.js
deleted file mode 100644
index 091e63e..0000000
--- a/shared/js/simslot_manager.js
+++ /dev/null
@@ -1,216 +0,0 @@
-/* global SIMSlot, SIMSlotManager */
-'use strict';
-
-(function(window) {
-  var IccManager = navigator.mozIccManager;
-  /**
-   * SIMSlotManager creates/manages the current SIM slot on the device.
-   * @type {Object}
-   */
-  window.SIMSlotManager = {
-    /**
-     * The number of SIM slots.
-     * @type {Number}
-     */
-    length: 0,
-    _instances: [],
-
-    /**
-     * The timeout to wait for the second SIM
-     * @type {Number}
-     */
-    TIMEOUT_FOR_SIM2: 2000,
-
-    /**
-     * Timer used to wait for the second SIM
-     * @type {Number} timeoutId
-     */
-    _timerForSIM2: null,
-
-    /**
-     * This property is used to make sure sim_lock won't get inited
-     * before we receive iccdetected when bootup.
-     * @type {Boolean}
-     */
-    ready: false,
-
-    init: function ssm_init() {
-      if (!IccManager) {
-        return;
-      }
-
-      this._conns = Array.prototype.slice.call(navigator.mozMobileConnections);
-      this.length = this._conns.length;
-
-      if (this._conns.length === 0) {
-        return;
-      }
-
-      this._conns.forEach(function iterator(conn, index) {
-        this._instances.push(new SIMSlot(conn, index,
-                             IccManager.getIccById(conn.iccId)));
-      }, this);
-
-      IccManager.addEventListener('iccdetected', this);
-    },
-
-    /**
-     * We support multiSIM or not.
-     * @return {Boolean} MultiSIM is available or not.
-     */
-    isMultiSIM: function() {
-      return (this.length > 1);
-    },
-
-    /**
-     * Check there is sim card on slot#index or not.
-     * @param  {Number}  index The slot number.
-     * @return {Boolean}       sim card is absent or not.
-     */
-    isSIMCardAbsent: function ssm_isSIMCardAbsent(index) {
-      var slot = this.get(index);
-      if (slot) {
-        return slot.isAbsent();
-      } else {
-        return true;
-      }
-    },
-
-    /**
-     * Make sure we really have one simcard information
-     * @return {Boolean} we already have one simcard.
-     */
-    hasOnlyOneSIMCardDetected: function() {
-      var sim0Absent = this.isSIMCardAbsent(0);
-      var sim1Absent = this.isSIMCardAbsent(1);
-      var hasOneSim =
-        (sim0Absent && !sim1Absent) || (!sim0Absent && sim1Absent);
-      return hasOneSim;
-    },
-
-    /**
-     * Check there is no any sim card on device or not.
-     * @return {Boolean} There is no sim card.
-     */
-    noSIMCardOnDevice: function ssm_noSIMCardOnDevice() {
-      if (!IccManager || !IccManager.iccIds) {
-        return true;
-      }
-      return (IccManager.iccIds.length === 0);
-    },
-
-    noSIMCardConnectedToNetwork: function ssm_noSIMCardConnectedToNetwork() {
-      if (!IccManager || !IccManager.iccIds) {
-        return true;
-      }
-      return this._instances.every(function iterator(instance) {
-        return instance.conn.voice && instance.conn.voice.emergencyCallsOnly;
-      });
-    },
-
-    /**
-     * Get specific SIM slot instance.
-     * @param {Number} index The slot number.
-     * @return {Object} The SIMSlot instance.
-     */
-    get: function ssm_get(index) {
-      if (index > this.length - 1) {
-        return null;
-      }
-
-      return this._instances[index];
-    },
-
-    /**
-     * Get specific mobileConnection object.
-     * @param {Number} index The slot number.
-     * @return {Object} The mobile connection object.
-     */
-    getMobileConnection: function ssm_getMobileConnection(index) {
-      if (index > this.length - 1) {
-        return null;
-      }
-
-      return this._instances[index].conn;
-    },
-
-    /**
-     * Get all sim slot instances
-     * @return {Array} The array of sim slot instances.
-     */
-    getSlots: function ssm_getSlots() {
-      return this._instances;
-    },
-
-    /**
-     * Get specified simslot by iccId
-     * @return {Object} The SIMSlot instance.
-     */
-    getSlotByIccId: function ssm_getSlotByIccId(iccId) {
-      var found = null;
-      this._instances.some(function iterator(slot, index) {
-        if (slot.conn.iccId && slot.conn.iccId === iccId) {
-          found = slot;
-          return true;
-        } else {
-          return false;
-        }
-      }, this);
-      return found;
-    },
-
-    /**
-     * This method is used to make sure if we can't receive the 2nd
-     * `iccdetected` event during the timeout, we would treat this
-     * situation as DSDS device with only one simcard inserted.
-     */
-    waitForSecondSIM: function() {
-      var self = this;
-      this._timerForSIM2 = setTimeout(function() {
-        clearTimeout(self._timerForSIM2);
-        self.publishSIMSlotIsReady();
-      }, this.TIMEOUT_FOR_SIM2);
-    },
-
-    /**
-     * We have to make sure our simcards are ready and emit
-     * this event out to notify sim_settings_helper & sim_lock
-     * do related operations.
-     */
-    publishSIMSlotIsReady: function() {
-      if (!this.ready) {
-        this.ready = true;
-        window.dispatchEvent(new CustomEvent('simslotready'));
-      }
-    },
-
-    handleEvent: function ssm_handleEvent(evt) {
-      switch (evt.type) {
-        case 'iccdetected':
-          var slot = this.getSlotByIccId(evt.iccId);
-
-          if (slot) {
-            slot.update(IccManager.getIccById(evt.iccId));
-
-            // we are now in single sim device
-            if (!this.isMultiSIM()) {
-              this.publishSIMSlotIsReady();
-            } else {
-              // we are now in DSDS device
-              // if we have one simcard already
-              if (this.hasOnlyOneSIMCardDetected()) {
-                this.waitForSecondSIM();
-              } else {
-                // we have two simcards already
-                clearTimeout(this._timerForSIM2);
-                this.publishSIMSlotIsReady();
-              }
-            }
-          }
-          break;
-      }
-    }
-  };
-
-  SIMSlotManager.init();
-}(window));
diff --git a/shared/js/toaster.js b/shared/js/toaster.js
index 6dd829a..94d30b9 100644
--- a/shared/js/toaster.js
+++ b/shared/js/toaster.js
@@ -43,7 +43,7 @@ var Toaster = {
         this._containerElement.hidden = true;
         if (this._messageElement) {
           this._messageElement.textContent = '';
-          this._messageElement.removeAttribute('data-l10n-id');
+          navigator.mozL10n.localize(this._messageElement, '');
         }
       }
     }
@@ -76,7 +76,7 @@ var Toaster = {
     if (self._isBacklogged()) {
       toast = self._toastQueue.shift();
       self._messageElement.textContent = '';
-      navigator.mozL10n.setAttributes(
+      navigator.mozL10n.localize(
         self._messageElement, toast.messageL10nId, toast.messageL10nArgs);
       self._showContainerElement();
       setTimeout(function() {
diff --git a/shared/js/tz_select.js b/shared/js/tz_select.js
index 393e616..a042fce 100644
--- a/shared/js/tz_select.js
+++ b/shared/js/tz_select.js
@@ -14,10 +14,6 @@ function tzSelect(regionSelector, citySelector, onchange, onload) {
     xhr.onload = function() {
       callback(xhr.response);
     };
-    xhr.onerror = function() {
-     console.error('Error getting file');
-     callback(xhr.response);
-    };
     xhr.send();
   }

@@ -25,6 +21,7 @@ function tzSelect(regionSelector, citySelector, onchange, onload) {
   /**
    * Guess the current timezone from the MCC/MNC tuple
    */
+
   function getDefaultTimezoneID(callback) {
     if (!callback) {
       return;
@@ -33,36 +30,25 @@ function tzSelect(regionSelector, citySelector, onchange, onload) {
     // Worst case scenario: default to New York (which is just as good or
     // bad as anything else -- we used to default to Pago Pago)
     var tzDefault = 'America/New_York';
+
     // retrieve MCC/MNC: use the current network codes when available,
     // default to the SIM codes if necessary.
     var mcc, mnc;
     // XXX: check bug-926169
     // this is used to keep all tests passing while introducing multi-sim APIs
     var conn = navigator.mozMobileConnection ||
-               window.navigator.mozMobileConnections &&
-               window.navigator.mozMobileConnections[0];
+      window.navigator.mozMobileConnections &&
+        window.navigator.mozMobileConnections[0];
+
     if (conn && IccHelper) {
       if (conn.voice && conn.voice.network && conn.voice.network.connected) {
-        // we have connection available, so we use it
         mcc = conn.voice.network.mcc;
         mnc = conn.voice.network.mnc;
       } else if (IccHelper.iccInfo) {
-        // we don't have connection available, we rely on the SIM
         mcc = IccHelper.iccInfo.mcc;
         mnc = IccHelper.iccInfo.mnc;
-        // if SIM is not available, mcc and mnc are null,
-        // so we wait for a future event where we have access to the SIM.
-        if (IccHelper.cardState !== 'ready') {
-          IccHelper.addEventListener('iccinfochange', function simReady() {
-            if (IccHelper.iccInfo.mcc) {
-              IccHelper.removeEventListener('iccinfochange', simReady);
-            }
-            getDefaultTimezoneID(callback);
-          });
-        }
       }
     }
-
     if (!mcc) {
       callback(tzDefault);
       return;
@@ -73,7 +59,7 @@ function tzSelect(regionSelector, citySelector, onchange, onload) {
     loadJSON(APN_TZ_FILE, function(response) {
       if (response) {
         var tz = response[mcc];
-        if (typeof(tz) === 'string') {
+        if (typeof(tz) == 'string') {
           tzDefault = tz;
         } else if (tz && (mnc in tz)) {
           tzDefault = tz[mnc];
@@ -87,14 +73,12 @@ function tzSelect(regionSelector, citySelector, onchange, onload) {
   /**
    * Activate a timezone selector UI
    */
+
   function newTZSelector(onchangeTZ, currentID, alreadyDefined) {
-    // for region, we use whatever is BEFORE the /
     var gRegion = currentID.replace(/\/.*/, '');
-    // for city, we use whatever is AFTER the /
     var gCity = currentID.replace(/.*?\//, '');
     var gTZ = null;
     var loaded = false;
-    var userSelected = false;

     function fillSelectElement(selector, options) {
       selector.innerHTML = '';
@@ -122,7 +106,7 @@ function tzSelect(regionSelector, citySelector, onchange, onload) {
         options.push({
           text: _('tzRegion-' + c) || c,
           value: c,
-          selected: (c === gRegion)
+          selected: (c == gRegion)
         });
       }
       fillSelectElement(regionSelector, options);
@@ -137,7 +121,7 @@ function tzSelect(regionSelector, citySelector, onchange, onload) {
         options.push({
           text: list[i].name || list[i].city.replace(/_/g, ' '),
           value: i,
-          selected: (list[i].city === gCity)
+          selected: (list[i].city == gCity)
         });
       }
       fillSelectElement(citySelector, options);
@@ -153,7 +137,7 @@ function tzSelect(regionSelector, citySelector, onchange, onload) {
     }

     function setTimezone() {
-      onchangeTZ(getTZInfo(), {'changedByUser': userSelected});
+      onchangeTZ(getTZInfo());
     }

     function getTZInfo() {
@@ -170,15 +154,8 @@ function tzSelect(regionSelector, citySelector, onchange, onload) {
       };
     }

-    regionSelector.onchange = function() {
-      userSelected = true;
-      fillCities();
-    };
-    citySelector.onchange = function() {
-      userSelected = true;
-      setTimezone();
-    };
-
+    regionSelector.onchange = fillCities;
+    citySelector.onchange = setTimezone;
     loadJSON(TIMEZONE_FILE, function loadTZ(response) {
       gTZ = response;
       fillRegions();
@@ -192,6 +169,7 @@ function tzSelect(regionSelector, citySelector, onchange, onload) {
   /**
    * Monitor time.timezone changes
    */
+
   function newTZObserver() {
     var settings = window.navigator.mozSettings;
     if (!settings) {
@@ -204,14 +182,12 @@ function tzSelect(regionSelector, citySelector, onchange, onload) {

     function initSelector(initialValue, alreadyDefined) {
       // initialize the timezone selector with the initial TZ setting
-      newTZSelector(function updateTZ(tz, options) {
+      newTZSelector(function updateTZ(tz) {
         var req = settings.createLock().set({'time.timezone': tz.id});
         if (onchange) {
           req.onsuccess = function updateTZ_callback() {
             // Store the user manually selected timezone separately
-            if (options.changedByUser) {
-              settings.createLock().set({'time.timezone.user-selected': tz.id});
-            }
+            settings.createLock().set({'time.timezone.user-selected': tz.id});

             // Wait until the timezone is actually set
             // before calling the callback.
@@ -249,6 +225,7 @@ function tzSelect(regionSelector, citySelector, onchange, onload) {
   /**
    * Startup -- make sure webL10n is ready before using tzSelect()
    */
+
   newTZObserver();
 }

diff --git a/shared/js/wifi_helper.js b/shared/js/wifi_helper.js
index 8202384..f37a910 100644
--- a/shared/js/wifi_helper.js
+++ b/shared/js/wifi_helper.js
@@ -10,7 +10,8 @@ var WifiHelper = {
     return navigator.mozWifiManager;
   }(),

-  setPassword: function(network, password, identity, eap, phase2, certificate) {
+  setPassword: function(network, password, identity,
+                        eap, phase2, certificate) {
     var encType = this.getKeyManagement(network);
     switch (encType) {
       case 'WPA-PSK':
diff --git a/shared/pages/import/js/curtain.js b/shared/pages/import/js/curtain.js
index bccec81..e6a044f 100644
--- a/shared/pages/import/js/curtain.js
+++ b/shared/pages/import/js/curtain.js
@@ -60,11 +60,10 @@ var Curtain = (function() {
     progressElement.setAttribute('value', 0);

     function showMessage() {
-      navigator.mozL10n.setAttributes(
-        messages.progress,
-        'progressFB',
-        { current: counter, total: total }
-      );
+      messages.progress.textContent = _('progressFB', {
+        current: counter,
+        total: total
+      });
     }

     this.update = function() {
diff --git a/shared/resources/apn.json b/shared/resources/apn.json
index 985021d..036b3df 100644
--- a/shared/resources/apn.json
+++ b/shared/resources/apn.json
@@ -43,8 +43,6 @@
     {"carrier":"Tele2 GPRS","apn":"internet.tele2.nl","mmsc":"http://mmsc.tele2.nl","mmsproxy":"193.12.40.64","mmsport":"8080","type":["default","supl","mms"]}
   ],
   "04": [
-    {"carrier":"Truphone","apn":"truphone.com","type":["default","supl"],"mvno_match_data":"204043914","mvno_type":"imsi"},
-    {"carrier":"Truphone","apn":"truphone.com","type":["default","supl"],"mvno_match_data":"20404794","mvno_type":"imsi"},
     {"carrier":"Vodafone NL","apn":"live.vodafone.com","user":"vodafone","password":"vodafone","authtype":"1","mmsc":"http://mmsc.mms.vodafone.nl","mmsproxy":"192.168.251.150","mmsport":"8799","type":["default","supl","mms"]},
     {"carrier":"SaskTel","apn":"pda.stm.sk.ca","type":["default","mms","supl","dun"],"mmsc":"http://mms.sasktel.com/","mmsproxy":"mig.sasktel.com","mmsport":"80","mvno_match_data":"5A","mvno_type":"gid"}
   ],
@@ -156,9 +154,6 @@
     {"carrier":"Jazztel Internet","apn":"jazzinternet","type":["default","supl"]},
     {"carrier":"Jazztel MMS","apn":"jazzmms","user":"","password":"","authtype":"1","mmsc":"http://jazztelmms.com/servlets/mms","mmsproxy":"37.132.0.10","mmsport":"8080","type":["mms"]}
   ],
-  "27": [
-    {"carrier":"Truphone","apn":"truphone.com","type":["default","supl"]}
-  ],
   "01": [
     {"carrier":"Internet movil","apn":"airtelwap.es","user":"wap@wap","password":"wap125","authtype":"1","type":["default","supl"]},
     {"enableStrict7BitEncodingForSms":true,"type":["operatorvariant"]},
@@ -430,9 +425,6 @@
   "20": [
     {"carrier":"3","apn":"three.co.uk","mmsc":"http://mms.um.three.co.uk:10021/mmsc","mmsproxy":"mms.three.co.uk","mmsport":"8799","type":["default","supl","mms"]}
   ],
-  "25": [
-    {"carrier":"Truphone","apn":"truphone.com","type":["default","supl"]}
-  ],
   "30": [
     {"carrier":"Virgin Media Mobile Internet","apn":"goto.virginmobile.uk","user":"user","mmsc":"http://mms.virginmobile.co.uk:8002","mmsproxy":"193.30.166.2","mmsport":"8080","authtype":"1","type":["default","supl","mms"],"mvno_match_data":"28","mvno_type":"gid"},
     {"voicemail":"222","type":["operatorvariant"]},
@@ -759,9 +751,6 @@
   ]
 },
 "260": {
-  "33": [
-    {"carrier":"Truphone","apn":"truphone.com","type":["default","supl"]}
-  ],
   "01": [
     {"carrier":"Plus Internet","apn":"plus","type":["default","supl"]},
     {"voicemail":"2222","type":["operatorvariant"]},
@@ -786,9 +775,6 @@
   ]
 },
 "262": {
-  "42": [
-    {"carrier":"Truphone","apn":"truphone.com","type":["default","supl"]}
-  ],
   "01": [
     {"carrier":"Telekom Internet","apn":"","type":["ia"]},
     {"voicemail":"3311","type":["operatorvariant"]},
@@ -806,9 +792,9 @@
     {"carrier":"E-Plus MMS","apn":"mms.eplus.de","user":"mms","password":"eplus","mmsc":"http://mms/eplus/","mmsproxy":"212.23.97.153","mmsport":"5080","authtype":"1","type":["mms"]}
   ],
   "07": [
-    {"carrier":"o2 Internet","apn":"internet","mmsc":"http://10.81.0.7:8002","mmsproxy":"82.113.100.5","mmsport":"8080","type":["default","supl","mms"],"mvno_match_data":"2620739","mvno_type":"imsi"},
+    {"carrier":"o2 Internet","apn":"internet","mmsc":"http://10.81.0.7:8002","mmsproxy":"82.113.100.5","mmsport":"8080","type":["default","supl","mms"]},
     {"voicemail":"333","enableStrict7BitEncodingForSms":true,"operatorSizeLimitation":614400,"type":["operatorvariant"]},
-    {"carrier":"o2 Internet Prepaid","apn":"pinternet.interkom.de","mmsc":"http://10.81.0.7:8002","mmsproxy":"82.113.100.6","mmsport":"8080","type":["default","supl","mms"],"mvno_match_data":"2620749","mvno_type":"imsi"}
+    {"carrier":"o2 Internet Prepaid","apn":"pinternet.interkom.de","mmsc":"http://10.81.0.7:8002","mmsproxy":"82.113.100.6","mmsport":"8080","type":["default","supl","mms"]}
   ]
 },
 "268": {
@@ -1020,9 +1006,6 @@
   ]
 },
 "310": {
-  "30": [
-    {"carrier":"Truphone","apn":"truphone.com","type":["default","supl"]}
-  ],
   "100": [
     {"carrier":"PLATMMS","apn":"mms.plateau","mmsc":"http://mms","mmsproxy":"172.23.253.206","mmsport":"8080","type":["mms"]},
     {"carrier":"PLATWEB","apn":"isp.plateau","type":["default","supl"]}
@@ -1107,8 +1090,7 @@
   ],
   "300": [
     {"carrier":"T-Mobile US 300","apn":"fast.t-mobile.com","mmsc":"http://mms.msg.eng.t-mobile.com/mms/wapenc","type":["default","supl","mms"],"protocol":"IPV6","roaming_protocol":"IP"},
-    {"carrier":"MetroPCS 300","apn":"fast.metropcs.com","mmsc":"http://metropcs.mmsmvno.com/mms/wapenc","type":["default","supl","mms"],"protocol":"IPV6","roaming_protocol":"IP","mvno_match_data":"6D","mvno_type":"gid"},
-    {"carrier":"Truphone","apn":"truphone.com","type":["default","supl"]}
+    {"carrier":"MetroPCS 300","apn":"fast.metropcs.com","mmsc":"http://metropcs.mmsmvno.com/mms/wapenc","type":["default","supl","mms"],"protocol":"IPV6","roaming_protocol":"IP","mvno_match_data":"6D","mvno_type":"gid"}
   ],
   "310": [
     {"carrier":"T-Mobile US 310","apn":"","type":["ia"],"protocol":"IPV6","roaming_protocol":"IP"},
@@ -2766,8 +2748,7 @@
     {"carrier":"Zain-MMS","apn":"MMS","user":"atheer","password":"atheer","authtype":"1","mmsc":"http://mms:8002/","mmsproxy":"172.29.11.12","mmsport":"8080","type":["mms"]}
   ],
   "30": [
-    {"carrier":"ZAIN-GPRS","apn":"internet","user":"atheer","password":"atheer","authtype":"1","type":["default","supl"]},
-    {"carrier":"Zain-MMS","apn":"MMS","user":"atheer","password":"atheer","authtype":"1","mmsc":"http://mms:8002/","mmsproxy":"172.29.11.12","mmsport":"8080","type":["mms"]}
+    {"carrier":"ZainHURI - SNPT","apn":"default","type":["default","supl"]}
   ],
   "40": [
     {"carrier":"Korek 9595","apn":"internet.korek.com","type":["default","supl"]},
@@ -3166,9 +3147,6 @@
   ],
   "06": [
     {"carrier":"SmarTone","apn":"SmarTone","mmsc":"http://mms.smartone.com/server","mmsproxy":"10.9.9.9","mmsport":"8080","authtype":"3","type":["default","supl","mms"]}
-  ],
-  "08": [
-    {"carrier":"Truphone","apn":"truphone.com","type":["default","supl"]}
   ]
 },
 "455": {
@@ -3378,7 +3356,6 @@
     {"carrier":"Optus Business Mobile Broadband","apn":"yesbusiness"},
     {"carrier":"Optus Internet","apn":"internet","type":["default"]},
     {"carrier":"Optus MMS","apn":"mms","mmsc":"http://mmsc.optus.com.au:8002/","mmsproxy":"61.88.190.10","mmsport":"8070","type":["mms"]},
-    {"carrier":"Truphone","apn":"truphone.com","type":["default","supl"],"mvno_match_data":"50502100","mvno_type":"imsi"},
     {"carrier":"Virgin Internet","apn":"virgininternet","type":["default"],"proxy":"202.139.83.152","port":"8070","mvno_match_data":"505029","mvno_type":"imsi"},
     {"carrier":"Virgin MMS","apn":"virginmms","type":["mms"],"mmsc":"http://mms.virginvibe.com.au:8002","mmsproxy":"202.139.83.152","mmsport":"8070","mvno_match_data":"505029","mvno_type":"imsi"}
   ],
diff --git a/shared/resources/apn/apns_conf.xml b/shared/resources/apn/apns_conf.xml
index bb2fae9..bd84b46 100644
--- a/shared/resources/apn/apns_conf.xml
+++ b/shared/resources/apn/apns_conf.xml
@@ -109,24 +109,6 @@
       type="default,supl,mms"
   />

-  <apn carrier="Truphone"
-      mcc="204"
-      mnc="04"
-      apn="truphone.com"
-      type="default,supl"
-      mvno_match_data="204043914"
-      mvno_type="imsi"
-  />
-
-  <apn carrier="Truphone"
-      mcc="204"
-      mnc="04"
-      apn="truphone.com"
-      type="default,supl"
-      mvno_match_data="20404794"
-      mvno_type="imsi"
-  />
-
   <apn carrier="Vodafone NL"
       mcc="204"
       mnc="04"
@@ -1200,13 +1182,6 @@
       type="mms"
   />

-  <apn carrier="Truphone"
-      mcc="214"
-      mnc="27"
-      apn="truphone.com"
-      type="default,supl"
-  />
-
   <apn carrier="Telenor MMS"
       mcc="216"
       mnc="01"
@@ -2589,13 +2564,6 @@
       type="mms"
   />

-  <apn carrier="Truphone"
-      mcc="234"
-      mnc="25"
-      apn="truphone.com"
-      type="default,supl"
-  />
-
   <apn carrier="Jersey Telecom"
       mcc="234"
       mnc="50"
@@ -4174,13 +4142,6 @@
       type="mms"
   />

-  <apn carrier="Truphone"
-      mcc="260"
-      mnc="33"
-      apn="truphone.com"
-      type="default,supl"
-  />
-
   <apn carrier="Telekom Internet"
       mcc="262"
       mnc="01"
@@ -4256,8 +4217,6 @@
       mmsproxy="82.113.100.5"
       mmsport="8080"
       type="default,supl,mms"
-      mvno_match_data="2620739"
-      mvno_type="imsi"
   />

   <apn carrier="o2 Internet Prepaid"
@@ -4268,15 +4227,6 @@
       mmsproxy="82.113.100.6"
       mmsport="8080"
       type="default,supl,mms"
-      mvno_match_data="2620749"
-      mvno_type="imsi"
-  />
-
-  <apn carrier="Truphone"
-      mcc="262"
-      mnc="42"
-      apn="truphone.com"
-      type="default,supl"
   />

   <apn carrier="Vodafone Net2"
@@ -5748,21 +5698,6 @@
       mvno_type="gid"
   />

-  <apn carrier="Truphone"
-      mcc="310"
-      mnc="30"
-      apn="truphone.com"
-      type="default,supl"
-  />
-
-
-  <apn carrier="Truphone"
-      mcc="310"
-      mnc="300"
-      apn="truphone.com"
-      type="default,supl"
-  />
-
   <apn carrier="T-Mobile US 310"
       mcc="310"
       mnc="310"
@@ -5828,8 +5763,8 @@
   <apn carrier="ATT Phone"
       mcc="310"
       mnc="410"
-      apn="nxtgenphone"
-      type="default,mms,supl,fota,hipri"
+      apn="phone"
+      type="default,mms,supl,fota"
       mmsc="http://mmsc.mobile.att.net"
       mmsproxy="proxy.mobile.att.net"
       mmsport="80"
@@ -13701,29 +13636,13 @@
       type="mms"
   />

-  <apn carrier="ZAIN-GPRS"
+  <apn carrier="ZainHURI - SNPT"
       mcc="418"
       mnc="30"
-      apn="internet"
-      user="atheer"
-      password="atheer"
-      authtype="1"
+      apn="default"
       type="default,supl"
   />

-  <apn carrier="Zain-MMS"
-      mcc="418"
-      mnc="30"
-      apn="MMS"
-      user="atheer"
-      password="atheer"
-      authtype="1"
-      mmsc="http://mms:8002/"
-      mmsproxy="172.29.11.12"
-      mmsport="8080"
-      type="mms"
-  />
-
   <apn carrier="Korek 9595"
       mcc="418"
       mnc="40"
@@ -15225,13 +15144,6 @@
       type="default,supl,mms"
   />

-  <apn carrier="Truphone"
-      mcc="454"
-      mnc="08"
-      apn="truphone.com"
-      type="default,supl"
-  />
-
   <apn carrier="one2free"
       mcc="454"
       mnc="10"
@@ -16031,15 +15943,6 @@
       type="mms"
   />

-  <apn carrier="Truphone"
-      mcc="505"
-      mnc="02"
-      apn="truphone.com"
-      type="default,supl"
-      mvno_match_data="50502100"
-      mvno_type="imsi"
-  />
-
   <apn carrier="Virgin Internet"
       mcc="505"
       mnc="02"
diff --git a/shared/resources/apn/apns_conf_local.xml b/shared/resources/apn/apns_conf_local.xml
index 98fde3f..5ad2a5c 100644
--- a/shared/resources/apn/apns_conf_local.xml
+++ b/shared/resources/apn/apns_conf_local.xml
@@ -161,17 +161,4 @@
       authtype="1"
       type="dun"
   />
-
-  <!-- overwrite APNs until they get updated in the upstream database -->
-
-  <apn carrier="ATT Phone"
-      overwrite="true"
-      mcc="310"
-      mnc="410"
-      apn="phone"
-      type="default,mms,supl,fota"
-      mmsc="http://mmsc.mobile.att.net"
-      mmsproxy="proxy.mobile.att.net"
-      mmsport="80"
-  />
 </apns>
diff --git a/shared/resources/apn/query.js b/shared/resources/apn/query.js
index a4e00c7..c8df40a 100644
--- a/shared/resources/apn/query.js
+++ b/shared/resources/apn/query.js
@@ -288,31 +288,6 @@ document.addEventListener('DOMContentLoaded', function onload() {
           var localApns =
             localAndroidDB.documentElement.querySelectorAll('apn');
           for (var localApn of localApns) {
-            if (localApn.getAttribute('overwrite')) {
-              var pattern = '[carrier="' + localApn.getAttribute('carrier') +
-                            '"]';
-              var androidApns =
-                gAndroidDB.documentElement.querySelectorAll(pattern);
-              for (var androidApn of androidApns) {
-                if (androidApn &&
-                    androidApn.getAttribute('carrier') ===
-                    localApn.getAttribute('carrier')) {
-
-                  if (DEBUG) {
-                    console.log('- replace "' +
-                                androidApn.getAttribute('apn') +
-                                '" to "' + localApn.getAttribute('apn') +
-                                '"');
-                  }
-                  localApn.removeAttribute('overwrite');
-                  var parent = androidApn.parentNode;
-                  parent.insertBefore(localApn, androidApn);
-                  parent.removeChild(androidApn);
-                }
-              }
-              continue;
-            }
-
             // use local apn to patch origin carrier name in the Android DB
             // if the name is not the correct one (see bug 863126).
             // Note: This patch will not function once we get
diff --git a/shared/resources/apn_tz.json b/shared/resources/apn_tz.json
index 5782d94..95db849 100644
--- a/shared/resources/apn_tz.json
+++ b/shared/resources/apn_tz.json
@@ -162,7 +162,7 @@
   "732": "America/Bogota",
   "734": "America/Caracas",
   "738": "America/Guyana",
-  "740": "America/Quito",
+  "740": "Pacific/Galapagos",
   "744": "America/Asuncion",
   "748": "America/Montevideo"
 }
diff --git a/shared/resources/tz.json b/shared/resources/tz.json
index 2d29148..9d3f2e6 100644
--- a/shared/resources/tz.json
+++ b/shared/resources/tz.json
@@ -183,7 +183,6 @@
   {"cc":"BR", "offset":"-04:00,-04:00", "city":"Porto_Acre", "id":"America/Rio_Branco"},
   {"cc":"BR", "offset":"-04:00,-04:00", "city":"Porto_Velho"},
   {"cc":"PR", "offset":"-04:00,-04:00", "city":"Puerto_Rico"},
-  {"cc":"EC", "offset":"-05:00,-05:00", "city":"Quito"},
   {"cc":"CA", "offset":"-06:00,-05:00", "city":"Rainy_River"},
   {"cc":"CA", "offset":"-06:00,-05:00", "city":"Rankin_Inlet"},
   {"cc":"BR", "offset":"-03:00,-03:00", "city":"Recife"},
diff --git a/shared/style/action_menu/images/icons/back-rtl.png b/shared/style/action_menu/images/icons/back-rtl.png
new file mode 100644
index 0000000..1515af8
Binary files /dev/null and b/shared/style/action_menu/images/icons/back-rtl.png differ
diff --git a/shared/style/action_menu/images/icons/back-rtl@1.5x.png b/shared/style/action_menu/images/icons/back-rtl@1.5x.png
new file mode 100644
index 0000000..0fe6115
Binary files /dev/null and b/shared/style/action_menu/images/icons/back-rtl@1.5x.png differ
diff --git a/shared/style/action_menu/images/icons/back-rtl@2.25x.png b/shared/style/action_menu/images/icons/back-rtl@2.25x.png
new file mode 100644
index 0000000..ee30e38
Binary files /dev/null and b/shared/style/action_menu/images/icons/back-rtl@2.25x.png differ
diff --git a/shared/style/action_menu/images/icons/back-rtl@2x.png b/shared/style/action_menu/images/icons/back-rtl@2x.png
new file mode 100644
index 0000000..f34b75e
Binary files /dev/null and b/shared/style/action_menu/images/icons/back-rtl@2x.png differ
diff --git a/shared/style/buttons.css b/shared/style/buttons.css
index b4d9cc7..781234d 100644
--- a/shared/style/buttons.css
+++ b/shared/style/buttons.css
@@ -120,7 +120,8 @@ button[disabled]::-moz-selection,

 li button,
 li [role="button"],
-li .button {
+li .button,
+select {
   position: relative;
   text-align: left;
   border: 0.1rem solid #c7c7c7;
@@ -128,13 +129,6 @@ li .button {
   margin: 0 0 1rem;
   overflow: hidden;
   border-radius: 0;
-  display: flex;
-  height: auto;
-  min-height: 4rem;
-  text-overflow: initial;
-  white-space: normal;
-  line-height: 2rem;
-  padding: 1rem 1.2rem;
 }

 /* Press */
@@ -155,7 +149,7 @@ li .button[aria-disabled="true"] {
 li button.icon,
 li [role="button"].icon,
 li .button.icon {
-  padding-right: 4rem;
+  padding-right: 3rem;
 }

 li button.icon:before,
@@ -183,21 +177,13 @@ li [role="button"].icon-view:before {
   right: 0;
 }

-/* Getting more space for text, as icon is shorter */
-li button.icon-dialog,
-li [role="button"].icon-dialog,
-li .button.icon-dialog {
-  padding-right: 3rem;
-}
-
 li button.icon-dialog:before,
 li [role="button"].icon-dialog:before,
 li .button.icon-dialog:before {
   width: 0;
   height: 0;
-  top: auto;
+  top: 3.5rem;
   right: 0.8rem;
-  bottom: 0.5rem;
   border-top: 0.7rem solid transparent;
   border-bottom: 0.7rem solid transparent;
   border-left: 0.7rem solid #00aac5;
@@ -268,8 +254,6 @@ select {
   white-space: nowrap;
   overflow: hidden;
   height: 4rem;
-  border: 0.1rem solid #c7c7c7;
-  background: rgba(0,0,0,0.05);
 }

 .skin-dark select {
@@ -296,7 +280,7 @@ select:-moz-focusring {
   width: calc(100% + 3rem);
   height: 100%;
   margin: 0;
-  padding: 0 5rem 0 0;
+  padding: 0;
   text-indent: 0;
   font-weight: 400;
   font-size: 1.7rem;
@@ -334,13 +318,12 @@ html[dir="rtl"] li .button {
 html[dir="rtl"] li button.icon,
 html[dir="rtl"] li .icon[role="button"],
 html[dir="rtl"] li .button.icon {
-  padding: 1rem 1.3rem 1rem 4rem;
+  padding: 0 1.3rem 0 3rem;
 }

-html[dir="rtl"] li button.icon-dialog,
-html[dir="rtl"] li [role="button"].icon-dialog,
-html[dir="rtl"] li .button.icon-dialog {
-  padding-left: 3rem;
+html[dir="rtl"] li button.icon-view,
+html[dir="rtl"] li .icon-view[role="button"] {
+  padding: 0 2.8rem;
 }

 html[dir="rtl"] li button.icon-view:before,
@@ -368,5 +351,4 @@ html[dir="rtl"] .button.icon-dialog select {
   left: auto;
   right: 0.3rem; /* .3rem space because of italic */
   text-indent: 1rem;
-  padding: 0 0 0 4rem;
 }
\ No newline at end of file
diff --git a/shared/style/date_selector.css b/shared/style/date_selector.css
index 9e1f8b8..951586c 100644
--- a/shared/style/date_selector.css
+++ b/shared/style/date_selector.css
@@ -126,11 +126,6 @@
   border: none;
 }

-
-[role="dialog"][data-type="date-selector"]  .YMD .picker-bar-background {
-  width: 21%;
-}
-
 /*MDY*/
 [role="dialog"][data-type="date-selector"] .MDY .value-picker-month-wrapper {
   left: 0;
diff --git a/shared/style/dialer/overlay.css b/shared/style/dialer/overlay.css
index 8409330..4362f26 100644
--- a/shared/style/dialer/overlay.css
+++ b/shared/style/dialer/overlay.css
@@ -20,7 +20,7 @@ form.overlay menu ul {
   height: calc(100% - 13rem);
   overflow: auto;
   margin-top: 5rem;
-  padding: 0;
+  padding: 0 2rem 0 2rem;
   line-height: 2.4rem;
   list-style: none outside none;
 }
@@ -28,20 +28,20 @@ form.overlay menu ul {
 form.overlay menu ul > li,
 form.overlay menu ul > section {
   height: 4.5rem;
-  padding: 1rem 2rem;
+  padding: 1rem 0;
   font-size: 1.7rem;
+  border-bottom: 0.1rem solid #000;
   position: relative;
 }

 form.overlay menu ul > li:after,
 form.overlay menu ul > section:after {
   content: ' ';
+  width: 100%;
   border-bottom: 0.1rem solid #666;
   display: block;
   position: absolute;
-  left: 1rem;
   bottom: 0;
-  right: 1rem;
 }

 form.overlay menu ul > li:active,
diff --git a/shared/style/drawer/images/ui/negative.png b/shared/style/drawer/images/ui/negative.png
new file mode 100644
index 0000000..9e9f428
Binary files /dev/null and b/shared/style/drawer/images/ui/negative.png differ
diff --git a/shared/style/drawer/images/ui/separator_large.png b/shared/style/drawer/images/ui/separator_large.png
new file mode 100644
index 0000000..93a5d17
Binary files /dev/null and b/shared/style/drawer/images/ui/separator_large.png differ
diff --git a/shared/style/lists.css b/shared/style/lists.css
index d86296e..cbd7870 100644
--- a/shared/style/lists.css
+++ b/shared/style/lists.css
@@ -75,7 +75,9 @@ li a:active {
 }

 [data-type="list"].active li:active:after,
-[data-type="list"] li > a:active:after {
+[data-type="list"].active li:hover:after,
+[data-type="list"] li > a:active:after,
+[data-type="list"] li > a:hover:after {
   background-color: rgba(0,213,255,0.3);
 }

diff --git a/shared/style/tabs/images/ui/background-revert.png b/shared/style/tabs/images/ui/background-revert.png
new file mode 100644
index 0000000..dc6ba31
Binary files /dev/null and b/shared/style/tabs/images/ui/background-revert.png differ
diff --git a/shared/style/tabs/images/ui/background-revert@1.5x.png b/shared/style/tabs/images/ui/background-revert@1.5x.png
new file mode 100644
index 0000000..cbf5fd6
Binary files /dev/null and b/shared/style/tabs/images/ui/background-revert@1.5x.png differ
diff --git a/shared/style/tabs/images/ui/background-revert@2x.png b/shared/style/tabs/images/ui/background-revert@2x.png
new file mode 100644
index 0000000..3dbcc01
Binary files /dev/null and b/shared/style/tabs/images/ui/background-revert@2x.png differ
diff --git a/shared/style/value_selector.css b/shared/style/value_selector.css
index fc9be6f..5429323 100644
--- a/shared/style/value_selector.css
+++ b/shared/style/value_selector.css
@@ -190,8 +190,8 @@ button[disabled]::-moz-selection {
 }

 /* Right to left tweaks */
-html[dir="rtl"] .value-selector li input:checked + span,
-html[dir="rtl"] .value-selector li[aria-selected="true"] span {
+html[dir="rtl"] #value-selector li input:checked + span,
+html[dir="rtl"] #value-selector li[aria-selected="true"] span {
   padding-left: 2.6rem;
   padding-right: 1.5rem;
   margin-left: 1.2rem;
diff --git a/shared/test/integration/manifest.ini b/shared/test/integration/manifest.ini
deleted file mode 100644
index 2a11377..0000000
--- a/shared/test/integration/manifest.ini
+++ /dev/null
@@ -1,20 +0,0 @@
-[include:../../../tests/integration/devtools/manifest.ini]
-[include:../../../apps/keyboard/test/marionette/manifest.ini]
-[include:../../../apps/music/test/marionette/manifest.ini]
-[include:../../../apps/browser/test/marionette/manifest.ini]
-[include:../../../apps/homescreen/test/marionette/manifest.ini]
-[include:../../../apps/search/test/marionette/manifest.ini]
-[include:../../../apps/ftu/test/marionette/manifest.ini]
-[include:../../../apps/settings/test/marionette/tests/manifest.ini]
-[include:../../../apps/verticalhome/test/marionette/manifest.ini]
-[include:../../../apps/system/test/marionette/manifest.ini]
-[include:../../../apps/ringtones/test/marionette/manifest.ini]
-[include:../../../apps/sms/test/marionette/manifest.ini]
-[include:../../../apps/gallery/test/marionette/manifest.ini]
-[include:../../../apps/email/test/marionette/manifest.ini]
-[include:../../../apps/findmydevice/test/marionette/manifest.ini]
-[include:../../../apps/clock/test/marionette/manifest.ini]
-[include:../../../apps/calendar/test/marionette/manifest.ini]
-[include:../../../apps/communications/dialer/test/marionette/manifest.ini]
-[include:../../../apps/communications/contacts/test/marionette/manifest.ini]
-[include:../../../apps/video/test/marionette/manifest.ini]
diff --git a/shared/test/integration/tbpl-manifest.json b/shared/test/integration/tbpl-manifest.json
index 611933a..33075d3 100644
--- a/shared/test/integration/tbpl-manifest.json
+++ b/shared/test/integration/tbpl-manifest.json
@@ -2,13 +2,11 @@
   "blacklist": [
     "apps/calendar/test/marionette/alarm_test.js",
     "apps/calendar/test/marionette/caldav_test.js",
-    "apps/calendar/test/marionette/toggle_calendar_test.js",
     "apps/calendar/test/marionette/server_test.js",
     "apps/camera/test/marionette/capture_test.js",
     "apps/camera/test/marionette/hud_test.js",
     "apps/camera/test/marionette/settings_test.js",
     "apps/camera/test/marionette/zoom_test.js",
-    "apps/clock/test/marionette/alarm_test.js",
     "apps/communications/contacts/test/marionette/details_test.js",
     "apps/communications/contacts/test/marionette/form_test.js",
     "apps/email/test/marionette/activity_create_email_account_complete_test.js",
@@ -23,16 +21,12 @@
     "apps/homescreen/test/marionette/install_bookmark_test.js",
     "apps/homescreen/test/marionette/remove_bookmark_test.js",
     "apps/homescreen/test/marionette/update_bookmark_test.js",
-    "apps/ringtones/test/marionette/manage_test.js",
-    "apps/search/test/marionette/app_search_test.js",
     "apps/search/test/marionette/places_search_test.js",
-    "apps/settings/test/marionette/tests/airplane_mode_settings_test.js",
     "apps/settings/test/marionette/tests/app_permission_settings_test.js",
     "apps/settings/test/marionette/tests/hotspot_wifi_settings_test.js",
     "apps/settings/test/marionette/tests/message_settings_test.js",
     "apps/system/test/marionette/edges_gesture_test.js",
     "apps/system/test/marionette/notification_get_test.js",
-    "apps/system/test/marionette/notification_resend_test.js",
-    "apps/verticalhome/test/marionette/app_hosted_use_cached_icon_test.js"
+    "apps/settings/test/marionette/tests/airplane_mode_settings_test.js"
   ]
 }
diff --git a/shared/test/integration/travis-manifest.json b/shared/test/integration/travis-manifest.json
index ec7b372..7bab07a 100644
--- a/shared/test/integration/travis-manifest.json
+++ b/shared/test/integration/travis-manifest.json
@@ -24,14 +24,9 @@
     "apps/homescreen/test/marionette/install_bookmark_test.js",
     "apps/homescreen/test/marionette/remove_bookmark_test.js",
     "apps/homescreen/test/marionette/update_bookmark_test.js",
-    "apps/ringtones/test/marionette/manage_test.js",
-    "apps/search/test/marionette/app_search_test.js",
     "apps/search/test/marionette/places_search_test.js",
     "apps/settings/test/marionette/tests/app_permission_settings_test.js",
     "apps/settings/test/marionette/tests/message_settings_test.js",
-    "apps/settings/test/marionette/tests/airplane_mode_settings_test.js",
-    "apps/system/test/marionette/notification_resend_test.js",
-    "apps/verticalhome/test/marionette/app_hosted_use_cached_icon_test.js",
-    "apps/verticalhome/test/marionette/bookmark_uninstall_test.js"
+    "apps/settings/test/marionette/tests/airplane_mode_settings_test.js"
   ]
 }
diff --git a/shared/test/unit/mocks/dialer/mock_contacts.js b/shared/test/unit/mocks/dialer/mock_contacts.js
index 3817c87..59dc045 100644
--- a/shared/test/unit/mocks/dialer/mock_contacts.js
+++ b/shared/test/unit/mocks/dialer/mock_contacts.js
@@ -54,6 +54,5 @@ var MockContacts = {
     this._calledWith = null;
     this.mCarrier = 'carrier';
     this.mType = 'type';
-    this.mResult = [];
   }
 };
diff --git a/shared/test/unit/mocks/dialer/mock_lazy_l10n.js b/shared/test/unit/mocks/dialer/mock_lazy_l10n.js
index 90069f6..3cf03e6 100644
--- a/shared/test/unit/mocks/dialer/mock_lazy_l10n.js
+++ b/shared/test/unit/mocks/dialer/mock_lazy_l10n.js
@@ -21,17 +21,9 @@ var MockMozL10n = {
   ready: function(callback) {
     callback();
   },
-  once: function(callback) {
-    callback();
-  },
   localize: function(node, l10nId, l10nArgs) {

-  },
-  setAttributes: function(node, l10nId, l10nArgs) {
-
-  },
-  translateFragment: function(element) {
-  },
+  }
 };

 var MockLazyL10n = {
diff --git a/shared/test/unit/mocks/mock_audio.js b/shared/test/unit/mocks/mock_audio.js
index 242dbf2..333d747 100644
--- a/shared/test/unit/mocks/mock_audio.js
+++ b/shared/test/unit/mocks/mock_audio.js
@@ -36,7 +36,7 @@ MockAudio.prototype.cloneNode = function() {

 function MockAudioContext(channel) {
   MockAudioContext.instances.push(this);
-  this.mozAudioChannelType = channel;
+  this.channel = channel;
   this.currentTime = 0;
   this.sampleRate = 0;
   this.destination = null;
diff --git a/shared/test/unit/mocks/mock_enumerate_all.js b/shared/test/unit/mocks/mock_enumerate_all.js
deleted file mode 100644
index 5b813c1..0000000
--- a/shared/test/unit/mocks/mock_enumerate_all.js
+++ /dev/null
@@ -1,15 +0,0 @@
-'use strict';
-
-var MockEnumerateAll = function(storages, dir, options) {
-  return {
-    result: {
-      name: MockEnumerateAll.certificateName
-    },
-    set onsuccess(callback) {
-      callback();
-    },
-    continue: function() {}
-  };
-};
-
-MockEnumerateAll.certificateName = 'filename';
diff --git a/shared/test/unit/mocks/mock_event_target.js b/shared/test/unit/mocks/mock_event_target.js
index d1758c0..2eb08fc 100644
--- a/shared/test/unit/mocks/mock_event_target.js
+++ b/shared/test/unit/mocks/mock_event_target.js
@@ -33,11 +33,6 @@
       }

       eventCallbacks[type] = eventCallbacks[type] || [];
-      // the same handler should not be added twice.
-      if (eventCallbacks[type].indexOf(handler) !== -1) {
-        return;
-      }
-
       eventCallbacks[type].push(handler);
     };

diff --git a/shared/test/unit/mocks/mock_fb_data_reader.js b/shared/test/unit/mocks/mock_fb_data_reader.js
index 0e1b17f..f58f349 100644
--- a/shared/test/unit/mocks/mock_fb_data_reader.js
+++ b/shared/test/unit/mocks/mock_fb_data_reader.js
@@ -41,10 +41,6 @@ MockFbContactsObj.prototype = {

   getByPhone: function(number) {
     return this._getRequest();
-  },
-
-  mTeardown: function() {
-    this.mResult = [];
   }
 };

diff --git a/shared/test/unit/mocks/mock_geolocation.js b/shared/test/unit/mocks/mock_geolocation.js
index 7acbbf8..b30f8e8 100644
--- a/shared/test/unit/mocks/mock_geolocation.js
+++ b/shared/test/unit/mocks/mock_geolocation.js
@@ -4,47 +4,50 @@

 var MockGeolocation = {
   mSetup: function() {
-    this.fakeCoords = {
-      latitude: 37.388590,
-      longitude: -122.061704,
-      accuracy: 5.0
-    };
-
-    this.fakePosition = {
-      timestamp: 1404756850457,
-      coords: this.fakeCoords
-    };
-
+    this.latitude = 37.388590;
+    this.longitude = -122.061704;
     this.activeWatches = [];

+    var self = this;
+
     this.realGetCurrentPosition = navigator.geolocation.getCurrentPosition;
-    navigator.geolocation.getCurrentPosition = (function(onsuccess, onerror) {
+    navigator.geolocation.getCurrentPosition = function(onsuccess, onerror) {
       if (onsuccess) {
-        onsuccess(this.fakePosition);
+        onsuccess({
+          coords: {
+            latitude: self.latitude,
+            longitude: self.longitude
+          }
+        });
       }
-    }).bind(this);
+    };

     this.realWatchPosition = navigator.geolocation.watchPosition;
-    navigator.geolocation.watchPosition = (function(onsuccess, onerror) {
+    navigator.geolocation.watchPosition = function(onsuccess, onerror) {
       var watch = setInterval(function() {
         if (onsuccess) {
-          onsuccess(this.fakePosition);
+          onsuccess({
+            coords: {
+              latitude: self.latitude,
+              longitude: self.longitude
+            }
+          });
         }
       });

-      this.activeWatches.push(watch);
+      self.activeWatches.push(watch);
       return watch;
-    }).bind(this);
+    };

     this.realClearWatch = navigator.geolocation.clearWatch;
-    navigator.geolocation.clearWatch = (function(watch) {
-      var idx = this.activeWatches.indexOf(watch);
+    navigator.geolocation.clearWatch = function(watch) {
+      var idx = self.activeWatches.indexOf(watch);

       if (idx >= 0) {
-        this.activeWatches.splice(idx, 1);
+        self.activeWatches.splice(idx, 1);
         clearInterval(watch);
       }
-    }).bind(this);
+    };
   },

   mTeardown: function() {
diff --git a/shared/test/unit/mocks/mock_icc_manager.js b/shared/test/unit/mocks/mock_icc_manager.js
deleted file mode 100644
index a2b7475..0000000
--- a/shared/test/unit/mocks/mock_icc_manager.js
+++ /dev/null
@@ -1,8 +0,0 @@
-/* exported MockIccManager */
-'use strict';
-
-var MockIccManager = {
-  iccIds: [],
-  getIccById: function() {},
-  addEventListener: function() {}
-};
diff --git a/shared/test/unit/mocks/mock_l10n.js b/shared/test/unit/mocks/mock_l10n.js
index e91dff5..85c7f53 100644
--- a/shared/test/unit/mocks/mock_l10n.js
+++ b/shared/test/unit/mocks/mock_l10n.js
@@ -12,19 +12,10 @@

     // XXX Remove in https://bugzil.la/1020137
     localize: function(element, id, args) {
-      if (id) {
-        element.setAttribute('data-l10n-id', id);
-      } else {
-        element.removeAttribute('data-l10n-id');
-        element.removeAttribute('data-l10n-args');
-        element.textContent = '';
-      }
+      element.setAttribute('data-l10n-id', id);
       if (args) {
         element.setAttribute('data-l10n-args', JSON.stringify(args));
-      } else {
-        element.removeAttribute('data-l10n-args');
       }
-      element.textContent = id + (args ? JSON.stringify(args) : '');
     },

     setAttributes: function(element, id, args) {
@@ -54,17 +45,7 @@
       direction: 'ltr'
     },

-    DateTimeFormat: function() {
-      // Support navigator.mozL10n.DateTimeFormat() without new the object.
-      if (!this.localeFormat) {
-        var localeFormat = function mockLocaleFormat(time, strFormat) {
-          return '' + time;
-        };
-        return {
-          localeFormat: localeFormat
-        };
-      }
-    }
+    DateTimeFormat: function() {}
   };

   // Defining methods on the prototype allows to spy on them in tests
diff --git a/shared/test/unit/mocks/mock_navigator_get_feature.js b/shared/test/unit/mocks/mock_navigator_get_feature.js
deleted file mode 100644
index afc7777..0000000
--- a/shared/test/unit/mocks/mock_navigator_get_feature.js
+++ /dev/null
@@ -1,9 +0,0 @@
-'use strict';
-/* global Promise */
-window.MockNavigatorGetFeature = function(key) {
-  return new Promise((resolve, reject) => {
-    resolve(window.MockNavigatorGetFeature._values[key]);
-  });
-};
-
-window.MockNavigatorGetFeature._values = {};
diff --git a/shared/test/unit/mocks/mock_navigator_input_method.js b/shared/test/unit/mocks/mock_navigator_input_method.js
index 34e69fd..3b9f213 100644
--- a/shared/test/unit/mocks/mock_navigator_input_method.js
+++ b/shared/test/unit/mocks/mock_navigator_input_method.js
@@ -158,10 +158,8 @@
   MockInputMethodManager.prototype.hide = function() {
   };

-  MockInputMethodManager.prototype.supportsSwitching = function() {
-  };
+  MockInputMethodManager.prototype.supportSwitching = false;

-  exports.MockInputMethodManager = MockInputMethodManager;
   exports.MockInputMethod = MockInputMethod;
   exports.MockInputContext = MockInputContext;
 }(window));
diff --git a/shared/test/unit/mocks/mock_navigator_moz_bluetooth.js b/shared/test/unit/mocks/mock_navigator_moz_bluetooth.js
index f2ca7ae..624b3a6 100644
--- a/shared/test/unit/mocks/mock_navigator_moz_bluetooth.js
+++ b/shared/test/unit/mocks/mock_navigator_moz_bluetooth.js
@@ -18,8 +18,6 @@
     onscostatuschanged: null
   };

-  var mEventListeners = [];
-
   var mAdapterRequest = {
     result: MockBTAdapter,
     onsuccess: null,
@@ -36,25 +34,7 @@
     }
   }

-  function mmb_addEventListener(type, callback) {
-    mEventListeners.push({
-      type: type,
-      callback: callback
-    });
-  }
-
-  function mmb_triggerEventListeners(type) {
-    mEventListeners.forEach(function(eventListener) {
-      if (eventListener.type === type) {
-        eventListener.callback();
-      }
-    });
-  }
-
-
   window.MockMozBluetooth = {
-    addEventListener: mmb_addEventListener,
-    triggerEventListeners: mmb_triggerEventListeners,
     getDefaultAdapter: mmb_getDefaultAdapter,
     triggerOnGetAdapterSuccess: mmb_triggerOnGetAdapterSuccess,
     ondisabled: function mmb_ondisabled() {}
diff --git a/shared/test/unit/mocks/mock_navigator_moz_wifi_manager.js b/shared/test/unit/mocks/mock_navigator_moz_wifi_manager.js
deleted file mode 100644
index 45b0237..0000000
--- a/shared/test/unit/mocks/mock_navigator_moz_wifi_manager.js
+++ /dev/null
@@ -1,97 +0,0 @@
-/* exported MockNavigatorMozWifiManager */
-'use strict';
-
-var MockNavigatorMozWifiManager = {
-  enabled: true,
-  _certificateList: [],
-  _cb: {
-    onerror: []
-  },
-  forget: function(network) {
-    return {
-      set onsuccess(callback) {
-        callback();
-      },
-      set onerror(callback) {
-        callback();
-      }
-    };
-  },
-  setNetworks: function(networks) {
-    this.networks = networks;
-  },
-  getKnownNetworks: function() {
-    var self = this;
-    return {
-      result: self.networks,
-      set onsuccess(callback) {
-        this.result = self.networks;
-        callback(this);
-      }
-    };
-  },
-  getNetworks: function() {
-    var self = this;
-    return {
-      result: self.networks,
-      set onsuccess(callback) {
-        this.result = self.networks;
-        callback(this);
-      }
-    };
-  },
-  connection: {
-    network: null
-  },
-  connectionInfoUpdate: null,
-  connectionInformation: {
-    ipAddress: '0.0.0.0',
-    linkSpeed: '10'
-  },
-  deleteCert: function(certName) {
-    return {
-      set onsuccess(callback) {
-        callback();
-      }
-    };
-  },
-  getImportedCerts: function() {
-    var self = this;
-    return {
-      result: {
-        ServerCert: self._certificateList
-      },
-      set onsuccess(callback) {
-        callback();
-      }
-    };
-  },
-  importCert: function() {
-    var self = this;
-    return {
-      set onsuccess(callback) {
-        callback();
-      },
-      set onerror(callback) {
-        self._cb.onerror.push(callback);
-      }
-    };
-  },
-  associate: function(network) {
-    return {
-      set onsuccess(callback) {
-        callback();
-      },
-      set onerror(callback) {
-        callback();
-      }
-    };
-  },
-  mSetup: function() {
-    this.enabled = true;
-    this._certificateList = [];
-    this._cb = {
-      onerror: []
-    };
-  }
-};
diff --git a/shared/test/unit/mocks/mock_navigator_wake_lock.js b/shared/test/unit/mocks/mock_navigator_wake_lock.js
index e3bd89a..249d33d 100644
--- a/shared/test/unit/mocks/mock_navigator_wake_lock.js
+++ b/shared/test/unit/mocks/mock_navigator_wake_lock.js
@@ -8,7 +8,6 @@
     lastWakeLock = {
       released: false,
       topic: lock,
-      mUnlockCount: 0,
       unlock: function() {
         if (throwAtNextUnlock) {
           throwAtNextUnlock = false;
@@ -16,7 +15,6 @@
         }

         this.released = true;
-        this.mUnlockCount++;
       }
     };
     return lastWakeLock;
diff --git a/shared/test/unit/mocks/mock_notification.js b/shared/test/unit/mocks/mock_notification.js
index 2c09a12..098b9e5 100644
--- a/shared/test/unit/mocks/mock_notification.js
+++ b/shared/test/unit/mocks/mock_notification.js
@@ -30,11 +30,6 @@ MockNotification.prototype.addEventListener =
   this.mEvents[evt] = callback;
 };

-MockNotification.prototype.removeEventListener =
-  function mockNotification_removeEventListener(evt, callback) {
-  delete this.mEvents[evt];
-};
-
 MockNotification.get = function mockNotification_get(options) {
   return {
     then: function() {}
diff --git a/shared/test/unit/mocks/mock_sim_settings_helper.js b/shared/test/unit/mocks/mock_sim_settings_helper.js
index 8635339..f05b41d 100644
--- a/shared/test/unit/mocks/mock_sim_settings_helper.js
+++ b/shared/test/unit/mocks/mock_sim_settings_helper.js
@@ -30,7 +30,5 @@ var MockSimSettingsHelper = {
   setServiceOnCard: function() { },
   set: function() { },
   on: function() { },
-  setToSettingsDB: function() { },
-  observe: function() { },
-  unobserve: function() { }
+  setToSettingsDB: function() { }
 };
diff --git a/shared/test/unit/mocks/mock_simslot.js b/shared/test/unit/mocks/mock_simslot.js
deleted file mode 100644
index 265c2fa..0000000
--- a/shared/test/unit/mocks/mock_simslot.js
+++ /dev/null
@@ -1,30 +0,0 @@
-/* exported MockSIMSlot */
-'use strict';
-
-var MockSIMSlot = function(conn, index) {
-  this.conn = conn;
-  this.index = index;
-  this.absent = false;
-  this.locked = false;
-  this.simCard = {
-    cardState: null
-  };
-  this.update = function() {};
-  this.isAbsent = function() { return this.absent; };
-  this.isLocked = function() { return this.locked; };
-  // Inject method
-  ['sendStkResponse', 'sendStkMenuSelection',
-    'sendStkTimerExpiration', 'sendStkEventDownload'].forEach(function(name) {
-      this[name] = function() {};
-    }, this);
-
-  // Inject dom request
-  ['getCardLock', 'unlockCardLock', 'setCardLock',
-    'getCardLockRetryCount', 'readContacts',
-    'updateContact', 'iccOpenChannel', 'iccExchangeAPDU',
-    'iccCloseChannel'].forEach(function(name) {
-      this[name] = function() {
-        return {};
-      };
-    }, this);
-};
diff --git a/shared/test/unit/mocks/mock_simslot_manager.js b/shared/test/unit/mocks/mock_simslot_manager.js
deleted file mode 100644
index 05864e7..0000000
--- a/shared/test/unit/mocks/mock_simslot_manager.js
+++ /dev/null
@@ -1,23 +0,0 @@
-/* exported MockSIMSlotManager */
-'use strict';
-var MockSIMSlotManager = {
-  ready: false,
-  mInstances: [],
-  getSlots: function mssm_getSlots() {
-    return this.mInstances;
-  },
-  get length() {
-    return this.mInstances.length;
-  },
-  isMultiSIM: function mssm_isMultiSIM() {
-    return (this.mInstances.length > 1);
-  },
-  isSIMCardAbsent: function mssm_isSIMCardAbsent(i) {
-    return this.mInstances[i].isAbsent();
-  },
-  noSIMCardOnDevice: function() {},
-  noSIMCardConnectedToNetwork: function() {},
-  mTeardown: function mssm_mTeardown() {
-    this.mInstances = [];
-  }
-};
diff --git a/shared/test/unit/mocks/mock_system.js b/shared/test/unit/mocks/mock_system.js
deleted file mode 100644
index 115dc6d..0000000
--- a/shared/test/unit/mocks/mock_system.js
+++ /dev/null
@@ -1,14 +0,0 @@
-/* exported MockSystem */
-'use strict';
-var MockSystem = {
-  mPublishEvents: {},
-  isBusyLoading: function() {
-    return false;
-  },
-  slowTransition: false,
-  publish: function(eventName, detail) {
-    var evt = new CustomEvent(eventName, { detail: detail });
-    window.dispatchEvent(evt);
-  },
-  locked: false
-};
diff --git a/shared/test/unit/mocks/mock_wifi_helper.js b/shared/test/unit/mocks/mock_wifi_helper.js
deleted file mode 100644
index 7a2627a..0000000
--- a/shared/test/unit/mocks/mock_wifi_helper.js
+++ /dev/null
@@ -1,46 +0,0 @@
-/* exported MockWifiHelper */
-/* global MockNavigatorMozWifiManager*/
-'use strict';
-
-require('/shared/test/unit/mocks/mock_navigator_moz_wifi_manager.js');
-
-var MockWifiHelper = {
-  _cb: {
-    onsuccess: [],
-    onerror: []
-  },
-  getWifiManager: function() {
-    return MockNavigatorMozWifiManager;
-  },
-  getSecurity: function(network) {
-    return network.security;
-  },
-  setSecurity: function(network, encryptions) {
-    network.security = encryptions;
-  },
-  newListItem: function(network, callback) {
-    var li = document.createElement('li');
-    li.onclick = function() {
-      callback(network);
-    };
-    return li;
-  },
-  isConnected: function() {},
-  isWpsAvailable: function() {},
-  getAvailableAndKnownNetworks: function() {
-    var self = this;
-    return {
-      result: [
-        { ssid: 'ssid1', security: ['WPA-PSK'], relSignalStrength: 1 },
-        { ssid: 'ssid2', security: ['WPA-EAP'], relSignalStrength: 2 },
-        { ssid: 'ssid3', security: ['WPA-EAP'], relSignalStrength: 3 }
-      ],
-      set onsuccess(callback) {
-        self._cb.onsuccess.push(callback);
-      },
-      set onerror(callback) {
-        self._cb.onerror.push(callback);
-      }
-    };
-  }
-};
diff --git a/tests/atoms/gaia_apps.js b/tests/atoms/gaia_apps.js
index 567c3a6..ba1e899 100644
--- a/tests/atoms/gaia_apps.js
+++ b/tests/atoms/gaia_apps.js
@@ -17,8 +17,9 @@ var GaiaApps = {
     }
   },

-  getRunningApps: function(includeSystemApps) {
-    let runningApps = GaiaApps.getApps(includeSystemApps);
+  getRunningApps: function() {
+    let manager = window.wrappedJSObject.AppWindowManager || window.wrappedJSObject.WindowManager;
+    let runningApps = ('getApps' in manager) ? manager.getApps() : manager.getRunningApps();
     // Return a simplified version of the runningApps object which can be
     // JSON-serialized.
     let apps = {};
@@ -34,14 +35,14 @@ var GaiaApps = {
     return apps;
   },

-  getApps: function(includeSystemApps) {
-    let manager = window.wrappedJSObject.AppWindowManager;
-    let apps = includeSystemApps ? manager.getApps() : window.wrappedJSObject.StackManager.snapshot();
+  getApps: function() {
+    let manager = window.wrappedJSObject.AppWindowManager || window.wrappedJSObject.WindowManager;
+    let apps = ('getApps' in manager) ? manager.getApps() : manager.getRunningApps();
     return apps;
   },

   getRunningAppOrigin: function(name) {
-    let apps = GaiaApps.getApps(true);
+    let apps = GaiaApps.getApps();

     for (let id in apps) {
       if (apps[id].name == name) {
@@ -54,7 +55,7 @@ var GaiaApps = {

   getAppByURL: function(url) {
     // return the app window with the specified URL
-    let apps = GaiaApps.getApps(true);
+    let apps = GaiaApps.getApps();
     for (let id in apps) {
       if (apps[id].url == url) {
         return apps[id];
@@ -173,10 +174,9 @@ var GaiaApps = {
   },

   // Returns the number of running apps.
-  // if includeSystemApps is true then system always-running apps (eg Homescreen) will be counted
-  numRunningApps: function(includeSystemApps) {
+  numRunningApps: function() {
     let count = 0;
-    let apps = GaiaApps.getApps(includeSystemApps);
+    let apps = GaiaApps.getApps();
     for (let id in apps) {
       count++;
     }
@@ -184,7 +184,7 @@ var GaiaApps = {
   },

   isRunning: function(origin) {
-    var apps = GaiaApps.getApps(true);
+    var apps = GaiaApps.getApps();
     for (var id in apps) {
       if (apps[id].origin === origin) {
         return true;
@@ -218,8 +218,7 @@ var GaiaApps = {
     }
   },

-  // Kills all running apps that may be killed by the user, defined as
-  // being accessible by the Cards View/Stack Manager
+  // Kills all running apps, except the homescreen.
   killAll: function() {
     let originsToClose = [];
     let that = this;
@@ -227,7 +226,9 @@ var GaiaApps = {
     let apps = GaiaApps.getApps();
     for (let id in apps) {
       let origin = apps[id].origin;
-      originsToClose.push(origin);
+      if (!/homescreen|verticalhome/.test(origin)) {
+        originsToClose.push(origin);
+      }
     }

     if (!originsToClose.length) {
diff --git a/tests/integration/devtools/manifest.ini b/tests/integration/devtools/manifest.ini
deleted file mode 100644
index 730390e..0000000
--- a/tests/integration/devtools/manifest.ini
+++ /dev/null
@@ -1 +0,0 @@
-[server_test.js]
diff --git a/tests/integration/devtools/server_test.js b/tests/integration/devtools/server_test.js
index b438191..93283fd 100644
--- a/tests/integration/devtools/server_test.js
+++ b/tests/integration/devtools/server_test.js
@@ -22,15 +22,15 @@ marionette('Dev Tools server', function() {

   test('is running and listening', function() {
     var debuggerServerInited = client.executeScript(function() {
-      Cu.import('resource:///modules/devtools/dbg-server.jsm');
+      Cu.import("resource:///modules/devtools/dbg-server.jsm");
       return DebuggerServer.initialized;
     });
     assert.ok(debuggerServerInited, 'Debugger server initialized');
-    var debuggerServerSockets = client.executeScript(function() {
-      Cu.import('resource:///modules/devtools/dbg-server.jsm');
-      return DebuggerServer.listeningSockets;
+    var debuggerServerListening = client.executeScript(function() {
+      Cu.import("resource:///modules/devtools/dbg-server.jsm");
+      return !!DebuggerServer._listener;
     });
-    assert.equal(debuggerServerSockets, 1, 'Debugger server listening');
+    assert.ok(debuggerServerListening, 'Debugger server listening');
   });

 });
diff --git a/tests/performance/startup_events_test.js b/tests/performance/startup_events_test.js
index f56fe51..92a7249 100644
--- a/tests/performance/startup_events_test.js
+++ b/tests/performance/startup_events_test.js
@@ -12,7 +12,6 @@ var whitelistedApps = [
   'camera',
   'calendar',
   'clock',
-  'costcontrol',
   'communications/contacts',
   'communications/dialer',
   'email',
@@ -28,15 +27,12 @@ var whitelistedUnifiedApps = [
   'camera',
   'calendar',
   'clock',
-  'costcontrol',
   'communications/dialer',
-  'communications/contacts',
   'email',
   'fm',
   'gallery',
   'marketplace.firefox.com',
   'settings',
-  'sms',
   'video'
 ];

diff --git a/tests/performance/startup_test.js b/tests/performance/startup_test.js
index d64126a..dfc4383 100644
--- a/tests/performance/startup_test.js
+++ b/tests/performance/startup_test.js
@@ -73,9 +73,6 @@ marionette('startup test > ' + mozTestInfo.appPath + ' >', function() {
       return element.time;
     });

-    // results is an Array of values, one per run.
-    assert.ok(results.length == mozTestInfo.runs, 'missing runs');
-
     PerformanceHelper.reportDuration(results);
     PerformanceHelper.reportMemory(memStats);

diff --git a/tests/python/gaia-ui-tests/MANIFEST.in b/tests/python/gaia-ui-tests/MANIFEST.in
index 95f8a1c..e95b4a1 100644
--- a/tests/python/gaia-ui-tests/MANIFEST.in
+++ b/tests/python/gaia-ui-tests/MANIFEST.in
@@ -2,4 +2,3 @@ recursive-include gaiatest/atoms *.js
 recursive-include gaiatest/resources *.*
 exclude MANIFEST.in
 include requirements.txt
-exclude gaiatest/tests
diff --git a/tests/python/gaia-ui-tests/README.md b/tests/python/gaia-ui-tests/README.md
index 534434d..01695a2 100644
--- a/tests/python/gaia-ui-tests/README.md
+++ b/tests/python/gaia-ui-tests/README.md
@@ -1,4 +1,342 @@
-gaiatest
-========
+Introduction
+============
+
+Gaiatest is a Python package based on
+[Marionette](https://developer.mozilla.org/en-US/docs/Marionette), which is
+designed specifically for writing tests against
+[Gaia](https://github.com/mozilla-b2g/gaia).
+
+Prerequisites
+=============
+
+You will need a
+[Marionette enabled Firefox build](https://developer.mozilla.org/en-US/docs/Marionette/Builds)
+that you can
+[successfully connect to](https://developer.mozilla.org/en-US/docs/Marionette/Connecting_to_B2G).
+
+Installation
+============
+
+If you only want to run the tests without developing gaia-ui-tests further:
+
+    pip install gaiatest
+
+or
+
+    easy_install gaiatest
+
+You can now skip down to the "Risks" section.  On the other hand, if you want to
+modify gaia-ui-tests, do this instead:
+
+    git clone https://github.com/mozilla-b2g/gaia.git
+
+The next command will install several python packages on your system such as
+marionette, gaiatest, and other Mozilla packages.  Before you run
+`python setup.py develop`, consider setting-up a virtual environment.  This is
+entirely optional.
+
+    virtualenv env_name
+    source env_name/bin/activate
+
+With the virtual environment activated, the python packages will be installed
+under the `env_name` folder instead of disturbing your main system.
+
+Finally, do:
+
+    cd gaia/tests/python/gaia-ui-tests
+    python setup.py develop
+
+Risks
+=====
+
+Please visit
+[this page](https://developer.mozilla.org/en-US/docs/Gaia_Test_Runner)
+to understand and acknowledge the risks involved when running these tests.
+You have to modify your testvars.json file (see the **Test Variables** section
+below,) showing your acknowledgement of the risks, to run the tests.
+
+Command line interface
+======================
+
+A helpful command line tool is provided for interacting with Gaia. For full
+usage details run `gcli --help` and for help on a specific command use `gcli
+<command> --help`.
+
+For example, to unlock the device, set brightness to 100%, connect to an
+unsecured network, and launch the Settings app:
+
+```bash
+$ gcli unlock
+$ gcli setsetting screen.brightness 1
+$ gcli connectwifi MozillaGuest
+$ gcli launchapp Settings
+```
+
+Running Tests
+=============
+
+To run tests using gaia test, your command-line will vary a little bit
+depending on what device you're using.  The general format is:
+
+    gaiatest [options] /path/to/test_foo.py
+
+Options:
+
+    --emulator arm --homedir /path/to/emulator:  use these options to
+        let Marionette launch an emulator for you in which to run a test
+    --address <host>:<port>  use this option to run a test on an emulator
+        which you've manually launched yourself, a real device, or a b2g
+        desktop build.  If you've used port forwarding as described below,
+        you'd specify --address localhost:2828
+    --testvars= (see the Test Variables section below)
+    --restart restart target instance between tests. This option will remove
+        the /data/local/indexedDB and /data/b2g/mozilla folders and restore the
+        device back to a common state
+    --timeout < time in milliseconds > to set all of the gaiatest and Marionette
+        timeout values to the specified value. Without this set, gaiatest will
+        try to detect the b2g instance and set safe timeouts for search, page
+        and script timeouts.
+
+Testing on a Device
+===================
+
+You must run a build of B2G on the device that has Marionette enabled.
+The easiest way to do that is to grab a nightly `eng` build, like
+[this one for Unagi](https://pvtbuilds.mozilla.org/pub/mozilla.org/b2g/nightly/mozilla-b2g18-unagi-eng/latest/)
+(currently it requires a Mozilla LDAP login). Flash that to your device.
+
+You should not enable Remote Debugging manually on the device because
+there will be competing debuggers. See
+[bug 764913](https://bugzilla.mozilla.org/show_bug.cgi?id=764913).
+
+If you are running the tests on a device connected via ADB (Android Debug
+Bridge), you must additionally set up port forwarding from the device to your
+local machine. You can do this by running the command:
+
+    adb forward tcp:2828 tcp:2828
+
+ADB is available in emulator packages under out/host/linux\_x86/bin.
+Alternatively, it may be downloaded as part of the
+[Android SDK](http://developer.android.com/sdk/index.html).
+
+Testing on Desktop build
+========================
+
+You can download the latest build of the desktop client from
+[this location](http://ftp.mozilla.org/pub/mozilla.org/b2g/nightly/latest-mozilla-central),
+but make sure you download the appropriate file for your operating system.
+
+* **Linux (32bit)**: b2g-[VERSION].multi.linux-i686.tar.bz2
+* **Linux (64bit)**: b2g-[VERSION].multi.linux-x86\_64.tar.bz2
+* **Mac**: b2g-[VERSION].multi.mac64.dmg
+* **Windows**: b2g-[VERSION].multi.win32.zip
+
+Once downloaded, you will need to extract the contents to a local folder.
+$B2G\_HOME refers to the location of the local folder for the remainder of the
+documentation.
+
+If a profile is specified when running the tests (recommended), a clone of the
+profile will be used. This helps to ensure that all tests run in a clean state.
+However, if you also intend to launch and interact with the desktop build
+manually, we recommend making a copy of the default profile and using the copy
+for your tests.  The location of the default profile is $B2G\_HOME/gaia/profile.
+
+The test framework only supports running the tests and b2g instances locally,
+although in theory it can be used against a running desktopb2g accessible over
+the network.
+
+To run the tests, use the following command:
+
+    gaiatest --restart --type=b2g --app=b2gdesktop \
+        --binary=$B2G_HOME/b2g-bin \
+        --profile=$B2G_HOME/gaia/profile \
+        --testvars=path/to/filename.json \
+        gaia/tests/python/gaia-ui-tests/gaiatest/tests/manifest.ini \
+
+You should then start to see the tests running.  The next two sections provide
+details on the test types used in the `--type` option and the test variables for
+the `--testvars` option respectively.
+
+Test Types
+==========
+Tests can be filtered by type, and the types are defined in the manifest files.
+Tests can belong to multiple types, some types imply others, and some are
+mutually exclusive - for example a test cannot be both 'online' and 'offline'
+but a test that is 'lan' is by definition 'online'. Be warned that despite these
+rules, there is no error checking on types, so you must take care when assigning
+them. Default types are set in the [DEFAULT] section of a manifest file, and are
+inherited by manifest files referenced by an include.
+
+Here is a list of the types used, and when to use them:
+
+* antenna - these tests require an antenna (headphones) to be connected.
+* b2g - this means the test is a B2G (Firefox OS) test. All tests must include
+  this type.
+* bluetooth - requires bluetooth to be available.
+* camera - these tests require use of a camera.
+* carrier - an active SIM card with carrier connection is required.
+* flash - these tests require use of a flash.
+* lan - a local area connection (not cell data) is required by these tests (see
+  note below).
+* offline - specifically requires no online connection.
+* online - some sort of online connection (lan or carrier) is required.
+* qemu - these tests require the Firefox OS emulator to run.
+* sdcard - a storage device must be present.
+* wifi - this means a WiFi connection is required.
+
+You may be thinking that there is only WiFi or cell data, and why the need for
+the 'lan' test type. Well, these tests aren't only run on mobile devices... We
+also run then on single-board computers known as
+[pandaboards](https://en.wikipedia.org/wiki/Panda_Board), which have an ethernet
+port, and on desktop builds, which share the host computer's connection. It is
+for this reason that we need 'lan' to indicate a connection that is not cell
+data. For an example of where online/lan/carrier are used take a look at the
+browser tests.
+
+Test Variables
+==============
+We use the --testvars option to pass in local variables, particularly those that
+cannot be checked into the repository. For example in gaia-ui-tests these
+variables can be your private login credentials, phone number or details of your
+WiFi connection.
+
+To use it, copy
+`gaia/tests/python/gaia-ui-tests/gaiatest/testvars_template.json` to a different
+filename but add it into .gitignore so you don't check it into your repository.
+
+When running your tests add the argument:
+    --testvars=(filename).json
+
+Variables:
+
+`"carrier": {} (dict)` The carrier information of the test phone. This contains
+the phone number, country and network of the SIM card.
+
+```json
+"carrier":{
+  "phone_number": "",
+  "country": "",
+  "network": ""
+}
+```
+`"imei": "" (string)` The 12 digit IMEI code of the test phone.
+`"remote_phone_number": "" (string)` A phone number that your device can call
+during the tests (try not to be a nuisance!). Prefix the number with '+' and
+your international dialing code.
+`"wifi":{}{ (dict)` This are the settings of your WiFi connection. Currently
+this supports WPA/WEP/etc. You can add WiFi networks by doing the following
+(remember to replace "KeyManagement" and "wep" with the value your network
+supports) :
+
+```json
+"wifi": {
+  "ssid": "MyNetwork",
+  "keyManagement": "WEP",
+  "wep": "MyPassword"
+}
+```
+
+WPA-PSK:
+```json
+"wifi": {
+  "ssid": "MyNetwork",
+  "keyManagement": "WPA-PSK",
+  "psk": "MyPassword"
+}
+```
+__Note__: Due to [Bug 775499](http://bugzil.la/775499), WiFi connections via
+WPA-EAP are not capable at this time.
+
+`"email": {} (dict)` The email login information used by the email tests. It can
+contain different types of email accounts:
+
+Gmail:
+```json
+"gmail": {
+  "name": "",
+  "email": "",
+  "password": ""
+    }
+```
+
+Or different email protocols:
+```json
+"IMAP": {
+  "name": "",
+  "email": "",
+  "password": "",
+  "imap_hostname": "",
+  "imap_name": "",
+  "imap_port": "",
+  "smtp_hostname": "",
+  "smtp_name": "",
+  "smtp_port": ""
+}
+```
+Or:
+```json
+"ActiveSync":{
+  "name": "",
+  "email": "",
+  "password": "",
+  "active_sync_hostname": "",
+  "active_sync_username": ""
+}
+```
+`"settings": {} (dict)` Custom settings to override the Gaia default settings.
+These will be set before each test run but are not mandatory.
+```json
+"settings":{
+  "<setting>":<value>
+}"
+```
+__Note__: When running with no SIM card or offline the timezone may not be automatically updated to match the local timezone. In that case you may need to force the timezone to match the desired timezone using settings in testvars.json which will set it during the test setUp:
+
+```json
+"settings":{
+  "time.timezone": <value>,
+  "time.timezone.user-selected": <value>
+}"
+```
+
+
+`"prefs": {} (dict)` Custom preferences  to override the Gecko default preferences.
+These will be set before each test run but are not mandatory.
+```json
+"prefs":{
+  "<name>":<value>
+}"
+```
+
+Don't forget to acknowledged risks in your testvars file after you have visited
+[the Risks page](https://developer.mozilla.org/en-US/docs/Gaia_Test_Runner) to
+understand and acknowledge the risks involved when running these tests, or the
+tests will not be run.
+
+Test data Prerequisites
+=======================
+
+Occasionally a test will need data on the hardware that cannot be set during the
+test setUp.  The following tests need data set up before they can be run
+successfully:
+
+`test_ftu` Requires a single record/contact saved onto the SIM card to test the
+SIM contact import
+
+
+Writing Tests
+=============
+
+Test writing for Marionette Python tests is described at
+https://developer.mozilla.org/en-US/docs/Marionette/Marionette_Python_Tests.
+
+Additionally, gaiatest exposes some API's for managing Gaia's lockscreen and
+application manager.  See
+https://github.com/mozilla-b2g/gaia/blob/master/tests/python/gaiatest/gaia_test.py.
+
+At the moment we don't have a specific style guide. Please follow the
+prevailing style of the existing tests. Use them as a template for writing
+your tests.
+We follow [PEP8](http://www.python.org/dev/peps/pep-0008/) for formatting,
+although we're pretty lenient on the 80-character line length.

-[Documentation](http://gaiatest.readthedocs.org/).
diff --git a/tests/python/gaia-ui-tests/docs/.gitignore b/tests/python/gaia-ui-tests/docs/.gitignore
deleted file mode 100644
index 9c5f578..0000000
--- a/tests/python/gaia-ui-tests/docs/.gitignore
+++ /dev/null
@@ -1 +0,0 @@
-_build
\ No newline at end of file
diff --git a/tests/python/gaia-ui-tests/docs/Makefile b/tests/python/gaia-ui-tests/docs/Makefile
deleted file mode 100644
index a9b4a25..0000000
--- a/tests/python/gaia-ui-tests/docs/Makefile
+++ /dev/null
@@ -1,177 +0,0 @@
-# Makefile for Sphinx documentation
-#
-
-# You can set these variables from the command line.
-SPHINXOPTS    =
-SPHINXBUILD   = sphinx-build
-PAPER         =
-BUILDDIR      = _build
-
-# User-friendly check for sphinx-build
-ifeq ($(shell which $(SPHINXBUILD) >/dev/null 2>&1; echo $$?), 1)
-$(error The '$(SPHINXBUILD)' command was not found. Make sure you have Sphinx installed, then set the SPHINXBUILD environment variable to point to the full path of the '$(SPHINXBUILD)' executable. Alternatively you can add the directory with the executable to your PATH. If you don't have Sphinx installed, grab it from http://sphinx-doc.org/)
-endif
-
-# Internal variables.
-PAPEROPT_a4     = -D latex_paper_size=a4
-PAPEROPT_letter = -D latex_paper_size=letter
-ALLSPHINXOPTS   = -d $(BUILDDIR)/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .
-# the i18n builder cannot share the environment and doctrees with the others
-I18NSPHINXOPTS  = $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .
-
-.PHONY: help clean html dirhtml singlehtml pickle json htmlhelp qthelp devhelp epub latex latexpdf text man changes linkcheck doctest gettext
-
-help:
-	@echo "Please use \`make <target>' where <target> is one of"
-	@echo "  html       to make standalone HTML files"
-	@echo "  dirhtml    to make HTML files named index.html in directories"
-	@echo "  singlehtml to make a single large HTML file"
-	@echo "  pickle     to make pickle files"
-	@echo "  json       to make JSON files"
-	@echo "  htmlhelp   to make HTML files and a HTML help project"
-	@echo "  qthelp     to make HTML files and a qthelp project"
-	@echo "  devhelp    to make HTML files and a Devhelp project"
-	@echo "  epub       to make an epub"
-	@echo "  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter"
-	@echo "  latexpdf   to make LaTeX files and run them through pdflatex"
-	@echo "  latexpdfja to make LaTeX files and run them through platex/dvipdfmx"
-	@echo "  text       to make text files"
-	@echo "  man        to make manual pages"
-	@echo "  texinfo    to make Texinfo files"
-	@echo "  info       to make Texinfo files and run them through makeinfo"
-	@echo "  gettext    to make PO message catalogs"
-	@echo "  changes    to make an overview of all changed/added/deprecated items"
-	@echo "  xml        to make Docutils-native XML files"
-	@echo "  pseudoxml  to make pseudoxml-XML files for display purposes"
-	@echo "  linkcheck  to check all external links for integrity"
-	@echo "  doctest    to run all doctests embedded in the documentation (if enabled)"
-
-clean:
-	rm -rf $(BUILDDIR)/*
-
-html:
-	$(SPHINXBUILD) -b html $(ALLSPHINXOPTS) $(BUILDDIR)/html
-	@echo
-	@echo "Build finished. The HTML pages are in $(BUILDDIR)/html."
-
-dirhtml:
-	$(SPHINXBUILD) -b dirhtml $(ALLSPHINXOPTS) $(BUILDDIR)/dirhtml
-	@echo
-	@echo "Build finished. The HTML pages are in $(BUILDDIR)/dirhtml."
-
-singlehtml:
-	$(SPHINXBUILD) -b singlehtml $(ALLSPHINXOPTS) $(BUILDDIR)/singlehtml
-	@echo
-	@echo "Build finished. The HTML page is in $(BUILDDIR)/singlehtml."
-
-pickle:
-	$(SPHINXBUILD) -b pickle $(ALLSPHINXOPTS) $(BUILDDIR)/pickle
-	@echo
-	@echo "Build finished; now you can process the pickle files."
-
-json:
-	$(SPHINXBUILD) -b json $(ALLSPHINXOPTS) $(BUILDDIR)/json
-	@echo
-	@echo "Build finished; now you can process the JSON files."
-
-htmlhelp:
-	$(SPHINXBUILD) -b htmlhelp $(ALLSPHINXOPTS) $(BUILDDIR)/htmlhelp
-	@echo
-	@echo "Build finished; now you can run HTML Help Workshop with the" \
-	      ".hhp project file in $(BUILDDIR)/htmlhelp."
-
-qthelp:
-	$(SPHINXBUILD) -b qthelp $(ALLSPHINXOPTS) $(BUILDDIR)/qthelp
-	@echo
-	@echo "Build finished; now you can run "qcollectiongenerator" with the" \
-	      ".qhcp project file in $(BUILDDIR)/qthelp, like this:"
-	@echo "# qcollectiongenerator $(BUILDDIR)/qthelp/gaiatest.qhcp"
-	@echo "To view the help file:"
-	@echo "# assistant -collectionFile $(BUILDDIR)/qthelp/gaiatest.qhc"
-
-devhelp:
-	$(SPHINXBUILD) -b devhelp $(ALLSPHINXOPTS) $(BUILDDIR)/devhelp
-	@echo
-	@echo "Build finished."
-	@echo "To view the help file:"
-	@echo "# mkdir -p $$HOME/.local/share/devhelp/gaiatest"
-	@echo "# ln -s $(BUILDDIR)/devhelp $$HOME/.local/share/devhelp/gaiatest"
-	@echo "# devhelp"
-
-epub:
-	$(SPHINXBUILD) -b epub $(ALLSPHINXOPTS) $(BUILDDIR)/epub
-	@echo
-	@echo "Build finished. The epub file is in $(BUILDDIR)/epub."
-
-latex:
-	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex
-	@echo
-	@echo "Build finished; the LaTeX files are in $(BUILDDIR)/latex."
-	@echo "Run \`make' in that directory to run these through (pdf)latex" \
-	      "(use \`make latexpdf' here to do that automatically)."
-
-latexpdf:
-	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex
-	@echo "Running LaTeX files through pdflatex..."
-	$(MAKE) -C $(BUILDDIR)/latex all-pdf
-	@echo "pdflatex finished; the PDF files are in $(BUILDDIR)/latex."
-
-latexpdfja:
-	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex
-	@echo "Running LaTeX files through platex and dvipdfmx..."
-	$(MAKE) -C $(BUILDDIR)/latex all-pdf-ja
-	@echo "pdflatex finished; the PDF files are in $(BUILDDIR)/latex."
-
-text:
-	$(SPHINXBUILD) -b text $(ALLSPHINXOPTS) $(BUILDDIR)/text
-	@echo
-	@echo "Build finished. The text files are in $(BUILDDIR)/text."
-
-man:
-	$(SPHINXBUILD) -b man $(ALLSPHINXOPTS) $(BUILDDIR)/man
-	@echo
-	@echo "Build finished. The manual pages are in $(BUILDDIR)/man."
-
-texinfo:
-	$(SPHINXBUILD) -b texinfo $(ALLSPHINXOPTS) $(BUILDDIR)/texinfo
-	@echo
-	@echo "Build finished. The Texinfo files are in $(BUILDDIR)/texinfo."
-	@echo "Run \`make' in that directory to run these through makeinfo" \
-	      "(use \`make info' here to do that automatically)."
-
-info:
-	$(SPHINXBUILD) -b texinfo $(ALLSPHINXOPTS) $(BUILDDIR)/texinfo
-	@echo "Running Texinfo files through makeinfo..."
-	make -C $(BUILDDIR)/texinfo info
-	@echo "makeinfo finished; the Info files are in $(BUILDDIR)/texinfo."
-
-gettext:
-	$(SPHINXBUILD) -b gettext $(I18NSPHINXOPTS) $(BUILDDIR)/locale
-	@echo
-	@echo "Build finished. The message catalogs are in $(BUILDDIR)/locale."
-
-changes:
-	$(SPHINXBUILD) -b changes $(ALLSPHINXOPTS) $(BUILDDIR)/changes
-	@echo
-	@echo "The overview file is in $(BUILDDIR)/changes."
-
-linkcheck:
-	$(SPHINXBUILD) -b linkcheck $(ALLSPHINXOPTS) $(BUILDDIR)/linkcheck
-	@echo
-	@echo "Link check complete; look for any errors in the above output " \
-	      "or in $(BUILDDIR)/linkcheck/output.txt."
-
-doctest:
-	$(SPHINXBUILD) -b doctest $(ALLSPHINXOPTS) $(BUILDDIR)/doctest
-	@echo "Testing of doctests in the sources finished, look at the " \
-	      "results in $(BUILDDIR)/doctest/output.txt."
-
-xml:
-	$(SPHINXBUILD) -b xml $(ALLSPHINXOPTS) $(BUILDDIR)/xml
-	@echo
-	@echo "Build finished. The XML files are in $(BUILDDIR)/xml."
-
-pseudoxml:
-	$(SPHINXBUILD) -b pseudoxml $(ALLSPHINXOPTS) $(BUILDDIR)/pseudoxml
-	@echo
-	@echo "Build finished. The pseudo-XML files are in $(BUILDDIR)/pseudoxml."
diff --git a/tests/python/gaia-ui-tests/docs/api/appmanager.rst b/tests/python/gaia-ui-tests/docs/api/appmanager.rst
deleted file mode 100644
index 57e3168..0000000
--- a/tests/python/gaia-ui-tests/docs/api/appmanager.rst
+++ /dev/null
@@ -1,6 +0,0 @@
-App manager
-===========
-
-.. autoclass:: gaiatest.gaia_test.GaiaApps
-   :members:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/api/datamanager.rst b/tests/python/gaia-ui-tests/docs/api/datamanager.rst
deleted file mode 100644
index b408ab2..0000000
--- a/tests/python/gaia-ui-tests/docs/api/datamanager.rst
+++ /dev/null
@@ -1,6 +0,0 @@
-Data manager
-============
-
-.. autoclass:: gaiatest.gaia_test.GaiaData
-   :members:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/api/devicemanager.rst b/tests/python/gaia-ui-tests/docs/api/devicemanager.rst
deleted file mode 100644
index 91cd6f3..0000000
--- a/tests/python/gaia-ui-tests/docs/api/devicemanager.rst
+++ /dev/null
@@ -1,6 +0,0 @@
-Device manager
-==============
-
-.. autoclass:: gaiatest.gaia_test.GaiaDevice
-   :members:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/api/filemanager.rst b/tests/python/gaia-ui-tests/docs/api/filemanager.rst
deleted file mode 100644
index afa7ba2..0000000
--- a/tests/python/gaia-ui-tests/docs/api/filemanager.rst
+++ /dev/null
@@ -1,5 +0,0 @@
-File manager
-============
-
-.. automodule:: gaiatest.file_manager
-   :members:
diff --git a/tests/python/gaia-ui-tests/docs/api/index.rst b/tests/python/gaia-ui-tests/docs/api/index.rst
deleted file mode 100644
index 5dbc416..0000000
--- a/tests/python/gaia-ui-tests/docs/api/index.rst
+++ /dev/null
@@ -1,8 +0,0 @@
-API usage
-=========
-
-.. toctree::
-   :glob:
-   :maxdepth: 2
-
-   *
diff --git a/tests/python/gaia-ui-tests/docs/api/testcases.rst b/tests/python/gaia-ui-tests/docs/api/testcases.rst
deleted file mode 100644
index c2ae04d..0000000
--- a/tests/python/gaia-ui-tests/docs/api/testcases.rst
+++ /dev/null
@@ -1,10 +0,0 @@
-Test cases
-==========
-
-.. autoclass:: gaiatest.gaia_test.GaiaTestCase
-   :members:
-   :undoc-members:
-
-.. autoclass:: gaiatest.gaia_test.GaiaEnduranceTestCase
-   :members:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/base.rst b/tests/python/gaia-ui-tests/docs/apps/base.rst
deleted file mode 100644
index 7da44db..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/base.rst
+++ /dev/null
@@ -1,6 +0,0 @@
-Base
-====
-
-.. automodule:: gaiatest.apps.base
-   :members:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/browser.rst b/tests/python/gaia-ui-tests/docs/apps/browser.rst
deleted file mode 100644
index 289a44c..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/browser.rst
+++ /dev/null
@@ -1,15 +0,0 @@
-Browser
-=======
-
-.. automodule:: gaiatest.apps.browser.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-Regions
--------
-
-.. automodule:: gaiatest.apps.browser.regions.html5_player
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/calendar.rst b/tests/python/gaia-ui-tests/docs/apps/calendar.rst
deleted file mode 100644
index 92ebcf1..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/calendar.rst
+++ /dev/null
@@ -1,15 +0,0 @@
-Calendar
-========
-
-.. automodule:: gaiatest.apps.calendar.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-Regions
--------
-
-.. automodule:: gaiatest.apps.calendar.regions.event
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/clock.rst b/tests/python/gaia-ui-tests/docs/apps/clock.rst
deleted file mode 100644
index c8b8d95..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/clock.rst
+++ /dev/null
@@ -1,15 +0,0 @@
-Clock
-=====
-
-.. automodule:: gaiatest.apps.clock.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-Regions
--------
-
-.. automodule:: gaiatest.apps.clock.regions.alarm
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/contacts.rst b/tests/python/gaia-ui-tests/docs/apps/contacts.rst
deleted file mode 100644
index 7a99917..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/contacts.rst
+++ /dev/null
@@ -1,35 +0,0 @@
-Contacts
-========
-
-.. automodule:: gaiatest.apps.contacts.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-Regions
--------
-
-.. automodule:: gaiatest.apps.contacts.regions.contact_details
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.contacts.regions.contact_form
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.contacts.regions.contact_import_picker
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.contacts.regions.gmail
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.contacts.regions.settings_form
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/costcontrol.rst b/tests/python/gaia-ui-tests/docs/apps/costcontrol.rst
deleted file mode 100644
index 57d9c98..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/costcontrol.rst
+++ /dev/null
@@ -1,30 +0,0 @@
-Cost control
-============
-
-.. automodule:: gaiatest.apps.cost_control.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-Regions
--------
-
-.. automodule:: gaiatest.apps.cost_control.regions.ftu_step1
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.cost_control.regions.ftu_step2
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.cost_control.regions.ftu_step3
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.cost_control.regions.settings
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/email.rst b/tests/python/gaia-ui-tests/docs/apps/email.rst
deleted file mode 100644
index e95e17f..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/email.rst
+++ /dev/null
@@ -1,30 +0,0 @@
-Email
-=====
-
-.. automodule:: gaiatest.apps.email.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-Regions
--------
-
-.. automodule:: gaiatest.apps.email.regions.new_email
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.email.regions.read_email
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.email.regions.settings
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.email.regions.setup
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/emergencycall.rst b/tests/python/gaia-ui-tests/docs/apps/emergencycall.rst
deleted file mode 100644
index ea9ba66..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/emergencycall.rst
+++ /dev/null
@@ -1,7 +0,0 @@
-Emergency call
-==============
-
-.. automodule:: gaiatest.apps.emergency_call.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/fmradio.rst b/tests/python/gaia-ui-tests/docs/apps/fmradio.rst
deleted file mode 100644
index 45bd50c..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/fmradio.rst
+++ /dev/null
@@ -1,7 +0,0 @@
-FM radio
-========
-
-.. automodule:: gaiatest.apps.fmradio.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/ftu.rst b/tests/python/gaia-ui-tests/docs/apps/ftu.rst
deleted file mode 100644
index 1333c06..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/ftu.rst
+++ /dev/null
@@ -1,7 +0,0 @@
-First time use
-==============
-
-.. automodule:: gaiatest.apps.ftu.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/gallery.rst b/tests/python/gaia-ui-tests/docs/apps/gallery.rst
deleted file mode 100644
index b970629..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/gallery.rst
+++ /dev/null
@@ -1,25 +0,0 @@
-Gallery
-=======
-
-.. automodule:: gaiatest.apps.gallery.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-Regions
--------
-
-.. automodule:: gaiatest.apps.gallery.regions.crop_view
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.gallery.regions.edit_photo
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.gallery.regions.fullscreen_image
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/homescreen.rst b/tests/python/gaia-ui-tests/docs/apps/homescreen.rst
deleted file mode 100644
index 6d2a98d..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/homescreen.rst
+++ /dev/null
@@ -1,50 +0,0 @@
-Homescreen
-==========
-
-.. automodule:: gaiatest.apps.homescreen.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-Regions
--------
-
-.. automodule:: gaiatest.apps.homescreen.regions.bookmark_menu
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.homescreen.regions.collections
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.homescreen.regions.collections_activity
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.homescreen.regions.confirm_dialog
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.homescreen.regions.confirm_install
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.homescreen.regions.context_menu
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.homescreen.regions.permission_dialog
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.homescreen.regions.search_panel
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/index.rst b/tests/python/gaia-ui-tests/docs/apps/index.rst
deleted file mode 100644
index ee00e36..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/index.rst
+++ /dev/null
@@ -1,9 +0,0 @@
-Apps
-====
-
-.. toctree::
-   :glob:
-   :maxdepth: 1
-
-   base
-   *
diff --git a/tests/python/gaia-ui-tests/docs/apps/keyboard.rst b/tests/python/gaia-ui-tests/docs/apps/keyboard.rst
deleted file mode 100644
index 9eba167..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/keyboard.rst
+++ /dev/null
@@ -1,7 +0,0 @@
-Keyboard
-========
-
-.. automodule:: gaiatest.apps.keyboard.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/lockscreen.rst b/tests/python/gaia-ui-tests/docs/apps/lockscreen.rst
deleted file mode 100644
index 150b618..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/lockscreen.rst
+++ /dev/null
@@ -1,15 +0,0 @@
-Lockscreen
-==========
-
-.. automodule:: gaiatest.apps.lockscreen.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-Regions
--------
-
-.. automodule:: gaiatest.apps.lockscreen.regions.passcode_pad
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/messages.rst b/tests/python/gaia-ui-tests/docs/apps/messages.rst
deleted file mode 100644
index e3b99cc..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/messages.rst
+++ /dev/null
@@ -1,30 +0,0 @@
-Messages
-========
-
-.. automodule:: gaiatest.apps.messages.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-Regions
--------
-
-.. automodule:: gaiatest.apps.messages.regions.activities
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.messages.regions.message_thread
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.messages.regions.messaging_settings
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.messages.regions.new_message
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/music.rst b/tests/python/gaia-ui-tests/docs/apps/music.rst
deleted file mode 100644
index c05c6b0..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/music.rst
+++ /dev/null
@@ -1,25 +0,0 @@
-Music
-=====
-
-.. automodule:: gaiatest.apps.music.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-Regions
--------
-
-.. automodule:: gaiatest.apps.music.regions.list_view
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.music.regions.player_view
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.music.regions.sublist_view
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/persona.rst b/tests/python/gaia-ui-tests/docs/apps/persona.rst
deleted file mode 100644
index c0606c2..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/persona.rst
+++ /dev/null
@@ -1,7 +0,0 @@
-Persona
-=======
-
-.. automodule:: gaiatest.apps.persona.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/phone.rst b/tests/python/gaia-ui-tests/docs/apps/phone.rst
deleted file mode 100644
index 3255bfe..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/phone.rst
+++ /dev/null
@@ -1,30 +0,0 @@
-Phone
-=====
-
-.. automodule:: gaiatest.apps.phone.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-Regions
--------
-
-.. automodule:: gaiatest.apps.phone.regions.attention_screen
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.phone.regions.call_log
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.phone.regions.call_screen
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.phone.regions.keypad
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/settings.rst b/tests/python/gaia-ui-tests/docs/apps/settings.rst
deleted file mode 100644
index 739e3cc..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/settings.rst
+++ /dev/null
@@ -1,80 +0,0 @@
-Settings
-========
-
-.. automodule:: gaiatest.apps.settings.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-Regions
--------
-
-.. automodule:: gaiatest.apps.settings.regions.accessibility
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.settings.regions.battery
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.settings.regions.bluetooth
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.settings.regions.cell_data
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.settings.regions.cell_data_prompt
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.settings.regions.device_info
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.settings.regions.display
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.settings.regions.do_not_track
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.settings.regions.keyboard
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.settings.regions.language
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.settings.regions.media_storage
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.settings.regions.screen_lock
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.settings.regions.sim_manager
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.settings.regions.wifi
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/system.rst b/tests/python/gaia-ui-tests/docs/apps/system.rst
deleted file mode 100644
index 8699b8b..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/system.rst
+++ /dev/null
@@ -1,40 +0,0 @@
-System
-======
-
-.. automodule:: gaiatest.apps.system.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-Regions
--------
-
-.. automodule:: gaiatest.apps.system.regions.activities
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.system.regions.cards_view
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.system.regions.iac_publisher
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.system.regions.sleep_view
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.system.regions.status_bar
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.system.regions.utility_tray
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/testapp.rst b/tests/python/gaia-ui-tests/docs/apps/testapp.rst
deleted file mode 100644
index b49fec2..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/testapp.rst
+++ /dev/null
@@ -1,7 +0,0 @@
-Test
-====
-
-.. automodule:: gaiatest.apps.testapp.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/uitests.rst b/tests/python/gaia-ui-tests/docs/apps/uitests.rst
deleted file mode 100644
index 51631db..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/uitests.rst
+++ /dev/null
@@ -1,20 +0,0 @@
-UI tests
-========
-
-.. automodule:: gaiatest.apps.ui_tests.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-Regions
--------
-
-.. automodule:: gaiatest.apps.ui_tests.regions.keyboard
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.ui_tests.regions.persona
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/uitestsprivileged.rst b/tests/python/gaia-ui-tests/docs/apps/uitestsprivileged.rst
deleted file mode 100644
index 53e1d99..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/uitestsprivileged.rst
+++ /dev/null
@@ -1,30 +0,0 @@
-UI tests (privileged)
-=====================
-
-.. automodule:: gaiatest.apps.ui_tests_privileged.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-Regions
--------
-
-.. automodule:: gaiatest.apps.ui_tests_privileged.regions.contacts
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.ui_tests_privileged.regions.device_storage
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.ui_tests_privileged.regions.geolocation
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-.. automodule:: gaiatest.apps.ui_tests_privileged.regions.user_media
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/videoplayer.rst b/tests/python/gaia-ui-tests/docs/apps/videoplayer.rst
deleted file mode 100644
index eef33f6..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/videoplayer.rst
+++ /dev/null
@@ -1,15 +0,0 @@
-Video
-=====
-
-.. automodule:: gaiatest.apps.videoplayer.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
-
-Regions
--------
-
-.. automodule:: gaiatest.apps.videoplayer.regions.fullscreen_video
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/apps/wallpaper.rst b/tests/python/gaia-ui-tests/docs/apps/wallpaper.rst
deleted file mode 100644
index 2286dfc..0000000
--- a/tests/python/gaia-ui-tests/docs/apps/wallpaper.rst
+++ /dev/null
@@ -1,7 +0,0 @@
-Wallpaper
-=========
-
-.. automodule:: gaiatest.apps.wallpaper.app
-   :members:
-   :show-inheritance:
-   :undoc-members:
diff --git a/tests/python/gaia-ui-tests/docs/conf.py b/tests/python/gaia-ui-tests/docs/conf.py
deleted file mode 100644
index d157c0a..0000000
--- a/tests/python/gaia-ui-tests/docs/conf.py
+++ /dev/null
@@ -1,266 +0,0 @@
-# -*- coding: utf-8 -*-
-#
-# gaiatest documentation build configuration file, created by
-# sphinx-quickstart on Fri Jul 11 15:36:10 2014.
-#
-# This file is execfile()d with the current directory set to its
-# containing dir.
-#
-# Note that not all possible configuration values are present in this
-# autogenerated file.
-#
-# All configuration values have a default; values that are commented out
-# serve to show the default.
-
-import sys
-import os
-
-# If extensions (or modules to document with autodoc) are in another directory,
-# add these directories to sys.path here. If the directory is relative to the
-# documentation root, use os.path.abspath to make it absolute, like shown here.
-#sys.path.insert(0, os.path.abspath('.'))
-here = os.path.dirname(os.path.abspath(__file__))
-sys.path.insert(0, os.path.join(os.path.dirname(here)))
-
-# -- General configuration ------------------------------------------------
-
-# If your documentation needs a minimal Sphinx version, state it here.
-#needs_sphinx = '1.0'
-
-# Add any Sphinx extension module names here, as strings. They can be
-# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
-# ones.
-extensions = [
-    'sphinx.ext.autodoc',
-    'sphinx.ext.doctest',
-    'sphinx.ext.todo',
-    'sphinx.ext.coverage',
-    'sphinx.ext.viewcode',
-]
-
-# Add any paths that contain templates here, relative to this directory.
-templates_path = ['_templates']
-
-# The suffix of source filenames.
-source_suffix = '.rst'
-
-# The encoding of source files.
-#source_encoding = 'utf-8-sig'
-
-# The master toctree document.
-master_doc = 'index'
-
-# General information about the project.
-project = u'gaiatest'
-copyright = u'2014, Mozilla Automation and Tools team'
-
-# The version info for the project you're documenting, acts as replacement for
-# |version| and |release|, also used in various other places throughout the
-# built documents.
-#
-# The short X.Y version.
-version = 'master'
-# The full version, including alpha/beta/rc tags.
-release = 'master'
-
-# The language for content autogenerated by Sphinx. Refer to documentation
-# for a list of supported languages.
-#language = None
-
-# There are two options for replacing |today|: either, you set today to some
-# non-false value, then it is used:
-#today = ''
-# Else, today_fmt is used as the format for a strftime call.
-#today_fmt = '%B %d, %Y'
-
-# List of patterns, relative to source directory, that match files and
-# directories to ignore when looking for source files.
-exclude_patterns = ['_build']
-
-# The reST default role (used for this markup: `text`) to use for all
-# documents.
-#default_role = None
-
-# If true, '()' will be appended to :func: etc. cross-reference text.
-#add_function_parentheses = True
-
-# If true, the current module name will be prepended to all description
-# unit titles (such as .. function::).
-#add_module_names = True
-
-# If true, sectionauthor and moduleauthor directives will be shown in the
-# output. They are ignored by default.
-#show_authors = False
-
-# The name of the Pygments (syntax highlighting) style to use.
-pygments_style = 'sphinx'
-
-# A list of ignored prefixes for module index sorting.
-#modindex_common_prefix = []
-
-# If true, keep warnings as "system message" paragraphs in the built documents.
-#keep_warnings = False
-
-
-# -- Options for HTML output ----------------------------------------------
-
-# The theme to use for HTML and HTML Help pages.  See the documentation for
-# a list of builtin themes.
-html_theme = 'default'
-
-# Theme options are theme-specific and customize the look and feel of a theme
-# further.  For a list of options available for each theme, see the
-# documentation.
-#html_theme_options = {}
-
-# Add any paths that contain custom themes here, relative to this directory.
-#html_theme_path = []
-
-# The name for this set of Sphinx documents.  If None, it defaults to
-# "<project> v<release> documentation".
-#html_title = None
-
-# A shorter title for the navigation bar.  Default is the same as html_title.
-#html_short_title = None
-
-# The name of an image file (relative to this directory) to place at the top
-# of the sidebar.
-#html_logo = None
-
-# The name of an image file (within the static path) to use as favicon of the
-# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
-# pixels large.
-#html_favicon = None
-
-# Add any paths that contain custom static files (such as style sheets) here,
-# relative to this directory. They are copied after the builtin static files,
-# so a file named "default.css" will overwrite the builtin "default.css".
-html_static_path = ['_static']
-
-# Add any extra paths that contain custom files (such as robots.txt or
-# .htaccess) here, relative to this directory. These files are copied
-# directly to the root of the documentation.
-#html_extra_path = []
-
-# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
-# using the given strftime format.
-#html_last_updated_fmt = '%b %d, %Y'
-
-# If true, SmartyPants will be used to convert quotes and dashes to
-# typographically correct entities.
-#html_use_smartypants = True
-
-# Custom sidebar templates, maps document names to template names.
-#html_sidebars = {}
-
-# Additional templates that should be rendered to pages, maps page names to
-# template names.
-#html_additional_pages = {}
-
-# If false, no module index is generated.
-#html_domain_indices = True
-
-# If false, no index is generated.
-#html_use_index = True
-
-# If true, the index is split into individual pages for each letter.
-#html_split_index = False
-
-# If true, links to the reST sources are added to the pages.
-#html_show_sourcelink = True
-
-# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
-#html_show_sphinx = True
-
-# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
-#html_show_copyright = True
-
-# If true, an OpenSearch description file will be output, and all pages will
-# contain a <link> tag referring to it.  The value of this option must be the
-# base URL from which the finished HTML is served.
-#html_use_opensearch = ''
-
-# This is the file name suffix for HTML files (e.g. ".xhtml").
-#html_file_suffix = None
-
-# Output file base name for HTML help builder.
-htmlhelp_basename = 'gaiatestdoc'
-
-
-# -- Options for LaTeX output ---------------------------------------------
-
-latex_elements = {
-# The paper size ('letterpaper' or 'a4paper').
-#'papersize': 'letterpaper',
-
-# The font size ('10pt', '11pt' or '12pt').
-#'pointsize': '10pt',
-
-# Additional stuff for the LaTeX preamble.
-#'preamble': '',
-}
-
-# Grouping the document tree into LaTeX files. List of tuples
-# (source start file, target name, title,
-#  author, documentclass [howto, manual, or own class]).
-latex_documents = [
-  ('index', 'gaiatest.tex', u'gaiatest Documentation',
-   u'Mozilla Automation and Tools team', 'manual'),
-]
-
-# The name of an image file (relative to this directory) to place at the top of
-# the title page.
-#latex_logo = None
-
-# For "manual" documents, if this is true, then toplevel headings are parts,
-# not chapters.
-#latex_use_parts = False
-
-# If true, show page references after internal links.
-#latex_show_pagerefs = False
-
-# If true, show URL addresses after external links.
-#latex_show_urls = False
-
-# Documents to append as an appendix to all manuals.
-#latex_appendices = []
-
-# If false, no module index is generated.
-#latex_domain_indices = True
-
-
-# -- Options for manual page output ---------------------------------------
-
-# One entry per manual page. List of tuples
-# (source start file, name, description, authors, manual section).
-man_pages = [
-    ('index', 'gaiatest', u'gaiatest Documentation',
-     [u'Mozilla Automation and Tools team'], 1)
-]
-
-# If true, show URL addresses after external links.
-#man_show_urls = False
-
-
-# -- Options for Texinfo output -------------------------------------------
-
-# Grouping the document tree into Texinfo files. List of tuples
-# (source start file, target name, title, author,
-#  dir menu entry, description, category)
-texinfo_documents = [
-  ('index', 'gaiatest', u'gaiatest Documentation',
-   u'Mozilla Automation and Tools team', 'gaiatest', 'One line description of project.',
-   'Miscellaneous'),
-]
-
-# Documents to append as an appendix to all manuals.
-#texinfo_appendices = []
-
-# If false, no module index is generated.
-#texinfo_domain_indices = True
-
-# How to display URL addresses: 'footnote', 'no', or 'inline'.
-#texinfo_show_urls = 'footnote'
-
-# If true, do not generate a @detailmenu in the "Top" node's menu.
-#texinfo_no_detailmenu = False
diff --git a/tests/python/gaia-ui-tests/docs/gcli.rst b/tests/python/gaia-ui-tests/docs/gcli.rst
deleted file mode 100644
index 1702f2b..0000000
--- a/tests/python/gaia-ui-tests/docs/gcli.rst
+++ /dev/null
@@ -1,14 +0,0 @@
-Command line interface
-======================
-
-A helpful command line tool is provided for interacting with Gaia. For full
-usage details run ``gcli --help`` and for help on a specific command use ``gcli
-<command> --help``.
-
-For example, to unlock the device, set brightness to 100%, connect to an
-unsecured network, and launch the Settings app::
-
-    gcli unlock
-    gcli setsetting screen.brightness 1
-    gcli connectwifi MozillaGuest
-    gcli launchapp Settings
diff --git a/tests/python/gaia-ui-tests/docs/index.rst b/tests/python/gaia-ui-tests/docs/index.rst
deleted file mode 100644
index 67992b9..0000000
--- a/tests/python/gaia-ui-tests/docs/index.rst
+++ /dev/null
@@ -1,26 +0,0 @@
-.. gaiatest documentation master file, created by
-   sphinx-quickstart on Fri Jul 11 15:36:10 2014.
-   You can adapt this file completely to your liking, but it should at least
-   contain the root `toctree` directive.
-
-Introduction
-============
-
-gaiatest is a Python package based on `Marionette <https://developer.mozilla.org/en-US/docs/Marionette>`_, which is designed specifically for writing tests against `Gaia <https://github.com/mozilla-b2g/gaia>`_.
-
-.. toctree::
-   :maxdepth: 2
-
-   installation
-   gcli
-   testrunner
-   writingtests
-   api/index
-   apps/index
-
-Indices and tables
-==================
-
-* :ref:`genindex`
-* :ref:`modindex`
-* :ref:`search`
diff --git a/tests/python/gaia-ui-tests/docs/installation.rst b/tests/python/gaia-ui-tests/docs/installation.rst
deleted file mode 100644
index 2af7917..0000000
--- a/tests/python/gaia-ui-tests/docs/installation.rst
+++ /dev/null
@@ -1,19 +0,0 @@
-Installation
-============
-
-You will need a `Marionette enabled Firefox build <https://developer.mozilla.org/en-US/docs/Marionette/Builds>`_ that you can `successfully connect to <https://developer.mozilla.org/en-US/docs/Marionette/Connecting_to_B2G/>`_.
-
-Before installing gaiatest you may want to consider creating a `virtual environment <https://virtualenv.pypa.io/en/latest/>`_::
-
-    virtualenv env_name
-    source env_name/bin/activate
-
-If you only want to use gaiatest without making changes::
-
-    pip install gaiatest
-
-However, if you want to modify gaiatest, first clone the Gaia repository before running setup.py::
-
-    git clone https://github.com/mozilla-b2g/gaia.git
-    cd gaia/tests/python/gaia-ui-tests
-    python setup.py develop
\ No newline at end of file
diff --git a/tests/python/gaia-ui-tests/docs/make.bat b/tests/python/gaia-ui-tests/docs/make.bat
deleted file mode 100644
index e7a97d6..0000000
--- a/tests/python/gaia-ui-tests/docs/make.bat
+++ /dev/null
@@ -1,242 +0,0 @@
-@ECHO OFF
-
-REM Command file for Sphinx documentation
-
-if "%SPHINXBUILD%" == "" (
-	set SPHINXBUILD=sphinx-build
-)
-set BUILDDIR=_build
-set ALLSPHINXOPTS=-d %BUILDDIR%/doctrees %SPHINXOPTS% .
-set I18NSPHINXOPTS=%SPHINXOPTS% .
-if NOT "%PAPER%" == "" (
-	set ALLSPHINXOPTS=-D latex_paper_size=%PAPER% %ALLSPHINXOPTS%
-	set I18NSPHINXOPTS=-D latex_paper_size=%PAPER% %I18NSPHINXOPTS%
-)
-
-if "%1" == "" goto help
-
-if "%1" == "help" (
-	:help
-	echo.Please use `make ^<target^>` where ^<target^> is one of
-	echo.  html       to make standalone HTML files
-	echo.  dirhtml    to make HTML files named index.html in directories
-	echo.  singlehtml to make a single large HTML file
-	echo.  pickle     to make pickle files
-	echo.  json       to make JSON files
-	echo.  htmlhelp   to make HTML files and a HTML help project
-	echo.  qthelp     to make HTML files and a qthelp project
-	echo.  devhelp    to make HTML files and a Devhelp project
-	echo.  epub       to make an epub
-	echo.  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter
-	echo.  text       to make text files
-	echo.  man        to make manual pages
-	echo.  texinfo    to make Texinfo files
-	echo.  gettext    to make PO message catalogs
-	echo.  changes    to make an overview over all changed/added/deprecated items
-	echo.  xml        to make Docutils-native XML files
-	echo.  pseudoxml  to make pseudoxml-XML files for display purposes
-	echo.  linkcheck  to check all external links for integrity
-	echo.  doctest    to run all doctests embedded in the documentation if enabled
-	goto end
-)
-
-if "%1" == "clean" (
-	for /d %%i in (%BUILDDIR%\*) do rmdir /q /s %%i
-	del /q /s %BUILDDIR%\*
-	goto end
-)
-
-
-%SPHINXBUILD% 2> nul
-if errorlevel 9009 (
-	echo.
-	echo.The 'sphinx-build' command was not found. Make sure you have Sphinx
-	echo.installed, then set the SPHINXBUILD environment variable to point
-	echo.to the full path of the 'sphinx-build' executable. Alternatively you
-	echo.may add the Sphinx directory to PATH.
-	echo.
-	echo.If you don't have Sphinx installed, grab it from
-	echo.http://sphinx-doc.org/
-	exit /b 1
-)
-
-if "%1" == "html" (
-	%SPHINXBUILD% -b html %ALLSPHINXOPTS% %BUILDDIR%/html
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.Build finished. The HTML pages are in %BUILDDIR%/html.
-	goto end
-)
-
-if "%1" == "dirhtml" (
-	%SPHINXBUILD% -b dirhtml %ALLSPHINXOPTS% %BUILDDIR%/dirhtml
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.Build finished. The HTML pages are in %BUILDDIR%/dirhtml.
-	goto end
-)
-
-if "%1" == "singlehtml" (
-	%SPHINXBUILD% -b singlehtml %ALLSPHINXOPTS% %BUILDDIR%/singlehtml
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.Build finished. The HTML pages are in %BUILDDIR%/singlehtml.
-	goto end
-)
-
-if "%1" == "pickle" (
-	%SPHINXBUILD% -b pickle %ALLSPHINXOPTS% %BUILDDIR%/pickle
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.Build finished; now you can process the pickle files.
-	goto end
-)
-
-if "%1" == "json" (
-	%SPHINXBUILD% -b json %ALLSPHINXOPTS% %BUILDDIR%/json
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.Build finished; now you can process the JSON files.
-	goto end
-)
-
-if "%1" == "htmlhelp" (
-	%SPHINXBUILD% -b htmlhelp %ALLSPHINXOPTS% %BUILDDIR%/htmlhelp
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.Build finished; now you can run HTML Help Workshop with the ^
-.hhp project file in %BUILDDIR%/htmlhelp.
-	goto end
-)
-
-if "%1" == "qthelp" (
-	%SPHINXBUILD% -b qthelp %ALLSPHINXOPTS% %BUILDDIR%/qthelp
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.Build finished; now you can run "qcollectiongenerator" with the ^
-.qhcp project file in %BUILDDIR%/qthelp, like this:
-	echo.^> qcollectiongenerator %BUILDDIR%\qthelp\gaiatest.qhcp
-	echo.To view the help file:
-	echo.^> assistant -collectionFile %BUILDDIR%\qthelp\gaiatest.ghc
-	goto end
-)
-
-if "%1" == "devhelp" (
-	%SPHINXBUILD% -b devhelp %ALLSPHINXOPTS% %BUILDDIR%/devhelp
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.Build finished.
-	goto end
-)
-
-if "%1" == "epub" (
-	%SPHINXBUILD% -b epub %ALLSPHINXOPTS% %BUILDDIR%/epub
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.Build finished. The epub file is in %BUILDDIR%/epub.
-	goto end
-)
-
-if "%1" == "latex" (
-	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.Build finished; the LaTeX files are in %BUILDDIR%/latex.
-	goto end
-)
-
-if "%1" == "latexpdf" (
-	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
-	cd %BUILDDIR%/latex
-	make all-pdf
-	cd %BUILDDIR%/..
-	echo.
-	echo.Build finished; the PDF files are in %BUILDDIR%/latex.
-	goto end
-)
-
-if "%1" == "latexpdfja" (
-	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
-	cd %BUILDDIR%/latex
-	make all-pdf-ja
-	cd %BUILDDIR%/..
-	echo.
-	echo.Build finished; the PDF files are in %BUILDDIR%/latex.
-	goto end
-)
-
-if "%1" == "text" (
-	%SPHINXBUILD% -b text %ALLSPHINXOPTS% %BUILDDIR%/text
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.Build finished. The text files are in %BUILDDIR%/text.
-	goto end
-)
-
-if "%1" == "man" (
-	%SPHINXBUILD% -b man %ALLSPHINXOPTS% %BUILDDIR%/man
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.Build finished. The manual pages are in %BUILDDIR%/man.
-	goto end
-)
-
-if "%1" == "texinfo" (
-	%SPHINXBUILD% -b texinfo %ALLSPHINXOPTS% %BUILDDIR%/texinfo
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.Build finished. The Texinfo files are in %BUILDDIR%/texinfo.
-	goto end
-)
-
-if "%1" == "gettext" (
-	%SPHINXBUILD% -b gettext %I18NSPHINXOPTS% %BUILDDIR%/locale
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.Build finished. The message catalogs are in %BUILDDIR%/locale.
-	goto end
-)
-
-if "%1" == "changes" (
-	%SPHINXBUILD% -b changes %ALLSPHINXOPTS% %BUILDDIR%/changes
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.The overview file is in %BUILDDIR%/changes.
-	goto end
-)
-
-if "%1" == "linkcheck" (
-	%SPHINXBUILD% -b linkcheck %ALLSPHINXOPTS% %BUILDDIR%/linkcheck
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.Link check complete; look for any errors in the above output ^
-or in %BUILDDIR%/linkcheck/output.txt.
-	goto end
-)
-
-if "%1" == "doctest" (
-	%SPHINXBUILD% -b doctest %ALLSPHINXOPTS% %BUILDDIR%/doctest
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.Testing of doctests in the sources finished, look at the ^
-results in %BUILDDIR%/doctest/output.txt.
-	goto end
-)
-
-if "%1" == "xml" (
-	%SPHINXBUILD% -b xml %ALLSPHINXOPTS% %BUILDDIR%/xml
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.Build finished. The XML files are in %BUILDDIR%/xml.
-	goto end
-)
-
-if "%1" == "pseudoxml" (
-	%SPHINXBUILD% -b pseudoxml %ALLSPHINXOPTS% %BUILDDIR%/pseudoxml
-	if errorlevel 1 exit /b 1
-	echo.
-	echo.Build finished. The pseudo-XML files are in %BUILDDIR%/pseudoxml.
-	goto end
-)
-
-:end
diff --git a/tests/python/gaia-ui-tests/docs/testrunner.rst b/tests/python/gaia-ui-tests/docs/testrunner.rst
deleted file mode 100644
index 00eb2ca..0000000
--- a/tests/python/gaia-ui-tests/docs/testrunner.rst
+++ /dev/null
@@ -1,225 +0,0 @@
-Running tests
-=============
-
-To run tests using gaia test, your command-line will vary a little bit
-depending on what device you're using. The general format is::
-
-    gaiatest [options] /path/to/test_foo.py
-
-For full usage run::
-
-    gaiatest --help
-
-Risks
------
-
-The gaiatest runner restores the target Firefox OS instance to a 'clean' state before every test. This means that any personal data such as contacts, SMS/MMS messages, emails, photos, videos, music, etc. will be removed. This will include data on the microSD card. The tests may also attempt to initiate outgoing calls, and may connect to services such as cellular data, WiFi, GPS, bluetooth, etc. Therefore, running tests using the gaiatest runner may cause unintentional data loss and may incur unexpected charges. In order to acknowledge these risks, you must enter the ``acknowledged_risks`` key in your test variables file with a true value. Note that this is a JavaScript boolean, so the value true should not be enclosed in quotes.
-
-Disabling the Warning
-^^^^^^^^^^^^^^^^^^^^^
-
-Once you have acknowledged the risks, you will still be presented with a warning every time you run the test suite. If you are absolutely sure that you will only ever run the tests against suitable test devices, this can be disabled by setting an environment variable named ``GAIATEST_SKIP_WARNING``. For example, you might run the gaiatest command like so::
-
-    GAIATEST_SKIP_WARNING=1 gaiatest ... params
-
-Testing on a device
--------------------
-
-You must run a build of B2G on the device that has Marionette enabled.
-The easiest way to do that is to flash your device with a nightly 'engineering' build, like
-`this one for our reference device <https://pvtbuilds.mozilla.org/pvt/mozilla.org/b2gotoro/nightly/mozilla-central-flame-eng/latest/>`_
-(access to these builds is currently restricted).
-
-If you are running the tests on a device connected via ADB (Android Debug
-Bridge), you must additionally set up port forwarding from the device to your
-local machine. You can do this by running the command::
-
-    adb forward tcp:2828 tcp:2828
-
-ADB can be downloaded as part of the `Android SDK <http://developer.android.com/sdk/index.html>`_.
-
-Testing on desktop
-------------------
-
-If you don't have a Firefox OS device, you can download the latest build of the desktop client from
-`here <http://ftp.mozilla.org/pub/mozilla.org/b2g/nightly/latest-mozilla-central>`_,
-but make sure you download the appropriate file for your operating system.
-
-* **Linux (32bit)**: b2g-[VERSION].multi.linux-i686.tar.bz2
-* **Linux (64bit)**: b2g-[VERSION].multi.linux-x86_64.tar.bz2
-* **Mac**: b2g-[VERSION].multi.mac64.dmg
-* **Windows**: b2g-[VERSION].multi.win32.zip
-
-Once downloaded, you will need to extract the contents to a local folder.
-``$B2G_HOME`` refers to the location of the local folder for the remainder of the
-documentation.
-
-If a profile is specified when running the tests (recommended), a clone of the
-profile will be used. This helps to ensure that all tests run in a clean state.
-However, if you also intend to launch and interact with the desktop build
-manually, we recommend making a copy of the default profile and using the copy
-for your tests. The location of the default profile is ``$B2G_HOME/gaia/profile``.
-
-.. note::
-  The test framework only supports running the tests and B2G instances locally,
-  although in theory it can be used against a running desktop build accessible over
-  the network.
-
-To run the full suite of tests, use the following command::
-
-    cd gaia/tests/python/gaia-ui-tests
-    gaiatest --restart --type b2g --binary $B2G_HOME/b2g-bin --profile $B2G_HOME/gaia/profile \
-      --testvars path/to/testvars.json gaiatest/tests/manifest.ini
-
-Filtering tests
----------------
-Tests can be filtered by type, and the types are defined in the manifest files.
-Tests can belong to multiple types, some types imply others, and some are
-mutually exclusive - for example a test cannot be both 'online' and 'offline'
-but a test that is 'lan' is by definition 'online'. Be warned that despite these
-rules, there is no error checking on types, so you must take care when assigning
-them. Default types are set in the ``[DEFAULT]`` section of a manifest file, and are
-inherited by manifest files referenced by an include.
-
-Here is a list of the types used, and when to use them:
-
-* antenna - Antenna (headphones) must be connected.
-* b2g - This means the test is a B2G (Firefox OS) test. All tests must include this type.
-* bluetooth - Bluetooth is required.
-* camera - Camera is required.
-* carrier - Active SIM card with carrier connection is required.
-* flash - Camera flash is required.
-* lan - Local area connection (not cell data) is required by these tests (see note below).
-* offline - Specifically requires no online connection.
-* online - Connection (lan or carrier) is required.
-* qemu - These tests require the Firefox OS emulator to run.
-* sdcard - Storage device (such as an SD card) must be present.
-* wifi - WiFi connection is required.
-
-.. note::
-  You may be thinking that there is only WiFi or cell data, and why the need for
-  the 'lan' test type. Well, these tests aren't only run on physical devices. We
-  also run then on desktop builds, which share the host computer's connection.
-  It is for this reason that we need 'lan' to indicate a connection that is not
-  cell data. For an example of where online/lan/carrier are used take a look at
-  the browser tests.
-
-Test variables
---------------
-The --testvars option is used to pass in local variables, particularly those that
-cannot be checked into the repository. For example when running the Gaia UI tests,
-these variables can be your private login credentials, phone number or details of your
-WiFi connection.
-
-To use it, copy
-``gaia/tests/python/gaia-ui-tests/gaiatest/testvars_template.json`` to a different
-filename but add it into .gitignore so you don't check it into your repository.
-
-When running your tests add the argument::
-
-    --testvars /path/to/testvars.json
-
-Expected variables
-^^^^^^^^^^^^^^^^^^
-
-* carrier - Carrier information of the test phone, including the phone number, country and network of the SIM card:
-
-.. code-block:: javascript
-
-    'carrier': {
-      'phone_number': '',
-      'country': '',
-      'network': ''
-    }
-
-* imei - The 12 digit IMEI code of the test phone.
-* remote_phone_number - Phone number that your device can call during the tests (try not to be a nuisance!). Prefix the number with '+' and your international dialing code.
-* wifi - These are the settings of your WiFi connection. Currently this supports WPA/WEP/etc. You can add WiFi networks by doing the following (remember to replace ``KeyManagement`` and the password with the value your network supports):
-
-.. code-block:: javascript
-
-    'wifi': {
-      'ssid': 'MyNetwork',
-      'keyManagement': 'WEP' or 'WPA-PSK',
-      'wep': 'MyPassword',
-    }
-
-.. code-block:: javascript
-
-    'wifi': {
-      'ssid': 'MyNetwork',
-      'keyManagement': 'WPA-PSK',
-      'psk': 'MyPassword'
-    }
-
-.. note::
-  Due to `bug 775499 <http://bugzil.la/775499>`_, WiFi connections via WPA-EAP are not capable at this time.
-
-* email - Login information used by the email tests. It can contain different types of email accounts:
-
-.. code-block:: javascript
-
-    'gmail': {
-      'name': '',
-      'email': '',
-      'password': ''
-    }
-
-.. code-block:: javascript
-
-    'IMAP': {
-      'name': '',
-      'email': '',
-      'password': '',
-      'imap_hostname': '',
-      'imap_name': '',
-      'imap_port': '',
-      'smtp_hostname': '',
-      'smtp_name': '',
-      'smtp_port': ''
-    }
-
-.. code-block:: javascript
-
-    'ActiveSync': {
-      'name': '',
-      'email': '',
-      'password': '',
-      'active_sync_hostname': '',
-      'active_sync_username': ''
-    }
-
-* settings - Custom settings to override the Gaia default settings. These will be set before each test run but are not mandatory.
-
-.. code-block:: javascript
-
-    'settings': {
-      '<setting>': <value>
-    }
-
-When running with no SIM card or offline the timezone may not be automatically updated to match the local timezone. In that case you may need to force the timezone to match the desired timezone using settings in ``testvars.json`` which will set it during the test setup:
-
-.. code-block:: javascript
-
-    'settings': {
-      'time.timezone': '<value>',
-      'time.timezone.user-selected': '<value>'
-    }
-
-* prefs - Custom preferences to override the Gecko default preferences. These will be set before each test run but are not mandatory.
-
-.. code-block:: javascript
-
-    'prefs': {
-      '<name>': <value>
-    }
-
-Test data prerequisites
------------------------
-
-Occasionally a test will need data on the hardware that cannot be set during the
-test setup. The following tests need data set up before they can be run
-successfully:
-
-* test_ftu - Requires a single record/contact saved onto the SIM card to test the
-  SIM contact import.
diff --git a/tests/python/gaia-ui-tests/docs/writingtests.rst b/tests/python/gaia-ui-tests/docs/writingtests.rst
deleted file mode 100644
index 9ca193e..0000000
--- a/tests/python/gaia-ui-tests/docs/writingtests.rst
+++ /dev/null
@@ -1,7 +0,0 @@
-Writing tests
-=============
-
-Test writing for Marionette Python tests is described `here <https://developer.mozilla.org/en-US/docs/Marionette/Marionette_Python_Tests>`_.
-
-At the moment we don't have a specific style guide. Please follow the prevailing style of the existing tests. Use them as a template for writing
-your tests. We follow `PEP 8 <http://www.python.org/dev/peps/pep-0008/>`_ for formatting, although we're pretty lenient on the 80-character line length.
diff --git a/tests/python/gaia-ui-tests/gaiatest/apps/base.py b/tests/python/gaia-ui-tests/gaiatest/apps/base.py
index 44994d3..5594345 100755
--- a/tests/python/gaia-ui-tests/gaiatest/apps/base.py
+++ b/tests/python/gaia-ui-tests/gaiatest/apps/base.py
@@ -74,7 +74,7 @@ class Base(object):

     def find_select_item(self, match_string):
         _list_item_locator = (
-            By.XPATH, "//section[contains(@class,'value-selector-container')]/descendant::li[descendant::span[.='%s']]" %
+            By.XPATH, "id('value-selector-container')/descendant::li[descendant::span[.='%s']]" %
             match_string)
         # have to go back to top level to get the B2G select box wrapper
         self.marionette.switch_to_frame()
diff --git a/tests/python/gaia-ui-tests/gaiatest/apps/clock/app.py b/tests/python/gaia-ui-tests/gaiatest/apps/clock/app.py
index 5a0d08e..38cc445 100644
--- a/tests/python/gaia-ui-tests/gaiatest/apps/clock/app.py
+++ b/tests/python/gaia-ui-tests/gaiatest/apps/clock/app.py
@@ -54,10 +54,6 @@ class Clock(Base):
         _label_locator = (By.CSS_SELECTOR, '.label')
         _check_box_locator = (By.CSS_SELECTOR, '.input-enable')
         _enable_button_locator = (By.CSS_SELECTOR, '.alarmList.alarmEnable')
-        _time_locator = (By.CSS_SELECTOR, '.time')
-
-        def time(self):
-            return self.root_element.find_element(*self._time_locator).text

         @property
         def label(self):
diff --git a/tests/python/gaia-ui-tests/gaiatest/apps/clock/regions/alarm.py b/tests/python/gaia-ui-tests/gaiatest/apps/clock/regions/alarm.py
index f88ba91..5955f2c 100644
--- a/tests/python/gaia-ui-tests/gaiatest/apps/clock/regions/alarm.py
+++ b/tests/python/gaia-ui-tests/gaiatest/apps/clock/regions/alarm.py
@@ -19,6 +19,10 @@ class NewAlarm(Clock):
     _done_locator = (By.ID, 'alarm-done')
     _time_button_locator = (By.XPATH, "//li[input[@id='time-select']]")

+    _hour_picker_locator = (By.CSS_SELECTOR, '#value-picker-hours div')
+    _minutes_picker_locator = (By.CSS_SELECTOR, '#value-picker-minutes div')
+    _hour24_picker_locator = (By.CSS_SELECTOR, '#value-picker-hour24-state div')
+
     def __init__(self, marionette):
         Clock.__init__(self, marionette)
         view = self.marionette.find_element(*self._alarm_view_locator)
@@ -66,10 +70,79 @@ class NewAlarm(Clock):
         self.wait_for_condition(lambda m: view.location['x'] == view.size['width'])
         return Clock(self.marionette)

+    @property
+    def hour(self):
+        return self.marionette.find_element(*self._current_element(*self._hour_picker_locator)).text
+
+    def spin_hour(self):
+        self.wait_for_element_displayed(*self._hour_picker_locator)
+        if int(self.hour) > 6:
+                self._flick_menu_down(self._hour_picker_locator)
+        else:
+            self._flick_menu_up(self._hour_picker_locator)
+        time.sleep(1)
+
+    @property
+    def minute(self):
+        return self.marionette.find_element(*self._current_element(*self._minutes_picker_locator)).text
+
+    def spin_minute(self):
+        if int(self.minute) > 30:
+            self._flick_menu_down(self._minutes_picker_locator)
+        else:
+            self._flick_menu_up(self._minutes_picker_locator)
+
+        time.sleep(1)
+
+    @property
+    def hour24(self):
+        return self.marionette.find_element(*self._current_element(*self._hour24_picker_locator)).text
+
+    def spin_hour24(self):
+        hour24_picker = self.marionette.find_element(*self._current_element(*self._hour24_picker_locator))
+        hour24_picker_move_y = hour24_picker.size['height'] * 2
+        hour24_picker_mid_x = hour24_picker.size['width'] / 2
+        hour24_picker_mid_y = hour24_picker.size['height'] / 2
+
+        if self.hour24 == 'AM':
+            Actions(self.marionette).flick(hour24_picker, hour24_picker_mid_x, hour24_picker_mid_y, hour24_picker_mid_x, hour24_picker_mid_y - hour24_picker_move_y)
+        else:
+            Actions(self.marionette).flick(hour24_picker, hour24_picker_mid_x, hour24_picker_mid_y, hour24_picker_mid_x, hour24_picker_mid_y + hour24_picker_move_y)
+
+        time.sleep(1)
+
     def tap_time(self):
         self.marionette.find_element(*self._time_button_locator).tap()
-        from gaiatest.apps.system.regions.time_picker import TimePicker
-        return TimePicker(self.marionette)
+
+    def _flick_menu_up(self, locator):
+        self.wait_for_element_displayed(*self._current_element(*locator))
+        current_element = self.marionette.find_element(*self._current_element(*locator))
+        next_element = self.marionette.find_element(*self._next_element(*locator))
+
+        #TODO: update this with more accurate Actions
+        action = Actions(self.marionette)
+        action.press(next_element)
+        action.move(current_element)
+        action.release()
+        action.perform()
+
+    def _flick_menu_down(self, locator):
+        self.wait_for_element_displayed(*self._current_element(*locator))
+        current_element = self.marionette.find_element(*self._current_element(*locator))
+        next_element = self.marionette.find_element(*self._next_element(*locator))
+
+        #TODO: update this with more accurate Actions
+        action = Actions(self.marionette)
+        action.press(current_element)
+        action.move(next_element)
+        action.release()
+        action.perform()
+
+    def _current_element(self, method, target):
+        return (method, '%s.picker-unit.active' % target)
+
+    def _next_element(self, method, target):
+        return (method, '%s.picker-unit.active + div' % target)


 class EditAlarm(NewAlarm):
diff --git a/tests/python/gaia-ui-tests/gaiatest/apps/contacts/regions/gmail.py b/tests/python/gaia-ui-tests/gaiatest/apps/contacts/regions/gmail.py
index dbf6e91..c122c9a 100644
--- a/tests/python/gaia-ui-tests/gaiatest/apps/contacts/regions/gmail.py
+++ b/tests/python/gaia-ui-tests/gaiatest/apps/contacts/regions/gmail.py
@@ -25,7 +25,6 @@ class GmailLogin(Base):
         self.marionette.find_element(*self._email_locator).send_keys(user)
         self.marionette.find_element(*self._password_locator).tap()
         self.marionette.find_element(*self._password_locator).send_keys(passwd)
-        self.keyboard.dismiss()
         self.marionette.find_element(*self._sign_in_locator).tap()

     def tap_grant_access(self):
diff --git a/tests/python/gaia-ui-tests/gaiatest/apps/homescreen/app.py b/tests/python/gaia-ui-tests/gaiatest/apps/homescreen/app.py
index 0df0bf4..c45dd54 100644
--- a/tests/python/gaia-ui-tests/gaiatest/apps/homescreen/app.py
+++ b/tests/python/gaia-ui-tests/gaiatest/apps/homescreen/app.py
@@ -30,7 +30,6 @@ class Homescreen(Base):
         import time
         time.sleep(1)
         self.marionette.switch_to_frame()
-        time.sleep(1)
         self.marionette.find_element('id', 'rocketbar-form').tap()

         from gaiatest.apps.homescreen.regions.search_panel import SearchPanel
diff --git a/tests/python/gaia-ui-tests/gaiatest/apps/keyboard/app.py b/tests/python/gaia-ui-tests/gaiatest/apps/keyboard/app.py
index d3e00d9..d8b2cb0 100644
--- a/tests/python/gaia-ui-tests/gaiatest/apps/keyboard/app.py
+++ b/tests/python/gaia-ui-tests/gaiatest/apps/keyboard/app.py
@@ -13,13 +13,10 @@ from gaiatest.apps.base import Base
 class Keyboard(Base):
     '''
     There are two underlying strategies in this class;
-
-    * send() method which uses logic to traverse the keyboard to type the
-      string sent to it. Send should be used in tests where the layout of the
-      keyboard is not tested and only string input is important
-    * tap_x() or anything not send() methods which do not use logic to change
-      keyboard panels. Tap should be used where the keyboard is expected to
-      open with that key visible
+    * send() method which uses logic to traverse the keyboard to type the string sent to it.
+        Send should be used in tests where the layout of the keyboard is not tested and only string input is important
+    * tap_x() or anything not send() methods which do not use logic to change keyboard panels.
+        Tap should be used where the keyboard is expected to open with that key visible

     The methods in this class employ a lot of aggressive frame switching to the keyboard and back to the
     displayed app because it predominantly acts as a utility class and thus it works best when the main focus
@@ -131,19 +128,19 @@ class Keyboard(Base):

     @property
     def _is_upper_case(self):
-        return self.marionette.execute_script('return window.wrappedJSObject.app.upperCaseStateManager.isUpperCase;')
+        return self.marionette.execute_script('return window.wrappedJSObject.isUpperCase;')

     @property
     def _is_upper_case_locked(self):
-        return self.marionette.execute_script('return window.wrappedJSObject.app.upperCaseStateManager.isUpperCaseLocked;')
+        return self.marionette.execute_script('return window.wrappedJSObject.isUpperCaseLocked;')

     @property
     def _current_input_type(self):
-        return self.marionette.execute_script('return window.wrappedJSObject.app.getBasicInputType();')
+        return self.marionette.execute_script('return window.wrappedJSObject.fakeAppObject.getBasicInputType();')

     @property
     def _layout_page(self):
-        return self.marionette.execute_script('return window.wrappedJSObject.app.layoutManager.currentLayoutPage;')
+        return self.marionette.execute_script('return window.wrappedJSObject.layoutManager.currentLayoutPage;')

     # this is to switch to the frame of keyboard
     def switch_to_keyboard(self):
diff --git a/tests/python/gaia-ui-tests/gaiatest/apps/lockscreen/app.py b/tests/python/gaia-ui-tests/gaiatest/apps/lockscreen/app.py
index 7b4725d..259adf2 100644
--- a/tests/python/gaia-ui-tests/gaiatest/apps/lockscreen/app.py
+++ b/tests/python/gaia-ui-tests/gaiatest/apps/lockscreen/app.py
@@ -76,7 +76,7 @@ class LockScreen(Base):

 class Notification(PageRegion):
     _body_locator = (By.CSS_SELECTOR, 'div.detail')
-    _title_locator = (By.CSS_SELECTOR, 'div.title')
+    _title_locator = (By.CSS_SELECTOR, 'div')

     @property
     def is_visible(self):
diff --git a/tests/python/gaia-ui-tests/gaiatest/apps/phone/regions/call_screen.py b/tests/python/gaia-ui-tests/gaiatest/apps/phone/regions/call_screen.py
index 93d1886..43be7e7 100644
--- a/tests/python/gaia-ui-tests/gaiatest/apps/phone/regions/call_screen.py
+++ b/tests/python/gaia-ui-tests/gaiatest/apps/phone/regions/call_screen.py
@@ -2,8 +2,8 @@
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.

+import time
 from marionette.by import By
-from marionette.marionette import Actions
 from gaiatest.apps.phone.app import Phone


@@ -16,7 +16,6 @@ class CallScreen(Phone):
     _incoming_call_locator = (By.CSS_SELECTOR, '.handled-call.incoming')
     _hangup_bar_locator = (By.ID, 'callbar-hang-up')
     _answer_bar_locator = (By.ID, 'callbar-answer')
-    _lockscreen_handle_locator = (By.ID, 'lockscreen-area-slide')

     def __init__(self, marionette):
         Phone.__init__(self, marionette)
@@ -50,10 +49,6 @@ class CallScreen(Phone):
         self.wait_for_condition(lambda m: incoming_call.location['y'] == 0)
         self.wait_for_condition(lambda m: self.incoming_calling_contact != u'')

-    def wait_for_incoming_call_with_locked_screen(self):
-        self.wait_for_condition(lambda m: self.is_element_displayed(*self._incoming_call_locator))
-        self.wait_for_condition(lambda m: self.incoming_calling_contact != u'')
-
     def answer_call(self):
         self.marionette.find_element(*self._answer_bar_locator).tap()

@@ -69,23 +64,3 @@ class CallScreen(Phone):
         self.a11y_click_hang_up()
         self.marionette.switch_to_frame()
         self.wait_for_element_not_displayed(*self._call_screen_locator)
-
-    def _handle_incoming_call(self, destination):
-
-        lockscreen_handle = self.marionette.find_element(*self._lockscreen_handle_locator)
-        lockscreen_handle_x_centre = int(lockscreen_handle.size['width'] / 2)
-        lockscreen_handle_y_centre = int(lockscreen_handle.size['height'] / 2)
-
-        handle_destination = lockscreen_handle.size['width']
-        if destination == 'reject':
-            handle_destination *= -1
-
-        # Flick lockscreen handle to the destination
-        Actions(self.marionette).flick(
-            lockscreen_handle, lockscreen_handle_x_centre, lockscreen_handle_y_centre, handle_destination, 0
-        ).perform()
-
-    def reject_call(self):
-        self.wait_for_element_displayed(*self._lockscreen_handle_locator)
-        self._handle_incoming_call('reject')
-        self.marionette.switch_to_frame()
diff --git a/tests/python/gaia-ui-tests/gaiatest/apps/settings/regions/device_info.py b/tests/python/gaia-ui-tests/gaiatest/apps/settings/regions/device_info.py
index 8460703..fb2dba5 100644
--- a/tests/python/gaia-ui-tests/gaiatest/apps/settings/regions/device_info.py
+++ b/tests/python/gaia-ui-tests/gaiatest/apps/settings/regions/device_info.py
@@ -38,8 +38,7 @@ class DeviceInfo(Base):
         _os_version_locator = (By.CSS_SELECTOR, '#about-moreInfo small[data-name="deviceinfo.os"]')
         _hardware_revision_locator = (By.CSS_SELECTOR, '#about-moreInfo small[data-name="deviceinfo.hardware"]')
         _mac_address_locator = (By.CSS_SELECTOR, '#about-moreInfo small[data-name="deviceinfo.mac"]')
-        _imei1_locator = (By.CSS_SELECTOR, '#deviceInfo-imeis span[data-slot="0"]')
-        _imei2_locator = (By.CSS_SELECTOR, '#deviceInfo-imeis span[data-slot="1"]')
+        _imei_locator = (By.ID, 'deviceInfo-imei')
         _iccid_locator = (By.ID, 'deviceInfo-iccids')
         _platform_version_locator = (By.CSS_SELECTOR, '#about-moreInfo small[data-name="deviceinfo.platform_version"]')
         _build_id_locator = (By.CSS_SELECTOR, '#about-moreInfo small[data-name="deviceinfo.platform_build_id"]')
@@ -64,12 +63,8 @@ class DeviceInfo(Base):
             return self.marionette.find_element(*self._mac_address_locator).text

         @property
-        def imei1(self):
-            return self.marionette.find_element(*self._imei1_locator).text.split()[2]
-
-        @property
-        def imei2(self):
-            return self.marionette.find_element(*self._imei2_locator).text.split()[2]
+        def imei(self):
+            return self.marionette.find_element(*self._imei_locator).text

         @property
         def iccid(self):
diff --git a/tests/python/gaia-ui-tests/gaiatest/apps/settings/regions/keyboard.py b/tests/python/gaia-ui-tests/gaiatest/apps/settings/regions/keyboard.py
index 64fdcef..88d3972 100644
--- a/tests/python/gaia-ui-tests/gaiatest/apps/settings/regions/keyboard.py
+++ b/tests/python/gaia-ui-tests/gaiatest/apps/settings/regions/keyboard.py
@@ -9,8 +9,23 @@ from gaiatest.apps.base import Base
 class Keyboard(Base):

     _section_locator = (By.ID, 'keyboard')
-    _add_more_keyboards_button_locator = (By.CSS_SELECTOR, "button[data-l10n-id='selectKeyboards']")
-    _built_in_keyboard_list_element_locator = (By.CSS_SELECTOR, '.enabledKeyboardList > li > span')
+    _selected_keyboards_link_locator = (By.CSS_SELECTOR, "a[data-l10n-id='selectedKeyboards']")
+
+    def __init__(self, marionette):
+        Base.__init__(self, marionette)
+        section = self.marionette.find_element(*self._section_locator)
+        self.wait_for_condition(lambda m: section.location['x'] == 0)
+
+    def tap_selected_keyboards(self):
+        self.marionette.find_element(*self._selected_keyboards_link_locator).tap()
+        return KeyboardSelectKeyboard(self.marionette)
+
+
+class KeyboardSelectKeyboard(Base):
+
+    _section_locator = (By.ID, 'keyboard-selection')
+    _add_more_keyboards_button_locator = (By.CSS_SELECTOR, "button[data-l10n-id='addMoreKeyboards']")
+    _built_in_keyboard_list_element_locator = (By.CSS_SELECTOR, '.enabledKeyboardList > li >span')

     def __init__(self, marionette):
         Base.__init__(self, marionette)
diff --git a/tests/python/gaia-ui-tests/gaiatest/apps/settings/regions/language.py b/tests/python/gaia-ui-tests/gaiatest/apps/settings/regions/language.py
index ba9b653..55cf7f1 100644
--- a/tests/python/gaia-ui-tests/gaiatest/apps/settings/regions/language.py
+++ b/tests/python/gaia-ui-tests/gaiatest/apps/settings/regions/language.py
@@ -38,9 +38,9 @@ class Language(Base):
         # have to go back to top level to get the B2G select box wrapper
         self.marionette.switch_to_frame()

-        self.wait_for_condition(lambda m: len(self.marionette.find_elements(By.CSS_SELECTOR, '.value-selector-container li')) > 0)
+        self.wait_for_condition(lambda m: len(self.marionette.find_elements(By.CSS_SELECTOR, '#value-selector-container li')) > 0)

-        options = self.marionette.find_elements(By.CSS_SELECTOR, '.value-selector-container li')
+        options = self.marionette.find_elements(By.CSS_SELECTOR, '#value-selector-container li')
         close_button = self.marionette.find_element(By.CSS_SELECTOR, 'button.value-option-confirm')

         # loop options until we find the match
diff --git a/tests/python/gaia-ui-tests/gaiatest/apps/settings/regions/sim_manager.py b/tests/python/gaia-ui-tests/gaiatest/apps/settings/regions/sim_manager.py
index 3b7447e..ee07f3f 100644
--- a/tests/python/gaia-ui-tests/gaiatest/apps/settings/regions/sim_manager.py
+++ b/tests/python/gaia-ui-tests/gaiatest/apps/settings/regions/sim_manager.py
@@ -31,7 +31,7 @@ class SimManager(Base):
         # cheeky Select wrapper until Marionette has its own
         # due to the way B2G wraps the app's select box we match on text

-        _list_item_locator = (By.XPATH, "//section[contains(@class,'value-selector-container')]/descendant::li[descendant::span[.='%s']]" % match_string)
+        _list_item_locator = (By.XPATH, "id('value-selector-container')/descendant::li[descendant::span[.='%s']]" % match_string)
         _close_button_locator = (By.CSS_SELECTOR, 'button.value-option-confirm')

         # have to go back to top level to get the B2G select box wrapper
diff --git a/tests/python/gaia-ui-tests/gaiatest/apps/system/regions/time_picker.py b/tests/python/gaia-ui-tests/gaiatest/apps/system/regions/time_picker.py
deleted file mode 100644
index b4aadff..0000000
--- a/tests/python/gaia-ui-tests/gaiatest/apps/system/regions/time_picker.py
+++ /dev/null
@@ -1,100 +0,0 @@
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-
-import time
-
-from marionette.by import By
-from marionette.marionette import Actions
-
-from gaiatest.apps.base import Base
-
-
-class TimePicker(Base):
-
-    _time_picker_locator = (By.CLASS_NAME, 'value-selector-time-picker')
-    _done_button_locator = (By.CSS_SELECTOR,
-                            '.value-selector-time-picker-buttons > button.value-selector-confirm')
-
-    _hour_picker_locator = (By.CSS_SELECTOR, '.value-picker-hours > div')
-    _minutes_picker_locator = (By.CSS_SELECTOR, '.value-picker-minutes > div')
-    _hour24_picker_locator = (By.CSS_SELECTOR, '.value-picker-hour24-state > div')
-
-    def __init__(self, marionette):
-        Base.__init__(self, marionette)
-        self.marionette.switch_to_frame()
-        self.wait_for_element_displayed(*self._current_element(*self._hour_picker_locator))
-
-        # TODO: wait for the time piker to fade in Bug 1038186
-        time.sleep(2)
-
-    def tap_done(self):
-        self.marionette.find_element(*self._done_button_locator).tap()
-        self.wait_for_element_not_displayed(*self._time_picker_locator)
-        # TODO: wait for the time piker to fade out Bug 1038186
-        time.sleep(2)
-        self.apps.switch_to_displayed_app()
-
-    @property
-    def hour(self):
-        return self.marionette.find_element(*self._current_element(*self._hour_picker_locator)).text
-
-    def spin_hour(self):
-        old_hour = self.hour
-        if int(self.hour) > 6:
-            self._flick_menu_down(self._hour_picker_locator)
-        else:
-            self._flick_menu_up(self._hour_picker_locator)
-        self.wait_for_condition(lambda m: self.hour != old_hour)
-
-    @property
-    def minute(self):
-        return self.marionette.find_element(*self._current_element(*self._minutes_picker_locator)).text
-
-    def spin_minute(self):
-        old_minute = self.minute
-        if int(self.minute) > 30:
-            self._flick_menu_down(self._minutes_picker_locator)
-        else:
-            self._flick_menu_up(self._minutes_picker_locator)
-
-        self.wait_for_condition(lambda m: self.minute != old_minute)
-
-    @property
-    def hour24(self):
-        return self.marionette.find_element(*self._current_element(*self._hour24_picker_locator)).text
-
-    def spin_hour24(self):
-        old_hour24 = self.hour24
-        if self.hour24 == 'AM':
-            self._flick_menu_up(self._hour24_picker_locator)
-        else:
-            self._flick_menu_down(self._hour24_picker_locator)
-
-        self.wait_for_condition(lambda m: self.hour24 != old_hour24)
-
-    def _flick_menu_up(self, locator):
-        current_element = self.marionette.find_element(*self._current_element(*locator))
-
-        current_element_move_y = current_element.size['height'] * 2.5
-        current_element_mid_x = current_element.size['width'] / 2
-        current_element_mid_y = current_element.size['height'] / 2
-        # TODO: update this with more accurate Actions
-        Actions(self.marionette).flick(current_element, current_element_mid_x, current_element_mid_y,
-                                       current_element_mid_x, current_element_mid_y - current_element_move_y).perform()
-
-    def _flick_menu_down(self, locator):
-        current_element = self.marionette.find_element(*self._current_element(*locator))
-
-        current_element_move_y = current_element.size['height'] * 2.5
-        current_element_mid_x = current_element.size['width'] / 2
-        current_element_mid_y = current_element.size['height'] / 2
-        # TODO: update this with more accurate Actions
-        Actions(self.marionette).flick(current_element, current_element_mid_x, current_element_mid_y,
-                                       current_element_mid_x, current_element_mid_y + current_element_move_y).perform()
-
-    def _current_element(self, method, target):
-        return (method, '%s.picker-unit.selected' % target)
-
-    def _next_element(self, method, target):
-        return (method, '%s.picker-unit.selected + div' % target)
diff --git a/tests/python/gaia-ui-tests/gaiatest/apps/system/regions/utility_tray.py b/tests/python/gaia-ui-tests/gaiatest/apps/system/regions/utility_tray.py
index 1207507..0504021 100644
--- a/tests/python/gaia-ui-tests/gaiatest/apps/system/regions/utility_tray.py
+++ b/tests/python/gaia-ui-tests/gaiatest/apps/system/regions/utility_tray.py
@@ -10,7 +10,7 @@ from gaiatest.apps.system.app import System


 class UtilityTray(Base):
-    _notifications_locator = (By.ID, 'utility-tray-notifications')
+    _notification_container_locator = (By.ID, 'notifications-container')
     _desktop_notifications_locator = (By.CSS_SELECTOR, '#desktop-notifications-container .notification')
     _notification_clear_locator = (By.ID, 'notification-clear')
     _quicksettings_app_locator = (By.ID, 'quick-settings-full-app')
@@ -18,11 +18,8 @@ class UtilityTray(Base):
     _quick_settings_full_app_locator = (By.ID, 'quick-settings-full-app')

     def wait_for_notification_container_displayed(self):
-        # Marionette cannot read the displayed state of the notification
-        # container so we wait for the gripper to reach its expanded state
-        utility_tray = self.marionette.find_element(*self._notifications_locator)
-        utility_tray_bottom = utility_tray.location['y'] + utility_tray.size['height'];
-        self.wait_for_condition(lambda m: m.find_element(*self._grippy_locator).location['y'] >= utility_tray_bottom)
+        # Marionette cannot read the displayed state of the notification container so we wait for its location
+        self.wait_for_condition(lambda m: m.find_element(*self._notification_container_locator).location['y'] == 54)

     @property
     def notifications(self):
diff --git a/tests/python/gaia-ui-tests/gaiatest/gaia_test.py b/tests/python/gaia-ui-tests/gaiatest/gaia_test.py
index 9f6b39a..84a4c7a 100644
--- a/tests/python/gaia-ui-tests/gaiatest/gaia_test.py
+++ b/tests/python/gaia-ui-tests/gaiatest/gaia_test.py
@@ -90,15 +90,8 @@ class GaiaApps(object):
         assert result, "Failed to kill app with name '%s'" % app.name

     def kill_all(self):
-        # First we attempt to kill the FTU, we treat it as a user app
-        for app in self.running_apps(include_system_apps=True):
-            if app.origin == 'app://ftu.gaiamobile.org':
-                self.kill(app)
-                break
-
-        # Now kill the user apps
         self.marionette.switch_to_frame()
-        self.marionette.execute_async_script("GaiaApps.killAll();")
+        self.marionette.execute_async_script("GaiaApps.killAll()")

     @property
     def installed_apps(self):
@@ -118,17 +111,11 @@ class GaiaApps(object):
                     name=app['manifest']['name']))
         return result

-    def running_apps(self, include_system_apps=False):
-        '''  Returns a list of running apps
-        Args:
-            include_system_apps: Includes otherwise hidden System apps in the list
-        Returns:
-            A list of GaiaApp objects representing the running apps.
-        '''
-        include_system_apps = json.dumps(include_system_apps)
+    @property
+    def running_apps(self):
         self.marionette.switch_to_frame()
         apps = self.marionette.execute_script(
-            "return GaiaApps.getRunningApps(%s);" % include_system_apps)
+            'return GaiaApps.getRunningApps();')
         result = []
         for app in [a[1] for a in apps.items()]:
             result.append(GaiaApp(origin=app['origin'], name=app['name']))
@@ -370,7 +357,6 @@ class GaiaData(object):
         return files

     def send_sms(self, number, message):
-        self.marionette.switch_to_frame()
         import json
         number = json.dumps(number)
         message = json.dumps(message)
@@ -531,16 +517,13 @@ class GaiaDevice(object):
         self.marionette.wait_for_port()
         self.marionette.start_session()

-        self.wait_for_b2g_ready(timeout)
-
-        # Reset the storage path for desktop B2G
-        self._set_storage_path()
-
-    def wait_for_b2g_ready(self, timeout):
         # Wait for the homescreen to finish loading
         Wait(self.marionette, timeout).until(expected.element_present(
             By.CSS_SELECTOR, '#homescreen[loading-state=false]'))

+        # Reset the storage path for desktop B2G
+        self._set_storage_path()
+
     @property
     def is_b2g_running(self):
         return 'b2g' in self.manager.shellCheckOutput(['toolbox', 'ps'])
@@ -643,39 +626,6 @@ class GaiaDevice(object):
         result = self.marionette.execute_async_script('GaiaLockScreen.unlock()')
         assert result, 'Unable to unlock screen'

-    def change_orientation(self, orientation):
-        """  There are 4 orientation states which the phone can be passed in:
-        portrait-primary(which is the default orientation), landscape-primary, portrait-secondary and landscape-secondary
-        """
-        self.marionette.execute_async_script("""
-            if (arguments[0] === arguments[1]) {
-              marionetteScriptFinished();
-            }
-            else {
-              var expected = arguments[1];
-              window.screen.onmozorientationchange = function(e) {
-                console.log("Received 'onmozorientationchange' event.");
-                waitFor(
-                  function() {
-                    window.screen.onmozorientationchange = null;
-                    marionetteScriptFinished();
-                  },
-                  function() {
-                    return window.screen.mozOrientation === expected;
-                  }
-                );
-              };
-              console.log("Changing orientation to '" + arguments[1] + "'.");
-              window.screen.mozLockOrientation(arguments[1]);
-            };""", script_args=[self.screen_orientation, orientation])
-
-    @property
-    def screen_width(self):
-        return self.marionette.execute_script('return window.screen.width')
-
-    @property
-    def screen_orientation(self):
-        return self.marionette.execute_script('return window.screen.mozOrientation')

 class GaiaTestCase(MarionetteTestCase, B2GTestCaseMixin):
     def __init__(self, *args, **kwargs):
@@ -792,7 +742,7 @@ class GaiaTestCase(MarionetteTestCase, B2GTestCaseMixin):
         if self.data_layer.get_setting('lockscreen.enabled'):
             self.device.unlock()

-        # kill the FTU and any open, user-killable apps
+        # kill any open apps
         self.apps.kill_all()

         if full_reset:
@@ -870,6 +820,40 @@ class GaiaTestCase(MarionetteTestCase, B2GTestCaseMixin):
     def resource(self, filename):
         return os.path.abspath(os.path.join(os.path.dirname(__file__), 'resources', filename))

+    def change_orientation(self, orientation):
+        """  There are 4 orientation states which the phone can be passed in:
+        portrait-primary(which is the default orientation), landscape-primary, portrait-secondary and landscape-secondary
+        """
+        self.marionette.execute_async_script("""
+            if (arguments[0] === arguments[1]) {
+              marionetteScriptFinished();
+            }
+            else {
+              var expected = arguments[1];
+              window.screen.onmozorientationchange = function(e) {
+                console.log("Received 'onmozorientationchange' event.");
+                waitFor(
+                  function() {
+                    window.screen.onmozorientationchange = null;
+                    marionetteScriptFinished();
+                  },
+                  function() {
+                    return window.screen.mozOrientation === expected;
+                  }
+                );
+              };
+              console.log("Changing orientation to '" + arguments[1] + "'.");
+              window.screen.mozLockOrientation(arguments[1]);
+            };""", script_args=[self.screen_orientation, orientation])
+
+    @property
+    def screen_width(self):
+        return self.marionette.execute_script('return window.screen.width')
+
+    @property
+    def screen_orientation(self):
+        return self.marionette.execute_script('return window.screen.mozOrientation')
+
     def wait_for_element_present(self, by, locator, timeout=None):
         return Wait(self.marionette, timeout, ignored_exceptions=NoSuchElementException).until(
             lambda m: m.find_element(by, locator))
diff --git a/tests/python/gaia-ui-tests/gaiatest/mixins/gaia.py b/tests/python/gaia-ui-tests/gaiatest/mixins/gaia.py
index 8d54356..85e0b3d 100644
--- a/tests/python/gaia-ui-tests/gaiatest/mixins/gaia.py
+++ b/tests/python/gaia-ui-tests/gaiatest/mixins/gaia.py
@@ -25,7 +25,7 @@ class GaiaTestRunnerMixin(object):
     def __init__(self, **kwargs):
         width = 80
         if not (self.testvars.get('acknowledged_risks') is True or os.environ.get('GAIATEST_ACKNOWLEDGED_RISKS')):
-            url = 'http://gaiatest.readthedocs.org/en/latest/testrunner.html#risks'
+            url = 'https://developer.mozilla.org/en-US/docs/Gaia_Test_Runner#Risks'
             heading = 'Acknowledge risks'
             message = 'These tests are destructive and may remove data from the target Firefox OS instance as well ' \
                       'as using services that may incur costs! Before you can run these tests you must follow the ' \
diff --git a/tests/python/gaia-ui-tests/gaiatest/mocks/mock_contact.py b/tests/python/gaia-ui-tests/gaiatest/mocks/mock_contact.py
index e201fe3..26aa487 100644
--- a/tests/python/gaia-ui-tests/gaiatest/mocks/mock_contact.py
+++ b/tests/python/gaia-ui-tests/gaiatest/mocks/mock_contact.py
@@ -51,14 +51,6 @@ class MockContact(dict):
     def __getattr__(self, attr):
         return self[attr]

-    # Remove key when passing None values
-    def update(self, *args, **kwargs):
-        dict.update(self, *args, **kwargs)
-        d = self.copy()
-        for k,v in d.iteritems():
-            if v is None:
-                del self[k]
-
     def create_mozcontact(self):
         """
         Returns the MockContact dictionary in a format compatible with the
diff --git a/tests/python/gaia-ui-tests/gaiatest/runtests.py b/tests/python/gaia-ui-tests/gaiatest/runtests.py
index 0012a6b..7aa4d53 100644
--- a/tests/python/gaia-ui-tests/gaiatest/runtests.py
+++ b/tests/python/gaia-ui-tests/gaiatest/runtests.py
@@ -55,20 +55,6 @@ class GaiaTestRunner(BaseMarionetteTestRunner, GaiaTestRunnerMixin,
                                               version=__version__, **kwargs)
         self.test_handlers = [GaiaTestCase]

-    def start_httpd(self, need_external_ip):
-        super(GaiaTestRunner, self).start_httpd(need_external_ip)
-        self.httpd.urlhandlers.append({
-            'method': 'GET',
-            'path': '.*\.webapp',
-            'function': self.webapp_handler})
-
-    def webapp_handler(self, request):
-        with open(os.path.join(self.server_root, request.path[1:]), 'r') as f:
-            data = f.read()
-        return (200, {
-            'Content-type': 'application/x-web-app-manifest+json',
-            'Content-Length': len(data)}, data)
-

 def main():
     cli(runner_class=GaiaTestRunner, parser_class=GaiaTestOptions)
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/endurance/test_endurance_background_apps.py b/tests/python/gaia-ui-tests/gaiatest/tests/endurance/test_endurance_background_apps.py
index bb7f91b..2f0068f 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/endurance/test_endurance_background_apps.py
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/endurance/test_endurance_background_apps.py
@@ -38,7 +38,7 @@ class TestEnduranceBackgroundApps(GaiaEnduranceTestCase):
     def background_apps(self):
         # Verify each app is running
         self.marionette.switch_to_frame()
-        running_apps = [a.name.lower() for a in self.apps.running_apps()]
+        running_apps = [a.name.lower() for a in self.apps.running_apps]

         for expected_app in self.app_list:
             self.assertTrue(expected_app in running_apps, '%s app should be running!' % expected_app)
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/functional/browser/test_browser_bookmark.py b/tests/python/gaia-ui-tests/gaiatest/tests/functional/browser/test_browser_bookmark.py
index b993510..372c017 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/functional/browser/test_browser_bookmark.py
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/functional/browser/test_browser_bookmark.py
@@ -40,7 +40,6 @@ class TestBrowserBookmark(GaiaTestCase):
         self.device.touch_home_button()

         homescreen = Homescreen(self.marionette)
-        homescreen.wait_for_app_icon_present(self.bookmark_title)
         self._bookmark_added = homescreen.is_app_installed(self.bookmark_title)

         self.assertTrue(self._bookmark_added, 'The bookmark %s was not found to be installed on the home screen.' % self.bookmark_title)
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/functional/clock/test_clock_create_new_alarm.py b/tests/python/gaia-ui-tests/gaiatest/tests/functional/clock/test_clock_create_new_alarm.py
index dfacadb..7fcb965 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/functional/clock/test_clock_create_new_alarm.py
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/functional/clock/test_clock_create_new_alarm.py
@@ -49,22 +49,20 @@ class TestClockCreateNewAlarm(GaiaTestCase):
         self.assertEqual(len(alarms), 1)
         self.assertEqual(alarms[0].label, alarm_label_text)

-        alarm_time = self.clock.alarms[0].time()
         # Tap to Edit alarm
         edit_alarm = alarms[0].tap()

-        time_picker = edit_alarm.tap_time()
-
-        time_picker.spin_hour()
-        time_picker.spin_minute()
-        time_picker.spin_hour24()
-
-        time_picker.tap_done()
+        # TODO: change alarm time after Bug 946130 is fixed
+        # edit_alarm.tap_time()
+        # self.marionette.switch_to_frame()
+        # edit_alarm.spin_hour()
+        # edit_alarm.spin_minute()
+        # edit_alarm.spin_hour24()

         edit_alarm.tap_done()
         self.clock.dismiss_banner()

-        self.assertNotEqual(self.clock.alarms[0].time, alarm_time)
+        # TODO: assert that alarm time has changed after Bug 946130 is fixed

         # turn off the alarm
         self.clock.alarms[0].tap_checkbox()
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/functional/contacts/manifest.ini b/tests/python/gaia-ui-tests/gaiatest/tests/functional/contacts/manifest.ini
index 5edfdbd..dc5fad9 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/functional/contacts/manifest.ini
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/functional/contacts/manifest.ini
@@ -13,7 +13,6 @@ carrier = true

 [test_edit_contact.py]
 smoketest = true
-disabled = Bug 1041510 - [v2.1] Updating a contact causes the phone to restart

 [test_sms_contact.py]
 skip-if = device == "desktop"
@@ -23,12 +22,10 @@ smoketest = true
 [test_add_photo_to_contact.py]
 sdcard = true
 smoketest = true
-disabled = Bug 1041510 - [v2.1] Updating a contact causes the phone to restart

 [test_sort_contacts.py]

 [test_delete_contact.py]
-disabled = Bug 1041510 - [v2.1] Updating a contact causes the phone to restart

 [test_add_contact_to_favorites.py]

@@ -44,4 +41,3 @@ sdcard = true

 [test_import_contacts_from_gmail.py]
 online = true
-disabled = Bug 1041510 - [v2.1] Updating a contact causes the phone to restart
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/functional/dialer/manifest.ini b/tests/python/gaia-ui-tests/gaiatest/tests/functional/dialer/manifest.ini
index 911b968..219115a 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/functional/dialer/manifest.ini
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/functional/dialer/manifest.ini
@@ -18,7 +18,6 @@ skip-if = device == "desktop"
 [test_call_log_all_calls.py]
 smoketest = true
 skip-if = device == "desktop"
-disabled = Bug 1041510 - [v2.1] Updating a contact causes the phone to restart

 [test_dialer_find_contact.py]
 skip-if = device == "desktop"
@@ -26,7 +25,3 @@ skip-if = device == "desktop"
 [test_dialer_receive_call.py]
 smoketest = true
 skip-if = device == "desktop"
-
-[test_dialer_receive_call_with_locked_screen.py]
-smoketest = true
-skip-if = device == "desktop"
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/functional/dialer/test_MMI.py b/tests/python/gaia-ui-tests/gaiatest/tests/functional/dialer/test_MMI.py
index 23e45bd..d3b6ec4 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/functional/dialer/test_MMI.py
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/functional/dialer/test_MMI.py
@@ -21,7 +21,4 @@ class TestMMI(GaiaTestCase):
         phone.keypad.dial_phone_number(IMEI_CODE)

         attention_screen = AttentionScreen(self.marionette)
-
-        # Go through all expected IMEIs and check they are in the message
-        for imei in self.testvars['imei']:
-            self.assertIn(imei, attention_screen.message)
+        self.assertEqual(attention_screen.message, self.testvars['imei'])
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/functional/dialer/test_dialer_receive_call_with_locked_screen.py b/tests/python/gaia-ui-tests/gaiatest/tests/functional/dialer/test_dialer_receive_call_with_locked_screen.py
deleted file mode 100644
index aa40770..0000000
--- a/tests/python/gaia-ui-tests/gaiatest/tests/functional/dialer/test_dialer_receive_call_with_locked_screen.py
+++ /dev/null
@@ -1,60 +0,0 @@
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-
-from marionette import SkipTest
-
-from gaiatest import GaiaTestCase
-from gaiatest.apps.phone.regions.call_screen import CallScreen
-from gaiatest.utils.plivo.plivo_util import PlivoUtil
-
-
-class TestReceiveCallScreenLocked(GaiaTestCase):
-
-    def setUp(self):
-        try:
-            self.testvars['plivo']
-        except KeyError:
-            raise SkipTest('Plivo account details not present in test variables')
-
-        GaiaTestCase.setUp(self)
-
-    def test_receive_call_with_locked_screen(self):
-        """Make a phone call from Plivo to the phone."""
-        PLIVO_TIMEOUT = 30
-        self.call_uuid = False
-
-        self.plivo = PlivoUtil(
-            self.testvars['plivo']['auth_id'],
-            self.testvars['plivo']['auth_token'],
-            self.testvars['plivo']['phone_number']
-        )
-
-        self.device.lock()
-        self.call_uuid = self.plivo.make_call(
-            to_number=self.testvars['carrier']['phone_number'].replace('+', ''),
-            timeout=PLIVO_TIMEOUT)
-
-        # Wait for the incoming call screen to show up
-        call_screen = CallScreen(self.marionette)
-        call_screen.wait_for_incoming_call_with_locked_screen()
-
-        # Reject the call
-        call_screen.reject_call()
-
-        # Check that the screen is still locked
-        self.assertTrue(self.device.is_locked)
-
-    def tearDown(self):
-        # Switch back to main frame before Marionette loses track bug #840931
-        self.marionette.switch_to_frame()
-
-        # In case an assertion fails this will still kill the call
-        # An open call creates problems for future tests
-        self.data_layer.kill_active_call()
-
-        # Also ask Plivo to kill the call if needed
-        if self.call_uuid:
-            self.plivo.hangup_call(self.call_uuid)
-
-        GaiaTestCase.tearDown(self)
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/functional/ftu/test_ftu_skip_tour.py b/tests/python/gaia-ui-tests/gaiatest/tests/functional/ftu/test_ftu_skip_tour.py
index 5f610bc..eaa96aa 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/functional/ftu/test_ftu_skip_tour.py
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/functional/ftu/test_ftu_skip_tour.py
@@ -55,7 +55,7 @@ class TestFtu(GaiaTestCase):
                 self.testvars['wifi']['ssid']).get_attribute('class'))

         self.assertTrue(self.data_layer.is_wifi_connected(self.testvars['wifi']),
-                        "WiFi was not connected via FTU app")
+		    "WiFi was not connected via FTU app")

         self.apps.switch_to_displayed_app()

@@ -71,8 +71,8 @@ class TestFtu(GaiaTestCase):
         # Disable geolocation
         self.ftu.disable_geolocation()
         self.wait_for_condition(
-            lambda m: not self.data_layer.get_setting('geolocation.enabled'),
-            message='Geolocation was not disabled by the FTU app')
+		        lambda m: not self.data_layer.get_setting('geolocation.enabled'),
+		        message='Geolocation was not disabled by the FTU app')
         self.ftu.tap_next_to_import_contacts_section()

         # Tap import from SIM
@@ -87,8 +87,8 @@ class TestFtu(GaiaTestCase):
         self.ftu.tap_next_to_welcome_browser_section()

         # Tap the statistics box and check that it sets a setting
+        # TODO assert via settings API that this is set. Currently it is not used
         self.ftu.tap_statistics_checkbox()
-        self.assertTrue(self.data_layer.get_setting('debug.performance_data.shared'))
         self.ftu.tap_next_to_privacy_browser_section()

         # Enter a dummy email address and check it set inside the os
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/functional/ftu/test_ftu_skip_tour_desktopb2g.py b/tests/python/gaia-ui-tests/gaiatest/tests/functional/ftu/test_ftu_skip_tour_desktopb2g.py
index 4ed9e73..2d5cf42 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/functional/ftu/test_ftu_skip_tour_desktopb2g.py
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/functional/ftu/test_ftu_skip_tour_desktopb2g.py
@@ -43,8 +43,8 @@ class TestFtu(GaiaTestCase):
         self.ftu.tap_next_to_welcome_browser_section()

         # Tap the statistics box and check that it sets a setting
+        # TODO assert via settings API that this is set. Currently it is not used
         self.ftu.tap_statistics_checkbox()
-        self.assertTrue(self.data_layer.get_setting('debug.performance_data.shared'))
         self.ftu.tap_next_to_privacy_browser_section()

         # Enter a dummy email address and check it set inside the os
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/functional/gallery/test_gallery_view.py b/tests/python/gaia-ui-tests/gaiatest/tests/functional/gallery/test_gallery_view.py
index faa4a1a..1cef53f 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/functional/gallery/test_gallery_view.py
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/functional/gallery/test_gallery_view.py
@@ -28,29 +28,29 @@ class TestGallery(GaiaTestCase):

         #  Verify that the screen orientation is in portrait mode
         self.assertTrue(image.is_photo_toolbar_displayed)
-        self.assertEqual('portrait-primary', self.device.screen_orientation)
-        self.assertEqual(self.device.screen_width, image.photo_toolbar_width)
+        self.assertEqual('portrait-primary', self.screen_orientation)
+        self.assertEqual(self.screen_width, image.photo_toolbar_width)

         #  Change the screen orientation to landscape mode and verify that the screen is in landscape mode
-        self.device.change_orientation('landscape-primary')
+        self.change_orientation('landscape-primary')

         # Here we sleep only to give visual feedback when observing the test run
         time.sleep(1)
         self.assertTrue(image.is_photo_toolbar_displayed)
-        self.assertEqual('landscape-primary', self.device.screen_orientation)
-        self.assertEqual(self.device.screen_width, image.photo_toolbar_width)
+        self.assertEqual('landscape-primary', self.screen_orientation)
+        self.assertEqual(self.screen_width, image.photo_toolbar_width)

         #  Unlock the screen so that it can be changed back to portrait mode
         self.marionette.execute_script('window.screen.mozUnlockRotation')

         #  Change the screen orientation back to portrait-primary and verify the screen is in portrait mode
-        self.device.change_orientation('portrait-primary')
+        self.change_orientation('portrait-primary')

         # Here we sleep only to give visual feedback when observing the test run
         time.sleep(1)
         self.assertTrue(image.is_photo_toolbar_displayed)
-        self.assertEqual('portrait-primary', self.device.screen_orientation)
-        self.assertEqual(self.device.screen_width, image.photo_toolbar_width)
+        self.assertEqual('portrait-primary', self.screen_orientation)
+        self.assertEqual(self.screen_width, image.photo_toolbar_width)

     def tearDown(self):
         self.marionette.execute_script('window.screen.mozUnlockRotation')
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/functional/homescreen/manifest.ini b/tests/python/gaia-ui-tests/gaiatest/tests/functional/homescreen/manifest.ini
index 1d6060a..d528b71 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/functional/homescreen/manifest.ini
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/functional/homescreen/manifest.ini
@@ -6,13 +6,10 @@ smoketest = false

 [test_homescreen_delete_app.py]
 smoketest = true
-disabled = Bug 1041510 - [v2.1] Updating a contact causes the phone to restart

 [test_homescreen_edit_mode.py]
-disabled = Bug 1041510 - [v2.1] Updating a contact causes the phone to restart

 [test_homescreen_launch_app.py]

 [test_homescreen_move_app.py]
 smoketest = true
-disabled = Bug 1041510 - [v2.1] Updating a contact causes the phone to restart
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/functional/messages/test_sms_notification.py b/tests/python/gaia-ui-tests/gaiatest/tests/functional/messages/test_sms_notification.py
index 3773033..897abc9 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/functional/messages/test_sms_notification.py
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/functional/messages/test_sms_notification.py
@@ -23,4 +23,4 @@ class TestSmsNotification(GaiaTestCase):
                     message="Notification did not appear. SMS database dump: %s " % self.data_layer.get_all_sms())
         system.wait_for_notification_toaster_not_displayed()

-        self.assertTrue(any("Messages" in app.name for app in self.apps.running_apps()))
+        self.assertTrue(any("Messages" in app.name for app in self.apps.running_apps))
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/functional/music/manifest.ini b/tests/python/gaia-ui-tests/gaiatest/tests/functional/music/manifest.ini
index f1ba73e..f27f84a 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/functional/music/manifest.ini
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/functional/music/manifest.ini
@@ -7,7 +7,6 @@ smoketest = false
 smoketest = true
 # No MP3 codec on Travis CI
 skip-if = device == "desktop"
-disabled = Bug 1041510 - [v2.1] Updating a contact causes the phone to restart

 [test_music_empty.py]

@@ -15,4 +14,3 @@ disabled = Bug 1041510 - [v2.1] Updating a contact causes the phone to restart
 smoketest = true
 # Bug 1008939 - 3GP audio file won't play on desktopb2g
 skip-if = device == "desktop"
-disabled = Bug 1041510 - [v2.1] Updating a contact causes the phone to restart
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/functional/settings/test_settings_change_keyboard_language.py b/tests/python/gaia-ui-tests/gaiatest/tests/functional/settings/test_settings_change_keyboard_language.py
index 22d3284..6167b4a 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/functional/settings/test_settings_change_keyboard_language.py
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/functional/settings/test_settings_change_keyboard_language.py
@@ -19,14 +19,17 @@ class TestChangeKeyboardLanguage(GaiaTestCase):
         settings.launch()
         keyboard_settings = settings.open_keyboard_settings()

+        # Tap on active keyboard link
+        select_keyboard = keyboard_settings.tap_selected_keyboards()
+
         # Tap 'add more keyboards' button
-        add_more_keyboards = keyboard_settings.tap_add_more_keyboards()
+        add_more_keyboards = select_keyboard.tap_add_more_keyboards()

         # Select keyboard language, then click back to make it "stick"
         add_more_keyboards.select_language(u'Espa\u00F1ol')
         add_more_keyboards.go_back()

-        keyboard_settings.wait_for_built_in_keyboard(u'Espa\u00F1ol')
+        select_keyboard.wait_for_built_in_keyboard(u'Espa\u00F1ol')

         # launch the Contacts app to verify the keyboard layout
         contacts_app = Contacts(self.marionette)
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/functional/settings/test_settings_device_info.py b/tests/python/gaia-ui-tests/gaiatest/tests/functional/settings/test_settings_device_info.py
index 5df21c4..e9771c9 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/functional/settings/test_settings_device_info.py
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/functional/settings/test_settings_device_info.py
@@ -20,9 +20,8 @@ class TestSettingsDeviceInfo(GaiaTestCase):

         # open more info panel and check that fields are populated
         more_info = device_info.tap_more_info()
-        for item in ('os_version', 'hardware_revision', 'mac_address', 'imei1', 'imei2',
+        for item in ('os_version', 'hardware_revision', 'mac_address', 'imei',
                      'iccid', 'platform_version', 'build_id', 'update_channel',
                      'git_commit_timestamp', 'git_commit_hash'):
             self.assertTrue(len(getattr(more_info, item)) > 0)
-        self.assertEqual(more_info.imei1, self.testvars['imei'][0])
-        self.assertEqual(more_info.imei2, self.testvars['imei'][1])
+        self.assertEqual(more_info.imei, self.testvars['imei'])
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/functional/settings/test_settings_power_save_mode.py b/tests/python/gaia-ui-tests/gaiatest/tests/functional/settings/test_settings_power_save_mode.py
index 3124093..0a673c0 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/functional/settings/test_settings_power_save_mode.py
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/functional/settings/test_settings_power_save_mode.py
@@ -2,6 +2,8 @@
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.

+import time
+
 from gaiatest import GaiaTestCase
 from gaiatest.apps.settings.app import Settings

@@ -24,11 +26,14 @@ class TestPowerSaveMode(GaiaTestCase):
         battery_settings = settings.open_battery_settings()
         battery_settings.toggle_power_save_mode()

+        # TODO Wait for everything to switch off
+        time.sleep(5)
+
         # Wait for Cell Data to be disabled.
         self.wait_for_condition(lambda m: not self.data_layer.is_cell_data_connected)

-        # Wait for Wi-Fi to be disabled.
-        self.wait_for_condition(lambda m: not self.data_layer.is_wifi_connected(self.testvars['wifi']))
+        # Check if Wi-Fi is disabled.
+        self.assertFalse(self.data_layer.is_wifi_connected(self.testvars['wifi']))

         # Check if Cell Data is disabled.
         self.assertFalse(self.data_layer.get_setting('ril.data.enabled'))
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/functional/system/test_power_button_long_press.py b/tests/python/gaia-ui-tests/gaiatest/tests/functional/system/test_power_button_long_press.py
index a1b8cbb..9c67d2a 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/functional/system/test_power_button_long_press.py
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/functional/system/test_power_button_long_press.py
@@ -5,8 +5,7 @@
 from gaiatest import GaiaTestCase
 from gaiatest.apps.system.regions.sleep_view import SleepScreen

-MENU_ITEMS_HAS_MOBILE = ["Turn on airplane mode", "Ring incoming calls", "Restart", "Power off"]
-MENU_ITEMS_NO_MOBILE = ["Turn on airplane mode", "Restart", "Power off"]
+MENU_ITEMS = ["Turn on airplane mode", "Ring incoming calls", "Restart", "Power off"]


 class TestPowerButton(GaiaTestCase):
@@ -23,12 +22,8 @@ class TestPowerButton(GaiaTestCase):
         self.assertEqual(sleep_menu.title, "Phone")

         sleep_menu_items = [item.name for item in sleep_menu.menu_items]
-        if self.device.has_mobile_connection:
-            for item in MENU_ITEMS_HAS_MOBILE:
-                self.assertIn(item, sleep_menu_items)
-        else:
-            for item in MENU_ITEMS_NO_MOBILE:
-                self.assertIn(item, sleep_menu_items)
+        for item in MENU_ITEMS:
+            self.assertIn(item, sleep_menu_items)

         sleep_menu.tap_cancel_button()

diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/unit/test_kill.py b/tests/python/gaia-ui-tests/gaiatest/tests/unit/test_kill.py
index fc671c9..c6d132a 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/unit/test_kill.py
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/unit/test_kill.py
@@ -7,6 +7,7 @@ import time
 from gaiatest import GaiaTestCase
 from gaiatest.apps.clock.app import Clock
 from gaiatest.apps.calendar.app import Calendar
+from gaiatest.apps.homescreen.app import Homescreen


 class TestKill(GaiaTestCase):
@@ -32,4 +33,4 @@ class TestKill(GaiaTestCase):
         self.check_no_apps_running()

     def check_no_apps_running(self):
-        self.assertEqual([a.name for a in self.apps.running_apps()], [])
+        self.assertEqual([a.name for a in self.apps.running_apps], [Homescreen.name])
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/unit/test_killall.py b/tests/python/gaia-ui-tests/gaiatest/tests/unit/test_killall.py
index 1a9402c..988152b 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/unit/test_killall.py
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/unit/test_killall.py
@@ -7,6 +7,7 @@ import time
 from gaiatest import GaiaTestCase
 from gaiatest.apps.clock.app import Clock
 from gaiatest.apps.calendar.app import Calendar
+from gaiatest.apps.homescreen.app import Homescreen


 class TestKillAll(GaiaTestCase):
@@ -40,4 +41,4 @@ class TestKillAll(GaiaTestCase):
         self.apps.kill_all()

     def check_no_apps_running(self):
-        self.assertEqual([a.name for a in self.apps.running_apps()], [])
+        self.assertEqual([a.name for a in self.apps.running_apps], [Homescreen.name])
diff --git a/tests/python/gaia-ui-tests/gaiatest/tests/unit/test_launch_l10n.py b/tests/python/gaia-ui-tests/gaiatest/tests/unit/test_launch_l10n.py
index 4bc8627..580522e 100644
--- a/tests/python/gaia-ui-tests/gaiatest/tests/unit/test_launch_l10n.py
+++ b/tests/python/gaia-ui-tests/gaiatest/tests/unit/test_launch_l10n.py
@@ -26,7 +26,7 @@ class TestLaunchL10n(GaiaTestCase):
             self.apps.launch(app)

         for app in self.test_apps.values():
-            self.assertIn(app.lower(), [a.name.lower() for a in self.apps.running_apps()])
+            self.assertIn(app.lower(), [a.name.lower() for a in self.apps.running_apps])

     def test_launch_by_localised_name(self):
         '''
@@ -40,7 +40,7 @@ class TestLaunchL10n(GaiaTestCase):
             self.apps.launch(app)

         for app in self.test_apps.values():
-            self.assertIn(app.lower(), [a.name.lower() for a in self.apps.running_apps()])
+            self.assertIn(app.lower(), [a.name.lower() for a in self.apps.running_apps])

     def tearDown(self):
         # switch back to the default locale
diff --git a/tests/python/runner-service/runner_service/__init__.py b/tests/python/runner-service/runner_service/__init__.py
deleted file mode 100644
index 798eb94..0000000
--- a/tests/python/runner-service/runner_service/__init__.py
+++ /dev/null
@@ -1,5 +0,0 @@
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-
-import runintegration
diff --git a/tests/python/runner-service/runner_service/arguments.py b/tests/python/runner-service/runner_service/arguments.py
deleted file mode 100644
index e0a2999..0000000
--- a/tests/python/runner-service/runner_service/arguments.py
+++ /dev/null
@@ -1,45 +0,0 @@
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-
-from argparse import ArgumentParser
-
-class GaiaIntegrationParser(ArgumentParser):
-    """Usage: %prog [args]"""
-
-    args = [
-        [["--buildapp"],
-        { "dest": "buildapp",
-          "choices": ["emulator", "device", "desktop"],
-          "default": "desktop",
-          "help": "The type of build to run gaia-integration tests on.",
-        }],
-        [["--manifest"],
-        { "dest": "manifest",
-          "default": None,
-          "help": "Path to a test manifest to use."
-        }],
-        [["--b2gpath"],
-        { "dest": "b2g_home",
-          "default": None,
-          "help": "Path to b2g directory."
-        }],
-    ]
-
-    def __init__(self, *args, **kwargs):
-        ArgumentParser.__init__(self, *args, **kwargs)
-
-        for arg, value in self.args:
-            self.add_argument(*arg, **value)
-
-    def parse_args(self, *args, **kwargs):
-        args = ArgumentParser.parse_args(self, *args, **kwargs)
-
-        if args.b2g_home and args.buildapp == 'desktop':
-            self.error("Can only specify --b2gpath with a device or emulator buildapp.")
-
-        if not args.b2g_home and args.buildapp == 'emulator':
-            self.error("Must specify --b2gpath with a %s buildapp." % args.buildapp)
-
-        return args
-
diff --git a/tests/python/runner-service/runner_service/handlers/__init__.py b/tests/python/runner-service/runner_service/handlers/__init__.py
deleted file mode 100644
index 189492a..0000000
--- a/tests/python/runner-service/runner_service/handlers/__init__.py
+++ /dev/null
@@ -1,11 +0,0 @@
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-
-from . import runner
-
-runner_handlers = {
-    'desktop': runner.DesktopHandler,
-    'device': runner.DeviceHandler,
-    'emulator': runner.EmulatorHandler,
-}
diff --git a/tests/python/runner-service/runner_service/handlers/runner.py b/tests/python/runner-service/runner_service/handlers/runner.py
deleted file mode 100644
index 458df5f..0000000
--- a/tests/python/runner-service/runner_service/handlers/runner.py
+++ /dev/null
@@ -1,118 +0,0 @@
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-
-from abc import ABCMeta, abstractmethod, abstractproperty
-import os
-
-from mozprofile import Profile
-from mozrunner import (
-    B2GDesktopRunner,
-    B2GDeviceRunner,
-    B2GEmulatorRunner
-)
-
-class MozrunnerHandler(object):
-    __metaclass__ = ABCMeta
-    runner = None
-
-    @abstractmethod
-    def start_runner(self, data):
-        pass
-
-    @abstractmethod
-    def stop_runner(self, data):
-        pass
-
-    def cleanup(self):
-        if self.runner:
-            self.runner.cleanup()
-
-
-class DesktopHandler(MozrunnerHandler):
-
-    def start_runner(self, data):
-        binary = os.path.join(data.get('target'), 'b2g-bin')
-        options = data.get('options', {});
-
-        profile = Profile(profile=options.get('profile'))
-        cmdargs = options.get('argv', [])
-
-        if options.get('screen') and \
-           hasattr(options.screen, 'width') and \
-           hasattr(options.screen, 'height'):
-            screen = '--screen=%sx%s' % (options.screen.width, options.screen.height)
-            if hasattr(options.screen, 'dpi'):
-                screen = '%s@%s' % (screen, options.screen.dpi)
-            cmdargs.append(screen)
-
-        if options.get('noRemote', True):
-            cmdargs.append('-no-remote')
-
-        if options.get('url'):
-            cmdargs.append(options['url'])
-
-        if options.get('chrome'):
-            cmdargs.extend(['-chrome', options['chrome']])
-
-        if options.get('startDebugger'):
-            cmdargs.extend(['-start-debugger-server', options['startDebugger']])
-
-        process_args = {'processOutputLine': [lambda x: x[:1]]}
-        self.runner = B2GDesktopRunner(binary, cmdargs=cmdargs, profile=profile, process_args=process_args)
-        self.runner.start()
-
-    def stop_runner(self, data):
-        self.runner.stop()
-        self.runner = None
-
-
-class EmulatorHandler(MozrunnerHandler):
-
-    def __init__(self, b2g_home, *args, **kwargs):
-        MozrunnerHandler.__init__(self, *args, **kwargs)
-
-        process_args = {'processOutputLine': [lambda x: x[:1]]}
-        self.runner = B2GEmulatorRunner(b2g_home=b2g_home, process_args=process_args)
-        self.runner.device.start()
-
-    def start_runner(self, data):
-        options = data.get('options', {})
-        port = options.get('port')
-        profile = Profile(profile=options.get('profile'))
-
-        self.runner.device.setup_port_forwarding(local_port=port, remote_port=port)
-
-        self.runner.profile = profile
-        self.runner.start()
-        if not self.runner.device.wait_for_port(port):
-            raise Exception("Wait for port timed out")
-
-    def stop_runner(self, data):
-        self.runner.stop()
-
-class DeviceHandler(MozrunnerHandler):
-
-    def __init__(self, *args, **kwargs):
-        process_args = { 'stream': open(os.devnull, 'wb'),
-                         'processOutputLine': [lambda x: x[:1]]}
-        self.runner = B2GDeviceRunner(process_args=process_args)
-        self.runner.device.connect()
-
-    def start_runner(self, data):
-        options = data.get('options', {})
-        port = options.get('port')
-        profile = Profile(profile=options.get('profile'))
-
-        self.runner.device.setup_port_forwarding(local_port=port, remote_port=port)
-
-        self.runner.profile = profile
-        self.runner.start()
-
-        self.runner.device.setup_port_forwarding(local_port=port, remote_port=port)
-        if not self.runner.device.wait_for_port(port):
-            raise Exception("Wait for port timed out")
-
-    def stop_runner(self, data):
-        self.runner.stop()
-
diff --git a/tests/python/runner-service/runner_service/listener.py b/tests/python/runner-service/runner_service/listener.py
deleted file mode 100644
index dccd989..0000000
--- a/tests/python/runner-service/runner_service/listener.py
+++ /dev/null
@@ -1,82 +0,0 @@
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-
-from functools import wraps
-import json
-import os
-import tempfile
-
-from mozrunner import B2GDesktopRunner
-from mozprofile import Profile
-import corredor
-
-def call_handlers(func):
-    @wraps(func)
-    def _(cls, data):
-        handler_name = '%s_handlers' % func.__name__[3:]
-        handlers = getattr(cls, handler_name, [])
-        for handler in handlers:
-            handler(data)
-        return func(cls, data)
-    return _
-
-class SocketListener(object):
-    def __init__(self):
-        self.worker = corredor.ExclusivePair()
-        self.worker.bind('ipc:///tmp/marionette_socket_host_worker')
-        self.runner = None
-
-        self.results = []
-        self.sink = corredor.Subscriber()
-        self.sink.bind('ipc:///tmp/mocha_tbpl_reporter_sink')
-
-        self.sink.subscribe('test_end', self.on_test_end)
-        self.sink.subscribe('test_start', self.on_test_start)
-        self.sink.subscribe('test_status', self.on_test_status)
-        self.sink.subscribe('fin', self.on_fin)
-
-        # register callback on profile action
-        self.worker.register_action('start_runner', self.on_start_runner)
-        self.worker.register_action('stop_runner', self.on_stop_runner)
-
-
-    def poll(self):
-        corredor.eventloop.poll((self.worker, self.sink))
-
-    def add_runner_handler(self, rhandler):
-        for action in ['start_runner', 'stop_runner']:
-            handler_name = '%s_handlers' % action
-            if not hasattr(self, handler_name):
-                setattr(self, handler_name, [])
-            getattr(self, handler_name).append(getattr(rhandler, action))
-
-    @call_handlers
-    def on_test_end(self, data):
-        print 'TEST-END | %s' % data['test']
-        self.results.append(data)
-
-    @call_handlers
-    def on_test_start(self, data):
-        print 'TEST-START | %s' % data['test']
-
-    @call_handlers
-    def on_test_status(self, data):
-        print 'TEST-STATUS | %s | %s' % (data['subtest'], data['status'])
-
-    @call_handlers
-    def on_fin(self, data):
-        corredor.eventloop.stop()
-        self.cleanup()
-
-    @call_handlers
-    def on_start_runner(self, data):
-        self.worker.send_json({'action': 'ready_start'})
-
-    @call_handlers
-    def on_stop_runner(self, data):
-        self.worker.send_json({'action': 'ready_stop'})
-
-    def cleanup(self):
-        self.sink.cleanup()
-        self.worker.cleanup()
diff --git a/tests/python/runner-service/runner_service/runintegration.py b/tests/python/runner-service/runner_service/runintegration.py
deleted file mode 100644
index b57b3f9..0000000
--- a/tests/python/runner-service/runner_service/runintegration.py
+++ /dev/null
@@ -1,81 +0,0 @@
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-
-import json
-import os
-import subprocess
-import sys
-import tempfile
-
-from manifestparser import TestManifest
-
-from .arguments import GaiaIntegrationParser
-from .handlers import runner_handlers
-from .listener import SocketListener
-
-here = os.path.abspath(os.path.dirname(__file__))
-gaia_dir = os.path.abspath(os.path.join(here, '../../../../'))
-
-class GaiaIntegrationRunner(object):
-
-    def __init__(self, manifest=None):
-        self.manifest = manifest or os.path.join(gaia_dir, 'shared', 'test',
-                                                 'integration', 'manifest.ini')
-        if self.manifest.endswith('.ini'):
-            self.manifest = self.convert_ini_manifest_to_json(self.manifest)
-
-    def run_gi(self):
-        command = ['make', 'test-integration-test',
-                   'REPORTER=mocha-socket-reporter',
-                   'MARIONETTE_RUNNER_HOST=marionette-socket-host',
-                   'TEST_MANIFEST=%s' % self.manifest,]
-        # TODO use mozprocess?
-        self.proc = subprocess.Popen(command, cwd=gaia_dir)
-
-    @classmethod
-    def convert_ini_manifest_to_json(cls, manifest_path):
-        manifest = TestManifest([manifest_path])
-
-        whitelist = [t['path'] for t in manifest.active_tests(disabled=False)]
-        blacklist = [t for t in manifest.paths() if t not in whitelist]
-
-        whitelist.insert(0, os.path.join(gaia_dir, 'shared', 'test', 'integration', 'setup.js'))
-
-        map(lambda l: [os.path.relpath(p, gaia_dir) for p in l] , (whitelist, blacklist))
-        contents = { 'whitelist': whitelist }
-
-        manifest_path = tempfile.NamedTemporaryFile(suffix='.json').name
-        with open(manifest_path, 'w') as f:
-            f.writelines(json.dumps(contents, indent=2))
-        return manifest_path
-
-    def cleanup(self):
-        if self.proc:
-            self.proc.kill()
-
-
-def cli(args=sys.argv[1:]):
-    parser = GaiaIntegrationParser()
-    args = parser.parse_args(args)
-
-    rhandler_args = {}
-    if args.b2g_home:
-        rhandler_args['b2g_home'] = args.b2g_home
-    rhandler = runner_handlers[args.buildapp](**rhandler_args)
-
-    listener = SocketListener()
-    listener.add_runner_handler(rhandler)
-
-    integration = GaiaIntegrationRunner(manifest=args.manifest)
-    integration.run_gi()
-
-    try:
-        listener.poll()
-    finally:
-        integration.cleanup()
-        listener.cleanup()
-        #rhandler.cleanup()
-
-if __name__ == '__main__':
-    sys.exit(cli())
diff --git a/tests/python/runner-service/setup.py b/tests/python/runner-service/setup.py
deleted file mode 100644
index 187bf21..0000000
--- a/tests/python/runner-service/setup.py
+++ /dev/null
@@ -1,37 +0,0 @@
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this file,
-# You can obtain one at http://mozilla.org/MPL/2.0/.
-
-from setuptools import setup, find_packages
-
-PACKAGE_VERSION = '0.1'
-
-deps = ['corredor >= 0.1',
-        'mozrunner >= 6.2',
-        'mozprofile >= 0.21',
-        'manifestparser >= 0.6']
-
-setup(name='gaia-runner-service',
-      version=PACKAGE_VERSION,
-      description='A utility for running tests over a socket from JS to python',
-      long_description='See https://github.com/mozilla-b2g/gaia/tree/master/tests/python/runner-service',
-      classifiers=['Environment :: Console',
-                   'Intended Audience :: Developers',
-                   'License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)',
-                   'Natural Language :: English',
-                   'Operating System :: OS Independent',
-                   'Programming Language :: Python',
-                   'Topic :: Software Development :: Libraries :: Python Modules',
-                   ],
-      keywords='mozilla',
-      author='Andrew Halberstadt',
-      author_email='ahalberstadt@mozilla.com',
-      license='MPL 2.0',
-      packages=find_packages(),
-      include_package_data=True,
-      zip_safe=False,
-      install_requires=deps,
-      entry_points="""
-        [console_scripts]
-        gaia-integration=runner_service:runintegration.cli
-      """)
diff --git a/tools/extensions/browser-helper@gaiamobile.org/bootstrap.js b/tools/extensions/browser-helper@gaiamobile.org/bootstrap.js
index f1e7cb7..6b5be13 100644
--- a/tools/extensions/browser-helper@gaiamobile.org/bootstrap.js
+++ b/tools/extensions/browser-helper@gaiamobile.org/bootstrap.js
@@ -142,6 +142,7 @@ function startup(data, reason) {
     Cu.import('resource://gre/modules/ContactService.jsm');
     Cu.import('resource://gre/modules/SettingsChangeNotifier.jsm');
     Cu.import('resource://gre/modules/ActivitiesService.jsm');
+    Cu.import('resource://gre/modules/PermissionPromptHelper.jsm');

     var mm = Cc['@mozilla.org/globalmessagemanager;1']
                .getService(Ci.nsIMessageBroadcaster);
