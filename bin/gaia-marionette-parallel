#!/bin/bash

# All options are passed to `./node_modules/.bin/marionette-mocha` so
# you can also use mocha commands like `--grep`, `--timeout` see `--help`
# for more options.
# run tests with a CalDAV server.
if [ "$1" == "RUN_CALDAV_SERVER=1" ]; then
  PIP=$(which pip)
  VIRTUAL_ENV=$(which virtualenv)
  RADICALE=$(which radicale)

  # Make sure we have pip before we install the CalDav server.
  if [ ! -x "$PIP" ]; then
    echo "$SELF: Unable to find pip to install Python packages."
    exit 1
  fi

  if [ ! -x "$VIRTUAL_ENV" ]; then
    echo "Install Virtualenv."
    sudo pip install virtualenv
  fi
  # Go to the isolated Python environment.
  virtualenv ENV
  source ./ENV/bin/activate

  # Install the Radicale CalDAV server for
  # doing testing things with Calendar App.
  # See more in http://radicale.org.
  if [ ! -x "$RADICALE" ]; then
    echo "Install Radicale."
    sudo pip install radicale
  fi
fi

# Find the source of this file
SOURCE="${BASH_SOURCE[0]}"
# Make it an absolute path
DIR="$( cd "$( dirname "$SOURCE" )" && pwd )"

# where all gaia specific customizations for mocha-marionette live.
SHARED=$DIR/../shared/test/integration

# make sure node_modules are 100% up to date
make node_modules

# download b2g-desktop (if its not present)
make -C $DIR/../ b2g

# tests can timeout without the profile-test folder so build it here.
if [ ! -d $DIR/../profile-test ]; then
  PROFILE_FOLDER=profile-test make -C $DIR/../
fi

if [ -z "$TEST_FILES" ]; then
  if [ -z "$APP" ]; then
    TEST_FILES=$(find $DIR/.. -path "*/apps/*/test/marionette/*_test.js" \
                          -or -path "*/dev_apps/*/test/marionette/*_test.js" \
                          -or -path "*/tests/integration/*/*_test.js")
  else
    TEST_FILES=$(find $DIR/.. -path "*/apps/$APP/test/marionette/*_test.js" \
                          -or -path "*/dev_apps/$APP/test/marionette/*_test.js" \
                          -or -path "*/tests/integration/$APP/*_test.js")
  fi
fi

if [ -z "$XULRUNNER_DIRECTORY" ] ; then
  # the xulrunner directory isn't in the environment
  XULRUNNER_DIRECTORY=`ls -d "$DIR/../xulrunner-sdk"*/xulrunner-sdk | sort -nr | head -n1 2> /dev/null`
fi

if [ -z "$XULRUNNER_DIRECTORY" ] ; then
  echo "Couldn't find XULrunner. Please execute this file from 'make' or install XULrunner yourself."
  exit 1
fi

# find xpcshell and put it in the path
XPCSHELL_DIR=$(dirname $(find "$XULRUNNER_DIRECTORY"/bin -type f -name "xpcshell" | head -n 1));


VERBOSE_OPTS=""
if [ "$VERBOSE" ]; then
  VERBOSE_OPTS="--verbose"
fi

# wrap marionette-mocha with gaia's defaults. We also need to alter the paths to
# xpcshell in available for email fake servers.
INVOCATION="./node_modules/.bin/marionette-mocha"
INVOCATION="$INVOCATION --timeout 60s --ui tdd"   # mocha args
INVOCATION="$INVOCATION $VERBOSE_OPTS --profile-builder $SHARED/profile_builder.js --profile-base $SHARED/profile.js $SHARED/setup.js"   # marionette-mocha args
INVOCATION="$INVOCATION %s $@"   # pass along other args
$DIR/../node_modules/.bin/mocha-parallel \
  --cwd $DIR/../ \
  --env "DISPLAY=$DISPLAY PATH=$XPCSHELL_DIR:$PATH" \
  --format "$INVOCATION" \
  --tasks "$TEST_FILES"
