/**
 * Button state:
 *    1. normal
 *        In this state, we don't add any class.
 *    2. focused (class name: focused)
 *        The focused state may be triggered by keyboard or touch/mouse.
 *    3. pressed (class name: pressed)
 *        This state is triggered by user pressed confirm button, mousedown,
 *        and touchdown.
 *    4. released (class name: released)
 *        This state is only for changing duration of transition. We enter this
 *        state when user release the button. After transitionend, we goes back
 *        to focused state.
**/
smart-button {
  font-family: "Fira Sans";
  display: inline-block;
  width: 8rem;
  height: 8rem;
  /* we need to set border to none to remove the button border */
  border: none;
  /* the radius is still make button as round even if we don't have border */
  border-radius: 50%;
  background-color: rgba(0, 0, 0, 0.5);
  background-repeat: no-repeat;
  background-size: 5.4rem auto;
  background-position: center center;

  transition-property: all;
  transition-timing-function: cubic-bezier(0.25, 0, 0, 1.0);
  transition-duration: 0.42s;
}

smart-button.focused {
  outline: 0;
  background-color: #ffffff;
  transform: scale(1.2);
  transition-duration: 0.42s;
}

smart-button.released {
  transition-duration: 0.16s;
}

smart-button.toggled {
  background-color: #00caf2;
}

smart-button.pressed {
  background-color: #00caf2;
  transform: scale(0.8);
  transition-duration: 0.06s;
}

smart-button.disabled {
  background-color: rgba(0, 0, 0, 0.5);
}

smart-button[data-icon]:before {
  width: 5.4rem;
  left: 1.3rem;
  font-size: 5.4rem;
  line-height: 8rem;
  text-align: center;
  color: #ffffff;
  white-space: normal;
  top: 0;
  position: absolute;
}

smart-button[data-icon].focused:before {
  color: #2d2d2d;
}

smart-button[data-icon].toggled:before {
  color: #00caf2;
}

smart-button[data-icon].pressed:before {
  color: #ffffff;
}

smart-button[data-icon].disabled:before {
  color: #ffffff;
  opacity: 0.3;
}

/**
 * Simple Text Button
**/
smart-button[type="simple-text"] {
  color: #dddddd;
  background: none;
  border: none;
  border-radius: 0;

  width: auto;
  height: 8rem;

  line-height: 8rem;
  font-size: 2.4rem;
  -moz-user-select: none;
  padding-left: 2.6rem;
  padding-right: 2.6rem;
}

smart-button[type="simple-text"].focused {
  color: #ffffff;
  background: none;
}

smart-button[type="simple-text"].toggled {
  color: #00caf2;
}

smart-button[type="simple-text"].pressed {
  color: #00caf2;
  background: none;
}

/**
 * End of Simple Text Button
**/


/**
 * App Icons
**/

smart-button[type="app-button"] {
  width: 33.6rem;
  height: 33.6rem;
  position: relative;
  overflow: hidden;
  box-sizing: border-box;
  background-color: transparent;
}

smart-button[type="app-button"].focused {
  transform: scale(1.4);
  border: 0.8rem solid #ffffff;
}

smart-button[type="app-button"].pressed {
  transform: scale(1.2);
  border: 1.0rem solid #ffffff;
}

smart-button[type="app-button"].fullsized {
  background-size: 33.6rem auto;
}

smart-button[type="app-button"].fitted {
  background-size: 22rem auto;
}

/** we use :after as label */
smart-button[type="app-button"]:after {
  content: attr(label);

  position: absolute;
  bottom: 0;
  left: auto;
  right: auto;

  width: 33.6rem;
  height: 8rem;

  padding-top: 1rem;

  line-height: 3rem;
  text-align: center;

  font-size: 2.8rem;
  font-style: italic;
  color: #ffffff;
}

/**
 * text backgorund color
**/
smart-button[type="app-button"][app-type="deck"]:after {
  background-color: transparent;
}

smart-button[type="app-button"][app-type="tv"]:after {
  background-color: #d90c83;
}

smart-button[type="app-button"][app-type="app"]:after {
  background-color: rgba(0, 0, 0, 0.4);
}

smart-button[type="app-button"][app-type="device"]:after {
  background-color: #4a82ea;
}

/**
 * End of App Icons
**/
