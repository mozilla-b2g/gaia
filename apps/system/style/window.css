.appWindow,
.activityWindow {
  position: absolute;
  left: 0;
  border: 0;
  margin: 0;
  padding: 0;
  overflow: hidden;
  top: 2.4rem;
  width: 100%;
  height: 100%;
  background-repeat: no-repeat;
  background-position: center center;

  transform: translateX(0);
}

.appWindow > .appWindow {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@media not all and (-moz-physical-home-button) {
  #screen:not(.software-button-disabled) > #windows > .appWindow {
    bottom: 5rem;
  }
}

.appWindow[transition-state="closed"]:not(.fadeout):not(.homescreen) {
  opacity: 0;
  transform: translateX(0);
}

#screen.software-button-enabled #windows > .appWindow {
  bottom: 5rem;
}

#screen.utility-tray #windows > .appWindow {
  pointer-events: none;
}

.appWindow:not(.homescreen):not(.searchWindow) {
  background-color: black;
}

.appWindow.popupWindow {
  background-color: white;
}

.appWindow:not(.homescreen):not(.searchWindow).render {
  background-image: none !important;
  background-color: transparent;
}

/* mozbrowser iframe layout */

.appWindow > iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: none;
}

.appWindow.navigation:not(.rocketbar) > iframe {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 1rem;
  width: 100%;
  height: calc(100% - 1rem);
}

.appWindow.rocketbar:not(.navigation) > iframe {
  position: absolute;
  top: 5rem;
  left: 0;
  bottom: 0;
  width: 100%;
  height: calc(100% - 5rem);
}

.appWindow.navigation.rocketbar > iframe {
  position: absolute;
  top: 5rem;
  left: 0;
  bottom: 1rem;
  width: 100%;
  height: calc(100% - 6rem);
}

.appWindow .throbber.loading {
  height: 0.3rem;
  background-image: url('../shared/progress.gif');
  background-size: auto 0.3rem;
}

.appWindow:not(.homescreen):not(.searchWindow).render > iframe {
  background-color: #fff;
}

/* app window layout */

#screen.active-statusbar > #windows > .appWindow,
#screen.active-statusbar > #windows > .appWindow.fullscreen-app {
  top: 4rem;
  height: calc(100% - 4rem);
}

.appWindow.enlarge {
  pointer-events: auto;
  animation: openApp 0.3s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

.appWindow.transition-closing.perpendicular {
  animation-duration: 0.1s;
}

.appWindow.from-cardview {
  animation: openAppFromCardView 0.15s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

#screen.task-manager #windows > .appWindow.from-cardview {
  animation: openAppFromTaskManager 0.15s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

/* Opacity increases start up time then we don't use it anymore for opening */
@keyframes openApp {
  0%   { transform: scale(0.2);}
  100% { transform: scale(1.0);}
}

.appWindow.zoom-in {
  transform: scale(1);
  animation: zoom-in 0.3s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

@keyframes zoom-in {
  0%   { transform: scale(1); }
  100% { transform: scale(5); }
}

@keyframes openAppFromCardView {
  0%   { transform: scale(0.8); }
  100% { transform: scale(1.0); }
}

@keyframes openAppFromTaskManager {
  0%   { transform: scale(0.6); }
  100% { transform: scale(1.0); }
}

.appWindow.invoked {
  animation: invokedApp .3s forwards linear;
}

.appWindow.invoking {
  animation: invokingApp .3s forwards linear;
}

/* Invoking app moves out */
@keyframes invokingApp {
  0%   { transform: translateX(0) }
  100% { transform: translateX(calc(-100% - 20px)); }
}

/* Invoked app moves in */
@keyframes invokedApp {
  0%   { transform: translateX(calc(100% + 20px)); }
  100%  { transform: translateX(0); }
}

.appWindow.fade-in {
  animation: fadeInApp 0.6s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

.appWindow.fade-out {
  animation: fadeOutApp 0.6s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

/* Invoking secure app moves out */
@keyframes fadeInApp {
  0%  {
         transform: scale(2.0);
         opacity: 0.0;
      }
  50% {
         transform: scale(1.5);
         opacity: 0.5;
      }
  100% {
         transform: scale(1.0);
         opacity: 1.0;
       }
}

/* Invoked secure app moves in */
@keyframes fadeOutApp {
  0%  {
         transform: scale(1.0);
         opacity: 1.0;
      }
  50% {
         transform: scale(1.5);
         opacity: 0.5;
      }
  100% {
         transform: scale(2);
         opacity: 0.0;
       }
}

#windows.slow-transition .appWindow.transition-closing,
#windows.slow-transition .appWindow.transition-opening {
  animation-duration: 3s;
}

.appWindow.reduce {
  animation: closeApp 0.3s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

.appWindow.transition-opening.perpendicular {
  animation-duration: 0.1s;
  opacity: 0;
}

.appWindow.zoom-out {
  transform: scale(5);
  animation: zoom-out 0.3s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

@keyframes zoom-out {
  0%   { transform: scale(5);}
  100% { transform: scale(1);}
}

.appWindow.to-cardview {
  animation: closeAppTowardsCardView 0.15s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

#screen.task-manager #windows > .appWindow.to-cardview {
  animation: closeAppTowardsTaskManager 0.15s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

/* Prebuild width/height */
#screen:not(.active-statusbar):not(.software-button-enabled):not(:-moz-full-screen-ancestor) > #windows > .appWindow:not(.fullscreen-app),
.appWindow.homescreen {
  top: 2.4rem;
  height: calc(100% - 2.4rem);
  width: 100%;
}

#screen:not(.active-statusbar):not(.software-button-enabled) > #windows > .appWindow.fullscreen-app {
  top: 0;
  height: 100%;
  width: 100%;
}

#screen.active-statusbar:not(.software-button-enabled):not(:-moz-full-screen-ancestor) > #windows > .appWindow {
  top: 4rem;
  height: calc(100% - 4rem);
  width: 100%;
}

#screen.active-statusbar.software-button-enabled:not(:-moz-full-screen-ancestor) > #windows > .appWindow {
  top: 4rem;
  bottom: 5rem;
  height: calc(100% - 5rem - 4rem);
  width: 100%;
}

#screen.software-button-enabled:not(:-moz-full-screen-ancestor) > #windows > .appWindow {
  top: 2.4rem;
  bottom: 5rem;
  height: calc(100% - 5rem - 2.4rem);
  width: 100%;
}

#screen.software-button-enabled:not(.active-statusbar) > #windows > .appWindow.fullscreen-app {
  top: 0;
  bottom: 5rem;
  height: calc(100% - 5rem);
  width: 100%;
}

#screen.active-statusbar:not(.software-button-enabled) > #windows > .appWindow.fullscreen-app {
  top: 4rem;
  bottom: 0;
  height: calc(100% - 4rem);
  width: 100%;
}

@keyframes closeApp {
  0%   { transform: scale(1.0); opacity: 1;}
  100% { transform: scale(0.01); opacity: 0;}
}

@keyframes closeAppTowardsCardView {
  0%   { transform: scale(1.0); }
  100% { transform: scale(0.8); }
}

@keyframes closeAppTowardsTaskManager {
  0%   { transform: scale(1.0); }
  100% { transform: scale(0.6); }
}

.appWindow.back {
  transition: transform 0.25s cubic-bezier(0.7, 0.0, 1.0, 1.0), visibility 0.25s cubic-bezier(0.7, 0.0, 1.0, 1.0);
  transform: scale(0.86);
}

.appWindow.restored {
  transform: none;
  transition: transform 0.25s cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

#screen > #windows > .appWindow.fullscreen-app {
  top: 0;
}

.appWindow > iframe {
  visibility: visible;
}

.appWindow > .fade-overlay {
  background-color: black;
  position: absolute;
  visibility: hidden;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.8;
}

.appWindow.homescreen.fadeout .fade-overlay.hidden {
  visibility: hidden;
}

.appWindow.fadeout .fade-overlay {
  visibility: visible;
}

.appWindow.homescreen.fadeout .fade-overlay {
  opacity: 0.8;
}

.appWindow > .touch-blocker {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  visibility: hidden;
  background: transparent;
  pointer-events: all;
}

.appWindow.transition-closing .touch-blocker,
.appWindow.transition-opening .touch-blocker {
  /* The animation takes .3 seconds so users cannot touch the app while the
   * closing animation is performing */
  visibility: visible;
}

.appWindow > .modal-dialog,
.appWindow > .authentication-dialog,
.authentication-dialog > .authentication-dialog-http {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  visibility: hidden;
}

.appWindow > .contextmenu {
  visibility: visible;
}

/*
 * Because the search input lives in the system app, while the search app
 * lives into its own search window, the context menu for such an application
 * does not cover the whole screen.
 * In order to have it cover the whole screen, the contextmenu which is part of
 * the app window of the search window, is positioned negatively on the y-axis,
 * while overflow is authorize for such window.
 */
.appWindow.searchWindow .contextmenu {
  top: -7rem;
}

.appWindow.searchWindow {
  overflow: visible;
}

.appWindow > .modal-dialog.visible,
.appWindow > .contextmenu.visible,
.appWindow > .authentication-dialog.visible,
.authentication-dialog > .authentication-dialog-http.visible {
  visibility: visible;
}

.appWindow > .modal-dialog > form {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
  visibility: hidden;
}

.appWindow > .modal-dialog input {
  border-radius: 0.2rem;
  height: 4rem;
  font-size: 2rem;
  width: 100%;
  color: white;
  background: none;
  -moz-box-sizing: border-box;
  margin-bottom: 1.5rem; /* not overlap by menu while keyboard pop */
}

/*
 * Because the search input lives in the system app, while the search app
 * lives into its own window, activities windows attached to the search app
 * does not cover the whole screen.
 * In order to cover the whole screen, the activityWindow is positioned to the
 * top of the screen and expanded to cover the whole screen.
 */
.appWindow.searchWindow .activityWindow {
  height: calc(100% + 7rem);
  top: -7rem;
}

.appWindow > .modal-dialog > form.visible {
  visibility: visible;
}

.appWindow > .screenshot-overlay {
  visibility: hidden;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;

  /* We need this to resize hi-res screenshot */
  background-size: cover;
}

.appWindow > .screenshot-overlay.visible {
  visibility: visible;
}

.appWindow > .identification-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;

  background: rgba(255, 255, 255, 0.8);

  opacity: 0;
  transition: opacity 0.2s ease-in;
  will-change: opacity;
}

.appWindow.suspended > .identification-overlay,
.appWindow:not(.active) > .identification-overlay.visible {
  opacity: 1;
}

/* we don't want to show the overlay at all during the opening
   transition (from the homescreen and from the cardview) */
.appWindow.enlarge > .identification-overlay.visible,
.appWindow.from-cardview > .identification-overlay.visible {
  opacity: 0 !important;
  transition: none !important;
}

.identification-overlay > div {
  position: absolute;
  top: calc(50% - 4.65rem);
  left: 1.5rem;
  width: calc(100% - 3rem);
  height: 9.3rem;
}

.identification-overlay > div .icon {
  position: absolute;
  top: 0;
  left: calc(50% - 3rem);
  width: 6rem;
  height: 6rem;

  background-size: contain;
}

.identification-overlay > div .title {
  display: block;
  position: absolute;
  top: 7.5rem;
  left: 0;
  width: 100%;
  padding: 0;

  color: #4d4d4d;
  text-align: center;
  font-size: 1.6rem;
  font-style: italic;
  line-height: 1.8rem;
  text-overflow: ellipsis;
  white-space: nowrap;

  overflow: hidden;
}

.appWindow > iframe.hidden {
  visibility: hidden;
}

/* inline components */

.appWindow > .appWindow {
  z-index: 65536;
}

.appWindow > .touch-blocker {
  z-index: 1026;
}

.appWindow > .fade-overlay {
  z-index: 1025;
}

.appWindow > .identification-overlay {
  z-index: 1024;
}

.appWindow > .screenshot-overlay {
  z-index: 1023;
}

.appWindow > .chrome {
  z-index: 5;
}

.appWindow > .authentication-dialog {
  z-index: 4;
}

.appWindow.slideleft {
  animation: slideLeft 0.3s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

.appWindow.slideright {
  animation: slideRight 0.3s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

.appWindow.slideup {
  animation: slideUp 0.3s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

.appWindow.slidedown {
  animation: slideDown 0.3s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

.appWindow.in-from-left {
  animation: inFromLeft 0.3s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

.appWindow.out-to-right {
  animation: outToRight 0.3s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

@keyframes slideLeft {
  0%   { transform: translateX(100%); }
  100% { transform: translateX(0); }
}

.appWindow > .contextmenu {
  z-index: 2;
}

@keyframes inFromLeft {
  0%   {
    transform: translateX(-20%);
    opacity: 0.25;
  }
  100% {
    transform: translateX(0);
    opacity: 1.0;
  }
}

@keyframes outToRight {
  0%   { transform: translateX(0); }
  100% { transform: translateX(100%); }
}

.appWindow.slidedown {
  animation: slideDown 0.3s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

@keyframes slideUp {
  0%   { transform: translateY(calc(100%)); }
  100% { transform: translateY(0); }
}

@keyframes slideDown {
  0%   { transform: translateY(0); }
  100% { transform: translateY(calc(100%)); }
}

.appWindow.in-from-left {
  animation: inFromLeft 0.3s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

.appWindow.out-to-right {
  animation: outToRight 0.3s forwards cubic-bezier(0.7, 0.0, 1.0, 1.0);
}

@keyframes slideUp {
  0%   { transform: translateY(100%); }
  100% { transform: translateY(0); }
}

@keyframes slideDown {
  0%   { transform: translateY(0); }
  100% { transform: translateY(100%); }
}

@keyframes inFromLeft {
  0%   {
    transform: translateX(-20%);
    opacity: 0.25;
  }
  100% {
    transform: translateX(0);
    opacity: 1.0;
  }
}

@keyframes outToRight {
  0%   { transform: translateX(0); }
  100% { transform: translateX(100%); }
}

/* Task Manager */
#screen.task-manager:not(.active-statusbar):not(.software-button-enabled) > #windows > .appWindow.in-task-manager,
#screen.task-manager:not(.active-statusbar):not(.software-button-enabled):not(:-moz-full-screen-ancestor) > #windows > .appWindow.in-task-manager:not(.fullscreen-app) {
  /* XXX sfoster - watch specificify here
     Position values are 1/2 because of scaling */
  top: calc(25% + 2.5rem);
  margin: 0 auto;
  overflow: hidden;
  transform-origin: 50% 0;
  transform: translateX(99.99%) scale(0.5, 0.5);
  will-change: transform;
}

/* Edges */
#windows > .appWindow:not(.homescreen):not(.lockScreenWindow) {
  /* not in the viewport */
  transform: translateX(-100%);
  opacity: 1;
  will-change: transform, opacity;
}

#windows > .appWindow:not(.homescreen):not(.lockScreenWindow).edge-candidate {
  /* in the viewport but not really */
  transform: translateX(-99.9999%);
}

#screen:-moz-full-screen-ancestor > #windows .appWindow.active {
  top: 0;
  height: 100%;
  will-change: auto;
}

#screen #windows > .appWindow.will-become-inactive {
  opacity: 0;
}

#screen #windows > .appWindow.active:not(.will-become-inactive):not(.back),
#screen #windows > .appWindow.will-become-active,
#screen #windows > .appWindow.inside-edges {
  opacity: 1;
  transform: translateX(0);
}

#screen #windows > .appWindow.outside-edges-left {
  opacity: 1;
  transform: translateX(calc(-100% - 2rem));
}

#screen #windows > .appWindow.outside-edges-right {
  opacity: 1;
  transform: translateX(calc(100% + 2rem));
}

#windows .appWindow.active iframe {
  transition-property: transform;
  transition-duration: 0.5s;
}

#screen.locked #windows .appWindow.active iframe,
#screen.on-homescreen #windows .appWindow.active iframe {
  transition-property: none;
}

#screen.rocketbar-expanded:not(.on-homescreen) #windows >
  .appWindow:not(.fullscreen-app).active iframe {
  transform: translateY(2.4rem);
}

#search.appWindow {
  top: 0;
}

#screen.locked.rocketbar-expanded .appWindow.active iframe,
#screen.on-homescreen.rocketbar-expanded .appWindow.active iframe {
  transform: none;
}

#screen:-moz-full-screen-ancestor > #windows .appWindow.active iframe {
  top: 0;
  height: 100%;
}
