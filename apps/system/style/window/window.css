#windows > .appWindow {
  position: fixed;
  border: 0;
  margin: 0;
  padding: 0;
  overflow: hidden;
  left: 0;
  top: 2rem;

  /*
   * Do not specify height/width here!
  * They should be handle executively in window_manager.js
  *
  */

  /*
  * Disable this for now because it forces an expensive fallback path in
  * Gecko.  The performance issue should be fixed by
  * https://bugzilla.mozilla.org/show_bug.cgi?id=697645 or a related bug.
  *
    border-radius: 0.8rem;
  */

  background-repeat: no-repeat;
  background-position: center center;
}

@media not all and (-moz-physical-home-button) {
  #screen:not(.software-button-disabled) > #windows > .appWindow {
    bottom: 5rem;
  }
}

#screen.software-button-enabled #windows > .appWindow {
  bottom: 5rem;
}

#windows > .appWindow:not(.homescreen) {
  background-color: black;
}

#windows > .appWindow:not(.homescreen).render {
  background-image: none !important;
  background-color: transparent;
}

#windows > .appWindow:not(.homescreen):not(.active):not(.transition-opening):not(.transition-closing):not(.inlineActivity) {
  opacity: 0;
}

#windows > .appWindow > iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: none;
  z-index: 1;
  visibility: visible;
}

#windows > .appWindow:not(.homescreen).render > iframe {
  background-color: #fff;
}

#screen.active-statusbar #windows > .appWindow,
#screen.active-statusbar #windows > .appWindow.fullscreen-app {
  top: 4rem;
  height: calc(100% - 4rem);
}

#windows > .appWindow.transition-opening {
  pointer-events: auto;
}

#windows > .appWindow.enlarging,
#windows > .appWindow.enlarging.portrait-primary {
  animation: openApp-portrait-primary 0.3s forwards ease;
}

#windows > .appWindow.enlarging.portrait-secondary {
  animation: openApp-portrait-secondary 0.3s forwards ease;
}

#windows > .appWindow.enlarging.landscape-primary {
  animation: openApp-landscape-primary 0.3s forwards ease;
}

#windows > .appWindow.enlarging.landscape-secondary {
  animation: openApp-landscape-secondary 0.3s forwards ease;
}

#windows.slow-transition > .appWindow.transition-opening {
  animation-duration: 3s;
}

#windows > .appWindow.from-card-view,
#windows > .appWindow.from-card-view.portrait-primary {
  animation: openAppFromCardView-portrait-primary 0.15s forwards ease;
}

#windows > .appWindow.from-card-view.portrait-secondary {
  animation: openAppFromCardView-portrait-secondary 0.15s forwards ease;
}

#windows > .appWindow.from-card-view.landscape-primary {
  animation: openAppFromCardView-landscape-primary 0.15s forwards ease;
}

#windows > .appWindow.from-card-view.landscape-secondary {
  animation: openAppFromCardView-landscape-secondary 0.15s forwards ease;
}

/* Opacity increases start up time then we don't use it anymore for opening */
@keyframes openApp-portrait-primary {
  0%   { transform: scale(0.1); }
  100% { transform: scale(1.0); }
}

@keyframes openApp-portrait-secondary {
  0%   { transform: scale(0.1) rotate(180deg); }
  100% { transform: scale(1.0) rotate(180deg); }
}

@keyframes openApp-landscape-primary {
  0%   { transform: scale(0.1) rotate(90deg);}
  100% { transform: scale(1.0) rotate(90deg);}
}

@keyframes openApp-landscape-secondary {
  0%   { transform: scale(0.1) rotate(270deg); }
  100% { transform: scale(1.0) rotate(270deg); }
}

#windows > .appWindow.homescreen.zoom-in > iframe {
  transform: scale(1);
  animation: zoom-in 0.3s forwards ease;
}

@keyframes zoom-in {
  0%   { transform: scale(1); }
  100% { transform: scale(1.8); }
}

@keyframes openAppFromCardView-portrait-primary {
  0%   { transform: scale(0.8); }
  100% { transform: scale(1.0); }
}

#screen.switch-app > #windows {
  /* The background color is black behind the switch app animation
   * (the homescreen is hidden) */
  background: #000;
}

@keyframes openAppFromCardView-portrait-secondary {
  0%   { transform: scale(0.8) rotate(180deg); }
  100% { transform: scale(1.0) rotate(180deg); }
}

@keyframes openAppFromCardView-landscape-primary {
  0%   { transform: scale(0.8) rotate(90deg); }
  100% { transform: scale(1.0) rotate(90deg); }
}

@keyframes openAppFromCardView-landscape-secondary {
  0%   { transform: scale(0.8) rotate(270deg); }
  100% { transform: scale(1.0) rotate(270deg); }
}

#windows > .appWindow.invoked,
#windows > .appWindow.invoking {
  transition: transform 0.25s ease;
  visibility: inherit;
  opacity: 1;
  animation: none;
}

#windows > .appWindow.invoked > iframe {
  /* The background is defined for invoked apps because we don't have the
     splash screen available at this point */
  background-attachment: scroll, scroll;
  background-clip: border-box, border-box;
  background-color: transparent;
  background-image: url("../themes/default/images/images/ui/pattern.png"),
                    url("../themes/default/images/ui/gradient.png");
  background-origin: padding-box, padding-box;
  background-position: left top, left top;
  background-repeat: repeat, no-repeat;
  background-size: auto auto, 100% 100%;
}

#windows > .appWindow.invoked {
  animation: invokedApp 0.6s forwards ease-out;
}

#windows > .appWindow.invoking {
  animation: invokingApp 0.6s forwards ease-out;
}

/* TODO: add this class in homescreen launcher */
#windows > .appWindow.homescreen.switching-app {
  pointer-events: none;
}

/* Invoking app moves out */
@keyframes invokingApp {
  0%   { transform: scale(1.0); opacity: 1 }
  50%  { transform: scale(0.8) translateX(0); opacity: 0.3 }
  100% { transform: scale(0.6) translateX(105%); }
}

/* Invoked app moves in */
@keyframes invokedApp {
  0%   { transform: scale(0.6) translateX(-133%); opacity: 0.3 }
  50%  { transform: scale(0.6) translateX(-105%); opacity: 1 }
  100% { transform: scale(1.0) translateX(0) }
}

#windows > .appWindow.transition-closing {
  /* The animation takes .3 seconds so users cannot touch the app while the
   * closing animation is performing */
  pointer-events: none;
}

#windows > .appWindow.portrait-secondary {
  transform: rotate(180deg);
  margin-top: -2rem;
  overflow: visible;
}

#windows > .appWindow.landscape-primary {
  transform: rotate(90deg);
  overflow: visible;
}

#windows > .appWindow.landscape-secondary {
  transform: rotate(270deg);
  margin-left: 2rem;
  overflow: visible;
}

#windows > .appWindow.fullscreen-app.portrait-secondary,
#windows > .appWindow.fullscreen-app.landscape-primary,
#windows > .appWindow.fullscreen-app.landscape-secondary {
  margin: 0;
}

/* placeholder for status bar of previous orientation */
#windows > .appWindow.landscape-primary:not(.fullscreen-app):after,
#windows > .appWindow.landscape-secondary:not(.fullscreen-app):after,
#windows > .appWindow.portrait-secondary:not(.fullscreen-app):after {
  display: block;
  height: 2rem;
  width: 100%;
  left: 0;
  top: -2rem;
  position: absolute;
  content: ' ';
  font-size: 1.8rem;
  background: #000000;
}

#windows > .appWindow.reducing,
#windows > .appWindow.reducing.portrait-primary {
  animation: closeApp-portrait-primary 0.3s forwards ease;
}

#windows > .appWindow.reducing.portrait-secondary {
  animation: closeApp-portrait-secondary 0.3s forwards ease;
}

#windows > .appWindow.reducing.landscape-primary {
  animation: closeApp-landscape-primary 0.3s forwards ease;
}

#windows > .appWindow.reducing.landscape-secondary {
  animation: closeApp-landscape-secondary 0.3s forwards ease;
}

#windows.slow-transition > .appWindow.transition-closing {
  animation-duration: 3s;
}

#windows > .appWindow.homescreen.zoom-out > iframe {
  transform: scale(1.8);
  animation: zoom-out 0.3s forwards ease;
}

#windows.slow-transition > .appWindow.homescreen.zoom-out > iframe {
  animation-duration: 3s;
}

@keyframes zoom-out {
  0%   { transform: scale(1.8); }
  100% { transform: scale(1); }
}

#windows > .appWindow.to-card-view,
#windows > .appWindow.to-card-view.portrait-primary {
  animation: closeAppTowardsCardView-portrait-primary 0.15s forwards ease;
}

#windows > .appWindow.to-card-view.portrait-secondary {
  animation: closeAppTowardsCardView-portrait-secondary 0.15s forwards ease;
}

#windows > .appWindow.to-card-view.landscape-primary {
  animation: closeAppTowardsCardView-landscape-primary 0.15s forwards ease;
}

#windows > .appWindow.to-card-view.landscape-secondary {
  animation: closeAppTowardsCardView-landscape-secondary 0.15s forwards ease;
}

#windows.slow-transition > .appWindow.to-card-view {
  animation: closeAppTowardsCardView 1.5s forwards ease;
}

@keyframes closeApp-landscape-primary {
  0%   { transform: scale(1.0) rotate(90deg); opacity: 1; }
  100% { transform: scale(0.1) rotate(90deg); opacity: 0; }
}

@keyframes closeApp-landscape-secondary {
  0%   { transform: scale(1.0) rotate(270deg); opacity: 1; }
  100% { transform: scale(0.1) rotate(270deg); opacity: 0; }
}

@keyframes closeApp-portrait-primary {
  0%   { transform: scale(1.0); opacity: 1; }
  100% { transform: scale(0.1); opacity: 0; }
}

@keyframes closeApp-portrait-secondary {
  0%   { transform: scale(1.0) rotate(180deg); opacity: 1; }
  100% { transform: scale(0.1) rotate(180deg); opacity: 0; }
}

@keyframes closeAppTowardsCardView-landscape-primary {
  0%   { transform: scale(1.0) rotate(90deg); }
  100% { transform: scale(0.8) rotate(90deg); }
}

@keyframes closeAppTowardsCardView-landscape-secondary {
  0%   { transform: scale(1.0) rotate(270deg); }
  100% { transform: scale(0.8) rotate(270deg); }
}

@keyframes closeAppTowardsCardView-portrait-primary {
  0%   { transform: scale(1.0); }
  100% { transform: scale(0.8); }
}

@keyframes closeAppTowardsCardView-portrait-secondary {
  0%   { transform: scale(1.0) rotate(180deg); }
  100% { transform: scale(0.8) rotate(180deg); }
}

#windows > .appWindow.inlineActivity,
#windows > .appWindow.hideBottom {
  transform: translateY(100%);
  transition: transform 0.25s ease, visibility 0.25s ease;
}

#windows.slow-transition > .appWindow.inlineActivity,
#windows.slow-transition > .appWindow.hideBottom {
  transition: transform 5s ease, visibility 5s ease;
}

#windows > .appWindow.back {
  transition: transform 0.25s ease, visibility 0.25s ease;
  transform: scale(0.86);
}

#windows > .appWindow.restored {
  transform: none;
  transition: transform 0.25s ease;
}

#windows > .appWindow.inlineActivity.active {
  transform: none;
}

#screen > #windows > .appWindow.fullscreen-app {
  top: 0;
}

.appError {
  display: none;
  background-color: black;
  z-index: 0;
}

.appWindow > .appError {
  background-color: black;
}

.appError.visible {
  z-index: 1024;
  display: block;
}


.appWindow > .screenshot-overlay {
  z-index: -1;
  display: none;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #0186d1;
  pointer-events: none;
}

.appWindow > .screenshot-overlay.visible {
  z-index: 2;
  display: block;
}

.appWindow > iframe.hidden {
  visibility: hidden;
}
