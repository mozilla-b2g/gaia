/*global suite suiteSetup setup test sinon assert */
suite('Latin en_us worker', function() {
  var worker;
  suiteSetup(function(next) {
    worker = new Worker('../../js/imes/latin/worker.js');
    worker.postMessage({ cmd: 'setLanguage', args: ['en_us']});
    worker.postMessage({
      cmd: 'setNearbyKeys',
      args: [JSON.stringify({
        '46': {
          '109': 0.39227951948432466,
          '110': 0.39227951948432466
        },
        '97': {
          '113': 0.39227951948432466,
          '115': 0.3228322723765432,
          '119': 0.39227951948432466,
          '122': 0.20386922889511513
        },
        '98': {
          '103': 0.20386922889511513,
          '104': 0.5532438016528926,
          '106': 0.20386922889511513,
          '110': 0.3228322723765432,
          '118': 0.3228322723765432
        },
        '99': {
          '100': 0.20386922889511513,
          '102': 0.5532438016528926,
          '103': 0.20386922889511513,
          '118': 0.3228322723765432,
          '120': 0.3228322723765432
        },
        '100': {
          '99': 0.20386922889511513,
          '101': 0.39227951948432466,
          '102': 0.3228322723765432,
          '114': 0.39227951948432466,
          '115': 0.3228322723765432,
          '120': 0.5532438016528926,
          '122': 0.20386922889511513
        },
        '101': {
          '100': 0.39227951948432466,
          '114': 0.3228322723765432,
          '115': 0.39227951948432466,
          '119': 0.3228322723765432
        },
        '102': {
          '99': 0.5532438016528926,
          '100': 0.3228322723765432,
          '103': 0.3228322723765432,
          '114': 0.39227951948432466,
          '116': 0.39227951948432466,
          '118': 0.20386922889511513,
          '120': 0.20386922889511513
        },
        '103': {
          '98': 0.20386922889511513,
          '99': 0.20386922889511513,
          '102': 0.3228322723765432,
          '104': 0.3228322723765432,
          '116': 0.39227951948432466,
          '118': 0.5532438016528926,
          '121': 0.39227951948432466
        },
        '104': {
          '98': 0.5532438016528926,
          '103': 0.3228322723765432,
          '106': 0.3228322723765432,
          '110': 0.20386922889511513,
          '117': 0.39227951948432466,
          '118': 0.20386922889511513,
          '121': 0.39227951948432466
        },
        '105': {
          '106': 0.39227951948432466,
          '107': 0.39227951948432466,
          '111': 0.3228322723765432,
          '117': 0.3228322723765432
        },
        '106': {
          '98': 0.20386922889511513,
          '104': 0.3228322723765432,
          '105': 0.39227951948432466,
          '107': 0.3228322723765432,
          '109': 0.20386922889511513,
          '110': 0.5532438016528926,
          '117': 0.39227951948432466
        },
        '107': {
          '105': 0.39227951948432466,
          '106': 0.3228322723765432,
          '108': 0.3228322723765432,
          '109': 0.5532438016528926,
          '110': 0.20386922889511513,
          '111': 0.39227951948432466
        },
        '108': {
          '107': 0.3228322723765432,
          '109': 0.20386922889511513,
          '111': 0.39227951948432466,
          '112': 0.39227951948432466
        },
        '109': {
          '46': 0.39227951948432466,
          '106': 0.20386922889511513,
          '107': 0.5532438016528926,
          '108': 0.20386922889511513,
          '110': 0.3228322723765432
        },
        '110': {
          '46': 0.39227951948432466,
          '98': 0.3228322723765432,
          '104': 0.20386922889511513,
          '106': 0.5532438016528926,
          '107': 0.20386922889511513,
          '109': 0.3228322723765432
        },
        '111': {
          '105': 0.3228322723765432,
          '107': 0.39227951948432466,
          '108': 0.39227951948432466,
          '112': 0.3228322723765432
        },
        '112': {
          '108': 0.39227951948432466,
          '111': 0.3228322723765432
        },
        '113': {
          '97': 0.39227951948432466,
          '119': 0.3228322723765432
        },
        '114': {
          '100': 0.39227951948432466,
          '101': 0.3228322723765432,
          '102': 0.39227951948432466,
          '116': 0.3228322723765432
        },
        '115': {
          '97': 0.3228322723765432,
          '100': 0.3228322723765432,
          '101': 0.39227951948432466,
          '119': 0.39227951948432466,
          '120': 0.20386922889511513,
          '122': 0.5532438016528926
        },
        '116': {
          '102': 0.39227951948432466,
          '103': 0.39227951948432466,
          '114': 0.3228322723765432,
          '121': 0.3228322723765432
        },
        '117': {
          '104': 0.39227951948432466,
          '105': 0.3228322723765432,
          '106': 0.39227951948432466,
          '121': 0.3228322723765432
        },
        '118': {
          '98': 0.3228322723765432,
          '99': 0.3228322723765432,
          '102': 0.20386922889511513,
          '103': 0.5532438016528926,
          '104': 0.20386922889511513
        },
        '119': {
          '97': 0.39227951948432466,
          '101': 0.3228322723765432,
          '113': 0.3228322723765432,
          '115': 0.39227951948432466
        },
        '120': {
          '99': 0.3228322723765432,
          '100': 0.5532438016528926,
          '102': 0.20386922889511513,
          '115': 0.20386922889511513,
          '122': 0.3228322723765432
        },
        '121': {
          '103': 0.39227951948432466,
          '104': 0.39227951948432466,
          '116': 0.3228322723765432,
          '117': 0.3228322723765432
        },
        '122': {
          '97': 0.20386922889511513,
          '100': 0.20386922889511513,
          '115': 0.5532438016528926,
          '120': 0.3228322723765432
        },
        '65534': {
          '97': 0.26161256268144634,
          '115': 0.1603545252050124,
          '122': 0.2910108172805492
        }
      })]
    });

    setTimeout(next, 1000);
  });

  setup(function() {
    worker.onmessage = sinon.stub();
  });

  function onWorkerMessage(callback) {
    var occ = worker.onmessage.callCount;
    var iv = setInterval(function() {
      if (worker.onmessage.callCount > occ) {
        clearInterval(iv);
        callback();
      }
    }, 20);
  }

  function assertOnMessageCalledWith(args) {
    args = JSON.stringify(args);

    var res = worker.onmessage.args.filter(function(call) {
      return call[0].data &&
        JSON.stringify(call[0].data) === args;
    });

    if (res.length === 0) {
      worker.onmessage.args.map(function(call) {
        if (!call[0].data) return;
        console.log(call[0].data);
      });
    }

    assert.notEqual(res.length, 0);
  }

  test('Worker should throw if language doesnt exist', function(next) {
    worker.postMessage({ cmd: 'setLanguage', args: ['en'] });
    onWorkerMessage(function() {

      assert.equal(worker.onmessage.args[0][0].data.cmd, 'error');
      assert.equal(worker.onmessage.args[0][0].data.message,
        'Invalid dictionary file: dictionaries/en.dict');

      next();
    });
  });

  suite('Predicitions', function() {
    function prediction(input, expected, next) {
      worker.postMessage({cmd: 'predict', args: [input]});

      onWorkerMessage(function() {

        var suggestions = worker.onmessage.args[0][0].data.suggestions;

        assert.equal(worker.onmessage.args[0][0].data.cmd, 'predictions');
        assert.equal(worker.onmessage.args[0][0].data.input, input);

        suggestions = suggestions.map(function(s) {
          return s[0];
        });

        assert.equal(suggestions[0], expected[0]);
        assert.equal(suggestions[1], expected[1]);
        assert.equal(suggestions[2], expected[2]);

        next();
      });
    }

    test('i should be predicted as I', function(next) {
      prediction('i', ['I', 'in', 'is'], next);
    });

    test('Non existing word should not be matched', function(next) {
      prediction('sadjasuufehwuefhwejfd', [], next);
    });
  });

});
