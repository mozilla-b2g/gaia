
#composer-container {
  position: relative;

  background: #e1f0ec;
}

.new .article-list {
  z-index: 5;

  padding: 0;
}

/*
 * Flex layout is wrapped by 'flex-composer'. Our flex layout has
 * 2 well differentiated:
 * - 'messages-container'
 * - 'messages-compose-form'
 */

.flex-composer {
  display: flex;
  flex-direction: column;

  height: 100%;
  top: 0;

  overflow: hidden;
}

.new .flex-composer {
  position: relative;
  top: 4rem;   /* 4rem is the default size of the recipient panel */

  height: calc(100% - 4rem);
}

.multiline-recipients-mode.new .flex-composer {
  top: 5.5rem;

  height: calc(100% - 5.5rem);
}

#messages-container {
  /* We'll set flex-basis with a shrink factor of 0 to do min-height.
   * formula: flex-basis = a % + b)
   * a = (gap2 - gap1) / keyboard_height
   * b = gap2 - (gap2 - gap1) * (buri_height - header) / keyboard_height + subheader + time_header
   *
   * with :
   * gap1 = 4rem
   *   minimal visible part of a thread when the keyboard is displayed, on buri
   * gap2 = 8rem
   *   minimal visible part of a thread when the keyboard is hidden, on a buri
   * keyboard_height = 26rem
   *   measured on a buri, standard english keyboard with suggestions
   * header = 5rem
   * subheader = 2rem
   * buri_height = 48rem
   * time_header = 2rem
   *
   * See https://bugzilla.mozilla.org/show_bug.cgi?id=1015867#c12 for more
   * information
   */
  flex: 1 0 calc(15.4% + 5.38rem);
  overflow: auto;
}

.new #messages-container {
  flex-basis: 0;
}

#messages-compose-form {
  display: flex;
  flex-direction: column;

  height: auto; /* overrides building blocks */
  min-height: 4rem;

  background-color: #fff;
}

/* Overwrite. No more fixed height */
form[role="search"] p input,
form[role="search"] p textarea,
form[role="search"] button[type="submit"] + p > textarea {
  height: auto;
}

/*
 * Input now are contentEditable containers. We define
 * placeholder management here as well.
 */

#messages-input {
  position: relative; /* to position its generated content */

  overflow: auto;

  box-sizing: border-box;
  width: 100%;
  height: 100%;
  -moz-padding-end: 0.5rem;

  color: #474747;
  -moz-border-end: 0.1rem solid #ccc;

  font-size: 1.7rem;
  line-height: 2.1rem;

  unicode-bidi: -moz-plaintext;
}

#messages-input.placeholder {
  unicode-bidi: unset;
}

#messages-input:after {
  content: attr(data-placeholder);
  position: absolute;

  top: 0;
  left: 0;
  right: 0;

  color: #9b9b9b;
  font-style: italic;
  white-space: nowrap;
  pointer-events: none;
  visibility: hidden;
}

#messages-input.placeholder:after {
  visibility: visible;
}

/* Overwrite BB because of the previous rule */
form[role="search"] button[type="submit"]:after {
    content: "";
    background: none;
}

.mms-label-line {
  display: flex;
  justify-content: flex-end;
  align-items: flex-end;
  background-color: #e1f0ec;
}

.subject-composer {
  position: relative;

  flex-grow: 1;
  min-width: 0;
  padding: 1rem 0 0.3rem;
}

.mms-label {
  padding: 1rem 0 0.3rem;
}

.mms-label,
.message-counter {
  display: none;
  flex: none;
  text-align: center;

  box-sizing: border-box;
  width: 6rem;

  color: #575757;

  font-size: 1.4rem;
}

.message-counter {
  padding-top: .7rem;
}

/**
 * 1. "MMS" label is displayed near the subject field when subject input is
 *    visible and message type is MMS;
 * 2. Remaining characters counter is displayed in bottom section if character
 *    count exceeds predefined threshold and message type is SMS.
 */
[data-message-type='mms'] .mms-label,
[data-message-type='sms'] .message-counter:not(:empty) {
  display: block;
}

.content-composer {
  display: flex;
  flex-direction: row;

  min-height: 0;
}

.subject-composer-input {
  position: relative;

  box-sizing: border-box;
  min-height: 2.2rem;
  padding: 0;
  padding-bottom: 0.1rem;
  -moz-padding-start: 1.5rem;

  color: #008787;

  font-size: 1.7rem;
}

.subject-composer-placeholder {
  position: absolute;
  top: 1rem;
  /* adding both left/right so that it behaves correctly in RTL */
  left: 1.5rem;
  right: 1.5rem;

  color: #00adad;
  font-size: 1.7rem;
  font-weight: normal;
  font-style: italic;

  pointer-events: none;
}

.composer-message-input-container {
  position: relative;

  flex: auto;

  box-sizing: border-box;
  min-width: 0;
  height: 100%;
  min-height: 4rem;
  padding: 1rem 0;
}

.composer-button-container {
  position: relative;

  display: flex;
  flex: none;
  flex-direction: row;
  justify-content: center;
  align-content: space-between;
  flex-wrap: wrap;

  width: 6rem;

  -moz-user-select: none; /* without this, tapping on the element selects its content */
}

.messages-attach-container {
  display: flex;
}

#messages-send-button {
  height: 4rem;
  overflow: visible;
  background: #fff url(images/icons/actionicon_sms_send_30x30.png)
              no-repeat center center / 3rem;

  align-self: flex-end;

  /* When we put the icon at the center, an optical illusion makes it look to be
   * slightly to the left, so we offset the button by 2px to the right to
   * counteract this illusion */
  transform: translate(.2rem);
}

#messages-send-button:after {
  display: none
}

#messages-send-button[disabled] {
  background-blend-mode: luminosity;
  opacity: 0.625;
}

#messages-input.ignoreEvents {
  pointer-events: none;
}

#messages-attach-button {
  align-self: flex-end;
  flex: none;

  box-sizing: content-box;
  width: 3rem;
  margin: 0;
  padding: 0;
  -moz-padding-start: 0.5rem;
  -moz-padding-end: 1rem;

  background: transparent
              url('images/icons/actionicon_sms_add_attachment_30x30.png')
              no-repeat center / 3rem;
}

#messages-attach-button[disabled] {
  background-blend-mode: luminosity;
  opacity: 0.3;
}

/*
  DSDS
*/

.sim-indication {
  position: absolute;
  right: 1.8rem;
  bottom: 0.4rem;

  display: none;
  line-height: 1;

  color: #5f5f5f;
  font-size: 1.4rem;
  font-style: normal;
}

.sim-indication:before {
  position: absolute;
  right: .8rem; /* 2.6rem from the right; means .8rem from .sim-indication */
  bottom: -0.1rem;

  content: '...';

  color: #b2b2b2;
  font-size: 1.6rem;
}

button[disabled] .sim-indication {
  color: inherit;
}

.has-preferred-sim .sim-indication {
  display: block;
}

/* RTL modifications */
/* No translation by 2px because I don't see the illusion when it's on the left */
html[dir=rtl] #messages-send-button {
  transform: scaleX(-1);
}

/* The sim-indication is mirrored twice so that it's back at the right place */
html[dir=rtl] .sim-indication {
  transform: scaleX(-1);
  right: 1.9rem;
}

html[dir=rtl] .sim-indication:before {
  right: unset;
  left: .8rem;
}
