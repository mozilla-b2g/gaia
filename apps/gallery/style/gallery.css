* { -moz-box-sizing: border-box; }

html {
  height: 100%;
  width: 100%;
  padding: 0;
  margin: 0;
  overflow: hidden;
  font-size: 10px;
}

body {
  background-color: black;
  color: #fff;
  font-size: 1rem;
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  overflow: hidden;
}

section {
  margin: 0;
  padding: 0;
  overflow: hidden;
  font-size: 1.4rem;
}

.hidden {
  display: none;
}

/* All of the main views fill the screen */
#thumbnail-list-view, #thumbnail-select-view, #fullscreen-view, #pick-view, #edit-view, #crop-view {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
  overflow: hidden;
  font-size: 2.1rem;
}

/*
 * The overlay is where we display messages like Scanning, No Photos,
 * No SD card and SD Card in Use along with instructions for resolving
 * the issue.  The user can't interact with the app while the overlay
 * is displayed.
 */
#overlay {
  /* it takes up the whole screen */
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;

  /* almost transparent gray */
  background-color: rgba(0, 0, 0, 0.4);
}

/*
 * The overlay content area holds the text of the overlay.
 * It has borders and a less transparent background so that
 * the overlay text shows up more clearly
 */
#overlay-content {
  background:
  url(images/ui/pattern.png) repeat left top,
  url(images/ui/gradient.png) no-repeat left top;
  background-size: auto auto, 100% 100%;
  /* We can't use shortand with background size because is not implemented yet:
  https://bugzilla.mozilla.org/show_bug.cgi?id=570326; */
  overflow: hidden;
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  font-size: 0;
  /* Using font-size: 0; we avoid the unwanted visual space (about 3px)
  created by white-spaces and break lines in the code betewen inline-block elements */
  color: #fff;
  padding: 11rem 2.5rem 0 2.5rem;
}

#overlay-title {
  font-weight: normal;
  font-size: 1.9rem;
  color: #fff;
  margin: 0 0.5rem 0 0.5rem;
  padding: 0;
}

#overlay-text {
  padding: 1rem 0.5rem 0 0.5rem;
  border-top: 0.1rem solid #686868;
  font-weight: 300;
  font-size: 2.5rem;
  color: #ebebeb;
}

#overlay-menu {
  z-index: 1;
}

/* For overriding the style from BB */
#overlay-menu.hidden {
  display: none;
}

#overlay-menu button.hidden {
  display: none;
}

#overlay-menu button.full {
  margin: 0;
}

/*
 * Thumbnails are implemented as <li> elements in a <ul> with background-image
 * set to display the image. We use background-size: cover to automatically
 * resize the image as needed.
 * The thumbnail list appears in regular browsing mode, in selection mode,
 * and in pick mode.
 */

#thumbnails {
  position: absolute;
  left: 0;
  width: 100%;
  /* top and bottom are set depending on view below */
  padding: 0;
  margin: 0;
  overflow-y: scroll;
  overflow-x: hidden;
  /*
   * the body background is black, but remind the UA of that here to
   * keep the thumbnail view opaque if possible.
   */
  background-color: black;
}

/* thumbnails in regular thumbnail list view */
#thumbnails.list {
  top: 0;
  bottom: 0;
}

/* thumbnails in thumbnail select view where there is a top bar */
#thumbnails.select {
  top: 5rem;
  bottom: 0;
}

/* thumbnails in pick view where there is a top bar and no bottom */
#thumbnails.pick {
  top: 5rem;
  bottom: 0;
}

#thumbnails.offscreen {
  top: 0;
  bottom: 0;
  visibility: hidden;
}

.thumbnail {
  margin-right: 0.1rem;
  margin-bottom: 0.1rem;
  padding: 0;
  /* default to left-to-right, but overridden for rtl languages below */
  float: left;
  /* no list item bullets */
  list-style-type: none;
  /* don't let the user select the items */
  -moz-user-select: none;
  /* thumbnail images will be displayed with background-image */
  /* these properties scale and position the images correctly */
  background-position: center;   /* keep the cropping at the edges */
  background-size: contain;
  background-repeat: no-repeat;
  /*
   * When we have a background image it will cover the whole thumbnail
   * but when we're swapping that image in it might be visible before
   * the image. So we want a color that contrasts with the border so we
   * at least get the effect of a grid rather than a black screen
   */
  background-color: #444;

  /*
   * Here's the thumbnail size for portrait mode. We have 3 thumbnails
   * for each row. The size for landscape mode is handled below by
   * media query.
   * Padding-bottom is used here in order to set div height with respect
   * to device width.
   */
  width: calc((100% - 0.2rem) / 3 );
  height: 0;
  padding-bottom: calc((100% - 0.2rem) / 3 );
}

.thumbnail:nth-child(3n) {
  margin-right: 0;
}

.thumbnail.selected {
  outline: solid #00aacc 0.3rem;
  outline-offset: -0.2rem;
}

/*
 * give the very last thumbnail a large bottom margin so that it doesn't
 * get stuck hidden behind the overlaid toolbar.
 */
.thumbnail:last-child {
  margin-bottom: 4rem;
}

@media (orientation: landscape) {
  /* 4 thumbnails for each row in landscape mode. */
  .thumbnail {
    width: calc((100% - 0.3rem) / 4);
    padding-bottom: calc((100%  - 0.3rem) / 4);
  }
  .thumbnail:nth-child(3n) {
    margin-right: 0.1rem;
  }
  .thumbnail:nth-child(4n) {
    margin-right: 0;
  }
}


#fullscreen-back-button {
  position: absolute;
  top: 0.5rem;
  left: 0.5rem;
  width: 4.5rem;
  height: 4.5rem;
  font-size: 0;
  border-radius: 50%;
  border: none;
  color: #605c59;
  box-shadow: 0 0.1rem 0 inset;
  background: rgba(114, 111, 106, 0.8) url(images/back.png) no-repeat 50% 50%;
  transition: opacity 0.2s linear;
}

#fullscreen-back-button:active {
  color: #107788;
  background-color: #00b0d5;
}

#frames {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
}

.frame {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
  overflow: hidden;
  -moz-user-select: none;
}

.frame > img {
  top: 0;  /* javascript modifies this position with a transform */
  left: 0;
  position: absolute;
  border-width: 0;
  padding: 0;
  margin: 0;
  pointer-events: none;
  -moz-user-select: none;
}

/*
 * these styles apply when we're swapping out a preview image to replace
 * it with a full-resolution image, but the full image isn't ready yet.
 * This happens when the user starts to zoom in on the image. We need
 * some sort of simple visual effect to fill ~500ms of dead time so the
 * user doesn't think the app has frozen up
 */
.frame > img.swapping {
  opacity: 0.8;
  outline: dashed #0ac 0.4rem;
  outline-offset: -0.4rem;
}

.frame > video {
  transform-origin: 0 0;
}

/* localization */
body.hidden *[data-l10n-id] {
  visibility: hidden;
}

*[dir=rtl] .thumbnail {
  float: right;
}

/* the indeterminate progress bar displayed while scanning */
#progress {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 0.3rem;
  border: none;
  overflow: hidden;
  z-index: 3; /* has to be higher than pick-top */
}

#throbber {
  height: 2.4rem;
  background-image: url(images/progress.png);
  background-size: auto 100%;
}

#throbber.throb {
  animation: 1s throb infinite steps(7);
}

@keyframes throb {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-2.1rem);
  }
}

/* buttons */
a.button {
  display: block;
  padding: 0;
  margin: 0;
  border-width: 0;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: 3rem;

  /* for buttons that display text */
  font-size: 1.4rem;
  text-align: center;
  line-height: 4rem;
}

a.button:active, a.button:focus {
  outline: none;
}

a.button.disabled {
  opacity: 0.4;
  pointer-events: none;
}

footer {
  background: rgba(0, 0, 0, 0.75);
  height: 4rem;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1;
  box-shadow: 0 -0.2rem 0.5rem rgba(50, 50, 50, 0.75);
}

#thumbnails-camera-button {
  position: absolute;
  width: 50%;
  height: 100%;
  left: 0;
  background-image: url('images/iconaction_camera_30x30.png');
  border-right: 0.1rem solid #000;
}

#thumbnails-select-button {
  position: absolute;
  width: 50%;
  height: 100%;
  left: 50%;
  background-image: url('images/iconaction_select_30x30.png');
}

#thumbnails-delete-button {
  position: absolute;
  width: 50%;
  height: 100%;
  left: 0;
  background-image: url('images/iconaction_delete_30x30.png');
  border-right: 0.1rem solid #000;
}

#thumbnails-share-button {
  position: absolute;
  width: 50%;
  height: 100%;
  left: 50%;
  background-image: url('images/iconaction_share_30x30.png');
}

#fullscreen-toolbar {
  height: 4rem;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  font-size: 0;
  transition: transform 0.2s linear;
}

#fullscreen-toolbar > a {
  display: inline-block;
  width: 25%;
  height: 100%;
}

#fullscreen-view.toolbarhidden #fullscreen-toolbar {
  transform: translate(0, 4rem);
}

#fullscreen-view.toolbarhidden #fullscreen-back-button {
  opacity: 0;
}

#fullscreen-camera-button {
  background-image: url('images/iconaction_camera_30x30.png');
}

#fullscreen-edit-button {
  background-image: url('images/iconaction_camera_editphoto_30x30.png');
}

#fullscreen-share-button {
  background-image: url('images/iconaction_share_30x30.png');
}

#fullscreen-delete-button {
  background-image: url('images/iconaction_delete_30x30.png');
}

#pick-top {
  /*
   * we want the user to be able to push the back button even if
   * an overlay is displayed, so be sure that this titlebar/toolbar
   * is above the overlay
   */
  z-index: 2;
}

/* like .frame */
#crop-frame {
  position: absolute;
  top: 5rem;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 0;
  margin: 0;
  overflow: hidden;
  -moz-user-select: none;
}


/* copied from .frame > img */
#crop-image {
  top: 0;  /* javascript modifies this position with a transform */
  left: 0;
  position: relative;
  border-width: 0;
  padding: 0;
  margin: 0;
  transform-origin: 0 0;
  pointer-events: none;
  -moz-user-select: none;
}

#edit-view {
}

#edit-title {
}

#edit-preview-area {
  position: absolute;
  left: 0;
  right: 0;
  top: 5rem;
  bottom: 10rem;
}

#edit-preview-canvas {
  position: absolute;
  top: 1rem;
  left: 1rem;
  width: calc(100% - 2rem);  /* I can't do right: 1rem here. Bug? */
  height: calc(100% - 2rem);  /* can't just set bottom: 1rem here */
}

#edit-crop-canvas {
  position: absolute;
  left: 0;
  right: 0;
  width: 100%;
  height: 100%;
}

#edit-options {
  position: absolute;
  left: 0;
  width: 100%;
  height: 5.5rem;
  bottom: 4rem;
  background: url(images/options-background.png);
}

/* All the effect options radio buttons share these styles */
#edit-effect-options a.radio.button {
  position: absolute;
  display: block;
  top: 0;
  height: 100%;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  margin: 0;
  padding: 0;
  border-width: 0;
  border-right: solid black 0.1rem;
  overflow: hidden;
}

#edit-effect-options a.selected.radio.button {
  outline: solid #00aacc 0.3rem;
  outline-offset: -0.3rem;
}

#edit-crop-options a.button {
  position: absolute;
  display: block;
  top: 0;
  bottom: 0;
  width: 20%;
  margin: 0;
  padding: 0;
  border-width: 0;
  border-right: solid black 0.1rem;
  overflow: hidden;
  padding-top: 1.6rem;
  font-size: 1.4rem;
  background-position: center;
}

#edit-crop-options a.selected.radio.button {
  outline: solid #00aacc 0.2rem;
  outline-offset: -0.2rem;
}

#edit-crop-none {
  left: 0;
  background-image: url('images/iconaction_undo_30x30.png');
}
#edit-crop-aspect-free {
  left: 20%;
  background-image: url('images/iconaction_camera_freecrop_30x30.png');
}
#edit-crop-aspect-portrait {
  left: 40%;
  background-image: url('images/iconaction_camera_crop2x3_30x30.png');
}
#edit-crop-aspect-landscape {
  left: 60%;
  background-image: url('images/iconaction_camera_crop3x2_30x30.png');
}
#edit-crop-aspect-square {
  left: 80%;
  background-image: url('images/iconaction_camera_crop1x1_30x30.png');
}

/* instead of using images inside the buttons above, just draw boxes */
#edit-free-frame {
  margin-left: 0.5rem;
  margin-top: 0.5rem;
  width: 3rem;
  height: 2.5rem;
  border: dotted white 0.1rem;
}

#edit-portrait-frame {
  margin-left: 1.1rem;
  margin-top: 0.6rem;
  width: 2.6rem;
  height: 3.9rem;
  border: solid white 0.1rem;
}

#edit-landscape-frame {
  margin-left: 0.5rem;
  margin-top: 1.2rem;
  width: 3.9rem;
  height: 2.6rem;
  border: solid white 0.1rem;
}

#edit-square-frame {
  margin-left: 0.8rem;
  margin-top: 0.9rem;
  width: 3.2rem;
  height: 3.2rem;
  border: solid white 0.1rem;
}

/* All the effects radio buttons share these styles */
#edit-effect-options > a.radio.button {
  width: 20%;
  padding-top: 1.5rem;
}

#edit-effect-none {
  left:0;
}
#edit-effect-bw {
  left:20%
}
#edit-effect-sepia {
  left:40%
}
#edit-effect-bluesteel {
  left:60%
}
#edit-effect-faded {
  left:80%
}
a.filter-bw {
  filter: url(../index.html#filter-bw);
}
a.filter-sepia {
  filter: url(../index.html#filter-sepia);
}
a.filter-bluesteel {
  filter: url(../index.html#filter-bluesteel);
}
a.filter-faded {
  filter: url(../index.html#filter-faded);
}

/* All the border buttons share these styles */
#edit-border-options a.radio.button {
  position: absolute;
  width: calc(20% - 0.6rem);
  height: calc(100% - 0.6rem);
  top: 0.3rem;
  padding: 0;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  overflow: hidden;
}

#edit-border-options a.selected.radio.button {
  outline: solid #00aacc 0.3rem;
}

#edit-border-none {
  left: calc(0% + 0.3rem);
  border: 0;
}
#edit-border-thin-white {
  left: calc(20% + 0.3rem);
  border: 0.2rem solid white;
}
#edit-border-thick-white {
  left: calc(40% + 0.3rem);
  border: 0.4rem solid white;
}
#edit-border-thin-black {
  left: calc(60% + 0.3rem);
  border: 0.2rem solid black;
}
#edit-border-thick-black {
  left: calc(80% + 0.3rem);
  border: 0.4rem solid black;
}

#edit-toolbar {
  height: 4rem;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  font-size: 0;
  transition: transform 0.2s linear;
}

/* all buttons in the toolbar share these styles */
#edit-toolbar > a {
  display: inline-block;
  width: 25%;
  height: 100%;
}

#edit-toolbar a.selected.radio.button {
  outline: solid #00aacc 0.2rem;
  outline-offset: -0.2rem;
}

#edit-exposure-button {
  left: 0;
  background-image: url('images/actionicon_gallery_edit_exposure_30x30.png');
}

#edit-crop-button {
  left: 25%;
  background-image: url('images/actionicon_gallery_edit_crop_30x30.png');
}

#edit-effect-button {
  left: 50%;
  background-image: url('images/actionicon_gallery_edit_effects_30x30.png');
}

#edit-border-button {
  left: 75%;
  background-image: url('images/actionicon_gallery_edit_borders_30x30.png');
}

/*
 * All of these slider styles are for the exposure compensation slider
 * If this app ever needs another slider, we'll have lots of name
 * collisions.  Ideally, this slider stuff should all be packaged up
 * into a reusable component. But this is one-off for now
 */
#exposure-slider {
  position: absolute;
  left: 0;
  width: 100%;
  height: 5rem;
  font-size: 1.4rem;
}

#sliderbar {
  position: relative;
  height: 2.6rem;
  padding: 0;
  margin: 0;
  background: url(images/slider-background.png);
}

#sliderline {
  position: absolute;
  height: 0.5rem;
  top: 1rem;
  left: 3.5rem;
  right: 3.5rem;
  margin: 0;
  border-radius: 3px;
  background: url(images/slider-line.png) repeat-x;
  border: none;
}

#sliderthumb {
  position: absolute;
  width: 3.6rem;
  height: 2.6rem;
  left: calc(3.9rem - 1.8rem);
  background: url(images/slider-scrubber.png) no-repeat center center;
  font: 0/0 a;
}

#sliderthumb.active {
  background-image: url(images/slider-scrubber-active.png);
}

#sliderlabels {
  position: relative;
  height: 3rem;
  padding: 0;
  margin: 0;
  color: white;
}

.sliderlabel {
  position: absolute;
  top: -0.2rem;
  height: 0.8rem;
  background: url(images/slider-marker.png) no-repeat top left;
  color: #8a9699;
  font-size: 1.5rem;
}

.sliderlabel:after {
  content: attr(data-label);
  position: relative;
  text-align: center;
  top: 0.9rem;
  width: 1rem;
  left: calc(-50%  + 0.1rem);
}

#slider-3 {
  left: 3.9rem;
}
#slider-2 {
  left: calc(3.9rem + (100% - 2 * 3.9rem) / 6);
}
#slider-1 {
  left: calc(3.9rem + (100% - 2 * 3.9rem) * 2 / 6);
}
#slider0 {
  left: calc(3.9rem + (100% - 2 * 3.9rem) * 3 / 6);
  color: #fff;
}
#slider1 {
  left: calc(3.9rem + (100% - 2 * 3.9rem) * 4 / 6);
}
#slider2 {
  left: calc(3.9rem + (100% - 2 * 3.9rem) * 5 / 6);
}
#slider3 {
  left: calc(3.9rem + (100% - 2 * 3.9rem));
}
