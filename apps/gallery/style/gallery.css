* { -moz-box-sizing: border-box; }

html {
  height: 100%;
  width: 100%;
  padding: 0;
  margin: 0;
  overflow: hidden;
  font-size: 10px;
}

body {
  background-color: black;
  color: #fff;
  font-family: "MozTT", sans-serif;
  font-size: 10px;
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  overflow: hidden;
  padding-bottom: 50px;
}

section {
  margin: 0;
  padding: 0;
  overflow: hidden;
  font-size: 10px;
}

.hidden {
  display: none;
}

/*
 * When we hide the thumbnail list, to go into single-photo fullscreen mode,
 * we need to retain thumbnail layout information so monitorChildVisibility()
 * doesn't get confused if we delete a photo while in fullscreen mode.
 * So hide them this way instead of display:none
 */
#thumbnail-list-view.hidden {
  display: block;
  visibility: hidden;
}

/* All of the main views fill the screen */
#thumbnail-list-view, #thumbnail-select-view, #fullscreen-view, #pick-view, #edit-view, #crop-view {
  position: absolute;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 100%;
  padding: 0px;
  margin: 0px;
  overflow: hidden;
  font-size: 20px;
}

/*
 * The overlay is where we display messages like Scanning, No Photos,
 * No SD card and SD Card in Use along with instructions for resolving
 * the issue.  The user can't interact with the app while the overlay
 * is displayed.
 */
#overlay {
  /* it takes up the whole screen */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;

  /* almost transparent gray */
  background-color: rgba(0, 0, 0, 0.4);
}

/*
 * The overlay content area holds the text of the overlay.
 * It has borders and a less transparent background so that
 * the overlay text shows up more clearly
 */
#overlay-content {
  margin-top: 30%;
  margin-left: 10%;
  margin-right: 10%;
  padding: 10%;
  border: solid black 4px;
  border-radius: 10px;
  background-color: rgba(0, 0, 0, 0.6);
  font-family: "MozTT", sans-serif;
  color: #fff;
  -moz-user-select: none;
}

#overlay-title {
  text-align: center;
  font-weight: bold;
  font-size: 26px;
}

#overlay-text {
  font-size: 18px;
}


/*
 * Thumbnails are implemented as <li> elements in a <ul> with background-image
 * set to display the image. We use background-size: cover to automatically
 * resize the image as needed.
 * The thumbnail list appears in regular browsing mode, in selection mode, 
 * and in pick mode.
 */

#thumbnails {
  position: absolute;
  padding: 0;
  margin: 0;
  overflow-y: scroll;
  overflow-x: hidden;
  /* Cheating! Due to margins to the right, a row of 3 thumbnails is be thicker than 100% */
  width: 104%;
}

.thumbnail {
  margin-right: 1px;
  margin-bottom: 1px;
  padding: 0;
  /* default to left-to-right, but overridden for rtl languages below */
  float: left;
  /* no list item bullets */
  list-style-type: none;
  /* don't let the user select the items */
  -moz-user-select: none;
  /* thumbnail images will be displayed with background-image */
  /* these properties scale and position the images correctly */
  background-size: cover;        /* allow some cropping */
  background-position: center;   /* keep the cropping at the edges */
  background-repeat: no-repeat;
  /*
   * When we have a background image it will cover the whole thumbnail
   * but when we're swapping that image in it might be visible before
   * the image. So we want a color that contrasts with the border so we
   * at least get the effect of a grid rather than a black screen
   */
  background-color: #444;
}

.thumbnail.selected {
  outline: solid #00aacc 3px;
  outline-offset: -3px;
}

/* 320x480 phones */
@media (orientation: portrait) and (width: 320px) {
  .thumbnail {
    width: 106px;
    height: 106px;
  }
}

@media (orientation: landscape) and (width: 480px) {
  .thumbnail {
    width: 120px;
    height: 120px;
  }
}

/* 480x800 phones portrait */
@media (orientation: portrait) and (width: 480px),
       (orientation: landscape) and (width: 800px) {
    .thumbnail {
        width: 160px;
        height: 160px;
    }
}

/* thumbnails in regular thumbnail list view */
#thumbnail-list-view > #thumbnails {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0px;
}

/* thumbnails in thumbnail select view where there is a top bar */
#thumbnail-select-view > #thumbnails {
  top: 50px;
  left: 0;
  right: 0;
  bottom: 0px;
}

/* thumbnails in pick view where there is a top bar and no bottom */
#pick-view > #thumbnails {
  top: 50px;
  left: 0;
  right: 0;
  bottom: 0;
}

/* since fullscreen-view is fullscreen, it needs its own background color */
#fullscreen-view {
  background-color: #444;
}

#frames {
  position: absolute;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 100%;
  padding: 0px;
  margin: 0px;
}

.frame {
  position: absolute;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 100%;
  padding: 0px;
  margin: 0px;
  overflow: hidden;
  -moz-user-select: none;
}

.frame > img {
  top: 0px;  /* javascript modifies this position with a transform */
  left: 0px;
  position: absolute;
  border-width: 0px;
  padding: 0px;
  margin: 0px;
  transform-origin: 0px 0px;
  pointer-events: none;
  -moz-user-select: none;
}

/*
 * these styles apply when we're swapping out a preview image to replace
 * it with a full-resolution image, but the full image isn't ready yet.
 * This happens when the user starts to zoom in on the image. We need
 * some sort of simple visual effect to fill ~500ms of dead time so the
 * user doesn't think the app has frozen up
 */
.frame > img.swapping {
  opacity: 0.8;
  outline: dashed #0ac 4px;
  outline-offset: -4px;
}

.frame > video {
  transform-origin: 0px 0px;
}

/* localization */
body.hidden *[data-l10n-id] {
  visibility: hidden;
}

*[dir=rtl] .thumbnail {
  float: right;
}

/* the indeterminate progress bar displayed while scanning */
#progress {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  border: none;
  overflow: hidden;
  z-index: 3; /* has to be higher than pick-top */
}

#throbber {
  height: 24px;
  background-image: url(images/progress.png);
}

#throbber.throb {
  animation: 1s throb infinite steps(7);
}

@keyframes throb {
  from {
    transform: translateY(0px);
  }
  to {
    transform: translateY(-21px);
  }
}

/* buttons */
a.button {
  display: block;
  padding: 0;
  margin: 0;
  border-width: 0;
  background-position: center center;
  background-repeat: no-repeat;

  /* for buttons that display text */
  font-size: smaller;
  text-align: center;
  line-height: 40px;
}

a.button:active, a.button:focus {
  outline: none;
}

a.button.disabled {
  opacity: 0.4;
  pointer-events: none;
}

footer {
  background: rgba(0, 0, 0, 0.75);
  height: 40px;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1;
  box-shadow: 0px -2px 5px rgba(50, 50, 50, 0.75);
}

.icon.icon-done {
  background-image: url('images/iconaction_done_30x30.png') !important;
}

#thumbnails-camera-button {
  position: absolute;
  width: 50%;
  height: 100%;
  left: 0;
  background-image: url('images/iconaction_camera_30x30.png');
  border-right: 1px solid #000;
}

#thumbnails-select-button {
  position: absolute;
  width: 50%;
  height: 100%;
  left: 50%;
  background-image: url('images/iconaction_select_30x30.png');
}

#thumbnails-delete-button {
  position: absolute;
  width: 50%;
  height: 100%;
  left: 0;
  background-image: url('images/iconaction_delete_30x30.png');
  border-right: 1px solid #000;
}

#thumbnails-share-button {
  position: absolute;
  width: 50%;
  height: 100%;
  left: 50%;
  background-image: url('images/iconaction_share_30x30.png');
}

#fullscreen-toolbar {
  height: 40px;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  transition: transform 100ms linear;
}

#fullscreen-view.toolbarhidden #fullscreen-toolbar {
  transform: translate(0, 40px);
}

#fullscreen-back-button {
  position: absolute;
  width: 20%;
  height: 100%;
  left: 0;
  background-image: url('images/iconaction_camera_gridview_30x30.png');
}

#fullscreen-camera-button {
  position: absolute;
  width: 20%;
  height: 100%;
  left: 20%;
  background-image: url('images/iconaction_camera_30x30.png');
}

#fullscreen-edit-button {
  position: absolute;
  width: 20%;
  height: 100%;
  left: 40%;
  background-image: url('images/iconaction_edit_30x30.png');
}

#fullscreen-share-button {
  position: absolute;
  width: 20%;
  height: 100%;
  left: 60%;
  background-image: url('images/iconaction_share_30x30.png');
}

#fullscreen-delete-button {
  position: absolute;
  width: 20%;
  height: 100%;
  left: 80%;
  background-image: url('images/iconaction_delete_30x30.png');
}

#pick-top {
  /*
   * we want the user to be able to push the back button even if
   * an overlay is displayed, so be sure that this titlebar/toolbar
   * is above the overlay
   */
  z-index: 2;
}

/* like .frame */
#crop-frame {
  position: absolute;
  top: 50px;
  left: 0px;
  width: 100%;
  height: 100%;
  padding: 0px;
  margin: 0px;
  overflow: hidden;
  -moz-user-select: none;
}


/* copied from .frame > img */
#crop-image {
  top: 0px;  /* javascript modifies this position with a transform */
  left: 0px;
  position: relative;
  border-width: 0px;
  padding: 0px;
  margin: 0px;
  transform-origin: 0px 0px;
  pointer-events: none;
  -moz-user-select: none;
}

#edit-view {
  background: #444;
}

#edit-title {
}

#edit-preview-area {
  position: absolute;
  left: 0;
  right: 0;
  top: 50px;
  bottom: 100px;
}

#edit-preview-canvas {
  position: absolute;
  top: 10px;
  left: 10px;
  width: 300px;  /* I can't do right: 10px here. Bug? */
  height: calc(100% - 20px)  /* can't just set bottom: 10px here */
}

#edit-crop-canvas { 
  position: absolute;
  left: 0;
  right: 0;
  width: 100%;
  height: 100%;
}

#edit-options {
  position: absolute;
  left: 0;
  width: 100%;
  height: 50px;
  bottom: 40px;
  background: #555;
}

/* All the effect options radio buttons share these styles */
#edit-effect-options a.radio.button {
  position: absolute;
  display: block;
  top: 0;
  height: 100%;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  margin: 0;
  padding: 0;
  border-width: 0;
  border-right: solid black 1px;
  overflow: hidden;
}

#edit-effect-options a.selected.radio.button {
  outline: solid #00aacc 3px;
  outline-offset: -3px;
}

#edit-crop-options a.button {
  position: absolute;
  display: block;
  top: 0;
  bottom: 0;
  width: 20%;
  margin: 0;
  padding: 0;
  border-width: 0;
  border-right: solid black 1px;
  overflow: hidden;
  padding-top: 16px;
  font-size: 12px;
  background-position: center;
}

#edit-crop-options a.selected.radio.button {
  outline: solid #00aacc 2px;
  outline-offset: -2px;
}

#edit-crop-none {
  left: 0;
  background-image: url('images/iconaction_undo_30x30.png');
}
#edit-crop-aspect-free {
  left: 20%;
  background-image: url('images/iconaction_camera_freecrop_30x30.png');
}
#edit-crop-aspect-portrait {
  left: 40%;
  background-image: url('images/iconaction_camera_crop2x3_30x30.png');
}
#edit-crop-aspect-landscape {
  left: 60%;
  background-image: url('images/iconaction_camera_crop3x2_30x30.png');
}
#edit-crop-aspect-square {
  left: 80%;
  background-image: url('images/iconaction_camera_crop1x1_30x30.png');
}

/* instead of using images inside the buttons above, just draw boxes */
#edit-free-frame {
  margin-left: 5px;
  margin-top: 5px;
  width: 30px;
  height: 25px;
  border: dotted white 1px;
}

#edit-portrait-frame {
  margin-left: 11px;
  margin-top: 6px;
  width: 26px;
  height: 39px;
  border: solid white 1px;
}

#edit-landscape-frame {
  margin-left: 5px;
  margin-top: 12px;
  width: 39px;
  height: 26px;
  border: solid white 1px;
}

#edit-square-frame {
  margin-left: 8px;
  margin-top: 9px;
  width: 32px;
  height: 32px;
  border: solid white 1px;
}

/* All the effects radio buttons share these styles */
#edit-effect-options > a.radio.button {
  width: 20%;
  padding-top: 15px;
}

#edit-effect-none {
  left:0;
}
#edit-effect-bw {
  left:20%
}
#edit-effect-sepia {
  left:40%
}
#edit-effect-bluesteel {
  left:60%
}
#edit-effect-faded {
  left:80%
}
a.filter-bw {
  filter: url(../index.html#filter-bw);
}
a.filter-sepia {
  filter: url(../index.html#filter-sepia);
}
a.filter-bluesteel {
  filter: url(../index.html#filter-bluesteel);
}
a.filter-faded {
  filter: url(../index.html#filter-faded);
}

/* All the border buttons share these styles */
#edit-border-options a.radio.button {
  position: absolute;
  width: calc(20% - 6px);
  height: calc(100% - 6px);
  top: 3px;
  padding: 0;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  overflow: hidden;
}

#edit-border-options a.selected.radio.button {
  outline: solid #00aacc 3px;
}

#edit-border-none {
  left: calc(0% + 3px);
  border: 2px solid white;  
}
#edit-border-thin-white {
  left: calc(20% + 3px);
  border: 2px solid white;  
}
#edit-border-thick-white {
  left: calc(40% + 3px);
  border: 4px solid white;
}
#edit-border-thin-black {
  left: calc(60% + 3px);
  border: 2px solid black;  
}
#edit-border-thick-black {
  left: calc(80% + 3px);
  border: 4px solid black;  
}

/* all buttons in the toolbar share these styles */
#edit-toolbar > .button {
  position: absolute;
  width: 25%;
  height: 100%;
  font-size: 15px;
}

/* If the button is selected, it has a different background */
#edit-toolbar > .button.selected {
  background: #02252C;
}

#edit-exposure-button {
  left: 0;
}

#edit-crop-button {
  left: 25%;
}

#edit-effect-button {
  left: 50%
}

#edit-border-button {
  left: 75%
}

/*
 * All of these slider styles are for the exposure compensation slider
 * If this app ever needs another slider, we'll have lots of name
 * collisions.  Ideally, this slider stuff should all be packaged up
 * into a reusable component. But this is one-off for now
 */
#exposure-slider {
  position: absolute;
  left: 0;
  width: 100%;
  height: 50px;
  background-color: #444;
  font-size: smaller;
}

#sliderbar {
  position: relative;
  height: 20px;
  padding: 0;
  margin: 0;
  overflow: hidden;
}

#sliderline {
  position: absolute;
  height: 2px;
  top: 50%;
  left: 10%;
  right: 10%;
  margin: 0;
}

#sliderthumb {
  position: absolute;
  width: 40px;
  height: 40px;
  top: -10px;
  left: calc(10% - 20px);
  border-radius: 50%;
  background-color: #eee;
  text-align: center;
  padding-top: 12px;
  font-size: smaller;
  color: black;
}

#sliderlabels {
  position: relative;
  height: 30px;
  padding: 0;
  margin: 0;
  background-color: #222;
  color: white;
  border-top: solid #eee 1px;
}

.sliderlabel {
  position: absolute;
  top: 0;
  height: 5px;
  border-left: solid #eee 1px;
}

.sliderlabel:after {
  content: attr(data-label);
  position: relative;
  display: block;
  text-align: center;
  top: 5px;
  width: 100px;
  left: -50px;
}

#slider-3 {
  left: calc(10% + 0 * 80%/6);
}
#slider-2 {
  left: calc(10% + 1 * 80%/6);
}
#slider-1 {
  left: calc(10% + 2 * 80%/6);
}
#slider0 {
  left: calc(10% + 3 * 80%/6);
}
#slider1 {
  left: calc(10% + 4 * 80%/6);
}
#slider2 {
  left: calc(10% + 5 * 80%/6);
}
#slider3 {
  left: calc(10% + 6 * 80%/6);
}
