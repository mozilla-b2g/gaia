'use strict';

/* global require, exports */
var utils = require('utils');

var GalleryAppBuilder = function() {
};

GalleryAppBuilder.prototype.DIST_DIR = 'build_stage/gallery';

GalleryAppBuilder.prototype.DEFAULT_VALUE = {
  maxImagePixelSize: 5 * 1024 * 1024,
  maxSnapshotPixelSize: 5 * 1024 * 1024
};

GalleryAppBuilder.prototype.setOptions = function(options) {
  var distDirPath = [options.GAIA_DIR].concat(this.DIST_DIR.split('/'));
  this.distDir = utils.getFile.apply(utils, distDirPath);
};

GalleryAppBuilder.prototype.customizeMaximumImageSize = function(options) {
  var distDir = options.GAIA_DISTRIBUTION_DIR;
  var customize = JSON.parse(utils.getDistributionFileContent('gallery',
                this.DEFAULT_VALUE, distDir));
  var content =
    '// This file is automatically generated: DO NOT EDIT.\n' +
    '// To change these values, create a camera.json file in the\n' +
    '// distribution directory with content like this: \n' +
    '//   {\n' +
    '//     "maxImagePixelSize": 6000000,\n' +
    '//     "maxSnapshotPixelSize": 4000000 }\n' +
    '//   }\n' +
    'var CONFIG_MAX_IMAGE_PIXEL_SIZE = ' +
      customize.maxImagePixelSize + ';\n' +
    'var CONFIG_MAX_SNAPSHOT_PIXEL_SIZE = ' +
      customize.maxSnapshotPixelSize + ';';

    var file = utils.getFile(this.distDir.path, 'js', 'config.js');
    utils.writeContent(file, content);
};

GalleryAppBuilder.prototype.execute = function(options) {
  this.setOptions(options);
  this.customizeMaximumImageSize(options);
};

exports.execute = function(options) {
  (new GalleryAppBuilder()).execute(options);
};