#! /bin/bash -e

USAGE="git ci-checkout-ref <directory> <repository> <revision>"

. "$(which git-ci-checkout-setup)"

# Initial checkout of the source files.
# Arguments:
# - source repository [ex: http://github.com/lightsofapollo/gaia]
initial_checkout() {
  local repo=$1

  # To be idempotent ensure we set the origin for pulling...
  if [ "$(contains $(git remote) $GIT_CI_REMOTE)" = "0" ];
  then
    git remote set-url $GIT_CI_REMOTE $repo
  else
    git remote add $GIT_CI_REMOTE $repo
  fi
}


# Checkout the git repository at the correct version
# Arguments:
#  - directory
#  - source repository [ex: http://github.com/mozilla-b2g/gaia]
#  - source version [ex: master]
checkout_repository() {
  local checkout_path=$1
  local source_repo=$2
  local source_rev=$3

  test -z "$checkout_path" && usage
  test -z "$source_repo" && usage
  test -z "$source_rev" && usage

  # Ensure the repository actually exists...
  if [ ! -d $checkout_path ];
  then
    git clone $source_repo $checkout_path
  fi

  change_git_target $checkout_path

  # Setup initial state in the repo and switch to the right branches...
  initial_checkout $source_repo
  git fetch $GIT_CI_REMOTE $source_rev
  git checkout -qf FETCH_HEAD
}

checkout_repository $@
