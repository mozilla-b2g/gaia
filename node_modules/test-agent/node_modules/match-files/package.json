{
  "name": "match-files",
  "description": "Recursive file filtering utils",
  "keywords": [
    "directory",
    "scan",
    "file filtering"
  ],
  "main": "lib/match-files",
  "author": {
    "name": "James Lal",
    "email": "james@lightsofapollo.com"
  },
  "homepage": "https://github.com/lightsofapollo/match-files",
  "repository": {
    "type": "git",
    "url": "git://github.com:lightsofapollo/match-files.git"
  },
  "scripts": {
    "test": "make test"
  },
  "dependencies": {
    "step-object": "0.2.2"
  },
  "devDependencies": {
    "jasmine-node": "1.0.14"
  },
  "version": "0.1.1",
  "readme": "# MatchFiles\n\nSimple (recursive) file finder. Designed to find files (not directories).\nHas simple filtering functionality built in for filtering by file and directory.\n\n## Examples\n\n    /*Imagine this structure:\n\n      lib/\n        file.js\n        other.md\n        module/\n          file.js\n          other.js\n\n    */\n\n\n\n### Simple no filtering\n    \n    var MatchFiles = require('match-files');\n\n    //1st is path, 2nd is options, 3rd is callback\n    MatchFiles.find(__dirname + '/lib', {}, function(err, files){\n      //following standard node conventions\n\n      console.log(files);\n      //will output (in absolute paths)\n      //Paths are *not* sorted so they may not appear\n      //in the order you expect\n      //['lib/file.js', 'lib/other.md' 'lib/module/file.js', 'lib/module/other.js']\n    });\n\n\n### Filtering Options\n\n    var MatchFiles = require('match-files');\n\n    //You can filter by file and by directory.\n    //If a directory is filtered files and directories under the\n    //filtered directory will *not* be searched.\n\n    function matchJsFiles(path){\n      //paths are relative to the 'basepath' which is the initial\n      //path set or the .basepath option given\n    }\n\n    function excludeModuleDir(path){\n      //Exclude all directories named module (and their children)\n      return !path.match(/\\/module/);\n    }\n\n    MatchFiles.find(__dirname + '/lib', {\n      fileFilters: [matchJsFiles], //always an array of functions\n      directoryFilters: [excludeModuleDir]\n    }, function(err, files){\n      console.log(files);\n      //['lib/file.js']\n    });\n\n## Options\n\nNote: the object given for options will be modified.\nI use file filters to exclude certain file types and\ndirectory filters to exclude things like .svn or .git.\n\n    {\n      //String used to create relative paths for filters\n      basepath: (default the path used for find) ,\n\n      //Default an empty array. Used for recursion you can\n      //pass an array of files to use as a base.\n      files: [],\n\n      //An array of functions that must return true for the \n      //file to be included in the results. Recieves a path relative to\n      //base root as an argument.\n      fileFilters: null,\n\n      //An array of functions that must return true for the \n      //file to be included in the results. Recieves a path relative to\n      //base root as an argument.\n      directoryFilters: null\n\n    }\n\n## License\n\nSee LICENSE (MIT)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/lightsofapollo/match-files/issues"
  },
  "_id": "match-files@0.1.1",
  "_shasum": "278989f0cfd01f1695f56847d8801ea37c696ff1",
  "_from": "match-files@~0.1.1",
  "_resolved": "https://registry.npmjs.org/match-files/-/match-files-0.1.1.tgz"
}
