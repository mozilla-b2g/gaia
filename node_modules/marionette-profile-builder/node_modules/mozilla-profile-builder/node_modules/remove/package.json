{
  "name": "remove",
  "version": "0.1.5",
  "description": "Sync and async rm -r.",
  "homepage": "http://github.com/dsc/node-remove",
  "keywords": [
    "util",
    "server",
    "files",
    "fs",
    "rm",
    "remove",
    "delete",
    "recursive"
  ],
  "author": {
    "name": "David Schoonover",
    "email": "dsc@less.ly",
    "url": "http://less.ly"
  },
  "dependencies": {
    "seq": ">= 0.3.5"
  },
  "devDependencies": {
    "coco": ">= 0.7.0",
    "expresso": ">= 0.9.2",
    "mkdirp": ">= 0.3.2"
  },
  "scripts": {
    "test": "expresso"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/dsc/node-remove.git"
  },
  "bugs": {
    "url": "http://github.com/dsc/node-remove/issues"
  },
  "engine": {
    "node": ">=0.6.2"
  },
  "license": "MIT",
  "readme": "# node-remove\n\nSync and async versions of `rm -r`, handling both files and directories (something astonishingly missing from `fs`).\n\n````js\nvar remove = require('remove');\n\n// Asynchronous\nremove('/home/esr', function(err){\n    if (err) console.error(err);\n    else     console.log('success!');\n});\n\n// Synchronous\ntry {\n    remove.removeSync('/home/esr');\n    console.log('success!');\n} catch (err) {\n    console.error(err);\n}\n````\n\n\n## Installation\n\nVia [npm](http://npmjs.org/):\n\n````sh\nnpm install remove\n````\n\nOr if you want to hack on the source:\n\n````sh\ngit clone https://github.com/dsc/node-remove.git\ncd node-remove\nnpm link\n````\n\n\n## API\n\n### remove(paths, [options], cb) -> void\n### remove.removeAsync(paths, [options], cb) -> void\n\nAsynchronously and recursively remove files and/or directories.\n\n- **paths** *String | Array&lt;String&gt;* &mdash; Path or paths to remove.\n- **options** *Object* &mdash; Options object:\n    - **verbose** : `false` *Boolean* &mdash; Log all errors and print each path just before it's removed.\n    - **sequential** : `false` *Boolean* &mdash; If true, remove the supplied paths sequentially, such that an unsuppressed error would short-circuit further deletes.\n    - **ignoreErrors** : `false` *Boolean* &mdash; If false, halt as soon as possible after an error occurs and invoke the callback. When operating in `sequential` mode, this implies an error removing the first of several paths would halt before touching the rest. If set, `ignoreErrors` overrides `ignoreMissing`.\n    - **ignoreMissing** : `false` *Boolean* &mdash; Whether to treat missing paths as errors.\n- **callback** *Function* &mdash; Completion callback, invoked with null on success and the error on failure.\n\n\n### removeSync(paths, [options]) -> void\n\nSynchronously and recursively remove files and/or directories.\n\n- **paths** *String | Array&lt;String&gt;* &mdash; Path or paths to remove.\n- **options** *Object* &mdash; Options (all optional):\n    - **verbose** : `false` *Boolean* &mdash; Log all errors and print each path just before it's removed.\n    - **ignoreErrors** : `false` *Boolean* &mdash; If false, halt as soon as possible after an error occurs and invoke the callback. This implies an error removing the first of several paths would halt before touching the rest. If set, `ignoreErrors` overrides `ignoreMissing`.\n    - **ignoreMissing** : `false` *Boolean* &mdash; Whether to treat missing paths as errors.\n\n\n## Feedback\n\nFind a bug or want to contribute? Open a ticket on [github](http://github.com/dsc/node-remove).\nYou're also welcome to send me email at [dsc@less.ly](mailto:dsc@less.ly?subject=node-remove).\n\n",
  "readmeFilename": "README.md",
  "_id": "remove@0.1.5",
  "_shasum": "095ffd827d65c9f41ad97d33e416a75811079955",
  "_from": "remove@~0.1",
  "_resolved": "https://registry.npmjs.org/remove/-/remove-0.1.5.tgz"
}
