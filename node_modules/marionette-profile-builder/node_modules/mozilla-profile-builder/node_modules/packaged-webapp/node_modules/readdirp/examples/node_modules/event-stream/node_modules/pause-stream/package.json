{
  "name": "pause-stream",
  "version": "0.0.4",
  "description": "a ThroughStream that strictly buffers all readable events when paused.",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "devDependencies": {
    "stream-spec": "~0.2.0"
  },
  "scripts": {
    "test": "node test/index.js && node test/pause-end.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/pause-stream.git"
  },
  "keywords": [
    "stream",
    "pipe",
    "pause",
    "drain",
    "buffer"
  ],
  "author": {
    "name": "Dominic Tarr",
    "email": "dominic.tarr@gmail.com",
    "url": "dominictarr.com"
  },
  "license": [
    "MIT",
    "Apache2"
  ],
  "readme": "# PauseStream\n\nThis is a `Stream` that will strictly buffer when paused.\nConnect it to anything you need buffered.\n\n``` js\n  var ps = require('pause-stream')();\n\n  badlyBehavedStream.pipe(ps.pause())\n\n  aLittleLater(function (err, data) {\n    ps.pipe(createAnotherStream(data))\n    ps.resume()\n  })\n```\n\n`PauseStream` will buffer whenever paused.\nit will buffer when yau have called `pause` manually.\nbut also when it's downstream `dest.write()===false`.\nit will attempt to drain the buffer when you call resume\nor the downstream emits `'drain'`\n\n`PauseStream` is tested using [stream-spec](https://github.com/dominictarr/stream-spec)\nand [stream-tester](https://github.com/dominictarr/stream-tester)\n",
  "_id": "pause-stream@0.0.4",
  "_from": "pause-stream@0.0.4"
}
