{
  "name": "split",
  "version": "0.0.0",
  "description": "split a Text Stream into a Line Stream",
  "homepage": "http://github.com/dominictarr/split",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/split.git"
  },
  "dependencies": {
    "through": "0.0.4"
  },
  "devDependencies": {
    "asynct": "*",
    "it-is": "1",
    "ubelt": "~2.9",
    "stream-spec": "~0.2",
    "event-stream": "~3.0.2"
  },
  "scripts": {
    "test": "asynct test/"
  },
  "author": {
    "name": "Dominic Tarr",
    "email": "dominic.tarr@gmail.com",
    "url": "http://bit.ly/dominictarr"
  },
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "readme": "# Split (matcher)\n\n<img src=https://secure.travis-ci.org/dominictarr/split.png?branch=master>\n\nBreak up a stream and reassemble it so that each line is a chunk. matcher may be a `String`, or a `RegExp` \n\nExample, read every line in a file ...\n\n``` js\n  fs.createReadStream(file)\n    .pipe(split())\n    .on('data', function (line) {\n      //each chunk now is a seperate line!\n    })\n\n```\n\n`split` takes the same arguments as `string.split` except it defaults to '\\n' instead of ',', and the optional `limit` paremeter is ignored.\n[String#split](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/split)\n\n",
  "_id": "split@0.0.0",
  "_from": "split@0.0.0"
}
